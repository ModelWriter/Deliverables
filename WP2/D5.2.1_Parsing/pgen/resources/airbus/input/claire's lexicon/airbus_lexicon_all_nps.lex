include macros.mac

*ENTRY: not
*CAT: adv
*SEM: negSem[]
*ACC: 1.0
*FAM: Negation
*FILTERS: []
*EX: {}
*EQUATIONS:
*COANCHORS: 

*ENTRY: abs_+_0724_+_label_+_in_+_white_+_color
*CAT: n
*SEM: unaryRel[rel=abs_+_0724_+_label_+_in_+_white_+_color]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_label_+_in_+_white_+_color
*CAT: n
*SEM: twoRel[rel=abs_+_0724_+_label_+_in_+_white_+_color]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_label_+_in_+_white_+_color
*CAT: n
*SEM: twoRel[rel=abs_+_0724_+_label_+_in_+_white_+_color]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_label_+_in_+_white_+_color
*CAT: n
*SEM: orRel[rel=abs_+_0724_+_label_+_in_+_white_+_color]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: joint
*CAT: n
*SEM: unaryRel[rel=joint]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: joint
*CAT: n
*SEM: twoRel[rel=joint]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: joint
*CAT: n
*SEM: twoRel[rel=joint]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: joint
*CAT: n
*SEM: orRel[rel=joint]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shells
*CAT: n
*SEM: unaryRel[rel=back_+_shells]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shells
*CAT: n
*SEM: twoRel[rel=back_+_shells]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shells
*CAT: n
*SEM: twoRel[rel=back_+_shells]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shells
*CAT: n
*SEM: orRel[rel=back_+_shells]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_air_+__-_opensb_-_bleed
*CAT: n
*SEM: unaryRel[rel=hot_+_air_+__-_opensb_-_bleed]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_air_+__-_opensb_-_bleed
*CAT: n
*SEM: twoRel[rel=hot_+_air_+__-_opensb_-_bleed]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_air_+__-_opensb_-_bleed
*CAT: n
*SEM: twoRel[rel=hot_+_air_+__-_opensb_-_bleed]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_air_+__-_opensb_-_bleed
*CAT: n
*SEM: orRel[rel=hot_+_air_+__-_opensb_-_bleed]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_general
*CAT: n
*SEM: unaryRel[rel=in_+_general]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_general
*CAT: n
*SEM: twoRel[rel=in_+_general]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_general
*CAT: n
*SEM: twoRel[rel=in_+_general]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_general
*CAT: n
*SEM: orRel[rel=in_+_general]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_stand-off_+__+_colonettes
*CAT: n
*SEM: unaryRel[rel=metallic_+_stand-off_+__+_colonettes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_stand-off_+__+_colonettes
*CAT: n
*SEM: twoRel[rel=metallic_+_stand-off_+__+_colonettes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_stand-off_+__+_colonettes
*CAT: n
*SEM: twoRel[rel=metallic_+_stand-off_+__+_colonettes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_stand-off_+__+_colonettes
*CAT: n
*SEM: orRel[rel=metallic_+_stand-off_+__+_colonettes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: q_+_routes
*CAT: n
*SEM: unaryRel[rel=q_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: q_+_routes
*CAT: n
*SEM: twoRel[rel=q_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: q_+_routes
*CAT: n
*SEM: twoRel[rel=q_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: q_+_routes
*CAT: n
*SEM: orRel[rel=q_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_65_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge
*CAT: n
*SEM: unaryRel[rel=max_+_65_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_65_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge
*CAT: n
*SEM: twoRel[rel=max_+_65_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_65_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge
*CAT: n
*SEM: twoRel[rel=max_+_65_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_65_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge
*CAT: n
*SEM: orRel[rel=max_+_65_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: element_+__-_opensb_-_to_+_be_+_checked
*CAT: n
*SEM: unaryRel[rel=element_+__-_opensb_-_to_+_be_+_checked]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: element_+__-_opensb_-_to_+_be_+_checked
*CAT: n
*SEM: twoRel[rel=element_+__-_opensb_-_to_+_be_+_checked]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: element_+__-_opensb_-_to_+_be_+_checked
*CAT: n
*SEM: twoRel[rel=element_+__-_opensb_-_to_+_be_+_checked]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: element_+__-_opensb_-_to_+_be_+_checked
*CAT: n
*SEM: orRel[rel=element_+__-_opensb_-_to_+_be_+_checked]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_bracket
*CAT: n
*SEM: unaryRel[rel=non_+_conductive_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_bracket
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_bracket
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_bracket
*CAT: n
*SEM: orRel[rel=non_+_conductive_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: way_+_to
*CAT: n
*SEM: unaryRel[rel=way_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: way_+_to
*CAT: n
*SEM: twoRel[rel=way_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: way_+_to
*CAT: n
*SEM: twoRel[rel=way_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: way_+_to
*CAT: n
*SEM: orRel[rel=way_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker
*CAT: n
*SEM: unaryRel[rel=circuit_+_breaker]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker
*CAT: n
*SEM: twoRel[rel=circuit_+_breaker]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker
*CAT: n
*SEM: twoRel[rel=circuit_+_breaker]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker
*CAT: n
*SEM: orRel[rel=circuit_+_breaker]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_constituent_+_conductors
*CAT: n
*SEM: unaryRel[rel=each_+_constituent_+_conductors]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_constituent_+_conductors
*CAT: n
*SEM: twoRel[rel=each_+_constituent_+_conductors]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_constituent_+_conductors
*CAT: n
*SEM: twoRel[rel=each_+_constituent_+_conductors]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_constituent_+_conductors
*CAT: n
*SEM: orRel[rel=each_+_constituent_+_conductors]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size_+_of_+_bracket
*CAT: n
*SEM: unaryRel[rel=size_+_of_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size_+_of_+_bracket
*CAT: n
*SEM: twoRel[rel=size_+_of_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size_+_of_+_bracket
*CAT: n
*SEM: twoRel[rel=size_+_of_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size_+_of_+_bracket
*CAT: n
*SEM: orRel[rel=size_+_of_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: characterising_+_all_+_conductors_+_and
*CAT: n
*SEM: unaryRel[rel=characterising_+_all_+_conductors_+_and]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: characterising_+_all_+_conductors_+_and
*CAT: n
*SEM: twoRel[rel=characterising_+_all_+_conductors_+_and]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: characterising_+_all_+_conductors_+_and
*CAT: n
*SEM: twoRel[rel=characterising_+_all_+_conductors_+_and]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: characterising_+_all_+_conductors_+_and
*CAT: n
*SEM: orRel[rel=characterising_+_all_+_conductors_+_and]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_panel
*CAT: n
*SEM: unaryRel[rel=movable_+_panel]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_panel
*CAT: n
*SEM: twoRel[rel=movable_+_panel]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_panel
*CAT: n
*SEM: twoRel[rel=movable_+_panel]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_panel
*CAT: n
*SEM: orRel[rel=movable_+_panel]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_circuits
*CAT: n
*SEM: unaryRel[rel=efcs_+_circuits]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_circuits
*CAT: n
*SEM: twoRel[rel=efcs_+_circuits]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_circuits
*CAT: n
*SEM: twoRel[rel=efcs_+_circuits]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_circuits
*CAT: n
*SEM: orRel[rel=efcs_+_circuits]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_number_-_opensb_-_e.g._+_1m
*CAT: n
*SEM: unaryRel[rel=route_+_number_-_opensb_-_e.g._+_1m]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_number_-_opensb_-_e.g._+_1m
*CAT: n
*SEM: twoRel[rel=route_+_number_-_opensb_-_e.g._+_1m]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_number_-_opensb_-_e.g._+_1m
*CAT: n
*SEM: twoRel[rel=route_+_number_-_opensb_-_e.g._+_1m]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_number_-_opensb_-_e.g._+_1m
*CAT: n
*SEM: orRel[rel=route_+_number_-_opensb_-_e.g._+_1m]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+__-_greaterThan_-__+_2
*CAT: n
*SEM: unaryRel[rel=r_+__-_greaterThan_-__+_2]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+__-_greaterThan_-__+_2
*CAT: n
*SEM: twoRel[rel=r_+__-_greaterThan_-__+_2]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+__-_greaterThan_-__+_2
*CAT: n
*SEM: twoRel[rel=r_+__-_greaterThan_-__+_2]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+__-_greaterThan_-__+_2
*CAT: n
*SEM: orRel[rel=r_+__-_greaterThan_-__+_2]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_-_backslash_-_section_+_between_+_5mm_+__-_smallerThan_-__-_equalto_-__+_d_+__-_smallerThan_-__-_equalto_-__+_30mm
*CAT: n
*SEM: unaryRel[rel=diameter_-_backslash_-_section_+_between_+_5mm_+__-_smallerThan_-__-_equalto_-__+_d_+__-_smallerThan_-__-_equalto_-__+_30mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_-_backslash_-_section_+_between_+_5mm_+__-_smallerThan_-__-_equalto_-__+_d_+__-_smallerThan_-__-_equalto_-__+_30mm
*CAT: n
*SEM: twoRel[rel=diameter_-_backslash_-_section_+_between_+_5mm_+__-_smallerThan_-__-_equalto_-__+_d_+__-_smallerThan_-__-_equalto_-__+_30mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_-_backslash_-_section_+_between_+_5mm_+__-_smallerThan_-__-_equalto_-__+_d_+__-_smallerThan_-__-_equalto_-__+_30mm
*CAT: n
*SEM: twoRel[rel=diameter_-_backslash_-_section_+_between_+_5mm_+__-_smallerThan_-__-_equalto_-__+_d_+__-_smallerThan_-__-_equalto_-__+_30mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_-_backslash_-_section_+_between_+_5mm_+__-_smallerThan_-__-_equalto_-__+_d_+__-_smallerThan_-__-_equalto_-__+_30mm
*CAT: n
*SEM: orRel[rel=diameter_-_backslash_-_section_+_between_+_5mm_+__-_smallerThan_-__-_equalto_-__+_d_+__-_smallerThan_-__-_equalto_-__+_30mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_bobbin_+_configuration
*CAT: n
*SEM: unaryRel[rel=g-route_+_bobbin_+_configuration]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_bobbin_+_configuration
*CAT: n
*SEM: twoRel[rel=g-route_+_bobbin_+_configuration]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_bobbin_+_configuration
*CAT: n
*SEM: twoRel[rel=g-route_+_bobbin_+_configuration]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_bobbin_+_configuration
*CAT: n
*SEM: orRel[rel=g-route_+_bobbin_+_configuration]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness_+_less
*CAT: n
*SEM: unaryRel[rel=surface_+_roughness_+_less]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness_+_less
*CAT: n
*SEM: twoRel[rel=surface_+_roughness_+_less]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness_+_less
*CAT: n
*SEM: twoRel[rel=surface_+_roughness_+_less]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness_+_less
*CAT: n
*SEM: orRel[rel=surface_+_roughness_+_less]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: preferred_+_method
*CAT: n
*SEM: unaryRel[rel=preferred_+_method]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: preferred_+_method
*CAT: n
*SEM: twoRel[rel=preferred_+_method]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: preferred_+_method
*CAT: n
*SEM: twoRel[rel=preferred_+_method]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: preferred_+_method
*CAT: n
*SEM: orRel[rel=preferred_+_method]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_5mm
*CAT: n
*SEM: unaryRel[rel=least_+_5mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_5mm
*CAT: n
*SEM: twoRel[rel=least_+_5mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_5mm
*CAT: n
*SEM: twoRel[rel=least_+_5mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_5mm
*CAT: n
*SEM: orRel[rel=least_+_5mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_of_+_25_+_mm_+__-_opensb_-_except_+_electrics
*CAT: n
*SEM: unaryRel[rel=minimum_+_of_+_25_+_mm_+__-_opensb_-_except_+_electrics]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_of_+_25_+_mm_+__-_opensb_-_except_+_electrics
*CAT: n
*SEM: twoRel[rel=minimum_+_of_+_25_+_mm_+__-_opensb_-_except_+_electrics]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_of_+_25_+_mm_+__-_opensb_-_except_+_electrics
*CAT: n
*SEM: twoRel[rel=minimum_+_of_+_25_+_mm_+__-_opensb_-_except_+_electrics]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_of_+_25_+_mm_+__-_opensb_-_except_+_electrics
*CAT: n
*SEM: orRel[rel=minimum_+_of_+_25_+_mm_+__-_opensb_-_except_+_electrics]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_side
*CAT: n
*SEM: unaryRel[rel=each_+_side]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_side
*CAT: n
*SEM: twoRel[rel=each_+_side]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_side
*CAT: n
*SEM: twoRel[rel=each_+_side]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_side
*CAT: n
*SEM: orRel[rel=each_+_side]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_centre_+_line
*CAT: n
*SEM: unaryRel[rel=pipe_+_centre_+_line]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_centre_+_line
*CAT: n
*SEM: twoRel[rel=pipe_+_centre_+_line]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_centre_+_line
*CAT: n
*SEM: twoRel[rel=pipe_+_centre_+_line]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_centre_+_line
*CAT: n
*SEM: orRel[rel=pipe_+_centre_+_line]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_g-route
*CAT: n
*SEM: unaryRel[rel=each_+_g-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_g-route
*CAT: n
*SEM: twoRel[rel=each_+_g-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_g-route
*CAT: n
*SEM: twoRel[rel=each_+_g-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_g-route
*CAT: n
*SEM: orRel[rel=each_+_g-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa0141
*CAT: n
*SEM: unaryRel[rel=nsa0141]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa0141
*CAT: n
*SEM: twoRel[rel=nsa0141]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa0141
*CAT: n
*SEM: twoRel[rel=nsa0141]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa0141
*CAT: n
*SEM: orRel[rel=nsa0141]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ejection_+_port_+_tee-_+_junction
*CAT: n
*SEM: unaryRel[rel=ejection_+_port_+_tee-_+_junction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ejection_+_port_+_tee-_+_junction
*CAT: n
*SEM: twoRel[rel=ejection_+_port_+_tee-_+_junction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ejection_+_port_+_tee-_+_junction
*CAT: n
*SEM: twoRel[rel=ejection_+_port_+_tee-_+_junction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ejection_+_port_+_tee-_+_junction
*CAT: n
*SEM: orRel[rel=ejection_+_port_+_tee-_+_junction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_pipes
*CAT: n
*SEM: unaryRel[rel=sense_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_pipes
*CAT: n
*SEM: twoRel[rel=sense_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_pipes
*CAT: n
*SEM: twoRel[rel=sense_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_pipes
*CAT: n
*SEM: orRel[rel=sense_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_deformation
*CAT: n
*SEM: unaryRel[rel=structural_+_deformation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_deformation
*CAT: n
*SEM: twoRel[rel=structural_+_deformation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_deformation
*CAT: n
*SEM: twoRel[rel=structural_+_deformation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_deformation
*CAT: n
*SEM: orRel[rel=structural_+_deformation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon
*CAT: n
*SEM: unaryRel[rel=pylon]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon
*CAT: n
*SEM: twoRel[rel=pylon]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon
*CAT: n
*SEM: twoRel[rel=pylon]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon
*CAT: n
*SEM: orRel[rel=pylon]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure
*CAT: n
*SEM: unaryRel[rel=structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure
*CAT: n
*SEM: twoRel[rel=structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure
*CAT: n
*SEM: twoRel[rel=structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure
*CAT: n
*SEM: orRel[rel=structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516_+_cbf
*CAT: n
*SEM: unaryRel[rel=nsa_+_5516_+_cbf]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516_+_cbf
*CAT: n
*SEM: twoRel[rel=nsa_+_5516_+_cbf]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516_+_cbf
*CAT: n
*SEM: twoRel[rel=nsa_+_5516_+_cbf]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516_+_cbf
*CAT: n
*SEM: orRel[rel=nsa_+_5516_+_cbf]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_each_+_core_+_after_+_untwisting_+_over_+_a_+_length_+_of_+_l_-_greaterThan_-_20cm
*CAT: n
*SEM: unaryRel[rel=nsa_+_937201_+_identification_+_sleeve_+_each_+_core_+_after_+_untwisting_+_over_+_a_+_length_+_of_+_l_-_greaterThan_-_20cm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_each_+_core_+_after_+_untwisting_+_over_+_a_+_length_+_of_+_l_-_greaterThan_-_20cm
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve_+_each_+_core_+_after_+_untwisting_+_over_+_a_+_length_+_of_+_l_-_greaterThan_-_20cm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_each_+_core_+_after_+_untwisting_+_over_+_a_+_length_+_of_+_l_-_greaterThan_-_20cm
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve_+_each_+_core_+_after_+_untwisting_+_over_+_a_+_length_+_of_+_l_-_greaterThan_-_20cm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_each_+_core_+_after_+_untwisting_+_over_+_a_+_length_+_of_+_l_-_greaterThan_-_20cm
*CAT: n
*SEM: orRel[rel=nsa_+_937201_+_identification_+_sleeve_+_each_+_core_+_after_+_untwisting_+_over_+_a_+_length_+_of_+_l_-_greaterThan_-_20cm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: manner_+_that_+_the_+_fixation_+_is_+_accesseable_+_in_+_any_+_case
*CAT: n
*SEM: unaryRel[rel=manner_+_that_+_the_+_fixation_+_is_+_accesseable_+_in_+_any_+_case]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: manner_+_that_+_the_+_fixation_+_is_+_accesseable_+_in_+_any_+_case
*CAT: n
*SEM: twoRel[rel=manner_+_that_+_the_+_fixation_+_is_+_accesseable_+_in_+_any_+_case]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: manner_+_that_+_the_+_fixation_+_is_+_accesseable_+_in_+_any_+_case
*CAT: n
*SEM: twoRel[rel=manner_+_that_+_the_+_fixation_+_is_+_accesseable_+_in_+_any_+_case]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: manner_+_that_+_the_+_fixation_+_is_+_accesseable_+_in_+_any_+_case
*CAT: n
*SEM: orRel[rel=manner_+_that_+_the_+_fixation_+_is_+_accesseable_+_in_+_any_+_case]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: such_+_a_+_way_+_that_+_individual_+_removal_+_of_+_each_+_equipment_+_is_+_possible
*CAT: n
*SEM: unaryRel[rel=such_+_a_+_way_+_that_+_individual_+_removal_+_of_+_each_+_equipment_+_is_+_possible]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: such_+_a_+_way_+_that_+_individual_+_removal_+_of_+_each_+_equipment_+_is_+_possible
*CAT: n
*SEM: twoRel[rel=such_+_a_+_way_+_that_+_individual_+_removal_+_of_+_each_+_equipment_+_is_+_possible]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: such_+_a_+_way_+_that_+_individual_+_removal_+_of_+_each_+_equipment_+_is_+_possible
*CAT: n
*SEM: twoRel[rel=such_+_a_+_way_+_that_+_individual_+_removal_+_of_+_each_+_equipment_+_is_+_possible]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: such_+_a_+_way_+_that_+_individual_+_removal_+_of_+_each_+_equipment_+_is_+_possible
*CAT: n
*SEM: orRel[rel=such_+_a_+_way_+_that_+_individual_+_removal_+_of_+_each_+_equipment_+_is_+_possible]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_components_+_not_+_less
*CAT: n
*SEM: unaryRel[rel=movable_+_components_+_not_+_less]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_components_+_not_+_less
*CAT: n
*SEM: twoRel[rel=movable_+_components_+_not_+_less]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_components_+_not_+_less
*CAT: n
*SEM: twoRel[rel=movable_+_components_+_not_+_less]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_components_+_not_+_less
*CAT: n
*SEM: orRel[rel=movable_+_components_+_not_+_less]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit_+_in_+_any_+_area_+_where_+_electrical_+_routing_+_modification_+_leads
*CAT: n
*SEM: unaryRel[rel=nsa935805_+_convoluted_+_conduit_+_in_+_any_+_area_+_where_+_electrical_+_routing_+_modification_+_leads]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit_+_in_+_any_+_area_+_where_+_electrical_+_routing_+_modification_+_leads
*CAT: n
*SEM: twoRel[rel=nsa935805_+_convoluted_+_conduit_+_in_+_any_+_area_+_where_+_electrical_+_routing_+_modification_+_leads]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit_+_in_+_any_+_area_+_where_+_electrical_+_routing_+_modification_+_leads
*CAT: n
*SEM: twoRel[rel=nsa935805_+_convoluted_+_conduit_+_in_+_any_+_area_+_where_+_electrical_+_routing_+_modification_+_leads]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit_+_in_+_any_+_area_+_where_+_electrical_+_routing_+_modification_+_leads
*CAT: n
*SEM: orRel[rel=nsa935805_+_convoluted_+_conduit_+_in_+_any_+_area_+_where_+_electrical_+_routing_+_modification_+_leads]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point_+__-_opensb_-_network_+_1
*CAT: n
*SEM: unaryRel[rel=dedicated_+_attachment_+_point_+__-_opensb_-_network_+_1]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point_+__-_opensb_-_network_+_1
*CAT: n
*SEM: twoRel[rel=dedicated_+_attachment_+_point_+__-_opensb_-_network_+_1]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point_+__-_opensb_-_network_+_1
*CAT: n
*SEM: twoRel[rel=dedicated_+_attachment_+_point_+__-_opensb_-_network_+_1]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point_+__-_opensb_-_network_+_1
*CAT: n
*SEM: orRel[rel=dedicated_+_attachment_+_point_+__-_opensb_-_network_+_1]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: area
*CAT: n
*SEM: unaryRel[rel=area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: area
*CAT: n
*SEM: twoRel[rel=area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: area
*CAT: n
*SEM: twoRel[rel=area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: area
*CAT: n
*SEM: orRel[rel=area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l
*CAT: n
*SEM: unaryRel[rel=length_+_l]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l
*CAT: n
*SEM: twoRel[rel=length_+_l]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l
*CAT: n
*SEM: twoRel[rel=length_+_l]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l
*CAT: n
*SEM: orRel[rel=length_+_l]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_3
*CAT: n
*SEM: unaryRel[rel=case_+_3]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_3
*CAT: n
*SEM: twoRel[rel=case_+_3]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_3
*CAT: n
*SEM: twoRel[rel=case_+_3]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_3
*CAT: n
*SEM: orRel[rel=case_+_3]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top_+_orientation
*CAT: n
*SEM: unaryRel[rel=top_+_orientation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top_+_orientation
*CAT: n
*SEM: twoRel[rel=top_+_orientation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top_+_orientation
*CAT: n
*SEM: twoRel[rel=top_+_orientation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top_+_orientation
*CAT: n
*SEM: orRel[rel=top_+_orientation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crimped_+_cap_+_nsa936601
*CAT: n
*SEM: unaryRel[rel=crimped_+_cap_+_nsa936601]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crimped_+_cap_+_nsa936601
*CAT: n
*SEM: twoRel[rel=crimped_+_cap_+_nsa936601]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crimped_+_cap_+_nsa936601
*CAT: n
*SEM: twoRel[rel=crimped_+_cap_+_nsa936601]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crimped_+_cap_+_nsa936601
*CAT: n
*SEM: orRel[rel=crimped_+_cap_+_nsa936601]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block_+_attachment_+_positions
*CAT: n
*SEM: unaryRel[rel=clamp-block_+_attachment_+_positions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block_+_attachment_+_positions
*CAT: n
*SEM: twoRel[rel=clamp-block_+_attachment_+_positions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block_+_attachment_+_positions
*CAT: n
*SEM: twoRel[rel=clamp-block_+_attachment_+_positions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block_+_attachment_+_positions
*CAT: n
*SEM: orRel[rel=clamp-block_+_attachment_+_positions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front
*CAT: n
*SEM: unaryRel[rel=front]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front
*CAT: n
*SEM: twoRel[rel=front]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front
*CAT: n
*SEM: twoRel[rel=front]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front
*CAT: n
*SEM: orRel[rel=front]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: current
*CAT: n
*SEM: unaryRel[rel=current]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: current
*CAT: n
*SEM: twoRel[rel=current]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: current
*CAT: n
*SEM: twoRel[rel=current]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: current
*CAT: n
*SEM: orRel[rel=current]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restrictor
*CAT: n
*SEM: unaryRel[rel=restrictor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restrictor
*CAT: n
*SEM: twoRel[rel=restrictor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restrictor
*CAT: n
*SEM: twoRel[rel=restrictor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restrictor
*CAT: n
*SEM: orRel[rel=restrictor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: significant_+_expansions
*CAT: n
*SEM: unaryRel[rel=significant_+_expansions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: significant_+_expansions
*CAT: n
*SEM: twoRel[rel=significant_+_expansions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: significant_+_expansions
*CAT: n
*SEM: twoRel[rel=significant_+_expansions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: significant_+_expansions
*CAT: n
*SEM: orRel[rel=significant_+_expansions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gear_+_bay
*CAT: n
*SEM: unaryRel[rel=gear_+_bay]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gear_+_bay
*CAT: n
*SEM: twoRel[rel=gear_+_bay]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gear_+_bay
*CAT: n
*SEM: twoRel[rel=gear_+_bay]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gear_+_bay
*CAT: n
*SEM: orRel[rel=gear_+_bay]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_centers_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-
*CAT: n
*SEM: unaryRel[rel=power_+_centers_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_centers_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-
*CAT: n
*SEM: twoRel[rel=power_+_centers_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_centers_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-
*CAT: n
*SEM: twoRel[rel=power_+_centers_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_centers_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-
*CAT: n
*SEM: orRel[rel=power_+_centers_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_in_+_the_+_dynaomic_+_section_+_of_+_a_+_bundle
*CAT: n
*SEM: unaryRel[rel=mechanical_+_protection_+_in_+_the_+_dynaomic_+_section_+_of_+_a_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_in_+_the_+_dynaomic_+_section_+_of_+_a_+_bundle
*CAT: n
*SEM: twoRel[rel=mechanical_+_protection_+_in_+_the_+_dynaomic_+_section_+_of_+_a_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_in_+_the_+_dynaomic_+_section_+_of_+_a_+_bundle
*CAT: n
*SEM: twoRel[rel=mechanical_+_protection_+_in_+_the_+_dynaomic_+_section_+_of_+_a_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_in_+_the_+_dynaomic_+_section_+_of_+_a_+_bundle
*CAT: n
*SEM: orRel[rel=mechanical_+_protection_+_in_+_the_+_dynaomic_+_section_+_of_+_a_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+_10mm_-_colon_-_
*CAT: n
*SEM: unaryRel[rel=d_+__-_smallerThan_-__+_10mm_-_colon_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+_10mm_-_colon_-_
*CAT: n
*SEM: twoRel[rel=d_+__-_smallerThan_-__+_10mm_-_colon_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+_10mm_-_colon_-_
*CAT: n
*SEM: twoRel[rel=d_+__-_smallerThan_-__+_10mm_-_colon_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+_10mm_-_colon_-_
*CAT: n
*SEM: orRel[rel=d_+__-_smallerThan_-__+_10mm_-_colon_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical
*CAT: n
*SEM: unaryRel[rel=mechanical]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical
*CAT: n
*SEM: twoRel[rel=mechanical]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical
*CAT: n
*SEM: twoRel[rel=mechanical]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical
*CAT: n
*SEM: orRel[rel=mechanical]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_-_comma_-_5_+_thread
*CAT: n
*SEM: unaryRel[rel=1_-_comma_-_5_+_thread]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_-_comma_-_5_+_thread
*CAT: n
*SEM: twoRel[rel=1_-_comma_-_5_+_thread]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_-_comma_-_5_+_thread
*CAT: n
*SEM: twoRel[rel=1_-_comma_-_5_+_thread]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_-_comma_-_5_+_thread
*CAT: n
*SEM: orRel[rel=1_-_comma_-_5_+_thread]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed
*CAT: n
*SEM: unaryRel[rel=bleed]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed
*CAT: n
*SEM: twoRel[rel=bleed]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed
*CAT: n
*SEM: twoRel[rel=bleed]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed
*CAT: n
*SEM: orRel[rel=bleed]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abd100.2.9
*CAT: n
*SEM: unaryRel[rel=abd100.2.9]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abd100.2.9
*CAT: n
*SEM: twoRel[rel=abd100.2.9]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abd100.2.9
*CAT: n
*SEM: twoRel[rel=abd100.2.9]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abd100.2.9
*CAT: n
*SEM: orRel[rel=abd100.2.9]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195_+_clamp
*CAT: n
*SEM: unaryRel[rel=abs2195_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195_+_clamp
*CAT: n
*SEM: twoRel[rel=abs2195_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195_+_clamp
*CAT: n
*SEM: twoRel[rel=abs2195_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195_+_clamp
*CAT: n
*SEM: orRel[rel=abs2195_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_characteristics
*CAT: n
*SEM: unaryRel[rel=zone_+_characteristics]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_characteristics
*CAT: n
*SEM: twoRel[rel=zone_+_characteristics]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_characteristics
*CAT: n
*SEM: twoRel[rel=zone_+_characteristics]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_characteristics
*CAT: n
*SEM: orRel[rel=zone_+_characteristics]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bended_+_sections
*CAT: n
*SEM: unaryRel[rel=bended_+_sections]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bended_+_sections
*CAT: n
*SEM: twoRel[rel=bended_+_sections]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bended_+_sections
*CAT: n
*SEM: twoRel[rel=bended_+_sections]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bended_+_sections
*CAT: n
*SEM: orRel[rel=bended_+_sections]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937493_+_insulating_+_sleeve
*CAT: n
*SEM: unaryRel[rel=nsa937493_+_insulating_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937493_+_insulating_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa937493_+_insulating_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937493_+_insulating_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa937493_+_insulating_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937493_+_insulating_+_sleeve
*CAT: n
*SEM: orRel[rel=nsa937493_+_insulating_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: accessibility
*CAT: n
*SEM: unaryRel[rel=accessibility]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: accessibility
*CAT: n
*SEM: twoRel[rel=accessibility]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: accessibility
*CAT: n
*SEM: twoRel[rel=accessibility]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: accessibility
*CAT: n
*SEM: orRel[rel=accessibility]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_zone_+_which_+_are_+_defined_+_in_+_attached_+_table
*CAT: n
*SEM: unaryRel[rel=pylon_+_zone_+_which_+_are_+_defined_+_in_+_attached_+_table]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_zone_+_which_+_are_+_defined_+_in_+_attached_+_table
*CAT: n
*SEM: twoRel[rel=pylon_+_zone_+_which_+_are_+_defined_+_in_+_attached_+_table]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_zone_+_which_+_are_+_defined_+_in_+_attached_+_table
*CAT: n
*SEM: twoRel[rel=pylon_+_zone_+_which_+_are_+_defined_+_in_+_attached_+_table]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_zone_+_which_+_are_+_defined_+_in_+_attached_+_table
*CAT: n
*SEM: orRel[rel=pylon_+_zone_+_which_+_are_+_defined_+_in_+_attached_+_table]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop_+_at_+_both_+_sides_+_of_+_pressure
*CAT: n
*SEM: unaryRel[rel=drip_+_loop_+_at_+_both_+_sides_+_of_+_pressure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop_+_at_+_both_+_sides_+_of_+_pressure
*CAT: n
*SEM: twoRel[rel=drip_+_loop_+_at_+_both_+_sides_+_of_+_pressure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop_+_at_+_both_+_sides_+_of_+_pressure
*CAT: n
*SEM: twoRel[rel=drip_+_loop_+_at_+_both_+_sides_+_of_+_pressure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop_+_at_+_both_+_sides_+_of_+_pressure
*CAT: n
*SEM: orRel[rel=drip_+_loop_+_at_+_both_+_sides_+_of_+_pressure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage
*CAT: n
*SEM: unaryRel[rel=fuselage]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage
*CAT: n
*SEM: twoRel[rel=fuselage]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage
*CAT: n
*SEM: twoRel[rel=fuselage]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage
*CAT: n
*SEM: orRel[rel=fuselage]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: application
*CAT: n
*SEM: unaryRel[rel=application]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: application
*CAT: n
*SEM: twoRel[rel=application]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: application
*CAT: n
*SEM: twoRel[rel=application]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: application
*CAT: n
*SEM: orRel[rel=application]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_every_+_2_+_meter
*CAT: n
*SEM: unaryRel[rel=harness_+_every_+_2_+_meter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_every_+_2_+_meter
*CAT: n
*SEM: twoRel[rel=harness_+_every_+_2_+_meter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_every_+_2_+_meter
*CAT: n
*SEM: twoRel[rel=harness_+_every_+_2_+_meter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_every_+_2_+_meter
*CAT: n
*SEM: orRel[rel=harness_+_every_+_2_+_meter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contractions
*CAT: n
*SEM: unaryRel[rel=contractions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contractions
*CAT: n
*SEM: twoRel[rel=contractions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contractions
*CAT: n
*SEM: twoRel[rel=contractions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contractions
*CAT: n
*SEM: orRel[rel=contractions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector
*CAT: n
*SEM: unaryRel[rel=connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector
*CAT: n
*SEM: twoRel[rel=connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector
*CAT: n
*SEM: twoRel[rel=connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector
*CAT: n
*SEM: orRel[rel=connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: technical_+_constraints
*CAT: n
*SEM: unaryRel[rel=technical_+_constraints]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: technical_+_constraints
*CAT: n
*SEM: twoRel[rel=technical_+_constraints]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: technical_+_constraints
*CAT: n
*SEM: twoRel[rel=technical_+_constraints]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: technical_+_constraints
*CAT: n
*SEM: orRel[rel=technical_+_constraints]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 32_+_pipes
*CAT: n
*SEM: unaryRel[rel=32_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 32_+_pipes
*CAT: n
*SEM: twoRel[rel=32_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 32_+_pipes
*CAT: n
*SEM: twoRel[rel=32_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 32_+_pipes
*CAT: n
*SEM: orRel[rel=32_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_sub-systems_+__-_opensb_-_different_+_colour_+_code_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=different_+_sub-systems_+__-_opensb_-_different_+_colour_+_code_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_sub-systems_+__-_opensb_-_different_+_colour_+_code_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=different_+_sub-systems_+__-_opensb_-_different_+_colour_+_code_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_sub-systems_+__-_opensb_-_different_+_colour_+_code_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=different_+_sub-systems_+__-_opensb_-_different_+_colour_+_code_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_sub-systems_+__-_opensb_-_different_+_colour_+_code_-_closesb_-_
*CAT: n
*SEM: orRel[rel=different_+_sub-systems_+__-_opensb_-_different_+_colour_+_code_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_+__-_greaterThan_-__+__-_equalto_-_d_+__-_greaterThan_-__+__-_equalto_-_10mm
*CAT: n
*SEM: unaryRel[rel=25mm_+__-_greaterThan_-__+__-_equalto_-_d_+__-_greaterThan_-__+__-_equalto_-_10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_+__-_greaterThan_-__+__-_equalto_-_d_+__-_greaterThan_-__+__-_equalto_-_10mm
*CAT: n
*SEM: twoRel[rel=25mm_+__-_greaterThan_-__+__-_equalto_-_d_+__-_greaterThan_-__+__-_equalto_-_10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_+__-_greaterThan_-__+__-_equalto_-_d_+__-_greaterThan_-__+__-_equalto_-_10mm
*CAT: n
*SEM: twoRel[rel=25mm_+__-_greaterThan_-__+__-_equalto_-_d_+__-_greaterThan_-__+__-_equalto_-_10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_+__-_greaterThan_-__+__-_equalto_-_d_+__-_greaterThan_-__+__-_equalto_-_10mm
*CAT: n
*SEM: orRel[rel=25mm_+__-_greaterThan_-__+__-_equalto_-_d_+__-_greaterThan_-__+__-_equalto_-_10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_runs
*CAT: n
*SEM: unaryRel[rel=straight_+_runs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_runs
*CAT: n
*SEM: twoRel[rel=straight_+_runs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_runs
*CAT: n
*SEM: twoRel[rel=straight_+_runs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_runs
*CAT: n
*SEM: orRel[rel=straight_+_runs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee-_+_unions
*CAT: n
*SEM: unaryRel[rel=tee-_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee-_+_unions
*CAT: n
*SEM: twoRel[rel=tee-_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee-_+_unions
*CAT: n
*SEM: twoRel[rel=tee-_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee-_+_unions
*CAT: n
*SEM: orRel[rel=tee-_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_parts._+_at_+_a_+_maximum_+_distance_+_of_+_254mm
*CAT: n
*SEM: unaryRel[rel=straight_+_parts._+_at_+_a_+_maximum_+_distance_+_of_+_254mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_parts._+_at_+_a_+_maximum_+_distance_+_of_+_254mm
*CAT: n
*SEM: twoRel[rel=straight_+_parts._+_at_+_a_+_maximum_+_distance_+_of_+_254mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_parts._+_at_+_a_+_maximum_+_distance_+_of_+_254mm
*CAT: n
*SEM: twoRel[rel=straight_+_parts._+_at_+_a_+_maximum_+_distance_+_of_+_254mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_parts._+_at_+_a_+_maximum_+_distance_+_of_+_254mm
*CAT: n
*SEM: orRel[rel=straight_+_parts._+_at_+_a_+_maximum_+_distance_+_of_+_254mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_virtual_+_terminal_+_module
*CAT: n
*SEM: unaryRel[rel=efcs_+_virtual_+_terminal_+_module]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_virtual_+_terminal_+_module
*CAT: n
*SEM: twoRel[rel=efcs_+_virtual_+_terminal_+_module]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_virtual_+_terminal_+_module
*CAT: n
*SEM: twoRel[rel=efcs_+_virtual_+_terminal_+_module]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_virtual_+_terminal_+_module
*CAT: n
*SEM: orRel[rel=efcs_+_virtual_+_terminal_+_module]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: unaryRel[rel=bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: twoRel[rel=bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: twoRel[rel=bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: orRel[rel=bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: last_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=last_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: last_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=last_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: last_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=last_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: last_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=last_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_cables
*CAT: n
*SEM: unaryRel[rel=copper_+_cables]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_cables
*CAT: n
*SEM: twoRel[rel=copper_+_cables]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_cables
*CAT: n
*SEM: twoRel[rel=copper_+_cables]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_cables
*CAT: n
*SEM: orRel[rel=copper_+_cables]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: critical_+_circuits
*CAT: n
*SEM: unaryRel[rel=critical_+_circuits]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: critical_+_circuits
*CAT: n
*SEM: twoRel[rel=critical_+_circuits]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: critical_+_circuits
*CAT: n
*SEM: twoRel[rel=critical_+_circuits]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: critical_+_circuits
*CAT: n
*SEM: orRel[rel=critical_+_circuits]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s-routes
*CAT: n
*SEM: unaryRel[rel=s-routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s-routes
*CAT: n
*SEM: twoRel[rel=s-routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s-routes
*CAT: n
*SEM: twoRel[rel=s-routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s-routes
*CAT: n
*SEM: orRel[rel=s-routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_circumstance
*CAT: n
*SEM: unaryRel[rel=no_+_circumstance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_circumstance
*CAT: n
*SEM: twoRel[rel=no_+_circumstance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_circumstance
*CAT: n
*SEM: twoRel[rel=no_+_circumstance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_circumstance
*CAT: n
*SEM: orRel[rel=no_+_circumstance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loose_+_connector_+__-_opensb_-_plug_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=loose_+_connector_+__-_opensb_-_plug_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loose_+_connector_+__-_opensb_-_plug_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=loose_+_connector_+__-_opensb_-_plug_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loose_+_connector_+__-_opensb_-_plug_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=loose_+_connector_+__-_opensb_-_plug_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loose_+_connector_+__-_opensb_-_plug_-_closesb_-_
*CAT: n
*SEM: orRel[rel=loose_+_connector_+__-_opensb_-_plug_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_m-route
*CAT: n
*SEM: unaryRel[rel=commercial_+_m-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_m-route
*CAT: n
*SEM: twoRel[rel=commercial_+_m-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_m-route
*CAT: n
*SEM: twoRel[rel=commercial_+_m-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_m-route
*CAT: n
*SEM: orRel[rel=commercial_+_m-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: extremity_+_components_+_close
*CAT: n
*SEM: unaryRel[rel=extremity_+_components_+_close]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: extremity_+_components_+_close
*CAT: n
*SEM: twoRel[rel=extremity_+_components_+_close]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: extremity_+_components_+_close
*CAT: n
*SEM: twoRel[rel=extremity_+_components_+_close]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: extremity_+_components_+_close
*CAT: n
*SEM: orRel[rel=extremity_+_components_+_close]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_vn_+_the_+_vn_+_screw_+_length
*CAT: n
*SEM: unaryRel[rel=one_+_vn_+_the_+_vn_+_screw_+_length]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_vn_+_the_+_vn_+_screw_+_length
*CAT: n
*SEM: twoRel[rel=one_+_vn_+_the_+_vn_+_screw_+_length]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_vn_+_the_+_vn_+_screw_+_length
*CAT: n
*SEM: twoRel[rel=one_+_vn_+_the_+_vn_+_screw_+_length]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_vn_+_the_+_vn_+_screw_+_length
*CAT: n
*SEM: orRel[rel=one_+_vn_+_the_+_vn_+_screw_+_length]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wiring
*CAT: n
*SEM: unaryRel[rel=wiring]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wiring
*CAT: n
*SEM: twoRel[rel=wiring]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wiring
*CAT: n
*SEM: twoRel[rel=wiring]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wiring
*CAT: n
*SEM: orRel[rel=wiring]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937210_+_shrink_+_sleeve_+_25mm
*CAT: n
*SEM: unaryRel[rel=nsa_+_937210_+_shrink_+_sleeve_+_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937210_+_shrink_+_sleeve_+_25mm
*CAT: n
*SEM: twoRel[rel=nsa_+_937210_+_shrink_+_sleeve_+_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937210_+_shrink_+_sleeve_+_25mm
*CAT: n
*SEM: twoRel[rel=nsa_+_937210_+_shrink_+_sleeve_+_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937210_+_shrink_+_sleeve_+_25mm
*CAT: n
*SEM: orRel[rel=nsa_+_937210_+_shrink_+_sleeve_+_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air_+_conditioning
*CAT: n
*SEM: unaryRel[rel=air_+_conditioning]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air_+_conditioning
*CAT: n
*SEM: twoRel[rel=air_+_conditioning]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air_+_conditioning
*CAT: n
*SEM: twoRel[rel=air_+_conditioning]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air_+_conditioning
*CAT: n
*SEM: orRel[rel=air_+_conditioning]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_printed
*CAT: n
*SEM: unaryRel[rel=be_+_printed]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_printed
*CAT: n
*SEM: twoRel[rel=be_+_printed]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_printed
*CAT: n
*SEM: twoRel[rel=be_+_printed]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_printed
*CAT: n
*SEM: orRel[rel=be_+_printed]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_unions_+__-_opensb_-_
*CAT: n
*SEM: unaryRel[rel=special_+_unions_+__-_opensb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_unions_+__-_opensb_-_
*CAT: n
*SEM: twoRel[rel=special_+_unions_+__-_opensb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_unions_+__-_opensb_-_
*CAT: n
*SEM: twoRel[rel=special_+_unions_+__-_opensb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_unions_+__-_opensb_-_
*CAT: n
*SEM: orRel[rel=special_+_unions_+__-_opensb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detector_+_head
*CAT: n
*SEM: unaryRel[rel=detector_+_head]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detector_+_head
*CAT: n
*SEM: twoRel[rel=detector_+_head]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detector_+_head
*CAT: n
*SEM: twoRel[rel=detector_+_head]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detector_+_head
*CAT: n
*SEM: orRel[rel=detector_+_head]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: t
*CAT: n
*SEM: unaryRel[rel=t]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: t
*CAT: n
*SEM: twoRel[rel=t]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: t
*CAT: n
*SEM: twoRel[rel=t]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: t
*CAT: n
*SEM: orRel[rel=t]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shwon
*CAT: n
*SEM: unaryRel[rel=shwon]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shwon
*CAT: n
*SEM: twoRel[rel=shwon]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shwon
*CAT: n
*SEM: twoRel[rel=shwon]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shwon
*CAT: n
*SEM: orRel[rel=shwon]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_shock_+_protection
*CAT: n
*SEM: unaryRel[rel=electrical_+_shock_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_shock_+_protection
*CAT: n
*SEM: twoRel[rel=electrical_+_shock_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_shock_+_protection
*CAT: n
*SEM: twoRel[rel=electrical_+_shock_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_shock_+_protection
*CAT: n
*SEM: orRel[rel=electrical_+_shock_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_contractions
*CAT: n
*SEM: unaryRel[rel=avoid_+_contractions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_contractions
*CAT: n
*SEM: twoRel[rel=avoid_+_contractions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_contractions
*CAT: n
*SEM: twoRel[rel=avoid_+_contractions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_contractions
*CAT: n
*SEM: orRel[rel=avoid_+_contractions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: backshell_+_abs1358_-_backslash_-_59_-_backslash_-_60_+_in_+_pressurized_+_area
*CAT: n
*SEM: unaryRel[rel=backshell_+_abs1358_-_backslash_-_59_-_backslash_-_60_+_in_+_pressurized_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: backshell_+_abs1358_-_backslash_-_59_-_backslash_-_60_+_in_+_pressurized_+_area
*CAT: n
*SEM: twoRel[rel=backshell_+_abs1358_-_backslash_-_59_-_backslash_-_60_+_in_+_pressurized_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: backshell_+_abs1358_-_backslash_-_59_-_backslash_-_60_+_in_+_pressurized_+_area
*CAT: n
*SEM: twoRel[rel=backshell_+_abs1358_-_backslash_-_59_-_backslash_-_60_+_in_+_pressurized_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: backshell_+_abs1358_-_backslash_-_59_-_backslash_-_60_+_in_+_pressurized_+_area
*CAT: n
*SEM: orRel[rel=backshell_+_abs1358_-_backslash_-_59_-_backslash_-_60_+_in_+_pressurized_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_part
*CAT: n
*SEM: unaryRel[rel=removable_+_part]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_part
*CAT: n
*SEM: twoRel[rel=removable_+_part]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_part
*CAT: n
*SEM: twoRel[rel=removable_+_part]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_part
*CAT: n
*SEM: orRel[rel=removable_+_part]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum
*CAT: n
*SEM: unaryRel[rel=minimum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum
*CAT: n
*SEM: twoRel[rel=minimum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum
*CAT: n
*SEM: twoRel[rel=minimum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum
*CAT: n
*SEM: orRel[rel=minimum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_nsa_+_935401_+_cable_+_tie
*CAT: n
*SEM: unaryRel[rel=single_+_nsa_+_935401_+_cable_+_tie]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_nsa_+_935401_+_cable_+_tie
*CAT: n
*SEM: twoRel[rel=single_+_nsa_+_935401_+_cable_+_tie]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_nsa_+_935401_+_cable_+_tie
*CAT: n
*SEM: twoRel[rel=single_+_nsa_+_935401_+_cable_+_tie]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_nsa_+_935401_+_cable_+_tie
*CAT: n
*SEM: orRel[rel=single_+_nsa_+_935401_+_cable_+_tie]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: their_+_nominal_+_support_+_dimension
*CAT: n
*SEM: unaryRel[rel=their_+_nominal_+_support_+_dimension]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: their_+_nominal_+_support_+_dimension
*CAT: n
*SEM: twoRel[rel=their_+_nominal_+_support_+_dimension]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: their_+_nominal_+_support_+_dimension
*CAT: n
*SEM: twoRel[rel=their_+_nominal_+_support_+_dimension]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: their_+_nominal_+_support_+_dimension
*CAT: n
*SEM: orRel[rel=their_+_nominal_+_support_+_dimension]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_one_+_radius_+_value
*CAT: n
*SEM: unaryRel[rel=using_+_one_+_radius_+_value]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_one_+_radius_+_value
*CAT: n
*SEM: twoRel[rel=using_+_one_+_radius_+_value]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_one_+_radius_+_value
*CAT: n
*SEM: twoRel[rel=using_+_one_+_radius_+_value]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_one_+_radius_+_value
*CAT: n
*SEM: orRel[rel=using_+_one_+_radius_+_value]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage
*CAT: n
*SEM: unaryRel[rel=fuselage]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage
*CAT: n
*SEM: twoRel[rel=fuselage]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage
*CAT: n
*SEM: twoRel[rel=fuselage]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage
*CAT: n
*SEM: orRel[rel=fuselage]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_ata36_+_hot_+_pipes
*CAT: n
*SEM: unaryRel[rel=non_+_ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_ata36_+_hot_+_pipes
*CAT: n
*SEM: twoRel[rel=non_+_ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_ata36_+_hot_+_pipes
*CAT: n
*SEM: twoRel[rel=non_+_ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_ata36_+_hot_+_pipes
*CAT: n
*SEM: orRel[rel=non_+_ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: linesor
*CAT: n
*SEM: unaryRel[rel=linesor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: linesor
*CAT: n
*SEM: twoRel[rel=linesor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: linesor
*CAT: n
*SEM: twoRel[rel=linesor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: linesor
*CAT: n
*SEM: orRel[rel=linesor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_single_+_wire
*CAT: n
*SEM: unaryRel[rel=each_+_single_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_single_+_wire
*CAT: n
*SEM: twoRel[rel=each_+_single_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_single_+_wire
*CAT: n
*SEM: twoRel[rel=each_+_single_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_single_+_wire
*CAT: n
*SEM: orRel[rel=each_+_single_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_circular_+_connector
*CAT: n
*SEM: unaryRel[rel=unused_+_circular_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_circular_+_connector
*CAT: n
*SEM: twoRel[rel=unused_+_circular_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_circular_+_connector
*CAT: n
*SEM: twoRel[rel=unused_+_circular_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_circular_+_connector
*CAT: n
*SEM: orRel[rel=unused_+_circular_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: unaryRel[rel=any_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: twoRel[rel=any_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: twoRel[rel=any_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: orRel[rel=any_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0425
*CAT: n
*SEM: unaryRel[rel=asne0425]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0425
*CAT: n
*SEM: twoRel[rel=asne0425]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0425
*CAT: n
*SEM: twoRel[rel=asne0425]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0425
*CAT: n
*SEM: orRel[rel=asne0425]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_area_+_class_+_se
*CAT: n
*SEM: unaryRel[rel=fire_+_area_+_class_+_se]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_area_+_class_+_se
*CAT: n
*SEM: twoRel[rel=fire_+_area_+_class_+_se]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_area_+_class_+_se
*CAT: n
*SEM: twoRel[rel=fire_+_area_+_class_+_se]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_area_+_class_+_se
*CAT: n
*SEM: orRel[rel=fire_+_area_+_class_+_se]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0724_+_label
*CAT: n
*SEM: unaryRel[rel=0724_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0724_+_label
*CAT: n
*SEM: twoRel[rel=0724_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0724_+_label
*CAT: n
*SEM: twoRel[rel=0724_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0724_+_label
*CAT: n
*SEM: orRel[rel=0724_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture
*CAT: n
*SEM: unaryRel[rel=picture]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture
*CAT: n
*SEM: twoRel[rel=picture]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture
*CAT: n
*SEM: twoRel[rel=picture]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture
*CAT: n
*SEM: orRel[rel=picture]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_cavities
*CAT: n
*SEM: unaryRel[rel=unused_+_cavities]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_cavities
*CAT: n
*SEM: twoRel[rel=unused_+_cavities]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_cavities
*CAT: n
*SEM: twoRel[rel=unused_+_cavities]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_cavities
*CAT: n
*SEM: orRel[rel=unused_+_cavities]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: unaryRel[rel=movable_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: twoRel[rel=movable_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: twoRel[rel=movable_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: orRel[rel=movable_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_25mm
*CAT: n
*SEM: unaryRel[rel=taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_25mm
*CAT: n
*SEM: twoRel[rel=taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_25mm
*CAT: n
*SEM: twoRel[rel=taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_25mm
*CAT: n
*SEM: orRel[rel=taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: above_+_cwb
*CAT: n
*SEM: unaryRel[rel=above_+_cwb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: above_+_cwb
*CAT: n
*SEM: twoRel[rel=above_+_cwb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: above_+_cwb
*CAT: n
*SEM: twoRel[rel=above_+_cwb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: above_+_cwb
*CAT: n
*SEM: orRel[rel=above_+_cwb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder
*CAT: n
*SEM: unaryRel[rel=feeder]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder
*CAT: n
*SEM: twoRel[rel=feeder]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder
*CAT: n
*SEM: twoRel[rel=feeder]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder
*CAT: n
*SEM: orRel[rel=feeder]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_20_+__-_percent_-_
*CAT: n
*SEM: unaryRel[rel=least_+_20_+__-_percent_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_20_+__-_percent_-_
*CAT: n
*SEM: twoRel[rel=least_+_20_+__-_percent_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_20_+__-_percent_-_
*CAT: n
*SEM: twoRel[rel=least_+_20_+__-_percent_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_20_+__-_percent_-_
*CAT: n
*SEM: orRel[rel=least_+_20_+__-_percent_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_micron_+__-_opensb_-__+_e.g._+_self_+_adhesive_+_tape_+_ptfe_+_dan_+_269_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=2_+_micron_+__-_opensb_-__+_e.g._+_self_+_adhesive_+_tape_+_ptfe_+_dan_+_269_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_micron_+__-_opensb_-__+_e.g._+_self_+_adhesive_+_tape_+_ptfe_+_dan_+_269_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=2_+_micron_+__-_opensb_-__+_e.g._+_self_+_adhesive_+_tape_+_ptfe_+_dan_+_269_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_micron_+__-_opensb_-__+_e.g._+_self_+_adhesive_+_tape_+_ptfe_+_dan_+_269_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=2_+_micron_+__-_opensb_-__+_e.g._+_self_+_adhesive_+_tape_+_ptfe_+_dan_+_269_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_micron_+__-_opensb_-__+_e.g._+_self_+_adhesive_+_tape_+_ptfe_+_dan_+_269_-_closesb_-_
*CAT: n
*SEM: orRel[rel=2_+_micron_+__-_opensb_-__+_e.g._+_self_+_adhesive_+_tape_+_ptfe_+_dan_+_269_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: access_+_to_+_screws
*CAT: n
*SEM: unaryRel[rel=access_+_to_+_screws]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: access_+_to_+_screws
*CAT: n
*SEM: twoRel[rel=access_+_to_+_screws]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: access_+_to_+_screws
*CAT: n
*SEM: twoRel[rel=access_+_to_+_screws]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: access_+_to_+_screws
*CAT: n
*SEM: orRel[rel=access_+_to_+_screws]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_sufficiently
*CAT: n
*SEM: unaryRel[rel=not_+_sufficiently]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_sufficiently
*CAT: n
*SEM: twoRel[rel=not_+_sufficiently]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_sufficiently
*CAT: n
*SEM: twoRel[rel=not_+_sufficiently]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_sufficiently
*CAT: n
*SEM: orRel[rel=not_+_sufficiently]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_line
*CAT: n
*SEM: unaryRel[rel=sense_+_line]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_line
*CAT: n
*SEM: twoRel[rel=sense_+_line]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_line
*CAT: n
*SEM: twoRel[rel=sense_+_line]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_line
*CAT: n
*SEM: orRel[rel=sense_+_line]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes
*CAT: n
*SEM: unaryRel[rel=pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes
*CAT: n
*SEM: twoRel[rel=pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes
*CAT: n
*SEM: twoRel[rel=pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes
*CAT: n
*SEM: orRel[rel=pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_connector_+_dummy_+_contacts
*CAT: n
*SEM: unaryRel[rel=sealed_+_connector_+_dummy_+_contacts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_connector_+_dummy_+_contacts
*CAT: n
*SEM: twoRel[rel=sealed_+_connector_+_dummy_+_contacts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_connector_+_dummy_+_contacts
*CAT: n
*SEM: twoRel[rel=sealed_+_connector_+_dummy_+_contacts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_connector_+_dummy_+_contacts
*CAT: n
*SEM: orRel[rel=sealed_+_connector_+_dummy_+_contacts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_point
*CAT: n
*SEM: unaryRel[rel=attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_point
*CAT: n
*SEM: twoRel[rel=attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_point
*CAT: n
*SEM: twoRel[rel=attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_point
*CAT: n
*SEM: orRel[rel=attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface
*CAT: n
*SEM: unaryRel[rel=interface]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface
*CAT: n
*SEM: twoRel[rel=interface]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface
*CAT: n
*SEM: twoRel[rel=interface]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface
*CAT: n
*SEM: orRel[rel=interface]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cor
*CAT: n
*SEM: unaryRel[rel=cor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cor
*CAT: n
*SEM: twoRel[rel=cor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cor
*CAT: n
*SEM: twoRel[rel=cor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cor
*CAT: n
*SEM: orRel[rel=cor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: possible_+_to_+_the_+_conduit_+_entrance
*CAT: n
*SEM: unaryRel[rel=possible_+_to_+_the_+_conduit_+_entrance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: possible_+_to_+_the_+_conduit_+_entrance
*CAT: n
*SEM: twoRel[rel=possible_+_to_+_the_+_conduit_+_entrance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: possible_+_to_+_the_+_conduit_+_entrance
*CAT: n
*SEM: twoRel[rel=possible_+_to_+_the_+_conduit_+_entrance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: possible_+_to_+_the_+_conduit_+_entrance
*CAT: n
*SEM: orRel[rel=possible_+_to_+_the_+_conduit_+_entrance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_terminal_+_lug
*CAT: n
*SEM: unaryRel[rel=copper_+_terminal_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=copper_+_terminal_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=copper_+_terminal_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_terminal_+_lug
*CAT: n
*SEM: orRel[rel=copper_+_terminal_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead_+_unions
*CAT: n
*SEM: unaryRel[rel=bulkhead_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=bulkhead_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=bulkhead_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead_+_unions
*CAT: n
*SEM: orRel[rel=bulkhead_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_9504_+_boot_+_diameter
*CAT: n
*SEM: unaryRel[rel=nsa_+_9504_+_boot_+_diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_9504_+_boot_+_diameter
*CAT: n
*SEM: twoRel[rel=nsa_+_9504_+_boot_+_diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_9504_+_boot_+_diameter
*CAT: n
*SEM: twoRel[rel=nsa_+_9504_+_boot_+_diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_9504_+_boot_+_diameter
*CAT: n
*SEM: orRel[rel=nsa_+_9504_+_boot_+_diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_drain_+_pipes_+_which
*CAT: n
*SEM: unaryRel[rel=case_+_drain_+_pipes_+_which]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_drain_+_pipes_+_which
*CAT: n
*SEM: twoRel[rel=case_+_drain_+_pipes_+_which]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_drain_+_pipes_+_which
*CAT: n
*SEM: twoRel[rel=case_+_drain_+_pipes_+_which]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_drain_+_pipes_+_which
*CAT: n
*SEM: orRel[rel=case_+_drain_+_pipes_+_which]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle
*CAT: n
*SEM: unaryRel[rel=bend_+_angle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle
*CAT: n
*SEM: twoRel[rel=bend_+_angle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle
*CAT: n
*SEM: twoRel[rel=bend_+_angle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle
*CAT: n
*SEM: orRel[rel=bend_+_angle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: point_+_location
*CAT: n
*SEM: unaryRel[rel=point_+_location]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: point_+_location
*CAT: n
*SEM: twoRel[rel=point_+_location]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: point_+_location
*CAT: n
*SEM: twoRel[rel=point_+_location]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: point_+_location
*CAT: n
*SEM: orRel[rel=point_+_location]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: right_+_leg
*CAT: n
*SEM: unaryRel[rel=right_+_leg]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: right_+_leg
*CAT: n
*SEM: twoRel[rel=right_+_leg]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: right_+_leg
*CAT: n
*SEM: twoRel[rel=right_+_leg]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: right_+_leg
*CAT: n
*SEM: orRel[rel=right_+_leg]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: word_+_clamp
*CAT: n
*SEM: unaryRel[rel=word_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: word_+_clamp
*CAT: n
*SEM: twoRel[rel=word_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: word_+_clamp
*CAT: n
*SEM: twoRel[rel=word_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: word_+_clamp
*CAT: n
*SEM: orRel[rel=word_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramps_+_system
*CAT: n
*SEM: unaryRel[rel=ramps_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramps_+_system
*CAT: n
*SEM: twoRel[rel=ramps_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramps_+_system
*CAT: n
*SEM: twoRel[rel=ramps_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramps_+_system
*CAT: n
*SEM: orRel[rel=ramps_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relation_+_2n_-_backslash_-_d1_+__-_greaterThan_-__+_5_+_d2_-_backslash_-_d1_+__-_smallerThan_-__+_2
*CAT: n
*SEM: unaryRel[rel=relation_+_2n_-_backslash_-_d1_+__-_greaterThan_-__+_5_+_d2_-_backslash_-_d1_+__-_smallerThan_-__+_2]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relation_+_2n_-_backslash_-_d1_+__-_greaterThan_-__+_5_+_d2_-_backslash_-_d1_+__-_smallerThan_-__+_2
*CAT: n
*SEM: twoRel[rel=relation_+_2n_-_backslash_-_d1_+__-_greaterThan_-__+_5_+_d2_-_backslash_-_d1_+__-_smallerThan_-__+_2]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relation_+_2n_-_backslash_-_d1_+__-_greaterThan_-__+_5_+_d2_-_backslash_-_d1_+__-_smallerThan_-__+_2
*CAT: n
*SEM: twoRel[rel=relation_+_2n_-_backslash_-_d1_+__-_greaterThan_-__+_5_+_d2_-_backslash_-_d1_+__-_smallerThan_-__+_2]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relation_+_2n_-_backslash_-_d1_+__-_greaterThan_-__+_5_+_d2_-_backslash_-_d1_+__-_smallerThan_-__+_2
*CAT: n
*SEM: orRel[rel=relation_+_2n_-_backslash_-_d1_+__-_greaterThan_-__+_5_+_d2_-_backslash_-_d1_+__-_smallerThan_-__+_2]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standards
*CAT: n
*SEM: unaryRel[rel=standards]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standards
*CAT: n
*SEM: twoRel[rel=standards]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standards
*CAT: n
*SEM: twoRel[rel=standards]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standards
*CAT: n
*SEM: orRel[rel=standards]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_which
*CAT: n
*SEM: unaryRel[rel=pipes_+_which]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_which
*CAT: n
*SEM: twoRel[rel=pipes_+_which]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_which
*CAT: n
*SEM: twoRel[rel=pipes_+_which]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_which
*CAT: n
*SEM: orRel[rel=pipes_+_which]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure_+__+_table
*CAT: n
*SEM: unaryRel[rel=attached_+_figure_+__+_table]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure_+__+_table
*CAT: n
*SEM: twoRel[rel=attached_+_figure_+__+_table]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure_+__+_table
*CAT: n
*SEM: twoRel[rel=attached_+_figure_+__+_table]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure_+__+_table
*CAT: n
*SEM: orRel[rel=attached_+_figure_+__+_table]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp
*CAT: n
*SEM: unaryRel[rel=p-clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp
*CAT: n
*SEM: twoRel[rel=p-clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp
*CAT: n
*SEM: twoRel[rel=p-clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp
*CAT: n
*SEM: orRel[rel=p-clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_10mm_+_when
*CAT: n
*SEM: unaryRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_10mm_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_10mm_+_when
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_10mm_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_10mm_+_when
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_10mm_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_10mm_+_when
*CAT: n
*SEM: orRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_10mm_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dummy_+_contact
*CAT: n
*SEM: unaryRel[rel=dummy_+_contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dummy_+_contact
*CAT: n
*SEM: twoRel[rel=dummy_+_contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dummy_+_contact
*CAT: n
*SEM: twoRel[rel=dummy_+_contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dummy_+_contact
*CAT: n
*SEM: orRel[rel=dummy_+_contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_in_+_contact
*CAT: n
*SEM: unaryRel[rel=be_+_in_+_contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_in_+_contact
*CAT: n
*SEM: twoRel[rel=be_+_in_+_contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_in_+_contact
*CAT: n
*SEM: twoRel[rel=be_+_in_+_contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_in_+_contact
*CAT: n
*SEM: orRel[rel=be_+_in_+_contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sum
*CAT: n
*SEM: unaryRel[rel=sum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sum
*CAT: n
*SEM: twoRel[rel=sum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sum
*CAT: n
*SEM: twoRel[rel=sum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sum
*CAT: n
*SEM: orRel[rel=sum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: downwards_+_to
*CAT: n
*SEM: unaryRel[rel=downwards_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: downwards_+_to
*CAT: n
*SEM: twoRel[rel=downwards_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: downwards_+_to
*CAT: n
*SEM: twoRel[rel=downwards_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: downwards_+_to
*CAT: n
*SEM: orRel[rel=downwards_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: unaryRel[rel=bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: twoRel[rel=bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: twoRel[rel=bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: orRel[rel=bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mh_+_system
*CAT: n
*SEM: unaryRel[rel=mh_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mh_+_system
*CAT: n
*SEM: twoRel[rel=mh_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mh_+_system
*CAT: n
*SEM: twoRel[rel=mh_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mh_+_system
*CAT: n
*SEM: orRel[rel=mh_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamp_+_when
*CAT: n
*SEM: unaryRel[rel=saddle_+_clamp_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamp_+_when
*CAT: n
*SEM: twoRel[rel=saddle_+_clamp_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamp_+_when
*CAT: n
*SEM: twoRel[rel=saddle_+_clamp_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamp_+_when
*CAT: n
*SEM: orRel[rel=saddle_+_clamp_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: type_+_of_+_connection
*CAT: n
*SEM: unaryRel[rel=type_+_of_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: type_+_of_+_connection
*CAT: n
*SEM: twoRel[rel=type_+_of_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: type_+_of_+_connection
*CAT: n
*SEM: twoRel[rel=type_+_of_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: type_+_of_+_connection
*CAT: n
*SEM: orRel[rel=type_+_of_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_under_+_of_+_attachment_+_devices_+__-_opensb_-_e.g._+_clamps..._-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=or_+_under_+_of_+_attachment_+_devices_+__-_opensb_-_e.g._+_clamps..._-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_under_+_of_+_attachment_+_devices_+__-_opensb_-_e.g._+_clamps..._-_closesb_-_
*CAT: n
*SEM: twoRel[rel=or_+_under_+_of_+_attachment_+_devices_+__-_opensb_-_e.g._+_clamps..._-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_under_+_of_+_attachment_+_devices_+__-_opensb_-_e.g._+_clamps..._-_closesb_-_
*CAT: n
*SEM: twoRel[rel=or_+_under_+_of_+_attachment_+_devices_+__-_opensb_-_e.g._+_clamps..._-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_under_+_of_+_attachment_+_devices_+__-_opensb_-_e.g._+_clamps..._-_closesb_-_
*CAT: n
*SEM: orRel[rel=or_+_under_+_of_+_attachment_+_devices_+__-_opensb_-_e.g._+_clamps..._-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_printed
*CAT: n
*SEM: unaryRel[rel=abs_+_0724_+_printed]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_printed
*CAT: n
*SEM: twoRel[rel=abs_+_0724_+_printed]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_printed
*CAT: n
*SEM: twoRel[rel=abs_+_0724_+_printed]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_printed
*CAT: n
*SEM: orRel[rel=abs_+_0724_+_printed]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rotation_+_center_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=rotation_+_center_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rotation_+_center_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=rotation_+_center_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rotation_+_center_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=rotation_+_center_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rotation_+_center_-_closesb_-_
*CAT: n
*SEM: orRel[rel=rotation_+_center_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp
*CAT: n
*SEM: unaryRel[rel=clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp
*CAT: n
*SEM: twoRel[rel=clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp
*CAT: n
*SEM: twoRel[rel=clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp
*CAT: n
*SEM: orRel[rel=clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: so
*CAT: n
*SEM: unaryRel[rel=so]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: so
*CAT: n
*SEM: twoRel[rel=so]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: so
*CAT: n
*SEM: twoRel[rel=so]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: so
*CAT: n
*SEM: orRel[rel=so]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_2
*CAT: n
*SEM: unaryRel[rel=case_+_2]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_2
*CAT: n
*SEM: twoRel[rel=case_+_2]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_2
*CAT: n
*SEM: twoRel[rel=case_+_2]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_2
*CAT: n
*SEM: orRel[rel=case_+_2]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: local_+_protection
*CAT: n
*SEM: unaryRel[rel=local_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: local_+_protection
*CAT: n
*SEM: twoRel[rel=local_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: local_+_protection
*CAT: n
*SEM: twoRel[rel=local_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: local_+_protection
*CAT: n
*SEM: orRel[rel=local_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: boot
*CAT: n
*SEM: unaryRel[rel=boot]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: boot
*CAT: n
*SEM: twoRel[rel=boot]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: boot
*CAT: n
*SEM: twoRel[rel=boot]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: boot
*CAT: n
*SEM: orRel[rel=boot]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: operation
*CAT: n
*SEM: unaryRel[rel=operation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: operation
*CAT: n
*SEM: twoRel[rel=operation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: operation
*CAT: n
*SEM: twoRel[rel=operation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: operation
*CAT: n
*SEM: orRel[rel=operation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flight_+_test_+_engineer
*CAT: n
*SEM: unaryRel[rel=flight_+_test_+_engineer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flight_+_test_+_engineer
*CAT: n
*SEM: twoRel[rel=flight_+_test_+_engineer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flight_+_test_+_engineer
*CAT: n
*SEM: twoRel[rel=flight_+_test_+_engineer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flight_+_test_+_engineer
*CAT: n
*SEM: orRel[rel=flight_+_test_+_engineer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: forces
*CAT: n
*SEM: unaryRel[rel=forces]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: forces
*CAT: n
*SEM: twoRel[rel=forces]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: forces
*CAT: n
*SEM: twoRel[rel=forces]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: forces
*CAT: n
*SEM: orRel[rel=forces]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_d_+__-_smallerThan_-__+__-_equalto_-_5mm
*CAT: n
*SEM: unaryRel[rel=diameter_+_d_+__-_smallerThan_-__+__-_equalto_-_5mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_d_+__-_smallerThan_-__+__-_equalto_-_5mm
*CAT: n
*SEM: twoRel[rel=diameter_+_d_+__-_smallerThan_-__+__-_equalto_-_5mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_d_+__-_smallerThan_-__+__-_equalto_-_5mm
*CAT: n
*SEM: twoRel[rel=diameter_+_d_+__-_smallerThan_-__+__-_equalto_-_5mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_d_+__-_smallerThan_-__+__-_equalto_-_5mm
*CAT: n
*SEM: orRel[rel=diameter_+_d_+__-_smallerThan_-__+__-_equalto_-_5mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m-route
*CAT: n
*SEM: unaryRel[rel=m-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m-route
*CAT: n
*SEM: twoRel[rel=m-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m-route
*CAT: n
*SEM: twoRel[rel=m-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m-route
*CAT: n
*SEM: orRel[rel=m-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_conduit_+_size
*CAT: n
*SEM: unaryRel[rel=minimum_+_conduit_+_size]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_conduit_+_size
*CAT: n
*SEM: twoRel[rel=minimum_+_conduit_+_size]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_conduit_+_size
*CAT: n
*SEM: twoRel[rel=minimum_+_conduit_+_size]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_conduit_+_size
*CAT: n
*SEM: orRel[rel=minimum_+_conduit_+_size]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routing
*CAT: n
*SEM: unaryRel[rel=pipe_+_routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routing
*CAT: n
*SEM: twoRel[rel=pipe_+_routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routing
*CAT: n
*SEM: twoRel[rel=pipe_+_routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routing
*CAT: n
*SEM: orRel[rel=pipe_+_routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5xd
*CAT: n
*SEM: unaryRel[rel=5xd]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5xd
*CAT: n
*SEM: twoRel[rel=5xd]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5xd
*CAT: n
*SEM: twoRel[rel=5xd]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5xd
*CAT: n
*SEM: orRel[rel=5xd]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zones_+_to_+_non-pressurised_+_zones
*CAT: n
*SEM: unaryRel[rel=zones_+_to_+_non-pressurised_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zones_+_to_+_non-pressurised_+_zones
*CAT: n
*SEM: twoRel[rel=zones_+_to_+_non-pressurised_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zones_+_to_+_non-pressurised_+_zones
*CAT: n
*SEM: twoRel[rel=zones_+_to_+_non-pressurised_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zones_+_to_+_non-pressurised_+_zones
*CAT: n
*SEM: orRel[rel=zones_+_to_+_non-pressurised_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_conduit_+_in_+_unpressurited_+_areas
*CAT: n
*SEM: unaryRel[rel=shielded_+_conduit_+_in_+_unpressurited_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_conduit_+_in_+_unpressurited_+_areas
*CAT: n
*SEM: twoRel[rel=shielded_+_conduit_+_in_+_unpressurited_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_conduit_+_in_+_unpressurited_+_areas
*CAT: n
*SEM: twoRel[rel=shielded_+_conduit_+_in_+_unpressurited_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_conduit_+_in_+_unpressurited_+_areas
*CAT: n
*SEM: orRel[rel=shielded_+_conduit_+_in_+_unpressurited_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937901
*CAT: n
*SEM: unaryRel[rel=nsa_+_937901]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937901
*CAT: n
*SEM: twoRel[rel=nsa_+_937901]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937901
*CAT: n
*SEM: twoRel[rel=nsa_+_937901]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937901
*CAT: n
*SEM: orRel[rel=nsa_+_937901]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electro-chemical_+_compatibility
*CAT: n
*SEM: unaryRel[rel=electro-chemical_+_compatibility]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electro-chemical_+_compatibility
*CAT: n
*SEM: twoRel[rel=electro-chemical_+_compatibility]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electro-chemical_+_compatibility
*CAT: n
*SEM: twoRel[rel=electro-chemical_+_compatibility]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electro-chemical_+_compatibility
*CAT: n
*SEM: orRel[rel=electro-chemical_+_compatibility]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_areas
*CAT: n
*SEM: unaryRel[rel=hazardous_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_areas
*CAT: n
*SEM: twoRel[rel=hazardous_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_areas
*CAT: n
*SEM: twoRel[rel=hazardous_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_areas
*CAT: n
*SEM: orRel[rel=hazardous_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_a_+_clearance_+_of_+_l+10mm
*CAT: n
*SEM: unaryRel[rel=cut_+_of_+_wire_+_a_+_clearance_+_of_+_l+10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_a_+_clearance_+_of_+_l+10mm
*CAT: n
*SEM: twoRel[rel=cut_+_of_+_wire_+_a_+_clearance_+_of_+_l+10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_a_+_clearance_+_of_+_l+10mm
*CAT: n
*SEM: twoRel[rel=cut_+_of_+_wire_+_a_+_clearance_+_of_+_l+10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_a_+_clearance_+_of_+_l+10mm
*CAT: n
*SEM: orRel[rel=cut_+_of_+_wire_+_a_+_clearance_+_of_+_l+10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: floating_+_clamp-block_+_attachment_+_positions_+_on_+_the_+_pipe._+_guide_+_identification_+_is
*CAT: n
*SEM: unaryRel[rel=floating_+_clamp-block_+_attachment_+_positions_+_on_+_the_+_pipe._+_guide_+_identification_+_is]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: floating_+_clamp-block_+_attachment_+_positions_+_on_+_the_+_pipe._+_guide_+_identification_+_is
*CAT: n
*SEM: twoRel[rel=floating_+_clamp-block_+_attachment_+_positions_+_on_+_the_+_pipe._+_guide_+_identification_+_is]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: floating_+_clamp-block_+_attachment_+_positions_+_on_+_the_+_pipe._+_guide_+_identification_+_is
*CAT: n
*SEM: twoRel[rel=floating_+_clamp-block_+_attachment_+_positions_+_on_+_the_+_pipe._+_guide_+_identification_+_is]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: floating_+_clamp-block_+_attachment_+_positions_+_on_+_the_+_pipe._+_guide_+_identification_+_is
*CAT: n
*SEM: orRel[rel=floating_+_clamp-block_+_attachment_+_positions_+_on_+_the_+_pipe._+_guide_+_identification_+_is]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimise_+_the_+_loads_+_on_+_the_+_union
*CAT: n
*SEM: unaryRel[rel=minimise_+_the_+_loads_+_on_+_the_+_union]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimise_+_the_+_loads_+_on_+_the_+_union
*CAT: n
*SEM: twoRel[rel=minimise_+_the_+_loads_+_on_+_the_+_union]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimise_+_the_+_loads_+_on_+_the_+_union
*CAT: n
*SEM: twoRel[rel=minimise_+_the_+_loads_+_on_+_the_+_union]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimise_+_the_+_loads_+_on_+_the_+_union
*CAT: n
*SEM: orRel[rel=minimise_+_the_+_loads_+_on_+_the_+_union]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 45_+__-_smallerThan_-__+_phi_+__-_smallerThan_-__+_60_-_degrees_-_
*CAT: n
*SEM: unaryRel[rel=45_+__-_smallerThan_-__+_phi_+__-_smallerThan_-__+_60_-_degrees_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 45_+__-_smallerThan_-__+_phi_+__-_smallerThan_-__+_60_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=45_+__-_smallerThan_-__+_phi_+__-_smallerThan_-__+_60_-_degrees_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 45_+__-_smallerThan_-__+_phi_+__-_smallerThan_-__+_60_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=45_+__-_smallerThan_-__+_phi_+__-_smallerThan_-__+_60_-_degrees_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 45_+__-_smallerThan_-__+_phi_+__-_smallerThan_-__+_60_-_degrees_-_
*CAT: n
*SEM: orRel[rel=45_+__-_smallerThan_-__+_phi_+__-_smallerThan_-__+_60_-_degrees_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: quick_+_release_+_fastener
*CAT: n
*SEM: unaryRel[rel=quick_+_release_+_fastener]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: quick_+_release_+_fastener
*CAT: n
*SEM: twoRel[rel=quick_+_release_+_fastener]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: quick_+_release_+_fastener
*CAT: n
*SEM: twoRel[rel=quick_+_release_+_fastener]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: quick_+_release_+_fastener
*CAT: n
*SEM: orRel[rel=quick_+_release_+_fastener]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-__+_75mm
*CAT: n
*SEM: unaryRel[rel=d_+__-_greaterThan_-__+__-_equalto_-__+_75mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-__+_75mm
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-__+_75mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-__+_75mm
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-__+_75mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-__+_75mm
*CAT: n
*SEM: orRel[rel=d_+__-_greaterThan_-__+__-_equalto_-__+_75mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings_+_passing_+_through_+_any_+_fuel_+_tank_+_boundaries
*CAT: n
*SEM: unaryRel[rel=pipe_+_routings_+_passing_+_through_+_any_+_fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings_+_passing_+_through_+_any_+_fuel_+_tank_+_boundaries
*CAT: n
*SEM: twoRel[rel=pipe_+_routings_+_passing_+_through_+_any_+_fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings_+_passing_+_through_+_any_+_fuel_+_tank_+_boundaries
*CAT: n
*SEM: twoRel[rel=pipe_+_routings_+_passing_+_through_+_any_+_fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings_+_passing_+_through_+_any_+_fuel_+_tank_+_boundaries
*CAT: n
*SEM: orRel[rel=pipe_+_routings_+_passing_+_through_+_any_+_fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: largest_+__-_opensb_-_as_+_far
*CAT: n
*SEM: unaryRel[rel=largest_+__-_opensb_-_as_+_far]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: largest_+__-_opensb_-_as_+_far
*CAT: n
*SEM: twoRel[rel=largest_+__-_opensb_-_as_+_far]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: largest_+__-_opensb_-_as_+_far
*CAT: n
*SEM: twoRel[rel=largest_+__-_opensb_-_as_+_far]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: largest_+__-_opensb_-_as_+_far
*CAT: n
*SEM: orRel[rel=largest_+__-_opensb_-_as_+_far]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: even
*CAT: n
*SEM: unaryRel[rel=even]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: even
*CAT: n
*SEM: twoRel[rel=even]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: even
*CAT: n
*SEM: twoRel[rel=even]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: even
*CAT: n
*SEM: orRel[rel=even]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_rigid
*CAT: n
*SEM: unaryRel[rel=two_+_rigid]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_rigid
*CAT: n
*SEM: twoRel[rel=two_+_rigid]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_rigid
*CAT: n
*SEM: twoRel[rel=two_+_rigid]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_rigid
*CAT: n
*SEM: orRel[rel=two_+_rigid]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier_+_at_+_the_+_connector_+_contacts_+_side_+__-_opensb_-_front_+_face_-_closesb_-__+_locating_+_pin_+_positioned_+_at_+_the_+_top
*CAT: n
*SEM: unaryRel[rel=definition_+_dossier_+_at_+_the_+_connector_+_contacts_+_side_+__-_opensb_-_front_+_face_-_closesb_-__+_locating_+_pin_+_positioned_+_at_+_the_+_top]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier_+_at_+_the_+_connector_+_contacts_+_side_+__-_opensb_-_front_+_face_-_closesb_-__+_locating_+_pin_+_positioned_+_at_+_the_+_top
*CAT: n
*SEM: twoRel[rel=definition_+_dossier_+_at_+_the_+_connector_+_contacts_+_side_+__-_opensb_-_front_+_face_-_closesb_-__+_locating_+_pin_+_positioned_+_at_+_the_+_top]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier_+_at_+_the_+_connector_+_contacts_+_side_+__-_opensb_-_front_+_face_-_closesb_-__+_locating_+_pin_+_positioned_+_at_+_the_+_top
*CAT: n
*SEM: twoRel[rel=definition_+_dossier_+_at_+_the_+_connector_+_contacts_+_side_+__-_opensb_-_front_+_face_-_closesb_-__+_locating_+_pin_+_positioned_+_at_+_the_+_top]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier_+_at_+_the_+_connector_+_contacts_+_side_+__-_opensb_-_front_+_face_-_closesb_-__+_locating_+_pin_+_positioned_+_at_+_the_+_top
*CAT: n
*SEM: orRel[rel=definition_+_dossier_+_at_+_the_+_connector_+_contacts_+_side_+__-_opensb_-_front_+_face_-_closesb_-__+_locating_+_pin_+_positioned_+_at_+_the_+_top]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887
*CAT: n
*SEM: unaryRel[rel=abs_+_0887]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887
*CAT: n
*SEM: twoRel[rel=abs_+_0887]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887
*CAT: n
*SEM: twoRel[rel=abs_+_0887]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887
*CAT: n
*SEM: orRel[rel=abs_+_0887]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: longer_+_2m
*CAT: n
*SEM: unaryRel[rel=longer_+_2m]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: longer_+_2m
*CAT: n
*SEM: twoRel[rel=longer_+_2m]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: longer_+_2m
*CAT: n
*SEM: twoRel[rel=longer_+_2m]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: longer_+_2m
*CAT: n
*SEM: orRel[rel=longer_+_2m]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_circular_+_receptable
*CAT: n
*SEM: unaryRel[rel=unused_+_circular_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_circular_+_receptable
*CAT: n
*SEM: twoRel[rel=unused_+_circular_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_circular_+_receptable
*CAT: n
*SEM: twoRel[rel=unused_+_circular_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_circular_+_receptable
*CAT: n
*SEM: orRel[rel=unused_+_circular_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diode_+_blocks_+__-_opensb_-_vd_-_closesb_-_or_+_relays
*CAT: n
*SEM: unaryRel[rel=diode_+_blocks_+__-_opensb_-_vd_-_closesb_-_or_+_relays]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diode_+_blocks_+__-_opensb_-_vd_-_closesb_-_or_+_relays
*CAT: n
*SEM: twoRel[rel=diode_+_blocks_+__-_opensb_-_vd_-_closesb_-_or_+_relays]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diode_+_blocks_+__-_opensb_-_vd_-_closesb_-_or_+_relays
*CAT: n
*SEM: twoRel[rel=diode_+_blocks_+__-_opensb_-_vd_-_closesb_-_or_+_relays]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diode_+_blocks_+__-_opensb_-_vd_-_closesb_-_or_+_relays
*CAT: n
*SEM: orRel[rel=diode_+_blocks_+__-_opensb_-_vd_-_closesb_-_or_+_relays]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_maintenance_+_workload
*CAT: n
*SEM: unaryRel[rel=high_+_maintenance_+_workload]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_maintenance_+_workload
*CAT: n
*SEM: twoRel[rel=high_+_maintenance_+_workload]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_maintenance_+_workload
*CAT: n
*SEM: twoRel[rel=high_+_maintenance_+_workload]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_maintenance_+_workload
*CAT: n
*SEM: orRel[rel=high_+_maintenance_+_workload]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight
*CAT: n
*SEM: unaryRel[rel=straight]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight
*CAT: n
*SEM: twoRel[rel=straight]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight
*CAT: n
*SEM: twoRel[rel=straight]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight
*CAT: n
*SEM: orRel[rel=straight]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier_+_describing_+_stection_+_of_+_harness
*CAT: n
*SEM: unaryRel[rel=definition_+_dossier_+_describing_+_stection_+_of_+_harness]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier_+_describing_+_stection_+_of_+_harness
*CAT: n
*SEM: twoRel[rel=definition_+_dossier_+_describing_+_stection_+_of_+_harness]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier_+_describing_+_stection_+_of_+_harness
*CAT: n
*SEM: twoRel[rel=definition_+_dossier_+_describing_+_stection_+_of_+_harness]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier_+_describing_+_stection_+_of_+_harness
*CAT: n
*SEM: orRel[rel=definition_+_dossier_+_describing_+_stection_+_of_+_harness]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_areas
*CAT: n
*SEM: unaryRel[rel=specific_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_areas
*CAT: n
*SEM: twoRel[rel=specific_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_areas
*CAT: n
*SEM: twoRel[rel=specific_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_areas
*CAT: n
*SEM: orRel[rel=specific_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_insulation_+_tightness
*CAT: n
*SEM: unaryRel[rel=ensure_+_insulation_+_tightness]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_insulation_+_tightness
*CAT: n
*SEM: twoRel[rel=ensure_+_insulation_+_tightness]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_insulation_+_tightness
*CAT: n
*SEM: twoRel[rel=ensure_+_insulation_+_tightness]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_insulation_+_tightness
*CAT: n
*SEM: orRel[rel=ensure_+_insulation_+_tightness]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_pipes_+_at_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=attached_+_pipes_+_at_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_pipes_+_at_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=attached_+_pipes_+_at_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_pipes_+_at_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=attached_+_pipes_+_at_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_pipes_+_at_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=attached_+_pipes_+_at_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ptfe
*CAT: n
*SEM: unaryRel[rel=ptfe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ptfe
*CAT: n
*SEM: twoRel[rel=ptfe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ptfe
*CAT: n
*SEM: twoRel[rel=ptfe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ptfe
*CAT: n
*SEM: orRel[rel=ptfe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fastener
*CAT: n
*SEM: unaryRel[rel=fastener]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fastener
*CAT: n
*SEM: twoRel[rel=fastener]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fastener
*CAT: n
*SEM: twoRel[rel=fastener]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fastener
*CAT: n
*SEM: orRel[rel=fastener]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp_+_part_+_or
*CAT: n
*SEM: unaryRel[rel=cfrp_+_part_+_or]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp_+_part_+_or
*CAT: n
*SEM: twoRel[rel=cfrp_+_part_+_or]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp_+_part_+_or
*CAT: n
*SEM: twoRel[rel=cfrp_+_part_+_or]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp_+_part_+_or
*CAT: n
*SEM: orRel[rel=cfrp_+_part_+_or]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_drip_+_loop
*CAT: n
*SEM: unaryRel[rel=ensure_+_drip_+_loop]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_drip_+_loop
*CAT: n
*SEM: twoRel[rel=ensure_+_drip_+_loop]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_drip_+_loop
*CAT: n
*SEM: twoRel[rel=ensure_+_drip_+_loop]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_drip_+_loop
*CAT: n
*SEM: orRel[rel=ensure_+_drip_+_loop]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priorty_+_a_+_back_+_shellor_+_in_+_second_+_priority_+_an_+_attachment_+_point_+_in_+_line
*CAT: n
*SEM: unaryRel[rel=first_+_priorty_+_a_+_back_+_shellor_+_in_+_second_+_priority_+_an_+_attachment_+_point_+_in_+_line]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priorty_+_a_+_back_+_shellor_+_in_+_second_+_priority_+_an_+_attachment_+_point_+_in_+_line
*CAT: n
*SEM: twoRel[rel=first_+_priorty_+_a_+_back_+_shellor_+_in_+_second_+_priority_+_an_+_attachment_+_point_+_in_+_line]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priorty_+_a_+_back_+_shellor_+_in_+_second_+_priority_+_an_+_attachment_+_point_+_in_+_line
*CAT: n
*SEM: twoRel[rel=first_+_priorty_+_a_+_back_+_shellor_+_in_+_second_+_priority_+_an_+_attachment_+_point_+_in_+_line]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priorty_+_a_+_back_+_shellor_+_in_+_second_+_priority_+_an_+_attachment_+_point_+_in_+_line
*CAT: n
*SEM: orRel[rel=first_+_priorty_+_a_+_back_+_shellor_+_in_+_second_+_priority_+_an_+_attachment_+_point_+_in_+_line]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__-_equalto_-__+_10mm_-_colon_-__+_normal_+_segregation_+_rules_+_apply
*CAT: n
*SEM: unaryRel[rel=d_+__-_greaterThan_-__-_equalto_-__+_10mm_-_colon_-__+_normal_+_segregation_+_rules_+_apply]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__-_equalto_-__+_10mm_-_colon_-__+_normal_+_segregation_+_rules_+_apply
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__-_equalto_-__+_10mm_-_colon_-__+_normal_+_segregation_+_rules_+_apply]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__-_equalto_-__+_10mm_-_colon_-__+_normal_+_segregation_+_rules_+_apply
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__-_equalto_-__+_10mm_-_colon_-__+_normal_+_segregation_+_rules_+_apply]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__-_equalto_-__+_10mm_-_colon_-__+_normal_+_segregation_+_rules_+_apply
*CAT: n
*SEM: orRel[rel=d_+__-_greaterThan_-__-_equalto_-__+_10mm_-_colon_-__+_normal_+_segregation_+_rules_+_apply]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_areas_+_class_+_e
*CAT: n
*SEM: unaryRel[rel=interface_+_areas_+_class_+_e]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_areas_+_class_+_e
*CAT: n
*SEM: twoRel[rel=interface_+_areas_+_class_+_e]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_areas_+_class_+_e
*CAT: n
*SEM: twoRel[rel=interface_+_areas_+_class_+_e]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_areas_+_class_+_e
*CAT: n
*SEM: orRel[rel=interface_+_areas_+_class_+_e]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: combination
*CAT: n
*SEM: unaryRel[rel=combination]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: combination
*CAT: n
*SEM: twoRel[rel=combination]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: combination
*CAT: n
*SEM: twoRel[rel=combination]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: combination
*CAT: n
*SEM: orRel[rel=combination]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi-functional_+_label
*CAT: n
*SEM: unaryRel[rel=multi-functional_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi-functional_+_label
*CAT: n
*SEM: twoRel[rel=multi-functional_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi-functional_+_label
*CAT: n
*SEM: twoRel[rel=multi-functional_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi-functional_+_label
*CAT: n
*SEM: orRel[rel=multi-functional_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 350mm
*CAT: n
*SEM: unaryRel[rel=350mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 350mm
*CAT: n
*SEM: twoRel[rel=350mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 350mm
*CAT: n
*SEM: twoRel[rel=350mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 350mm
*CAT: n
*SEM: orRel[rel=350mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+__-_opensb_-_vs_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=virtual_+_splice_+__-_opensb_-_vs_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+__-_opensb_-_vs_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=virtual_+_splice_+__-_opensb_-_vs_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+__-_opensb_-_vs_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=virtual_+_splice_+__-_opensb_-_vs_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+__-_opensb_-_vs_-_closesb_-_
*CAT: n
*SEM: orRel[rel=virtual_+_splice_+__-_opensb_-_vs_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4s_-_backslash_-_5s
*CAT: n
*SEM: unaryRel[rel=4s_-_backslash_-_5s]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4s_-_backslash_-_5s
*CAT: n
*SEM: twoRel[rel=4s_-_backslash_-_5s]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4s_-_backslash_-_5s
*CAT: n
*SEM: twoRel[rel=4s_-_backslash_-_5s]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4s_-_backslash_-_5s
*CAT: n
*SEM: orRel[rel=4s_-_backslash_-_5s]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_obj1_a
*CAT: n
*SEM: unaryRel[rel=np_obj1_a]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_obj1_a
*CAT: n
*SEM: twoRel[rel=np_obj1_a]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_obj1_a
*CAT: n
*SEM: twoRel[rel=np_obj1_a]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_obj1_a
*CAT: n
*SEM: orRel[rel=np_obj1_a]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_table
*CAT: n
*SEM: unaryRel[rel=this_+_table]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_table
*CAT: n
*SEM: twoRel[rel=this_+_table]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_table
*CAT: n
*SEM: twoRel[rel=this_+_table]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_table
*CAT: n
*SEM: orRel[rel=this_+_table]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: partition_+_wall
*CAT: n
*SEM: unaryRel[rel=partition_+_wall]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: partition_+_wall
*CAT: n
*SEM: twoRel[rel=partition_+_wall]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: partition_+_wall
*CAT: n
*SEM: twoRel[rel=partition_+_wall]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: partition_+_wall
*CAT: n
*SEM: orRel[rel=partition_+_wall]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermocouple_+_cables_+_gauge_+_differences
*CAT: n
*SEM: unaryRel[rel=thermocouple_+_cables_+_gauge_+_differences]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermocouple_+_cables_+_gauge_+_differences
*CAT: n
*SEM: twoRel[rel=thermocouple_+_cables_+_gauge_+_differences]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermocouple_+_cables_+_gauge_+_differences
*CAT: n
*SEM: twoRel[rel=thermocouple_+_cables_+_gauge_+_differences]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermocouple_+_cables_+_gauge_+_differences
*CAT: n
*SEM: orRel[rel=thermocouple_+_cables_+_gauge_+_differences]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_d
*CAT: n
*SEM: unaryRel[rel=bundle_+_d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_d
*CAT: n
*SEM: twoRel[rel=bundle_+_d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_d
*CAT: n
*SEM: twoRel[rel=bundle_+_d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_d
*CAT: n
*SEM: orRel[rel=bundle_+_d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_be_+_group_+_togehter_+_the_+_other-route.
*CAT: n
*SEM: unaryRel[rel=not_+_be_+_group_+_togehter_+_the_+_other-route.]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_be_+_group_+_togehter_+_the_+_other-route.
*CAT: n
*SEM: twoRel[rel=not_+_be_+_group_+_togehter_+_the_+_other-route.]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_be_+_group_+_togehter_+_the_+_other-route.
*CAT: n
*SEM: twoRel[rel=not_+_be_+_group_+_togehter_+_the_+_other-route.]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_be_+_group_+_togehter_+_the_+_other-route.
*CAT: n
*SEM: orRel[rel=not_+_be_+_group_+_togehter_+_the_+_other-route.]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0_+_to_+_180_-_degrees_-__+_downwards
*CAT: n
*SEM: unaryRel[rel=0_+_to_+_180_-_degrees_-__+_downwards]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0_+_to_+_180_-_degrees_-__+_downwards
*CAT: n
*SEM: twoRel[rel=0_+_to_+_180_-_degrees_-__+_downwards]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0_+_to_+_180_-_degrees_-__+_downwards
*CAT: n
*SEM: twoRel[rel=0_+_to_+_180_-_degrees_-__+_downwards]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0_+_to_+_180_-_degrees_-__+_downwards
*CAT: n
*SEM: orRel[rel=0_+_to_+_180_-_degrees_-__+_downwards]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thickness_+__-_greaterThan_-__+__-_equalto_-_3mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=thickness_+__-_greaterThan_-__+__-_equalto_-_3mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thickness_+__-_greaterThan_-__+__-_equalto_-_3mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=thickness_+__-_greaterThan_-__+__-_equalto_-_3mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thickness_+__-_greaterThan_-__+__-_equalto_-_3mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=thickness_+__-_greaterThan_-__+__-_equalto_-_3mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thickness_+__-_greaterThan_-__+__-_equalto_-_3mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=thickness_+__-_greaterThan_-__+__-_equalto_-_3mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_mechanical_+_items_+__-_opensb_-_e.g._+_hatracks
*CAT: n
*SEM: unaryRel[rel=removable_+_mechanical_+_items_+__-_opensb_-_e.g._+_hatracks]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_mechanical_+_items_+__-_opensb_-_e.g._+_hatracks
*CAT: n
*SEM: twoRel[rel=removable_+_mechanical_+_items_+__-_opensb_-_e.g._+_hatracks]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_mechanical_+_items_+__-_opensb_-_e.g._+_hatracks
*CAT: n
*SEM: twoRel[rel=removable_+_mechanical_+_items_+__-_opensb_-_e.g._+_hatracks]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_mechanical_+_items_+__-_opensb_-_e.g._+_hatracks
*CAT: n
*SEM: orRel[rel=removable_+_mechanical_+_items_+__-_opensb_-_e.g._+_hatracks]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_to
*CAT: n
*SEM: unaryRel[rel=harness_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_to
*CAT: n
*SEM: twoRel[rel=harness_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_to
*CAT: n
*SEM: twoRel[rel=harness_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_to
*CAT: n
*SEM: orRel[rel=harness_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_p-clamp_+_in_+_vibration_+_area
*CAT: n
*SEM: unaryRel[rel=two_+_p-clamp_+_in_+_vibration_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_p-clamp_+_in_+_vibration_+_area
*CAT: n
*SEM: twoRel[rel=two_+_p-clamp_+_in_+_vibration_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_p-clamp_+_in_+_vibration_+_area
*CAT: n
*SEM: twoRel[rel=two_+_p-clamp_+_in_+_vibration_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_p-clamp_+_in_+_vibration_+_area
*CAT: n
*SEM: orRel[rel=two_+_p-clamp_+_in_+_vibration_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_condiut
*CAT: n
*SEM: unaryRel[rel=nsa935805_+_convoluted_+_condiut]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_condiut
*CAT: n
*SEM: twoRel[rel=nsa935805_+_convoluted_+_condiut]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_condiut
*CAT: n
*SEM: twoRel[rel=nsa935805_+_convoluted_+_condiut]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_condiut
*CAT: n
*SEM: orRel[rel=nsa935805_+_convoluted_+_condiut]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_crossings
*CAT: n
*SEM: unaryRel[rel=bundle_+_crossings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_crossings
*CAT: n
*SEM: twoRel[rel=bundle_+_crossings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_crossings
*CAT: n
*SEM: twoRel[rel=bundle_+_crossings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_crossings
*CAT: n
*SEM: orRel[rel=bundle_+_crossings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: particular_+_caution
*CAT: n
*SEM: unaryRel[rel=particular_+_caution]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: particular_+_caution
*CAT: n
*SEM: twoRel[rel=particular_+_caution]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: particular_+_caution
*CAT: n
*SEM: twoRel[rel=particular_+_caution]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: particular_+_caution
*CAT: n
*SEM: orRel[rel=particular_+_caution]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_is_+_clearly_+_identified
*CAT: n
*SEM: unaryRel[rel=equipment_+_is_+_clearly_+_identified]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_is_+_clearly_+_identified
*CAT: n
*SEM: twoRel[rel=equipment_+_is_+_clearly_+_identified]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_is_+_clearly_+_identified
*CAT: n
*SEM: twoRel[rel=equipment_+_is_+_clearly_+_identified]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_is_+_clearly_+_identified
*CAT: n
*SEM: orRel[rel=equipment_+_is_+_clearly_+_identified]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_object
*CAT: n
*SEM: unaryRel[rel=obstructive_+_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_object
*CAT: n
*SEM: twoRel[rel=obstructive_+_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_object
*CAT: n
*SEM: twoRel[rel=obstructive_+_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_object
*CAT: n
*SEM: orRel[rel=obstructive_+_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: outer_+_surface
*CAT: n
*SEM: unaryRel[rel=outer_+_surface]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: outer_+_surface
*CAT: n
*SEM: twoRel[rel=outer_+_surface]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: outer_+_surface
*CAT: n
*SEM: twoRel[rel=outer_+_surface]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: outer_+_surface
*CAT: n
*SEM: orRel[rel=outer_+_surface]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure
*CAT: n
*SEM: unaryRel[rel=structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure
*CAT: n
*SEM: twoRel[rel=structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure
*CAT: n
*SEM: twoRel[rel=structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure
*CAT: n
*SEM: orRel[rel=structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6_+_metres
*CAT: n
*SEM: unaryRel[rel=6_+_metres]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6_+_metres
*CAT: n
*SEM: twoRel[rel=6_+_metres]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6_+_metres
*CAT: n
*SEM: twoRel[rel=6_+_metres]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6_+_metres
*CAT: n
*SEM: orRel[rel=6_+_metres]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: average_+_pitch
*CAT: n
*SEM: unaryRel[rel=average_+_pitch]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: average_+_pitch
*CAT: n
*SEM: twoRel[rel=average_+_pitch]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: average_+_pitch
*CAT: n
*SEM: twoRel[rel=average_+_pitch]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: average_+_pitch
*CAT: n
*SEM: orRel[rel=average_+_pitch]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: independant_+_bracket
*CAT: n
*SEM: unaryRel[rel=independant_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: independant_+_bracket
*CAT: n
*SEM: twoRel[rel=independant_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: independant_+_bracket
*CAT: n
*SEM: twoRel[rel=independant_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: independant_+_bracket
*CAT: n
*SEM: orRel[rel=independant_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_devices
*CAT: n
*SEM: unaryRel[rel=attachment_+_devices]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_devices
*CAT: n
*SEM: twoRel[rel=attachment_+_devices]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_devices
*CAT: n
*SEM: twoRel[rel=attachment_+_devices]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_devices
*CAT: n
*SEM: orRel[rel=attachment_+_devices]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_clamp
*CAT: n
*SEM: unaryRel[rel=first_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_clamp
*CAT: n
*SEM: twoRel[rel=first_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_clamp
*CAT: n
*SEM: twoRel[rel=first_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_clamp
*CAT: n
*SEM: orRel[rel=first_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-__-_equalto_-__+_13mm
*CAT: n
*SEM: unaryRel[rel=25mm_-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-__-_equalto_-__+_13mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-__-_equalto_-__+_13mm
*CAT: n
*SEM: twoRel[rel=25mm_-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-__-_equalto_-__+_13mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-__-_equalto_-__+_13mm
*CAT: n
*SEM: twoRel[rel=25mm_-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-__-_equalto_-__+_13mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-__-_equalto_-__+_13mm
*CAT: n
*SEM: orRel[rel=25mm_-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-__-_equalto_-__+_13mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10_+__-_percent_-_
*CAT: n
*SEM: unaryRel[rel=10_+__-_percent_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10_+__-_percent_-_
*CAT: n
*SEM: twoRel[rel=10_+__-_percent_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10_+__-_percent_-_
*CAT: n
*SEM: twoRel[rel=10_+__-_percent_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10_+__-_percent_-_
*CAT: n
*SEM: orRel[rel=10_+__-_percent_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multicore_+_cable
*CAT: n
*SEM: unaryRel[rel=multicore_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multicore_+_cable
*CAT: n
*SEM: twoRel[rel=multicore_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multicore_+_cable
*CAT: n
*SEM: twoRel[rel=multicore_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multicore_+_cable
*CAT: n
*SEM: orRel[rel=multicore_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_brackets
*CAT: n
*SEM: unaryRel[rel=standard_+_brackets]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_brackets
*CAT: n
*SEM: twoRel[rel=standard_+_brackets]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_brackets
*CAT: n
*SEM: twoRel[rel=standard_+_brackets]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_brackets
*CAT: n
*SEM: orRel[rel=standard_+_brackets]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lead
*CAT: n
*SEM: unaryRel[rel=lead]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lead
*CAT: n
*SEM: twoRel[rel=lead]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lead
*CAT: n
*SEM: twoRel[rel=lead]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lead
*CAT: n
*SEM: orRel[rel=lead]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_in_+_case_+_of_+_thick_+_bundle
*CAT: n
*SEM: unaryRel[rel=bundle_+_in_+_case_+_of_+_thick_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_in_+_case_+_of_+_thick_+_bundle
*CAT: n
*SEM: twoRel[rel=bundle_+_in_+_case_+_of_+_thick_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_in_+_case_+_of_+_thick_+_bundle
*CAT: n
*SEM: twoRel[rel=bundle_+_in_+_case_+_of_+_thick_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_in_+_case_+_of_+_thick_+_bundle
*CAT: n
*SEM: orRel[rel=bundle_+_in_+_case_+_of_+_thick_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.t.c
*CAT: n
*SEM: unaryRel[rel=e.t.c]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.t.c
*CAT: n
*SEM: twoRel[rel=e.t.c]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.t.c
*CAT: n
*SEM: twoRel[rel=e.t.c]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.t.c
*CAT: n
*SEM: orRel[rel=e.t.c]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: three-_+_pipes_+_tee-unions_+_connections_-_colon_-__+_nut_+_asna3769_+_code_+__-_invcomma_-_w_-_invcomma_-__+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_straight_+_union_+_nsa855010_+_code_+__-_invcomma_-_gv_-_invcomma_-__+_tee_+_union_+_in_+_code_+_w_-_colon_-__+_as21905
*CAT: n
*SEM: unaryRel[rel=three-_+_pipes_+_tee-unions_+_connections_-_colon_-__+_nut_+_asna3769_+_code_+__-_invcomma_-_w_-_invcomma_-__+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_straight_+_union_+_nsa855010_+_code_+__-_invcomma_-_gv_-_invcomma_-__+_tee_+_union_+_in_+_code_+_w_-_colon_-__+_as21905]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: three-_+_pipes_+_tee-unions_+_connections_-_colon_-__+_nut_+_asna3769_+_code_+__-_invcomma_-_w_-_invcomma_-__+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_straight_+_union_+_nsa855010_+_code_+__-_invcomma_-_gv_-_invcomma_-__+_tee_+_union_+_in_+_code_+_w_-_colon_-__+_as21905
*CAT: n
*SEM: twoRel[rel=three-_+_pipes_+_tee-unions_+_connections_-_colon_-__+_nut_+_asna3769_+_code_+__-_invcomma_-_w_-_invcomma_-__+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_straight_+_union_+_nsa855010_+_code_+__-_invcomma_-_gv_-_invcomma_-__+_tee_+_union_+_in_+_code_+_w_-_colon_-__+_as21905]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: three-_+_pipes_+_tee-unions_+_connections_-_colon_-__+_nut_+_asna3769_+_code_+__-_invcomma_-_w_-_invcomma_-__+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_straight_+_union_+_nsa855010_+_code_+__-_invcomma_-_gv_-_invcomma_-__+_tee_+_union_+_in_+_code_+_w_-_colon_-__+_as21905
*CAT: n
*SEM: twoRel[rel=three-_+_pipes_+_tee-unions_+_connections_-_colon_-__+_nut_+_asna3769_+_code_+__-_invcomma_-_w_-_invcomma_-__+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_straight_+_union_+_nsa855010_+_code_+__-_invcomma_-_gv_-_invcomma_-__+_tee_+_union_+_in_+_code_+_w_-_colon_-__+_as21905]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: three-_+_pipes_+_tee-unions_+_connections_-_colon_-__+_nut_+_asna3769_+_code_+__-_invcomma_-_w_-_invcomma_-__+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_straight_+_union_+_nsa855010_+_code_+__-_invcomma_-_gv_-_invcomma_-__+_tee_+_union_+_in_+_code_+_w_-_colon_-__+_as21905
*CAT: n
*SEM: orRel[rel=three-_+_pipes_+_tee-unions_+_connections_-_colon_-__+_nut_+_asna3769_+_code_+__-_invcomma_-_w_-_invcomma_-__+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_straight_+_union_+_nsa855010_+_code_+__-_invcomma_-_gv_-_invcomma_-__+_tee_+_union_+_in_+_code_+_w_-_colon_-__+_as21905]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_space
*CAT: n
*SEM: unaryRel[rel=sufficient_+_space]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_space
*CAT: n
*SEM: twoRel[rel=sufficient_+_space]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_space
*CAT: n
*SEM: twoRel[rel=sufficient_+_space]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_space
*CAT: n
*SEM: orRel[rel=sufficient_+_space]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thickness
*CAT: n
*SEM: unaryRel[rel=thickness]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thickness
*CAT: n
*SEM: twoRel[rel=thickness]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thickness
*CAT: n
*SEM: twoRel[rel=thickness]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thickness
*CAT: n
*SEM: orRel[rel=thickness]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: can_+_guarantee_+_a_+_constant_+_clearance
*CAT: n
*SEM: unaryRel[rel=can_+_guarantee_+_a_+_constant_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: can_+_guarantee_+_a_+_constant_+_clearance
*CAT: n
*SEM: twoRel[rel=can_+_guarantee_+_a_+_constant_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: can_+_guarantee_+_a_+_constant_+_clearance
*CAT: n
*SEM: twoRel[rel=can_+_guarantee_+_a_+_constant_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: can_+_guarantee_+_a_+_constant_+_clearance
*CAT: n
*SEM: orRel[rel=can_+_guarantee_+_a_+_constant_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 30mm_+_each_+_end_+__-_opensb_-_for_+_1_+_repair_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=30mm_+_each_+_end_+__-_opensb_-_for_+_1_+_repair_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 30mm_+_each_+_end_+__-_opensb_-_for_+_1_+_repair_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=30mm_+_each_+_end_+__-_opensb_-_for_+_1_+_repair_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 30mm_+_each_+_end_+__-_opensb_-_for_+_1_+_repair_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=30mm_+_each_+_end_+__-_opensb_-_for_+_1_+_repair_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 30mm_+_each_+_end_+__-_opensb_-_for_+_1_+_repair_-_closesb_-_
*CAT: n
*SEM: orRel[rel=30mm_+_each_+_end_+__-_opensb_-_for_+_1_+_repair_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fireresistant_+_attachment_+_device
*CAT: n
*SEM: unaryRel[rel=fireresistant_+_attachment_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fireresistant_+_attachment_+_device
*CAT: n
*SEM: twoRel[rel=fireresistant_+_attachment_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fireresistant_+_attachment_+_device
*CAT: n
*SEM: twoRel[rel=fireresistant_+_attachment_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fireresistant_+_attachment_+_device
*CAT: n
*SEM: orRel[rel=fireresistant_+_attachment_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then_+_the_+_socket_+_contact_+_no.1
*CAT: n
*SEM: unaryRel[rel=then_+_the_+_socket_+_contact_+_no.1]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then_+_the_+_socket_+_contact_+_no.1
*CAT: n
*SEM: twoRel[rel=then_+_the_+_socket_+_contact_+_no.1]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then_+_the_+_socket_+_contact_+_no.1
*CAT: n
*SEM: twoRel[rel=then_+_the_+_socket_+_contact_+_no.1]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then_+_the_+_socket_+_contact_+_no.1
*CAT: n
*SEM: orRel[rel=then_+_the_+_socket_+_contact_+_no.1]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nozzle_+_level
*CAT: n
*SEM: unaryRel[rel=nozzle_+_level]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nozzle_+_level
*CAT: n
*SEM: twoRel[rel=nozzle_+_level]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nozzle_+_level
*CAT: n
*SEM: twoRel[rel=nozzle_+_level]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nozzle_+_level
*CAT: n
*SEM: orRel[rel=nozzle_+_level]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: switch_+_guard
*CAT: n
*SEM: unaryRel[rel=switch_+_guard]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: switch_+_guard
*CAT: n
*SEM: twoRel[rel=switch_+_guard]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: switch_+_guard
*CAT: n
*SEM: twoRel[rel=switch_+_guard]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: switch_+_guard
*CAT: n
*SEM: orRel[rel=switch_+_guard]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_plane_-_colon_-__+_0.625_+_inches_+__-_opensb_-_15.875mm_-_closesb_-__+_straight
*CAT: n
*SEM: unaryRel[rel=same_+_plane_-_colon_-__+_0.625_+_inches_+__-_opensb_-_15.875mm_-_closesb_-__+_straight]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_plane_-_colon_-__+_0.625_+_inches_+__-_opensb_-_15.875mm_-_closesb_-__+_straight
*CAT: n
*SEM: twoRel[rel=same_+_plane_-_colon_-__+_0.625_+_inches_+__-_opensb_-_15.875mm_-_closesb_-__+_straight]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_plane_-_colon_-__+_0.625_+_inches_+__-_opensb_-_15.875mm_-_closesb_-__+_straight
*CAT: n
*SEM: twoRel[rel=same_+_plane_-_colon_-__+_0.625_+_inches_+__-_opensb_-_15.875mm_-_closesb_-__+_straight]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_plane_-_colon_-__+_0.625_+_inches_+__-_opensb_-_15.875mm_-_closesb_-__+_straight
*CAT: n
*SEM: orRel[rel=same_+_plane_-_colon_-__+_0.625_+_inches_+__-_opensb_-_15.875mm_-_closesb_-__+_straight]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: side
*CAT: n
*SEM: unaryRel[rel=side]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: side
*CAT: n
*SEM: twoRel[rel=side]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: side
*CAT: n
*SEM: twoRel[rel=side]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: side
*CAT: n
*SEM: orRel[rel=side]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: areas
*CAT: n
*SEM: unaryRel[rel=areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: areas
*CAT: n
*SEM: twoRel[rel=areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: areas
*CAT: n
*SEM: twoRel[rel=areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: areas
*CAT: n
*SEM: orRel[rel=areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516cbd_+_clamp
*CAT: n
*SEM: unaryRel[rel=nsa5516cbd_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516cbd_+_clamp
*CAT: n
*SEM: twoRel[rel=nsa5516cbd_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516cbd_+_clamp
*CAT: n
*SEM: twoRel[rel=nsa5516cbd_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516cbd_+_clamp
*CAT: n
*SEM: orRel[rel=nsa5516cbd_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_lengths
*CAT: n
*SEM: unaryRel[rel=different_+_lengths]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_lengths
*CAT: n
*SEM: twoRel[rel=different_+_lengths]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_lengths
*CAT: n
*SEM: twoRel[rel=different_+_lengths]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_lengths
*CAT: n
*SEM: orRel[rel=different_+_lengths]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: apllication
*CAT: n
*SEM: unaryRel[rel=apllication]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: apllication
*CAT: n
*SEM: twoRel[rel=apllication]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: apllication
*CAT: n
*SEM: twoRel[rel=apllication]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: apllication
*CAT: n
*SEM: orRel[rel=apllication]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_hose_+_bend_+_radius_+_rule_+_to
*CAT: n
*SEM: unaryRel[rel=minimum_+_hose_+_bend_+_radius_+_rule_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_hose_+_bend_+_radius_+_rule_+_to
*CAT: n
*SEM: twoRel[rel=minimum_+_hose_+_bend_+_radius_+_rule_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_hose_+_bend_+_radius_+_rule_+_to
*CAT: n
*SEM: twoRel[rel=minimum_+_hose_+_bend_+_radius_+_rule_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_hose_+_bend_+_radius_+_rule_+_to
*CAT: n
*SEM: orRel[rel=minimum_+_hose_+_bend_+_radius_+_rule_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink
*CAT: n
*SEM: unaryRel[rel=pink]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink
*CAT: n
*SEM: twoRel[rel=pink]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink
*CAT: n
*SEM: twoRel[rel=pink]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink
*CAT: n
*SEM: orRel[rel=pink]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurited_+_areas
*CAT: n
*SEM: unaryRel[rel=unpressurited_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurited_+_areas
*CAT: n
*SEM: twoRel[rel=unpressurited_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurited_+_areas
*CAT: n
*SEM: twoRel[rel=unpressurited_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurited_+_areas
*CAT: n
*SEM: orRel[rel=unpressurited_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support
*CAT: n
*SEM: unaryRel[rel=v-support]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support
*CAT: n
*SEM: twoRel[rel=v-support]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support
*CAT: n
*SEM: twoRel[rel=v-support]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support
*CAT: n
*SEM: orRel[rel=v-support]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_smallerThan_-__-_equalto_-__+_50mm_+_away_+_fromfire_+_seal
*CAT: n
*SEM: unaryRel[rel=d_-_smallerThan_-__-_equalto_-__+_50mm_+_away_+_fromfire_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_smallerThan_-__-_equalto_-__+_50mm_+_away_+_fromfire_+_seal
*CAT: n
*SEM: twoRel[rel=d_-_smallerThan_-__-_equalto_-__+_50mm_+_away_+_fromfire_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_smallerThan_-__-_equalto_-__+_50mm_+_away_+_fromfire_+_seal
*CAT: n
*SEM: twoRel[rel=d_-_smallerThan_-__-_equalto_-__+_50mm_+_away_+_fromfire_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_smallerThan_-__-_equalto_-__+_50mm_+_away_+_fromfire_+_seal
*CAT: n
*SEM: orRel[rel=d_-_smallerThan_-__-_equalto_-__+_50mm_+_away_+_fromfire_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_center_+_which_+_are_+_non_+_loosable
*CAT: n
*SEM: unaryRel[rel=power_+_center_+_which_+_are_+_non_+_loosable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_center_+_which_+_are_+_non_+_loosable
*CAT: n
*SEM: twoRel[rel=power_+_center_+_which_+_are_+_non_+_loosable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_center_+_which_+_are_+_non_+_loosable
*CAT: n
*SEM: twoRel[rel=power_+_center_+_which_+_are_+_non_+_loosable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_center_+_which_+_are_+_non_+_loosable
*CAT: n
*SEM: orRel[rel=power_+_center_+_which_+_are_+_non_+_loosable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system_+_in_+_f-dp-29-7.2.2-0007-0001-a_+__-_backslash_-__+_sisd_par_1280
*CAT: n
*SEM: unaryRel[rel=bleed_+_air_+_system_+_in_+_f-dp-29-7.2.2-0007-0001-a_+__-_backslash_-__+_sisd_par_1280]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system_+_in_+_f-dp-29-7.2.2-0007-0001-a_+__-_backslash_-__+_sisd_par_1280
*CAT: n
*SEM: twoRel[rel=bleed_+_air_+_system_+_in_+_f-dp-29-7.2.2-0007-0001-a_+__-_backslash_-__+_sisd_par_1280]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system_+_in_+_f-dp-29-7.2.2-0007-0001-a_+__-_backslash_-__+_sisd_par_1280
*CAT: n
*SEM: twoRel[rel=bleed_+_air_+_system_+_in_+_f-dp-29-7.2.2-0007-0001-a_+__-_backslash_-__+_sisd_par_1280]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system_+_in_+_f-dp-29-7.2.2-0007-0001-a_+__-_backslash_-__+_sisd_par_1280
*CAT: n
*SEM: orRel[rel=bleed_+_air_+_system_+_in_+_f-dp-29-7.2.2-0007-0001-a_+__-_backslash_-__+_sisd_par_1280]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_in_+_pink_+_color
*CAT: n
*SEM: unaryRel[rel=nsa_+_937201_+_identification_+_sleeve_+_in_+_pink_+_color]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_in_+_pink_+_color
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve_+_in_+_pink_+_color]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_in_+_pink_+_color
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve_+_in_+_pink_+_color]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_in_+_pink_+_color
*CAT: n
*SEM: orRel[rel=nsa_+_937201_+_identification_+_sleeve_+_in_+_pink_+_color]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: requirements_+_dp_92_7.2.3_2356-2362
*CAT: n
*SEM: unaryRel[rel=requirements_+_dp_92_7.2.3_2356-2362]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: requirements_+_dp_92_7.2.3_2356-2362
*CAT: n
*SEM: twoRel[rel=requirements_+_dp_92_7.2.3_2356-2362]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: requirements_+_dp_92_7.2.3_2356-2362
*CAT: n
*SEM: twoRel[rel=requirements_+_dp_92_7.2.3_2356-2362]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: requirements_+_dp_92_7.2.3_2356-2362
*CAT: n
*SEM: orRel[rel=requirements_+_dp_92_7.2.3_2356-2362]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation_+_tightness
*CAT: n
*SEM: unaryRel[rel=insulation_+_tightness]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation_+_tightness
*CAT: n
*SEM: twoRel[rel=insulation_+_tightness]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation_+_tightness
*CAT: n
*SEM: twoRel[rel=insulation_+_tightness]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation_+_tightness
*CAT: n
*SEM: orRel[rel=insulation_+_tightness]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interrupted_+_closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve_+_at_+_nsa_+_934710_+_pressure_+_seal
*CAT: n
*SEM: unaryRel[rel=interrupted_+_closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve_+_at_+_nsa_+_934710_+_pressure_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interrupted_+_closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve_+_at_+_nsa_+_934710_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=interrupted_+_closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve_+_at_+_nsa_+_934710_+_pressure_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interrupted_+_closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve_+_at_+_nsa_+_934710_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=interrupted_+_closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve_+_at_+_nsa_+_934710_+_pressure_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interrupted_+_closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve_+_at_+_nsa_+_934710_+_pressure_+_seal
*CAT: n
*SEM: orRel[rel=interrupted_+_closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve_+_at_+_nsa_+_934710_+_pressure_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: the_+_pipes_+_which
*CAT: n
*SEM: unaryRel[rel=the_+_pipes_+_which]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: the_+_pipes_+_which
*CAT: n
*SEM: twoRel[rel=the_+_pipes_+_which]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: the_+_pipes_+_which
*CAT: n
*SEM: twoRel[rel=the_+_pipes_+_which]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: the_+_pipes_+_which
*CAT: n
*SEM: orRel[rel=the_+_pipes_+_which]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support
*CAT: n
*SEM: unaryRel[rel=v-support]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support
*CAT: n
*SEM: twoRel[rel=v-support]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support
*CAT: n
*SEM: twoRel[rel=v-support]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support
*CAT: n
*SEM: orRel[rel=v-support]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_not_+_less_+_than_+_10_+_mm_+_unless_+_otherwise_+_specified._+_in_+_some_+_cases_+_clearance_+_can_+_be_+_smaller_-_colon_-_
*CAT: n
*SEM: unaryRel[rel=fixed_+_structure_+_not_+_less_+_than_+_10_+_mm_+_unless_+_otherwise_+_specified._+_in_+_some_+_cases_+_clearance_+_can_+_be_+_smaller_-_colon_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_not_+_less_+_than_+_10_+_mm_+_unless_+_otherwise_+_specified._+_in_+_some_+_cases_+_clearance_+_can_+_be_+_smaller_-_colon_-_
*CAT: n
*SEM: twoRel[rel=fixed_+_structure_+_not_+_less_+_than_+_10_+_mm_+_unless_+_otherwise_+_specified._+_in_+_some_+_cases_+_clearance_+_can_+_be_+_smaller_-_colon_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_not_+_less_+_than_+_10_+_mm_+_unless_+_otherwise_+_specified._+_in_+_some_+_cases_+_clearance_+_can_+_be_+_smaller_-_colon_-_
*CAT: n
*SEM: twoRel[rel=fixed_+_structure_+_not_+_less_+_than_+_10_+_mm_+_unless_+_otherwise_+_specified._+_in_+_some_+_cases_+_clearance_+_can_+_be_+_smaller_-_colon_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_not_+_less_+_than_+_10_+_mm_+_unless_+_otherwise_+_specified._+_in_+_some_+_cases_+_clearance_+_can_+_be_+_smaller_-_colon_-_
*CAT: n
*SEM: orRel[rel=fixed_+_structure_+_not_+_less_+_than_+_10_+_mm_+_unless_+_otherwise_+_specified._+_in_+_some_+_cases_+_clearance_+_can_+_be_+_smaller_-_colon_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_wires
*CAT: n
*SEM: unaryRel[rel=2_+_wires]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_wires
*CAT: n
*SEM: twoRel[rel=2_+_wires]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_wires
*CAT: n
*SEM: twoRel[rel=2_+_wires]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_wires
*CAT: n
*SEM: orRel[rel=2_+_wires]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passenger_+_entertainment_+_music
*CAT: n
*SEM: unaryRel[rel=passenger_+_entertainment_+_music]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passenger_+_entertainment_+_music
*CAT: n
*SEM: twoRel[rel=passenger_+_entertainment_+_music]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passenger_+_entertainment_+_music
*CAT: n
*SEM: twoRel[rel=passenger_+_entertainment_+_music]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passenger_+_entertainment_+_music
*CAT: n
*SEM: orRel[rel=passenger_+_entertainment_+_music]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-_150mm
*CAT: n
*SEM: unaryRel[rel=d_-_greaterThan_-__-_equalto_-_150mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-_150mm
*CAT: n
*SEM: twoRel[rel=d_-_greaterThan_-__-_equalto_-_150mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-_150mm
*CAT: n
*SEM: twoRel[rel=d_-_greaterThan_-__-_equalto_-_150mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-_150mm
*CAT: n
*SEM: orRel[rel=d_-_greaterThan_-__-_equalto_-_150mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_-_backslash_-_section
*CAT: n
*SEM: unaryRel[rel=diameter_-_backslash_-_section]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_-_backslash_-_section
*CAT: n
*SEM: twoRel[rel=diameter_-_backslash_-_section]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_-_backslash_-_section
*CAT: n
*SEM: twoRel[rel=diameter_-_backslash_-_section]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_-_backslash_-_section
*CAT: n
*SEM: orRel[rel=diameter_-_backslash_-_section]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer_+_to
*CAT: n
*SEM: unaryRel[rel=stringer_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer_+_to
*CAT: n
*SEM: twoRel[rel=stringer_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer_+_to
*CAT: n
*SEM: twoRel[rel=stringer_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer_+_to
*CAT: n
*SEM: orRel[rel=stringer_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5_+_thread_+_after_+_tightening
*CAT: n
*SEM: unaryRel[rel=5_+_thread_+_after_+_tightening]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5_+_thread_+_after_+_tightening
*CAT: n
*SEM: twoRel[rel=5_+_thread_+_after_+_tightening]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5_+_thread_+_after_+_tightening
*CAT: n
*SEM: twoRel[rel=5_+_thread_+_after_+_tightening]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5_+_thread_+_after_+_tightening
*CAT: n
*SEM: orRel[rel=5_+_thread_+_after_+_tightening]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alluminium_+_cables_+__-_backslash_-__+_wires
*CAT: n
*SEM: unaryRel[rel=alluminium_+_cables_+__-_backslash_-__+_wires]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alluminium_+_cables_+__-_backslash_-__+_wires
*CAT: n
*SEM: twoRel[rel=alluminium_+_cables_+__-_backslash_-__+_wires]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alluminium_+_cables_+__-_backslash_-__+_wires
*CAT: n
*SEM: twoRel[rel=alluminium_+_cables_+__-_backslash_-__+_wires]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alluminium_+_cables_+__-_backslash_-__+_wires
*CAT: n
*SEM: orRel[rel=alluminium_+_cables_+__-_backslash_-__+_wires]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: beginning_+_of_+_a_+_pipe_+_bend_+_of_+_at_+_least_+_10mm
*CAT: n
*SEM: unaryRel[rel=beginning_+_of_+_a_+_pipe_+_bend_+_of_+_at_+_least_+_10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: beginning_+_of_+_a_+_pipe_+_bend_+_of_+_at_+_least_+_10mm
*CAT: n
*SEM: twoRel[rel=beginning_+_of_+_a_+_pipe_+_bend_+_of_+_at_+_least_+_10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: beginning_+_of_+_a_+_pipe_+_bend_+_of_+_at_+_least_+_10mm
*CAT: n
*SEM: twoRel[rel=beginning_+_of_+_a_+_pipe_+_bend_+_of_+_at_+_least_+_10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: beginning_+_of_+_a_+_pipe_+_bend_+_of_+_at_+_least_+_10mm
*CAT: n
*SEM: orRel[rel=beginning_+_of_+_a_+_pipe_+_bend_+_of_+_at_+_least_+_10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ice
*CAT: n
*SEM: unaryRel[rel=ice]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ice
*CAT: n
*SEM: twoRel[rel=ice]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ice
*CAT: n
*SEM: twoRel[rel=ice]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ice
*CAT: n
*SEM: orRel[rel=ice]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_system_+_routings
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_system_+_routings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_system_+_routings
*CAT: n
*SEM: twoRel[rel=hydraulic_+_system_+_routings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_system_+_routings
*CAT: n
*SEM: twoRel[rel=hydraulic_+_system_+_routings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_system_+_routings
*CAT: n
*SEM: orRel[rel=hydraulic_+_system_+_routings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_3_+_of_+_figure_+_below
*CAT: n
*SEM: unaryRel[rel=case_+_3_+_of_+_figure_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_3_+_of_+_figure_+_below
*CAT: n
*SEM: twoRel[rel=case_+_3_+_of_+_figure_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_3_+_of_+_figure_+_below
*CAT: n
*SEM: twoRel[rel=case_+_3_+_of_+_figure_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_3_+_of_+_figure_+_below
*CAT: n
*SEM: orRel[rel=case_+_3_+_of_+_figure_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings_+_through_+_all_+_other_+_tank_+_ribs_+__-_opensb_-_
*CAT: n
*SEM: unaryRel[rel=pipe_+_routings_+_through_+_all_+_other_+_tank_+_ribs_+__-_opensb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings_+_through_+_all_+_other_+_tank_+_ribs_+__-_opensb_-_
*CAT: n
*SEM: twoRel[rel=pipe_+_routings_+_through_+_all_+_other_+_tank_+_ribs_+__-_opensb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings_+_through_+_all_+_other_+_tank_+_ribs_+__-_opensb_-_
*CAT: n
*SEM: twoRel[rel=pipe_+_routings_+_through_+_all_+_other_+_tank_+_ribs_+__-_opensb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings_+_through_+_all_+_other_+_tank_+_ribs_+__-_opensb_-_
*CAT: n
*SEM: orRel[rel=pipe_+_routings_+_through_+_all_+_other_+_tank_+_ribs_+__-_opensb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_zone_+_connection._+__-_opensb_-_5000psi_-_closesb_-_or_+_abs2018_+_low_+_pressure_+_lines
*CAT: n
*SEM: unaryRel[rel=fuel_+_zone_+_connection._+__-_opensb_-_5000psi_-_closesb_-_or_+_abs2018_+_low_+_pressure_+_lines]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_zone_+_connection._+__-_opensb_-_5000psi_-_closesb_-_or_+_abs2018_+_low_+_pressure_+_lines
*CAT: n
*SEM: twoRel[rel=fuel_+_zone_+_connection._+__-_opensb_-_5000psi_-_closesb_-_or_+_abs2018_+_low_+_pressure_+_lines]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_zone_+_connection._+__-_opensb_-_5000psi_-_closesb_-_or_+_abs2018_+_low_+_pressure_+_lines
*CAT: n
*SEM: twoRel[rel=fuel_+_zone_+_connection._+__-_opensb_-_5000psi_-_closesb_-_or_+_abs2018_+_low_+_pressure_+_lines]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_zone_+_connection._+__-_opensb_-_5000psi_-_closesb_-_or_+_abs2018_+_low_+_pressure_+_lines
*CAT: n
*SEM: orRel[rel=fuel_+_zone_+_connection._+__-_opensb_-_5000psi_-_closesb_-_or_+_abs2018_+_low_+_pressure_+_lines]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protected_+_bundle
*CAT: n
*SEM: unaryRel[rel=protected_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protected_+_bundle
*CAT: n
*SEM: twoRel[rel=protected_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protected_+_bundle
*CAT: n
*SEM: twoRel[rel=protected_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protected_+_bundle
*CAT: n
*SEM: orRel[rel=protected_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_20_-_percent_-__+_of_+_thebundle_+_section
*CAT: n
*SEM: unaryRel[rel=least_+_20_-_percent_-__+_of_+_thebundle_+_section]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_20_-_percent_-__+_of_+_thebundle_+_section
*CAT: n
*SEM: twoRel[rel=least_+_20_-_percent_-__+_of_+_thebundle_+_section]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_20_-_percent_-__+_of_+_thebundle_+_section
*CAT: n
*SEM: twoRel[rel=least_+_20_-_percent_-__+_of_+_thebundle_+_section]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_20_-_percent_-__+_of_+_thebundle_+_section
*CAT: n
*SEM: orRel[rel=least_+_20_-_percent_-__+_of_+_thebundle_+_section]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: potential_+_clogging
*CAT: n
*SEM: unaryRel[rel=potential_+_clogging]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: potential_+_clogging
*CAT: n
*SEM: twoRel[rel=potential_+_clogging]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: potential_+_clogging
*CAT: n
*SEM: twoRel[rel=potential_+_clogging]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: potential_+_clogging
*CAT: n
*SEM: orRel[rel=potential_+_clogging]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration_+_phenomenon
*CAT: n
*SEM: unaryRel[rel=vibration_+_phenomenon]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration_+_phenomenon
*CAT: n
*SEM: twoRel[rel=vibration_+_phenomenon]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration_+_phenomenon
*CAT: n
*SEM: twoRel[rel=vibration_+_phenomenon]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration_+_phenomenon
*CAT: n
*SEM: orRel[rel=vibration_+_phenomenon]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_straight_+_distance
*CAT: n
*SEM: unaryRel[rel=minimum_+_straight_+_distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_straight_+_distance
*CAT: n
*SEM: twoRel[rel=minimum_+_straight_+_distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_straight_+_distance
*CAT: n
*SEM: twoRel[rel=minimum_+_straight_+_distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_straight_+_distance
*CAT: n
*SEM: orRel[rel=minimum_+_straight_+_distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: especially
*CAT: n
*SEM: unaryRel[rel=especially]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: especially
*CAT: n
*SEM: twoRel[rel=especially]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: especially
*CAT: n
*SEM: twoRel[rel=especially]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: especially
*CAT: n
*SEM: orRel[rel=especially]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: given_+_in_+_the_+_installation_+_drawing
*CAT: n
*SEM: unaryRel[rel=given_+_in_+_the_+_installation_+_drawing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: given_+_in_+_the_+_installation_+_drawing
*CAT: n
*SEM: twoRel[rel=given_+_in_+_the_+_installation_+_drawing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: given_+_in_+_the_+_installation_+_drawing
*CAT: n
*SEM: twoRel[rel=given_+_in_+_the_+_installation_+_drawing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: given_+_in_+_the_+_installation_+_drawing
*CAT: n
*SEM: orRel[rel=given_+_in_+_the_+_installation_+_drawing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluid_+_leackage_+_zones_+_class_+_aor
*CAT: n
*SEM: unaryRel[rel=flammable_+_fluid_+_leackage_+_zones_+_class_+_aor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluid_+_leackage_+_zones_+_class_+_aor
*CAT: n
*SEM: twoRel[rel=flammable_+_fluid_+_leackage_+_zones_+_class_+_aor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluid_+_leackage_+_zones_+_class_+_aor
*CAT: n
*SEM: twoRel[rel=flammable_+_fluid_+_leackage_+_zones_+_class_+_aor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluid_+_leackage_+_zones_+_class_+_aor
*CAT: n
*SEM: orRel[rel=flammable_+_fluid_+_leackage_+_zones_+_class_+_aor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_vu_+_unsealed
*CAT: n
*SEM: unaryRel[rel=large_+_vu_+_unsealed]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_vu_+_unsealed
*CAT: n
*SEM: twoRel[rel=large_+_vu_+_unsealed]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_vu_+_unsealed
*CAT: n
*SEM: twoRel[rel=large_+_vu_+_unsealed]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_vu_+_unsealed
*CAT: n
*SEM: orRel[rel=large_+_vu_+_unsealed]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_a_+_second_+_intermediate_+_bracket
*CAT: n
*SEM: unaryRel[rel=to_+_a_+_second_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_a_+_second_+_intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=to_+_a_+_second_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_a_+_second_+_intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=to_+_a_+_second_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_a_+_second_+_intermediate_+_bracket
*CAT: n
*SEM: orRel[rel=to_+_a_+_second_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_identification
*CAT: n
*SEM: unaryRel[rel=asne_+_0248_+_identification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_identification
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_identification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_identification
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_identification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_identification
*CAT: n
*SEM: orRel[rel=asne_+_0248_+_identification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_less
*CAT: n
*SEM: unaryRel[rel=no_+_less]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_less
*CAT: n
*SEM: twoRel[rel=no_+_less]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_less
*CAT: n
*SEM: twoRel[rel=no_+_less]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_less
*CAT: n
*SEM: orRel[rel=no_+_less]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_attachment
*CAT: n
*SEM: unaryRel[rel=one_+_attachment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_attachment
*CAT: n
*SEM: twoRel[rel=one_+_attachment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_attachment
*CAT: n
*SEM: twoRel[rel=one_+_attachment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_attachment
*CAT: n
*SEM: orRel[rel=one_+_attachment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-fuel_+_zone_+_to
*CAT: n
*SEM: unaryRel[rel=non-fuel_+_zone_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-fuel_+_zone_+_to
*CAT: n
*SEM: twoRel[rel=non-fuel_+_zone_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-fuel_+_zone_+_to
*CAT: n
*SEM: twoRel[rel=non-fuel_+_zone_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-fuel_+_zone_+_to
*CAT: n
*SEM: orRel[rel=non-fuel_+_zone_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thick_+_bundle
*CAT: n
*SEM: unaryRel[rel=thick_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thick_+_bundle
*CAT: n
*SEM: twoRel[rel=thick_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thick_+_bundle
*CAT: n
*SEM: twoRel[rel=thick_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thick_+_bundle
*CAT: n
*SEM: orRel[rel=thick_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passernger_+_information_+_video_+_system
*CAT: n
*SEM: unaryRel[rel=passernger_+_information_+_video_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passernger_+_information_+_video_+_system
*CAT: n
*SEM: twoRel[rel=passernger_+_information_+_video_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passernger_+_information_+_video_+_system
*CAT: n
*SEM: twoRel[rel=passernger_+_information_+_video_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passernger_+_information_+_video_+_system
*CAT: n
*SEM: orRel[rel=passernger_+_information_+_video_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torque_+_wrench
*CAT: n
*SEM: unaryRel[rel=torque_+_wrench]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torque_+_wrench
*CAT: n
*SEM: twoRel[rel=torque_+_wrench]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torque_+_wrench
*CAT: n
*SEM: twoRel[rel=torque_+_wrench]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torque_+_wrench
*CAT: n
*SEM: orRel[rel=torque_+_wrench]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: compount_+_according
*CAT: n
*SEM: unaryRel[rel=compount_+_according]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: compount_+_according
*CAT: n
*SEM: twoRel[rel=compount_+_according]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: compount_+_according
*CAT: n
*SEM: twoRel[rel=compount_+_according]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: compount_+_according
*CAT: n
*SEM: orRel[rel=compount_+_according]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cres_+_steel
*CAT: n
*SEM: unaryRel[rel=cres_+_steel]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cres_+_steel
*CAT: n
*SEM: twoRel[rel=cres_+_steel]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cres_+_steel
*CAT: n
*SEM: twoRel[rel=cres_+_steel]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cres_+_steel
*CAT: n
*SEM: orRel[rel=cres_+_steel]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_vibration_+_level_+_installation_+_areas_+_in_+_a_+_maximum_+_distance_+_of_+_4_+_inches_+__-_opensb_-_101.6mm_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=high_+_vibration_+_level_+_installation_+_areas_+_in_+_a_+_maximum_+_distance_+_of_+_4_+_inches_+__-_opensb_-_101.6mm_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_vibration_+_level_+_installation_+_areas_+_in_+_a_+_maximum_+_distance_+_of_+_4_+_inches_+__-_opensb_-_101.6mm_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=high_+_vibration_+_level_+_installation_+_areas_+_in_+_a_+_maximum_+_distance_+_of_+_4_+_inches_+__-_opensb_-_101.6mm_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_vibration_+_level_+_installation_+_areas_+_in_+_a_+_maximum_+_distance_+_of_+_4_+_inches_+__-_opensb_-_101.6mm_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=high_+_vibration_+_level_+_installation_+_areas_+_in_+_a_+_maximum_+_distance_+_of_+_4_+_inches_+__-_opensb_-_101.6mm_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_vibration_+_level_+_installation_+_areas_+_in_+_a_+_maximum_+_distance_+_of_+_4_+_inches_+__-_opensb_-_101.6mm_-_closesb_-_
*CAT: n
*SEM: orRel[rel=high_+_vibration_+_level_+_installation_+_areas_+_in_+_a_+_maximum_+_distance_+_of_+_4_+_inches_+__-_opensb_-_101.6mm_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relevant_+_requirement_+__-_opensb_-_as_+_shown_+_in_+_attached_+_figure_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=relevant_+_requirement_+__-_opensb_-_as_+_shown_+_in_+_attached_+_figure_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relevant_+_requirement_+__-_opensb_-_as_+_shown_+_in_+_attached_+_figure_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=relevant_+_requirement_+__-_opensb_-_as_+_shown_+_in_+_attached_+_figure_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relevant_+_requirement_+__-_opensb_-_as_+_shown_+_in_+_attached_+_figure_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=relevant_+_requirement_+__-_opensb_-_as_+_shown_+_in_+_attached_+_figure_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relevant_+_requirement_+__-_opensb_-_as_+_shown_+_in_+_attached_+_figure_-_closesb_-_
*CAT: n
*SEM: orRel[rel=relevant_+_requirement_+__-_opensb_-_as_+_shown_+_in_+_attached_+_figure_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: existing_+_drawn_+_bracket
*CAT: n
*SEM: unaryRel[rel=existing_+_drawn_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: existing_+_drawn_+_bracket
*CAT: n
*SEM: twoRel[rel=existing_+_drawn_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: existing_+_drawn_+_bracket
*CAT: n
*SEM: twoRel[rel=existing_+_drawn_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: existing_+_drawn_+_bracket
*CAT: n
*SEM: orRel[rel=existing_+_drawn_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3739
*CAT: n
*SEM: unaryRel[rel=en3739]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3739
*CAT: n
*SEM: twoRel[rel=en3739]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3739
*CAT: n
*SEM: twoRel[rel=en3739]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3739
*CAT: n
*SEM: orRel[rel=en3739]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel-tank
*CAT: n
*SEM: unaryRel[rel=fuel-tank]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel-tank
*CAT: n
*SEM: twoRel[rel=fuel-tank]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel-tank
*CAT: n
*SEM: twoRel[rel=fuel-tank]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel-tank
*CAT: n
*SEM: orRel[rel=fuel-tank]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bold_+_head
*CAT: n
*SEM: unaryRel[rel=bold_+_head]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bold_+_head
*CAT: n
*SEM: twoRel[rel=bold_+_head]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bold_+_head
*CAT: n
*SEM: twoRel[rel=bold_+_head]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bold_+_head
*CAT: n
*SEM: orRel[rel=bold_+_head]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stainless_+_steel_+_boxes
*CAT: n
*SEM: unaryRel[rel=stainless_+_steel_+_boxes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stainless_+_steel_+_boxes
*CAT: n
*SEM: twoRel[rel=stainless_+_steel_+_boxes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stainless_+_steel_+_boxes
*CAT: n
*SEM: twoRel[rel=stainless_+_steel_+_boxes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stainless_+_steel_+_boxes
*CAT: n
*SEM: orRel[rel=stainless_+_steel_+_boxes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: split_+_conduit
*CAT: n
*SEM: unaryRel[rel=split_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: split_+_conduit
*CAT: n
*SEM: twoRel[rel=split_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: split_+_conduit
*CAT: n
*SEM: twoRel[rel=split_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: split_+_conduit
*CAT: n
*SEM: orRel[rel=split_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lines_+_running_+_in_+_parallel.or_+_at_+_all_+_times
*CAT: n
*SEM: unaryRel[rel=lines_+_running_+_in_+_parallel.or_+_at_+_all_+_times]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lines_+_running_+_in_+_parallel.or_+_at_+_all_+_times
*CAT: n
*SEM: twoRel[rel=lines_+_running_+_in_+_parallel.or_+_at_+_all_+_times]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lines_+_running_+_in_+_parallel.or_+_at_+_all_+_times
*CAT: n
*SEM: twoRel[rel=lines_+_running_+_in_+_parallel.or_+_at_+_all_+_times]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lines_+_running_+_in_+_parallel.or_+_at_+_all_+_times
*CAT: n
*SEM: orRel[rel=lines_+_running_+_in_+_parallel.or_+_at_+_all_+_times]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment
*CAT: n
*SEM: unaryRel[rel=equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment
*CAT: n
*SEM: twoRel[rel=equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment
*CAT: n
*SEM: twoRel[rel=equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment
*CAT: n
*SEM: orRel[rel=equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: compound
*CAT: n
*SEM: unaryRel[rel=compound]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: compound
*CAT: n
*SEM: twoRel[rel=compound]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: compound
*CAT: n
*SEM: twoRel[rel=compound]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: compound
*CAT: n
*SEM: orRel[rel=compound]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_protectionor_+_75_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=additional_+_protectionor_+_75_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_protectionor_+_75_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=additional_+_protectionor_+_75_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_protectionor_+_75_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=additional_+_protectionor_+_75_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_protectionor_+_75_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=additional_+_protectionor_+_75_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_protectionor_+_the_+_structure
*CAT: n
*SEM: unaryRel[rel=electrical_+_protectionor_+_the_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_protectionor_+_the_+_structure
*CAT: n
*SEM: twoRel[rel=electrical_+_protectionor_+_the_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_protectionor_+_the_+_structure
*CAT: n
*SEM: twoRel[rel=electrical_+_protectionor_+_the_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_protectionor_+_the_+_structure
*CAT: n
*SEM: orRel[rel=electrical_+_protectionor_+_the_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: preventing_+_sliding
*CAT: n
*SEM: unaryRel[rel=preventing_+_sliding]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: preventing_+_sliding
*CAT: n
*SEM: twoRel[rel=preventing_+_sliding]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: preventing_+_sliding
*CAT: n
*SEM: twoRel[rel=preventing_+_sliding]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: preventing_+_sliding
*CAT: n
*SEM: orRel[rel=preventing_+_sliding]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detection_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=detection_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detection_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=detection_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detection_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=detection_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detection_-_closesb_-_
*CAT: n
*SEM: orRel[rel=detection_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rod
*CAT: n
*SEM: unaryRel[rel=rod]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rod
*CAT: n
*SEM: twoRel[rel=rod]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rod
*CAT: n
*SEM: twoRel[rel=rod]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rod
*CAT: n
*SEM: orRel[rel=rod]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_connection
*CAT: n
*SEM: unaryRel[rel=zone_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_connection
*CAT: n
*SEM: twoRel[rel=zone_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_connection
*CAT: n
*SEM: twoRel[rel=zone_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_connection
*CAT: n
*SEM: orRel[rel=zone_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end
*CAT: n
*SEM: unaryRel[rel=end]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end
*CAT: n
*SEM: twoRel[rel=end]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end
*CAT: n
*SEM: twoRel[rel=end]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end
*CAT: n
*SEM: orRel[rel=end]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_like_+_in_+_the_+_figure_+_below
*CAT: n
*SEM: unaryRel[rel=structure_+_like_+_in_+_the_+_figure_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_like_+_in_+_the_+_figure_+_below
*CAT: n
*SEM: twoRel[rel=structure_+_like_+_in_+_the_+_figure_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_like_+_in_+_the_+_figure_+_below
*CAT: n
*SEM: twoRel[rel=structure_+_like_+_in_+_the_+_figure_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_like_+_in_+_the_+_figure_+_below
*CAT: n
*SEM: orRel[rel=structure_+_like_+_in_+_the_+_figure_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5515_+_in_+_carbon_+_tank
*CAT: n
*SEM: unaryRel[rel=nsa_+_5515_+_in_+_carbon_+_tank]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5515_+_in_+_carbon_+_tank
*CAT: n
*SEM: twoRel[rel=nsa_+_5515_+_in_+_carbon_+_tank]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5515_+_in_+_carbon_+_tank
*CAT: n
*SEM: twoRel[rel=nsa_+_5515_+_in_+_carbon_+_tank]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5515_+_in_+_carbon_+_tank
*CAT: n
*SEM: orRel[rel=nsa_+_5515_+_in_+_carbon_+_tank]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cables
*CAT: n
*SEM: unaryRel[rel=cables]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cables
*CAT: n
*SEM: twoRel[rel=cables]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cables
*CAT: n
*SEM: twoRel[rel=cables]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cables
*CAT: n
*SEM: orRel[rel=cables]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses
*CAT: n
*SEM: orRel[rel=flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: readable
*CAT: n
*SEM: unaryRel[rel=readable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: readable
*CAT: n
*SEM: twoRel[rel=readable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: readable
*CAT: n
*SEM: twoRel[rel=readable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: readable
*CAT: n
*SEM: orRel[rel=readable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50mm
*CAT: n
*SEM: unaryRel[rel=50mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50mm
*CAT: n
*SEM: twoRel[rel=50mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50mm
*CAT: n
*SEM: twoRel[rel=50mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50mm
*CAT: n
*SEM: orRel[rel=50mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: box
*CAT: n
*SEM: unaryRel[rel=box]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: box
*CAT: n
*SEM: twoRel[rel=box]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: box
*CAT: n
*SEM: twoRel[rel=box]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: box
*CAT: n
*SEM: orRel[rel=box]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_caps
*CAT: n
*SEM: unaryRel[rel=end_+_caps]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_caps
*CAT: n
*SEM: twoRel[rel=end_+_caps]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_caps
*CAT: n
*SEM: twoRel[rel=end_+_caps]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_caps
*CAT: n
*SEM: orRel[rel=end_+_caps]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp_+_blocks
*CAT: n
*SEM: unaryRel[rel=clamp_+_blocks]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp_+_blocks
*CAT: n
*SEM: twoRel[rel=clamp_+_blocks]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp_+_blocks
*CAT: n
*SEM: twoRel[rel=clamp_+_blocks]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp_+_blocks
*CAT: n
*SEM: orRel[rel=clamp_+_blocks]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_terminal_+_lug
*CAT: n
*SEM: unaryRel[rel=one_+_terminal_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=one_+_terminal_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=one_+_terminal_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_terminal_+_lug
*CAT: n
*SEM: orRel[rel=one_+_terminal_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 360_-_degrees_-_
*CAT: n
*SEM: unaryRel[rel=360_-_degrees_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 360_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=360_-_degrees_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 360_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=360_-_degrees_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 360_-_degrees_-_
*CAT: n
*SEM: orRel[rel=360_-_degrees_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loss
*CAT: n
*SEM: unaryRel[rel=loss]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loss
*CAT: n
*SEM: twoRel[rel=loss]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loss
*CAT: n
*SEM: twoRel[rel=loss]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loss
*CAT: n
*SEM: orRel[rel=loss]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_part
*CAT: n
*SEM: unaryRel[rel=metallic_+_part]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_part
*CAT: n
*SEM: twoRel[rel=metallic_+_part]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_part
*CAT: n
*SEM: twoRel[rel=metallic_+_part]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_part
*CAT: n
*SEM: orRel[rel=metallic_+_part]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_composite_+_structure
*CAT: n
*SEM: unaryRel[rel=on_+_composite_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_composite_+_structure
*CAT: n
*SEM: twoRel[rel=on_+_composite_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_composite_+_structure
*CAT: n
*SEM: twoRel[rel=on_+_composite_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_composite_+_structure
*CAT: n
*SEM: orRel[rel=on_+_composite_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937210_+_shrink_+_sleeve
*CAT: n
*SEM: unaryRel[rel=nsa_+_937210_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937210_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa_+_937210_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937210_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa_+_937210_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937210_+_shrink_+_sleeve
*CAT: n
*SEM: orRel[rel=nsa_+_937210_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_note
*CAT: n
*SEM: unaryRel[rel=flag_+_note]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_note
*CAT: n
*SEM: twoRel[rel=flag_+_note]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_note
*CAT: n
*SEM: twoRel[rel=flag_+_note]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_note
*CAT: n
*SEM: orRel[rel=flag_+_note]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wedge_+_type_+_support
*CAT: n
*SEM: unaryRel[rel=wedge_+_type_+_support]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wedge_+_type_+_support
*CAT: n
*SEM: twoRel[rel=wedge_+_type_+_support]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wedge_+_type_+_support
*CAT: n
*SEM: twoRel[rel=wedge_+_type_+_support]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wedge_+_type_+_support
*CAT: n
*SEM: orRel[rel=wedge_+_type_+_support]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_modification_+_kid
*CAT: n
*SEM: unaryRel[rel=unprotected_+_modification_+_kid]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_modification_+_kid
*CAT: n
*SEM: twoRel[rel=unprotected_+_modification_+_kid]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_modification_+_kid
*CAT: n
*SEM: twoRel[rel=unprotected_+_modification_+_kid]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_modification_+_kid
*CAT: n
*SEM: orRel[rel=unprotected_+_modification_+_kid]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_up_+_to_+_2.0_+_inches_+_diameter
*CAT: n
*SEM: unaryRel[rel=pipes_+_up_+_to_+_2.0_+_inches_+_diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_up_+_to_+_2.0_+_inches_+_diameter
*CAT: n
*SEM: twoRel[rel=pipes_+_up_+_to_+_2.0_+_inches_+_diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_up_+_to_+_2.0_+_inches_+_diameter
*CAT: n
*SEM: twoRel[rel=pipes_+_up_+_to_+_2.0_+_inches_+_diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_up_+_to_+_2.0_+_inches_+_diameter
*CAT: n
*SEM: orRel[rel=pipes_+_up_+_to_+_2.0_+_inches_+_diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r
*CAT: n
*SEM: unaryRel[rel=r]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r
*CAT: n
*SEM: twoRel[rel=r]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r
*CAT: n
*SEM: twoRel[rel=r]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r
*CAT: n
*SEM: orRel[rel=r]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_when
*CAT: n
*SEM: unaryRel[rel=repair_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_when
*CAT: n
*SEM: twoRel[rel=repair_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_when
*CAT: n
*SEM: twoRel[rel=repair_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_when
*CAT: n
*SEM: orRel[rel=repair_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 37mm
*CAT: n
*SEM: unaryRel[rel=37mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 37mm
*CAT: n
*SEM: twoRel[rel=37mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 37mm
*CAT: n
*SEM: twoRel[rel=37mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 37mm
*CAT: n
*SEM: orRel[rel=37mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: respecting_+_the_+_maximum_+_distance_+_between_+_two_+_consecutive_+_brackets_+_which_+_is_+_defined_+_in_+_the_+_attached_+_table
*CAT: n
*SEM: unaryRel[rel=respecting_+_the_+_maximum_+_distance_+_between_+_two_+_consecutive_+_brackets_+_which_+_is_+_defined_+_in_+_the_+_attached_+_table]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: respecting_+_the_+_maximum_+_distance_+_between_+_two_+_consecutive_+_brackets_+_which_+_is_+_defined_+_in_+_the_+_attached_+_table
*CAT: n
*SEM: twoRel[rel=respecting_+_the_+_maximum_+_distance_+_between_+_two_+_consecutive_+_brackets_+_which_+_is_+_defined_+_in_+_the_+_attached_+_table]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: respecting_+_the_+_maximum_+_distance_+_between_+_two_+_consecutive_+_brackets_+_which_+_is_+_defined_+_in_+_the_+_attached_+_table
*CAT: n
*SEM: twoRel[rel=respecting_+_the_+_maximum_+_distance_+_between_+_two_+_consecutive_+_brackets_+_which_+_is_+_defined_+_in_+_the_+_attached_+_table]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: respecting_+_the_+_maximum_+_distance_+_between_+_two_+_consecutive_+_brackets_+_which_+_is_+_defined_+_in_+_the_+_attached_+_table
*CAT: n
*SEM: orRel[rel=respecting_+_the_+_maximum_+_distance_+_between_+_two_+_consecutive_+_brackets_+_which_+_is_+_defined_+_in_+_the_+_attached_+_table]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150_-_degrees_-_c
*CAT: n
*SEM: unaryRel[rel=150_-_degrees_-_c]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150_-_degrees_-_c
*CAT: n
*SEM: twoRel[rel=150_-_degrees_-_c]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150_-_degrees_-_c
*CAT: n
*SEM: twoRel[rel=150_-_degrees_-_c]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150_-_degrees_-_c
*CAT: n
*SEM: orRel[rel=150_-_degrees_-_c]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guiding_+_device
*CAT: n
*SEM: unaryRel[rel=guiding_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guiding_+_device
*CAT: n
*SEM: twoRel[rel=guiding_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guiding_+_device
*CAT: n
*SEM: twoRel[rel=guiding_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guiding_+_device
*CAT: n
*SEM: orRel[rel=guiding_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_red_+_color
*CAT: n
*SEM: unaryRel[rel=in_+_red_+_color]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_red_+_color
*CAT: n
*SEM: twoRel[rel=in_+_red_+_color]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_red_+_color
*CAT: n
*SEM: twoRel[rel=in_+_red_+_color]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_red_+_color
*CAT: n
*SEM: orRel[rel=in_+_red_+_color]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 23amps_+_class_+_rs_+_is_+_recommended
*CAT: n
*SEM: unaryRel[rel=23amps_+_class_+_rs_+_is_+_recommended]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 23amps_+_class_+_rs_+_is_+_recommended
*CAT: n
*SEM: twoRel[rel=23amps_+_class_+_rs_+_is_+_recommended]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 23amps_+_class_+_rs_+_is_+_recommended
*CAT: n
*SEM: twoRel[rel=23amps_+_class_+_rs_+_is_+_recommended]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 23amps_+_class_+_rs_+_is_+_recommended
*CAT: n
*SEM: orRel[rel=23amps_+_class_+_rs_+_is_+_recommended]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__-_equalto_-__+_50mm_+_wihtout_+_additional_+_protectionor
*CAT: n
*SEM: unaryRel[rel=d_+__-_greaterThan_-__-_equalto_-__+_50mm_+_wihtout_+_additional_+_protectionor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__-_equalto_-__+_50mm_+_wihtout_+_additional_+_protectionor
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__-_equalto_-__+_50mm_+_wihtout_+_additional_+_protectionor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__-_equalto_-__+_50mm_+_wihtout_+_additional_+_protectionor
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__-_equalto_-__+_50mm_+_wihtout_+_additional_+_protectionor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__-_equalto_-__+_50mm_+_wihtout_+_additional_+_protectionor
*CAT: n
*SEM: orRel[rel=d_+__-_greaterThan_-__-_equalto_-__+_50mm_+_wihtout_+_additional_+_protectionor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+__-_equalto_-_3
*CAT: n
*SEM: unaryRel[rel=r_+__-_equalto_-_3]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+__-_equalto_-_3
*CAT: n
*SEM: twoRel[rel=r_+__-_equalto_-_3]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+__-_equalto_-_3
*CAT: n
*SEM: twoRel[rel=r_+__-_equalto_-_3]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+__-_equalto_-_3
*CAT: n
*SEM: orRel[rel=r_+__-_equalto_-_3]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: condensers
*CAT: n
*SEM: unaryRel[rel=condensers]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: condensers
*CAT: n
*SEM: twoRel[rel=condensers]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: condensers
*CAT: n
*SEM: twoRel[rel=condensers]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: condensers
*CAT: n
*SEM: orRel[rel=condensers]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_bus_+_link
*CAT: n
*SEM: unaryRel[rel=afdx_+_bus_+_link]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_bus_+_link
*CAT: n
*SEM: twoRel[rel=afdx_+_bus_+_link]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_bus_+_link
*CAT: n
*SEM: twoRel[rel=afdx_+_bus_+_link]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_bus_+_link
*CAT: n
*SEM: orRel[rel=afdx_+_bus_+_link]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dynamic_+_bundle
*CAT: n
*SEM: unaryRel[rel=dynamic_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dynamic_+_bundle
*CAT: n
*SEM: twoRel[rel=dynamic_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dynamic_+_bundle
*CAT: n
*SEM: twoRel[rel=dynamic_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dynamic_+_bundle
*CAT: n
*SEM: orRel[rel=dynamic_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_colour
*CAT: n
*SEM: unaryRel[rel=red_+_colour]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_colour
*CAT: n
*SEM: twoRel[rel=red_+_colour]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_colour
*CAT: n
*SEM: twoRel[rel=red_+_colour]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_colour
*CAT: n
*SEM: orRel[rel=red_+_colour]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: application_+_of_+_a_+_pitch_+_between_+_attachment_+_points_+_ensure_+_minimum_+_required_+_clearance_+_after_+_loss_+_of_+_one_+_attachment_+_point.or_+_installation_+_of_+_ramps
*CAT: n
*SEM: unaryRel[rel=application_+_of_+_a_+_pitch_+_between_+_attachment_+_points_+_ensure_+_minimum_+_required_+_clearance_+_after_+_loss_+_of_+_one_+_attachment_+_point.or_+_installation_+_of_+_ramps]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: application_+_of_+_a_+_pitch_+_between_+_attachment_+_points_+_ensure_+_minimum_+_required_+_clearance_+_after_+_loss_+_of_+_one_+_attachment_+_point.or_+_installation_+_of_+_ramps
*CAT: n
*SEM: twoRel[rel=application_+_of_+_a_+_pitch_+_between_+_attachment_+_points_+_ensure_+_minimum_+_required_+_clearance_+_after_+_loss_+_of_+_one_+_attachment_+_point.or_+_installation_+_of_+_ramps]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: application_+_of_+_a_+_pitch_+_between_+_attachment_+_points_+_ensure_+_minimum_+_required_+_clearance_+_after_+_loss_+_of_+_one_+_attachment_+_point.or_+_installation_+_of_+_ramps
*CAT: n
*SEM: twoRel[rel=application_+_of_+_a_+_pitch_+_between_+_attachment_+_points_+_ensure_+_minimum_+_required_+_clearance_+_after_+_loss_+_of_+_one_+_attachment_+_point.or_+_installation_+_of_+_ramps]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: application_+_of_+_a_+_pitch_+_between_+_attachment_+_points_+_ensure_+_minimum_+_required_+_clearance_+_after_+_loss_+_of_+_one_+_attachment_+_point.or_+_installation_+_of_+_ramps
*CAT: n
*SEM: orRel[rel=application_+_of_+_a_+_pitch_+_between_+_attachment_+_points_+_ensure_+_minimum_+_required_+_clearance_+_after_+_loss_+_of_+_one_+_attachment_+_point.or_+_installation_+_of_+_ramps]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire
*CAT: n
*SEM: unaryRel[rel=wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire
*CAT: n
*SEM: twoRel[rel=wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire
*CAT: n
*SEM: twoRel[rel=wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire
*CAT: n
*SEM: orRel[rel=wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_contact_+_between_+_them
*CAT: n
*SEM: unaryRel[rel=avoid_+_contact_+_between_+_them]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_contact_+_between_+_them
*CAT: n
*SEM: twoRel[rel=avoid_+_contact_+_between_+_them]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_contact_+_between_+_them
*CAT: n
*SEM: twoRel[rel=avoid_+_contact_+_between_+_them]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_contact_+_between_+_them
*CAT: n
*SEM: orRel[rel=avoid_+_contact_+_between_+_them]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: strain_+_relief
*CAT: n
*SEM: unaryRel[rel=strain_+_relief]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: strain_+_relief
*CAT: n
*SEM: twoRel[rel=strain_+_relief]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: strain_+_relief
*CAT: n
*SEM: twoRel[rel=strain_+_relief]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: strain_+_relief
*CAT: n
*SEM: orRel[rel=strain_+_relief]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_an_+_axis_+_fastenernsa_+_5159
*CAT: n
*SEM: unaryRel[rel=using_+_an_+_axis_+_fastenernsa_+_5159]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_an_+_axis_+_fastenernsa_+_5159
*CAT: n
*SEM: twoRel[rel=using_+_an_+_axis_+_fastenernsa_+_5159]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_an_+_axis_+_fastenernsa_+_5159
*CAT: n
*SEM: twoRel[rel=using_+_an_+_axis_+_fastenernsa_+_5159]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_an_+_axis_+_fastenernsa_+_5159
*CAT: n
*SEM: orRel[rel=using_+_an_+_axis_+_fastenernsa_+_5159]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: that_+_receptable
*CAT: n
*SEM: unaryRel[rel=that_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: that_+_receptable
*CAT: n
*SEM: twoRel[rel=that_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: that_+_receptable
*CAT: n
*SEM: twoRel[rel=that_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: that_+_receptable
*CAT: n
*SEM: orRel[rel=that_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401
*CAT: n
*SEM: unaryRel[rel=nsa_+_935401]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401
*CAT: n
*SEM: twoRel[rel=nsa_+_935401]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401
*CAT: n
*SEM: twoRel[rel=nsa_+_935401]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401
*CAT: n
*SEM: orRel[rel=nsa_+_935401]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_direction
*CAT: n
*SEM: unaryRel[rel=vertical_+_direction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_direction
*CAT: n
*SEM: twoRel[rel=vertical_+_direction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_direction
*CAT: n
*SEM: twoRel[rel=vertical_+_direction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_direction
*CAT: n
*SEM: orRel[rel=vertical_+_direction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal
*CAT: n
*SEM: unaryRel[rel=fire_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal
*CAT: n
*SEM: twoRel[rel=fire_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal
*CAT: n
*SEM: twoRel[rel=fire_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal
*CAT: n
*SEM: orRel[rel=fire_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: radius_+_of_+_6”_+__-_opensb_-_152mm_-_closesb_-__+__-_opensb_-_strain_+_relief_+_corresponds
*CAT: n
*SEM: unaryRel[rel=radius_+_of_+_6”_+__-_opensb_-_152mm_-_closesb_-__+__-_opensb_-_strain_+_relief_+_corresponds]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: radius_+_of_+_6”_+__-_opensb_-_152mm_-_closesb_-__+__-_opensb_-_strain_+_relief_+_corresponds
*CAT: n
*SEM: twoRel[rel=radius_+_of_+_6”_+__-_opensb_-_152mm_-_closesb_-__+__-_opensb_-_strain_+_relief_+_corresponds]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: radius_+_of_+_6”_+__-_opensb_-_152mm_-_closesb_-__+__-_opensb_-_strain_+_relief_+_corresponds
*CAT: n
*SEM: twoRel[rel=radius_+_of_+_6”_+__-_opensb_-_152mm_-_closesb_-__+__-_opensb_-_strain_+_relief_+_corresponds]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: radius_+_of_+_6”_+__-_opensb_-_152mm_-_closesb_-__+__-_opensb_-_strain_+_relief_+_corresponds
*CAT: n
*SEM: orRel[rel=radius_+_of_+_6”_+__-_opensb_-_152mm_-_closesb_-__+__-_opensb_-_strain_+_relief_+_corresponds]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_components
*CAT: n
*SEM: unaryRel[rel=movable_+_components]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_components
*CAT: n
*SEM: twoRel[rel=movable_+_components]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_components
*CAT: n
*SEM: twoRel[rel=movable_+_components]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_components
*CAT: n
*SEM: orRel[rel=movable_+_components]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_fire_+_resistant_+_component
*CAT: n
*SEM: unaryRel[rel=non_+_fire_+_resistant_+_component]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_fire_+_resistant_+_component
*CAT: n
*SEM: twoRel[rel=non_+_fire_+_resistant_+_component]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_fire_+_resistant_+_component
*CAT: n
*SEM: twoRel[rel=non_+_fire_+_resistant_+_component]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_fire_+_resistant_+_component
*CAT: n
*SEM: orRel[rel=non_+_fire_+_resistant_+_component]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearances
*CAT: n
*SEM: unaryRel[rel=clearances]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearances
*CAT: n
*SEM: twoRel[rel=clearances]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearances
*CAT: n
*SEM: twoRel[rel=clearances]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearances
*CAT: n
*SEM: orRel[rel=clearances]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameters
*CAT: n
*SEM: unaryRel[rel=diameters]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameters
*CAT: n
*SEM: twoRel[rel=diameters]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameters
*CAT: n
*SEM: twoRel[rel=diameters]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameters
*CAT: n
*SEM: orRel[rel=diameters]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_of_+_g-route
*CAT: n
*SEM: unaryRel[rel=feeder_+_of_+_g-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_of_+_g-route
*CAT: n
*SEM: twoRel[rel=feeder_+_of_+_g-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_of_+_g-route
*CAT: n
*SEM: twoRel[rel=feeder_+_of_+_g-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_of_+_g-route
*CAT: n
*SEM: orRel[rel=feeder_+_of_+_g-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_metallic_+_part
*CAT: n
*SEM: unaryRel[rel=each_+_metallic_+_part]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_metallic_+_part
*CAT: n
*SEM: twoRel[rel=each_+_metallic_+_part]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_metallic_+_part
*CAT: n
*SEM: twoRel[rel=each_+_metallic_+_part]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_metallic_+_part
*CAT: n
*SEM: orRel[rel=each_+_metallic_+_part]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_p-clamp_+_type_+_b
*CAT: n
*SEM: unaryRel[rel=nsa5516_+_p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_p-clamp_+_type_+_b
*CAT: n
*SEM: twoRel[rel=nsa5516_+_p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_p-clamp_+_type_+_b
*CAT: n
*SEM: twoRel[rel=nsa5516_+_p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_p-clamp_+_type_+_b
*CAT: n
*SEM: orRel[rel=nsa5516_+_p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: breakout_+_bracket
*CAT: n
*SEM: unaryRel[rel=breakout_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: breakout_+_bracket
*CAT: n
*SEM: twoRel[rel=breakout_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: breakout_+_bracket
*CAT: n
*SEM: twoRel[rel=breakout_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: breakout_+_bracket
*CAT: n
*SEM: orRel[rel=breakout_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_axes
*CAT: n
*SEM: unaryRel[rel=bend_+_radius_+_axes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_axes
*CAT: n
*SEM: twoRel[rel=bend_+_radius_+_axes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_axes
*CAT: n
*SEM: twoRel[rel=bend_+_radius_+_axes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_axes
*CAT: n
*SEM: orRel[rel=bend_+_radius_+_axes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm_+_each_+_end
*CAT: n
*SEM: unaryRel[rel=20mm_+_each_+_end]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm_+_each_+_end
*CAT: n
*SEM: twoRel[rel=20mm_+_each_+_end]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm_+_each_+_end
*CAT: n
*SEM: twoRel[rel=20mm_+_each_+_end]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm_+_each_+_end
*CAT: n
*SEM: orRel[rel=20mm_+_each_+_end]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: smallest_+_dash_+_number_+_to_+_largest
*CAT: n
*SEM: unaryRel[rel=smallest_+_dash_+_number_+_to_+_largest]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: smallest_+_dash_+_number_+_to_+_largest
*CAT: n
*SEM: twoRel[rel=smallest_+_dash_+_number_+_to_+_largest]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: smallest_+_dash_+_number_+_to_+_largest
*CAT: n
*SEM: twoRel[rel=smallest_+_dash_+_number_+_to_+_largest]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: smallest_+_dash_+_number_+_to_+_largest
*CAT: n
*SEM: orRel[rel=smallest_+_dash_+_number_+_to_+_largest]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crimped_+_cap
*CAT: n
*SEM: unaryRel[rel=crimped_+_cap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crimped_+_cap
*CAT: n
*SEM: twoRel[rel=crimped_+_cap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crimped_+_cap
*CAT: n
*SEM: twoRel[rel=crimped_+_cap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crimped_+_cap
*CAT: n
*SEM: orRel[rel=crimped_+_cap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: larger_+_bend_+_radius
*CAT: n
*SEM: unaryRel[rel=larger_+_bend_+_radius]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: larger_+_bend_+_radius
*CAT: n
*SEM: twoRel[rel=larger_+_bend_+_radius]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: larger_+_bend_+_radius
*CAT: n
*SEM: twoRel[rel=larger_+_bend_+_radius]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: larger_+_bend_+_radius
*CAT: n
*SEM: orRel[rel=larger_+_bend_+_radius]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: situ
*CAT: n
*SEM: unaryRel[rel=situ]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: situ
*CAT: n
*SEM: twoRel[rel=situ]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: situ
*CAT: n
*SEM: twoRel[rel=situ]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: situ
*CAT: n
*SEM: orRel[rel=situ]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: characteristics
*CAT: n
*SEM: unaryRel[rel=characteristics]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: characteristics
*CAT: n
*SEM: twoRel[rel=characteristics]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: characteristics
*CAT: n
*SEM: twoRel[rel=characteristics]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: characteristics
*CAT: n
*SEM: orRel[rel=characteristics]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_side
*CAT: n
*SEM: unaryRel[rel=one_+_side]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_side
*CAT: n
*SEM: twoRel[rel=one_+_side]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_side
*CAT: n
*SEM: twoRel[rel=one_+_side]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_side
*CAT: n
*SEM: orRel[rel=one_+_side]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer_+_of_+_length_-_colon_-__+_4d_+_must_+_inserted_+_between_+_two_+_bends
*CAT: n
*SEM: unaryRel[rel=spacer_+_of_+_length_-_colon_-__+_4d_+_must_+_inserted_+_between_+_two_+_bends]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer_+_of_+_length_-_colon_-__+_4d_+_must_+_inserted_+_between_+_two_+_bends
*CAT: n
*SEM: twoRel[rel=spacer_+_of_+_length_-_colon_-__+_4d_+_must_+_inserted_+_between_+_two_+_bends]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer_+_of_+_length_-_colon_-__+_4d_+_must_+_inserted_+_between_+_two_+_bends
*CAT: n
*SEM: twoRel[rel=spacer_+_of_+_length_-_colon_-__+_4d_+_must_+_inserted_+_between_+_two_+_bends]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer_+_of_+_length_-_colon_-__+_4d_+_must_+_inserted_+_between_+_two_+_bends
*CAT: n
*SEM: orRel[rel=spacer_+_of_+_length_-_colon_-__+_4d_+_must_+_inserted_+_between_+_two_+_bends]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fie_+_seals_+__-_opensb_-_vp_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=fie_+_seals_+__-_opensb_-_vp_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fie_+_seals_+__-_opensb_-_vp_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=fie_+_seals_+__-_opensb_-_vp_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fie_+_seals_+__-_opensb_-_vp_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=fie_+_seals_+__-_opensb_-_vp_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fie_+_seals_+__-_opensb_-_vp_-_closesb_-_
*CAT: n
*SEM: orRel[rel=fie_+_seals_+__-_opensb_-_vp_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049-009_+_open_+_sleeve_+_defined_+_in_+_tdd92s002d
*CAT: n
*SEM: unaryRel[rel=en_+_6049-009_+_open_+_sleeve_+_defined_+_in_+_tdd92s002d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049-009_+_open_+_sleeve_+_defined_+_in_+_tdd92s002d
*CAT: n
*SEM: twoRel[rel=en_+_6049-009_+_open_+_sleeve_+_defined_+_in_+_tdd92s002d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049-009_+_open_+_sleeve_+_defined_+_in_+_tdd92s002d
*CAT: n
*SEM: twoRel[rel=en_+_6049-009_+_open_+_sleeve_+_defined_+_in_+_tdd92s002d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049-009_+_open_+_sleeve_+_defined_+_in_+_tdd92s002d
*CAT: n
*SEM: orRel[rel=en_+_6049-009_+_open_+_sleeve_+_defined_+_in_+_tdd92s002d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_standard
*CAT: n
*SEM: unaryRel[rel=both_+_standard]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_standard
*CAT: n
*SEM: twoRel[rel=both_+_standard]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_standard
*CAT: n
*SEM: twoRel[rel=both_+_standard]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_standard
*CAT: n
*SEM: orRel[rel=both_+_standard]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: remobvable_+_individually
*CAT: n
*SEM: unaryRel[rel=remobvable_+_individually]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: remobvable_+_individually
*CAT: n
*SEM: twoRel[rel=remobvable_+_individually]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: remobvable_+_individually
*CAT: n
*SEM: twoRel[rel=remobvable_+_individually]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: remobvable_+_individually
*CAT: n
*SEM: orRel[rel=remobvable_+_individually]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation_+_fasteners
*CAT: n
*SEM: unaryRel[rel=insulation_+_fasteners]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation_+_fasteners
*CAT: n
*SEM: twoRel[rel=insulation_+_fasteners]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation_+_fasteners
*CAT: n
*SEM: twoRel[rel=insulation_+_fasteners]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation_+_fasteners
*CAT: n
*SEM: orRel[rel=insulation_+_fasteners]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: compount
*CAT: n
*SEM: unaryRel[rel=compount]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: compount
*CAT: n
*SEM: twoRel[rel=compount]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: compount
*CAT: n
*SEM: twoRel[rel=compount]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: compount
*CAT: n
*SEM: orRel[rel=compount]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alu_+_cable
*CAT: n
*SEM: unaryRel[rel=alu_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alu_+_cable
*CAT: n
*SEM: twoRel[rel=alu_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alu_+_cable
*CAT: n
*SEM: twoRel[rel=alu_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alu_+_cable
*CAT: n
*SEM: orRel[rel=alu_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_p-clamp
*CAT: n
*SEM: unaryRel[rel=two_+_p-clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_p-clamp
*CAT: n
*SEM: twoRel[rel=two_+_p-clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_p-clamp
*CAT: n
*SEM: twoRel[rel=two_+_p-clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_p-clamp
*CAT: n
*SEM: orRel[rel=two_+_p-clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna2328_+__+_asna_+_2327
*CAT: n
*SEM: unaryRel[rel=asna2328_+__+_asna_+_2327]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna2328_+__+_asna_+_2327
*CAT: n
*SEM: twoRel[rel=asna2328_+__+_asna_+_2327]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna2328_+__+_asna_+_2327
*CAT: n
*SEM: twoRel[rel=asna2328_+__+_asna_+_2327]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna2328_+__+_asna_+_2327
*CAT: n
*SEM: orRel[rel=asna2328_+__+_asna_+_2327]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation_+_of_+_pipes_+_which_+_are_+_listed_+_in_+_tdd29a001f_+_table_+_b.1_+__-_invcomma_-_pipe_+_fixations_-_backslash_-_bonding_+_clamps_-_invcomma_-__+_of_+_appendix_+_b
*CAT: n
*SEM: unaryRel[rel=fixation_+_of_+_pipes_+_which_+_are_+_listed_+_in_+_tdd29a001f_+_table_+_b.1_+__-_invcomma_-_pipe_+_fixations_-_backslash_-_bonding_+_clamps_-_invcomma_-__+_of_+_appendix_+_b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation_+_of_+_pipes_+_which_+_are_+_listed_+_in_+_tdd29a001f_+_table_+_b.1_+__-_invcomma_-_pipe_+_fixations_-_backslash_-_bonding_+_clamps_-_invcomma_-__+_of_+_appendix_+_b
*CAT: n
*SEM: twoRel[rel=fixation_+_of_+_pipes_+_which_+_are_+_listed_+_in_+_tdd29a001f_+_table_+_b.1_+__-_invcomma_-_pipe_+_fixations_-_backslash_-_bonding_+_clamps_-_invcomma_-__+_of_+_appendix_+_b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation_+_of_+_pipes_+_which_+_are_+_listed_+_in_+_tdd29a001f_+_table_+_b.1_+__-_invcomma_-_pipe_+_fixations_-_backslash_-_bonding_+_clamps_-_invcomma_-__+_of_+_appendix_+_b
*CAT: n
*SEM: twoRel[rel=fixation_+_of_+_pipes_+_which_+_are_+_listed_+_in_+_tdd29a001f_+_table_+_b.1_+__-_invcomma_-_pipe_+_fixations_-_backslash_-_bonding_+_clamps_-_invcomma_-__+_of_+_appendix_+_b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation_+_of_+_pipes_+_which_+_are_+_listed_+_in_+_tdd29a001f_+_table_+_b.1_+__-_invcomma_-_pipe_+_fixations_-_backslash_-_bonding_+_clamps_-_invcomma_-__+_of_+_appendix_+_b
*CAT: n
*SEM: orRel[rel=fixation_+_of_+_pipes_+_which_+_are_+_listed_+_in_+_tdd29a001f_+_table_+_b.1_+__-_invcomma_-_pipe_+_fixations_-_backslash_-_bonding_+_clamps_-_invcomma_-__+_of_+_appendix_+_b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_section_+_interfaces_+__-_opensb_-_fuselage-wing
*CAT: n
*SEM: unaryRel[rel=aircraft_+_section_+_interfaces_+__-_opensb_-_fuselage-wing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_section_+_interfaces_+__-_opensb_-_fuselage-wing
*CAT: n
*SEM: twoRel[rel=aircraft_+_section_+_interfaces_+__-_opensb_-_fuselage-wing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_section_+_interfaces_+__-_opensb_-_fuselage-wing
*CAT: n
*SEM: twoRel[rel=aircraft_+_section_+_interfaces_+__-_opensb_-_fuselage-wing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_section_+_interfaces_+__-_opensb_-_fuselage-wing
*CAT: n
*SEM: orRel[rel=aircraft_+_section_+_interfaces_+__-_opensb_-_fuselage-wing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: item
*CAT: n
*SEM: unaryRel[rel=item]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: item
*CAT: n
*SEM: twoRel[rel=item]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: item
*CAT: n
*SEM: twoRel[rel=item]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: item
*CAT: n
*SEM: orRel[rel=item]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_incorrect_+_connection_+_in_+_second_+_priority
*CAT: n
*SEM: unaryRel[rel=prevent_+_incorrect_+_connection_+_in_+_second_+_priority]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_incorrect_+_connection_+_in_+_second_+_priority
*CAT: n
*SEM: twoRel[rel=prevent_+_incorrect_+_connection_+_in_+_second_+_priority]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_incorrect_+_connection_+_in_+_second_+_priority
*CAT: n
*SEM: twoRel[rel=prevent_+_incorrect_+_connection_+_in_+_second_+_priority]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_incorrect_+_connection_+_in_+_second_+_priority
*CAT: n
*SEM: orRel[rel=prevent_+_incorrect_+_connection_+_in_+_second_+_priority]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5s-route
*CAT: n
*SEM: unaryRel[rel=5s-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5s-route
*CAT: n
*SEM: twoRel[rel=5s-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5s-route
*CAT: n
*SEM: twoRel[rel=5s-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5s-route
*CAT: n
*SEM: orRel[rel=5s-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_frames
*CAT: n
*SEM: unaryRel[rel=two_+_frames]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_frames
*CAT: n
*SEM: twoRel[rel=two_+_frames]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_frames
*CAT: n
*SEM: twoRel[rel=two_+_frames]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_frames
*CAT: n
*SEM: orRel[rel=two_+_frames]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable
*CAT: n
*SEM: unaryRel[rel=cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable
*CAT: n
*SEM: twoRel[rel=cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable
*CAT: n
*SEM: twoRel[rel=cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable
*CAT: n
*SEM: orRel[rel=cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flying_+_tee-_+_unions
*CAT: n
*SEM: unaryRel[rel=flying_+_tee-_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flying_+_tee-_+_unions
*CAT: n
*SEM: twoRel[rel=flying_+_tee-_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flying_+_tee-_+_unions
*CAT: n
*SEM: twoRel[rel=flying_+_tee-_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flying_+_tee-_+_unions
*CAT: n
*SEM: orRel[rel=flying_+_tee-_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_tension_+_forces
*CAT: n
*SEM: unaryRel[rel=any_+_tension_+_forces]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_tension_+_forces
*CAT: n
*SEM: twoRel[rel=any_+_tension_+_forces]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_tension_+_forces
*CAT: n
*SEM: twoRel[rel=any_+_tension_+_forces]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_tension_+_forces
*CAT: n
*SEM: orRel[rel=any_+_tension_+_forces]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_wire_+_gauge_+_22
*CAT: n
*SEM: unaryRel[rel=1_+_wire_+_gauge_+_22]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_wire_+_gauge_+_22
*CAT: n
*SEM: twoRel[rel=1_+_wire_+_gauge_+_22]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_wire_+_gauge_+_22
*CAT: n
*SEM: twoRel[rel=1_+_wire_+_gauge_+_22]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_wire_+_gauge_+_22
*CAT: n
*SEM: orRel[rel=1_+_wire_+_gauge_+_22]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relevant_+_coc_+_responsible
*CAT: n
*SEM: unaryRel[rel=relevant_+_coc_+_responsible]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relevant_+_coc_+_responsible
*CAT: n
*SEM: twoRel[rel=relevant_+_coc_+_responsible]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relevant_+_coc_+_responsible
*CAT: n
*SEM: twoRel[rel=relevant_+_coc_+_responsible]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relevant_+_coc_+_responsible
*CAT: n
*SEM: orRel[rel=relevant_+_coc_+_responsible]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: incorrect_+_connection
*CAT: n
*SEM: unaryRel[rel=incorrect_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: incorrect_+_connection
*CAT: n
*SEM: twoRel[rel=incorrect_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: incorrect_+_connection
*CAT: n
*SEM: twoRel[rel=incorrect_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: incorrect_+_connection
*CAT: n
*SEM: orRel[rel=incorrect_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: unaryRel[rel=conductive_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: twoRel[rel=conductive_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: twoRel[rel=conductive_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: orRel[rel=conductive_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_ac
*CAT: n
*SEM: unaryRel[rel=normal_+_ac]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_ac
*CAT: n
*SEM: twoRel[rel=normal_+_ac]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_ac
*CAT: n
*SEM: twoRel[rel=normal_+_ac]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_ac
*CAT: n
*SEM: orRel[rel=normal_+_ac]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locking_+_compound
*CAT: n
*SEM: unaryRel[rel=locking_+_compound]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locking_+_compound
*CAT: n
*SEM: twoRel[rel=locking_+_compound]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locking_+_compound
*CAT: n
*SEM: twoRel[rel=locking_+_compound]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locking_+_compound
*CAT: n
*SEM: orRel[rel=locking_+_compound]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_below_+_the_+_route
*CAT: n
*SEM: unaryRel[rel=non_+_conductive_+_structure_+_below_+_the_+_route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_below_+_the_+_route
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure_+_below_+_the_+_route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_below_+_the_+_route
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure_+_below_+_the_+_route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_below_+_the_+_route
*CAT: n
*SEM: orRel[rel=non_+_conductive_+_structure_+_below_+_the_+_route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: there_+_is_+_a_+_secured_+_routing_+_case_+_a
*CAT: n
*SEM: unaryRel[rel=there_+_is_+_a_+_secured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: there_+_is_+_a_+_secured_+_routing_+_case_+_a
*CAT: n
*SEM: twoRel[rel=there_+_is_+_a_+_secured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: there_+_is_+_a_+_secured_+_routing_+_case_+_a
*CAT: n
*SEM: twoRel[rel=there_+_is_+_a_+_secured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: there_+_is_+_a_+_secured_+_routing_+_case_+_a
*CAT: n
*SEM: orRel[rel=there_+_is_+_a_+_secured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage-htp_-_backslash_-_vtp_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=fuselage-htp_-_backslash_-_vtp_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage-htp_-_backslash_-_vtp_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=fuselage-htp_-_backslash_-_vtp_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage-htp_-_backslash_-_vtp_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=fuselage-htp_-_backslash_-_vtp_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage-htp_-_backslash_-_vtp_-_closesb_-_
*CAT: n
*SEM: orRel[rel=fuselage-htp_-_backslash_-_vtp_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small
*CAT: n
*SEM: unaryRel[rel=small]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small
*CAT: n
*SEM: twoRel[rel=small]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small
*CAT: n
*SEM: twoRel[rel=small]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small
*CAT: n
*SEM: orRel[rel=small]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: critical_+_circuitsor
*CAT: n
*SEM: unaryRel[rel=critical_+_circuitsor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: critical_+_circuitsor
*CAT: n
*SEM: twoRel[rel=critical_+_circuitsor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: critical_+_circuitsor
*CAT: n
*SEM: twoRel[rel=critical_+_circuitsor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: critical_+_circuitsor
*CAT: n
*SEM: orRel[rel=critical_+_circuitsor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_torsion_+_forces
*CAT: n
*SEM: unaryRel[rel=any_+_torsion_+_forces]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_torsion_+_forces
*CAT: n
*SEM: twoRel[rel=any_+_torsion_+_forces]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_torsion_+_forces
*CAT: n
*SEM: twoRel[rel=any_+_torsion_+_forces]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_torsion_+_forces
*CAT: n
*SEM: orRel[rel=any_+_torsion_+_forces]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repairs_+_defined
*CAT: n
*SEM: unaryRel[rel=repairs_+_defined]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repairs_+_defined
*CAT: n
*SEM: twoRel[rel=repairs_+_defined]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repairs_+_defined
*CAT: n
*SEM: twoRel[rel=repairs_+_defined]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repairs_+_defined
*CAT: n
*SEM: orRel[rel=repairs_+_defined]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2997_+_connector_+_class_+_rs
*CAT: n
*SEM: unaryRel[rel=2997_+_connector_+_class_+_rs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2997_+_connector_+_class_+_rs
*CAT: n
*SEM: twoRel[rel=2997_+_connector_+_class_+_rs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2997_+_connector_+_class_+_rs
*CAT: n
*SEM: twoRel[rel=2997_+_connector_+_class_+_rs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2997_+_connector_+_class_+_rs
*CAT: n
*SEM: orRel[rel=2997_+_connector_+_class_+_rs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_nsa5516_+_cbd_+_in_+_swamp_+_areas
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_nsa5516_+_cbd_+_in_+_swamp_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_nsa5516_+_cbd_+_in_+_swamp_+_areas
*CAT: n
*SEM: twoRel[rel=p-clamp_+_nsa5516_+_cbd_+_in_+_swamp_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_nsa5516_+_cbd_+_in_+_swamp_+_areas
*CAT: n
*SEM: twoRel[rel=p-clamp_+_nsa5516_+_cbd_+_in_+_swamp_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_nsa5516_+_cbd_+_in_+_swamp_+_areas
*CAT: n
*SEM: orRel[rel=p-clamp_+_nsa5516_+_cbd_+_in_+_swamp_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_sould_+_be_+_tied_+_on_+_ramp
*CAT: n
*SEM: unaryRel[rel=bundle_+_sould_+_be_+_tied_+_on_+_ramp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_sould_+_be_+_tied_+_on_+_ramp
*CAT: n
*SEM: twoRel[rel=bundle_+_sould_+_be_+_tied_+_on_+_ramp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_sould_+_be_+_tied_+_on_+_ramp
*CAT: n
*SEM: twoRel[rel=bundle_+_sould_+_be_+_tied_+_on_+_ramp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_sould_+_be_+_tied_+_on_+_ramp
*CAT: n
*SEM: orRel[rel=bundle_+_sould_+_be_+_tied_+_on_+_ramp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_part
*CAT: n
*SEM: unaryRel[rel=movable_+_part]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_part
*CAT: n
*SEM: twoRel[rel=movable_+_part]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_part
*CAT: n
*SEM: twoRel[rel=movable_+_part]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_part
*CAT: n
*SEM: orRel[rel=movable_+_part]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_to_+_5
*CAT: n
*SEM: unaryRel[rel=1_+_to_+_5]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_to_+_5
*CAT: n
*SEM: twoRel[rel=1_+_to_+_5]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_to_+_5
*CAT: n
*SEM: twoRel[rel=1_+_to_+_5]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_to_+_5
*CAT: n
*SEM: orRel[rel=1_+_to_+_5]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_fasteners
*CAT: n
*SEM: unaryRel[rel=dedicated_+_fasteners]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_fasteners
*CAT: n
*SEM: twoRel[rel=dedicated_+_fasteners]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_fasteners
*CAT: n
*SEM: twoRel[rel=dedicated_+_fasteners]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_fasteners
*CAT: n
*SEM: orRel[rel=dedicated_+_fasteners]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: firgure
*CAT: n
*SEM: unaryRel[rel=firgure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: firgure
*CAT: n
*SEM: twoRel[rel=firgure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: firgure
*CAT: n
*SEM: twoRel[rel=firgure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: firgure
*CAT: n
*SEM: orRel[rel=firgure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire
*CAT: n
*SEM: unaryRel[rel=draw_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire
*CAT: n
*SEM: twoRel[rel=draw_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire
*CAT: n
*SEM: twoRel[rel=draw_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire
*CAT: n
*SEM: orRel[rel=draw_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_connection
*CAT: n
*SEM: unaryRel[rel=electrical_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_connection
*CAT: n
*SEM: twoRel[rel=electrical_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_connection
*CAT: n
*SEM: twoRel[rel=electrical_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_connection
*CAT: n
*SEM: orRel[rel=electrical_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horitontal_+_position
*CAT: n
*SEM: unaryRel[rel=horitontal_+_position]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horitontal_+_position
*CAT: n
*SEM: twoRel[rel=horitontal_+_position]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horitontal_+_position
*CAT: n
*SEM: twoRel[rel=horitontal_+_position]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horitontal_+_position
*CAT: n
*SEM: orRel[rel=horitontal_+_position]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance
*CAT: n
*SEM: unaryRel[rel=distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance
*CAT: n
*SEM: twoRel[rel=distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance
*CAT: n
*SEM: twoRel[rel=distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance
*CAT: n
*SEM: orRel[rel=distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_extremity
*CAT: n
*SEM: unaryRel[rel=pipe_+_extremity]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_extremity
*CAT: n
*SEM: twoRel[rel=pipe_+_extremity]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_extremity
*CAT: n
*SEM: twoRel[rel=pipe_+_extremity]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_extremity
*CAT: n
*SEM: orRel[rel=pipe_+_extremity]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification
*CAT: n
*SEM: unaryRel[rel=nsa_+_937201_+_identification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification
*CAT: n
*SEM: orRel[rel=nsa_+_937201_+_identification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve_+_e.g._+_nsa935805
*CAT: n
*SEM: unaryRel[rel=closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve_+_e.g._+_nsa935805]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve_+_e.g._+_nsa935805
*CAT: n
*SEM: twoRel[rel=closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve_+_e.g._+_nsa935805]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve_+_e.g._+_nsa935805
*CAT: n
*SEM: twoRel[rel=closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve_+_e.g._+_nsa935805]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve_+_e.g._+_nsa935805
*CAT: n
*SEM: orRel[rel=closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve_+_e.g._+_nsa935805]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: braided_-_backslash_-_screened_-_backslash_-_emi_+_open_-_backslash_-_split_+_conduit_-_backslash_-_sleeve
*CAT: n
*SEM: unaryRel[rel=braided_-_backslash_-_screened_-_backslash_-_emi_+_open_-_backslash_-_split_+_conduit_-_backslash_-_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: braided_-_backslash_-_screened_-_backslash_-_emi_+_open_-_backslash_-_split_+_conduit_-_backslash_-_sleeve
*CAT: n
*SEM: twoRel[rel=braided_-_backslash_-_screened_-_backslash_-_emi_+_open_-_backslash_-_split_+_conduit_-_backslash_-_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: braided_-_backslash_-_screened_-_backslash_-_emi_+_open_-_backslash_-_split_+_conduit_-_backslash_-_sleeve
*CAT: n
*SEM: twoRel[rel=braided_-_backslash_-_screened_-_backslash_-_emi_+_open_-_backslash_-_split_+_conduit_-_backslash_-_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: braided_-_backslash_-_screened_-_backslash_-_emi_+_open_-_backslash_-_split_+_conduit_-_backslash_-_sleeve
*CAT: n
*SEM: orRel[rel=braided_-_backslash_-_screened_-_backslash_-_emi_+_open_-_backslash_-_split_+_conduit_-_backslash_-_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2083_+_combi_+_bracket_+_where_+_burn
*CAT: n
*SEM: unaryRel[rel=abs2083_+_combi_+_bracket_+_where_+_burn]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2083_+_combi_+_bracket_+_where_+_burn
*CAT: n
*SEM: twoRel[rel=abs2083_+_combi_+_bracket_+_where_+_burn]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2083_+_combi_+_bracket_+_where_+_burn
*CAT: n
*SEM: twoRel[rel=abs2083_+_combi_+_bracket_+_where_+_burn]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2083_+_combi_+_bracket_+_where_+_burn
*CAT: n
*SEM: orRel[rel=abs2083_+_combi_+_bracket_+_where_+_burn]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire
*CAT: n
*SEM: unaryRel[rel=cut_+_of_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire
*CAT: n
*SEM: twoRel[rel=cut_+_of_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire
*CAT: n
*SEM: twoRel[rel=cut_+_of_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire
*CAT: n
*SEM: orRel[rel=cut_+_of_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_position
*CAT: n
*SEM: unaryRel[rel=single_+_position]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_position
*CAT: n
*SEM: twoRel[rel=single_+_position]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_position
*CAT: n
*SEM: twoRel[rel=single_+_position]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_position
*CAT: n
*SEM: orRel[rel=single_+_position]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp
*CAT: n
*SEM: unaryRel[rel=ramp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp
*CAT: n
*SEM: twoRel[rel=ramp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp
*CAT: n
*SEM: twoRel[rel=ramp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp
*CAT: n
*SEM: orRel[rel=ramp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_spacer_+_in_+_hot
*CAT: n
*SEM: unaryRel[rel=plastic_+_spacer_+_in_+_hot]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_spacer_+_in_+_hot
*CAT: n
*SEM: twoRel[rel=plastic_+_spacer_+_in_+_hot]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_spacer_+_in_+_hot
*CAT: n
*SEM: twoRel[rel=plastic_+_spacer_+_in_+_hot]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_spacer_+_in_+_hot
*CAT: n
*SEM: orRel[rel=plastic_+_spacer_+_in_+_hot]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tank_+_wall
*CAT: n
*SEM: unaryRel[rel=tank_+_wall]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tank_+_wall
*CAT: n
*SEM: twoRel[rel=tank_+_wall]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tank_+_wall
*CAT: n
*SEM: twoRel[rel=tank_+_wall]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tank_+_wall
*CAT: n
*SEM: orRel[rel=tank_+_wall]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_pipe
*CAT: n
*SEM: unaryRel[rel=rigid_+_pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_pipe
*CAT: n
*SEM: twoRel[rel=rigid_+_pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_pipe
*CAT: n
*SEM: twoRel[rel=rigid_+_pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_pipe
*CAT: n
*SEM: orRel[rel=rigid_+_pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_panel
*CAT: n
*SEM: unaryRel[rel=inside_+_panel]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_panel
*CAT: n
*SEM: twoRel[rel=inside_+_panel]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_panel
*CAT: n
*SEM: twoRel[rel=inside_+_panel]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_panel
*CAT: n
*SEM: orRel[rel=inside_+_panel]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: kevlar_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=kevlar_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: kevlar_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=kevlar_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: kevlar_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=kevlar_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: kevlar_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=kevlar_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_components_+_not_+_less_+_than_+_25_+_mm_+_unless_+_otherwise_+_specified
*CAT: n
*SEM: unaryRel[rel=movable_+_components_+_not_+_less_+_than_+_25_+_mm_+_unless_+_otherwise_+_specified]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_components_+_not_+_less_+_than_+_25_+_mm_+_unless_+_otherwise_+_specified
*CAT: n
*SEM: twoRel[rel=movable_+_components_+_not_+_less_+_than_+_25_+_mm_+_unless_+_otherwise_+_specified]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_components_+_not_+_less_+_than_+_25_+_mm_+_unless_+_otherwise_+_specified
*CAT: n
*SEM: twoRel[rel=movable_+_components_+_not_+_less_+_than_+_25_+_mm_+_unless_+_otherwise_+_specified]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_components_+_not_+_less_+_than_+_25_+_mm_+_unless_+_otherwise_+_specified
*CAT: n
*SEM: orRel[rel=movable_+_components_+_not_+_less_+_than_+_25_+_mm_+_unless_+_otherwise_+_specified]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different
*CAT: n
*SEM: unaryRel[rel=different]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different
*CAT: n
*SEM: twoRel[rel=different]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different
*CAT: n
*SEM: twoRel[rel=different]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different
*CAT: n
*SEM: orRel[rel=different]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_abs_+_1353_+_emi_+_conduit
*CAT: n
*SEM: unaryRel[rel=using_+_abs_+_1353_+_emi_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_abs_+_1353_+_emi_+_conduit
*CAT: n
*SEM: twoRel[rel=using_+_abs_+_1353_+_emi_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_abs_+_1353_+_emi_+_conduit
*CAT: n
*SEM: twoRel[rel=using_+_abs_+_1353_+_emi_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_abs_+_1353_+_emi_+_conduit
*CAT: n
*SEM: orRel[rel=using_+_abs_+_1353_+_emi_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thebundle_+_section
*CAT: n
*SEM: unaryRel[rel=thebundle_+_section]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thebundle_+_section
*CAT: n
*SEM: twoRel[rel=thebundle_+_section]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thebundle_+_section
*CAT: n
*SEM: twoRel[rel=thebundle_+_section]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thebundle_+_section
*CAT: n
*SEM: orRel[rel=thebundle_+_section]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_plug
*CAT: n
*SEM: unaryRel[rel=sealed_+_plug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_plug
*CAT: n
*SEM: twoRel[rel=sealed_+_plug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_plug
*CAT: n
*SEM: twoRel[rel=sealed_+_plug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_plug
*CAT: n
*SEM: orRel[rel=sealed_+_plug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_level
*CAT: n
*SEM: unaryRel[rel=two_+_level]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_level
*CAT: n
*SEM: twoRel[rel=two_+_level]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_level
*CAT: n
*SEM: twoRel[rel=two_+_level]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_level
*CAT: n
*SEM: orRel[rel=two_+_level]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hanress_+_passing_+_through_+_close
*CAT: n
*SEM: unaryRel[rel=hanress_+_passing_+_through_+_close]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hanress_+_passing_+_through_+_close
*CAT: n
*SEM: twoRel[rel=hanress_+_passing_+_through_+_close]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hanress_+_passing_+_through_+_close
*CAT: n
*SEM: twoRel[rel=hanress_+_passing_+_through_+_close]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hanress_+_passing_+_through_+_close
*CAT: n
*SEM: orRel[rel=hanress_+_passing_+_through_+_close]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_position
*CAT: n
*SEM: unaryRel[rel=vertical_+_position]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_position
*CAT: n
*SEM: twoRel[rel=vertical_+_position]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_position
*CAT: n
*SEM: twoRel[rel=vertical_+_position]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_position
*CAT: n
*SEM: orRel[rel=vertical_+_position]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rack
*CAT: n
*SEM: unaryRel[rel=rack]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rack
*CAT: n
*SEM: twoRel[rel=rack]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rack
*CAT: n
*SEM: twoRel[rel=rack]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rack
*CAT: n
*SEM: orRel[rel=rack]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification
*CAT: n
*SEM: unaryRel[rel=nsa_+_937201_+_identification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification
*CAT: n
*SEM: orRel[rel=nsa_+_937201_+_identification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface
*CAT: n
*SEM: unaryRel[rel=surface]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface
*CAT: n
*SEM: twoRel[rel=surface]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface
*CAT: n
*SEM: twoRel[rel=surface]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface
*CAT: n
*SEM: orRel[rel=surface]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_pipe_+_couplingor
*CAT: n
*SEM: unaryRel[rel=removable_+_pipe_+_couplingor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_pipe_+_couplingor
*CAT: n
*SEM: twoRel[rel=removable_+_pipe_+_couplingor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_pipe_+_couplingor
*CAT: n
*SEM: twoRel[rel=removable_+_pipe_+_couplingor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_pipe_+_couplingor
*CAT: n
*SEM: orRel[rel=removable_+_pipe_+_couplingor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: unaryRel[rel=electrical_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: twoRel[rel=electrical_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: twoRel[rel=electrical_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: orRel[rel=electrical_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_between_+_the_+_two_+_fixpoints
*CAT: n
*SEM: unaryRel[rel=mechanical_+_protection_+_between_+_the_+_two_+_fixpoints]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_between_+_the_+_two_+_fixpoints
*CAT: n
*SEM: twoRel[rel=mechanical_+_protection_+_between_+_the_+_two_+_fixpoints]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_between_+_the_+_two_+_fixpoints
*CAT: n
*SEM: twoRel[rel=mechanical_+_protection_+_between_+_the_+_two_+_fixpoints]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_between_+_the_+_two_+_fixpoints
*CAT: n
*SEM: orRel[rel=mechanical_+_protection_+_between_+_the_+_two_+_fixpoints]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachemnt_+_device
*CAT: n
*SEM: unaryRel[rel=attachemnt_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachemnt_+_device
*CAT: n
*SEM: twoRel[rel=attachemnt_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachemnt_+_device
*CAT: n
*SEM: twoRel[rel=attachemnt_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachemnt_+_device
*CAT: n
*SEM: orRel[rel=attachemnt_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two
*CAT: n
*SEM: unaryRel[rel=two]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two
*CAT: n
*SEM: twoRel[rel=two]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two
*CAT: n
*SEM: twoRel[rel=two]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two
*CAT: n
*SEM: orRel[rel=two]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_bracket
*CAT: n
*SEM: unaryRel[rel=intermediate_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=intermediate_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=intermediate_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_bracket
*CAT: n
*SEM: orRel[rel=intermediate_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit
*CAT: n
*SEM: unaryRel[rel=conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit
*CAT: n
*SEM: twoRel[rel=conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit
*CAT: n
*SEM: twoRel[rel=conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit
*CAT: n
*SEM: orRel[rel=conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e-route
*CAT: n
*SEM: unaryRel[rel=e-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e-route
*CAT: n
*SEM: twoRel[rel=e-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e-route
*CAT: n
*SEM: twoRel[rel=e-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e-route
*CAT: n
*SEM: orRel[rel=e-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_wire
*CAT: n
*SEM: unaryRel[rel=copper_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_wire
*CAT: n
*SEM: twoRel[rel=copper_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_wire
*CAT: n
*SEM: twoRel[rel=copper_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_wire
*CAT: n
*SEM: orRel[rel=copper_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_master_+_part_+_design_+__-_opensb_-_parametric_+_bracket_+_design_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=using_+_master_+_part_+_design_+__-_opensb_-_parametric_+_bracket_+_design_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_master_+_part_+_design_+__-_opensb_-_parametric_+_bracket_+_design_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=using_+_master_+_part_+_design_+__-_opensb_-_parametric_+_bracket_+_design_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_master_+_part_+_design_+__-_opensb_-_parametric_+_bracket_+_design_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=using_+_master_+_part_+_design_+__-_opensb_-_parametric_+_bracket_+_design_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_master_+_part_+_design_+__-_opensb_-_parametric_+_bracket_+_design_-_closesb_-_
*CAT: n
*SEM: orRel[rel=using_+_master_+_part_+_design_+__-_opensb_-_parametric_+_bracket_+_design_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: number
*CAT: n
*SEM: unaryRel[rel=number]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: number
*CAT: n
*SEM: twoRel[rel=number]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: number
*CAT: n
*SEM: twoRel[rel=number]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: number
*CAT: n
*SEM: orRel[rel=number]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_effort
*CAT: n
*SEM: unaryRel[rel=mechanical_+_effort]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_effort
*CAT: n
*SEM: twoRel[rel=mechanical_+_effort]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_effort
*CAT: n
*SEM: twoRel[rel=mechanical_+_effort]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_effort
*CAT: n
*SEM: orRel[rel=mechanical_+_effort]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sub_+_assembly
*CAT: n
*SEM: unaryRel[rel=sub_+_assembly]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sub_+_assembly
*CAT: n
*SEM: twoRel[rel=sub_+_assembly]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sub_+_assembly
*CAT: n
*SEM: twoRel[rel=sub_+_assembly]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sub_+_assembly
*CAT: n
*SEM: orRel[rel=sub_+_assembly]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_close_+_to_+_the_+_tee-union
*CAT: n
*SEM: unaryRel[rel=position_+_close_+_to_+_the_+_tee-union]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_close_+_to_+_the_+_tee-union
*CAT: n
*SEM: twoRel[rel=position_+_close_+_to_+_the_+_tee-union]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_close_+_to_+_the_+_tee-union
*CAT: n
*SEM: twoRel[rel=position_+_close_+_to_+_the_+_tee-union]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_close_+_to_+_the_+_tee-union
*CAT: n
*SEM: orRel[rel=position_+_close_+_to_+_the_+_tee-union]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_wire
*CAT: n
*SEM: unaryRel[rel=spare_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_wire
*CAT: n
*SEM: twoRel[rel=spare_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_wire
*CAT: n
*SEM: twoRel[rel=spare_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_wire
*CAT: n
*SEM: orRel[rel=spare_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_mechanical_+_ata_+_according
*CAT: n
*SEM: unaryRel[rel=any_+_other_+_mechanical_+_ata_+_according]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_mechanical_+_ata_+_according
*CAT: n
*SEM: twoRel[rel=any_+_other_+_mechanical_+_ata_+_according]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_mechanical_+_ata_+_according
*CAT: n
*SEM: twoRel[rel=any_+_other_+_mechanical_+_ata_+_according]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_mechanical_+_ata_+_according
*CAT: n
*SEM: orRel[rel=any_+_other_+_mechanical_+_ata_+_according]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_conduit
*CAT: n
*SEM: unaryRel[rel=spare_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_conduit
*CAT: n
*SEM: twoRel[rel=spare_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_conduit
*CAT: n
*SEM: twoRel[rel=spare_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_conduit
*CAT: n
*SEM: orRel[rel=spare_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: type
*CAT: n
*SEM: unaryRel[rel=type]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: type
*CAT: n
*SEM: twoRel[rel=type]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: type
*CAT: n
*SEM: twoRel[rel=type]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: type
*CAT: n
*SEM: orRel[rel=type]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp_+_or
*CAT: n
*SEM: unaryRel[rel=ramp_+_or]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp_+_or
*CAT: n
*SEM: twoRel[rel=ramp_+_or]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp_+_or
*CAT: n
*SEM: twoRel[rel=ramp_+_or]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp_+_or
*CAT: n
*SEM: orRel[rel=ramp_+_or]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coordinate_+_y-axis
*CAT: n
*SEM: unaryRel[rel=coordinate_+_y-axis]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coordinate_+_y-axis
*CAT: n
*SEM: twoRel[rel=coordinate_+_y-axis]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coordinate_+_y-axis
*CAT: n
*SEM: twoRel[rel=coordinate_+_y-axis]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coordinate_+_y-axis
*CAT: n
*SEM: orRel[rel=coordinate_+_y-axis]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: there
*CAT: n
*SEM: unaryRel[rel=there]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: there
*CAT: n
*SEM: twoRel[rel=there]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: there
*CAT: n
*SEM: twoRel[rel=there]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: there
*CAT: n
*SEM: orRel[rel=there]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_10mm_+_in_+_case_+_of_-_colon_-__+_the_+_bundle_+_is_+_crossing_+_structureal_+_edges
*CAT: n
*SEM: unaryRel[rel=minimum_+_10mm_+_in_+_case_+_of_-_colon_-__+_the_+_bundle_+_is_+_crossing_+_structureal_+_edges]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_10mm_+_in_+_case_+_of_-_colon_-__+_the_+_bundle_+_is_+_crossing_+_structureal_+_edges
*CAT: n
*SEM: twoRel[rel=minimum_+_10mm_+_in_+_case_+_of_-_colon_-__+_the_+_bundle_+_is_+_crossing_+_structureal_+_edges]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_10mm_+_in_+_case_+_of_-_colon_-__+_the_+_bundle_+_is_+_crossing_+_structureal_+_edges
*CAT: n
*SEM: twoRel[rel=minimum_+_10mm_+_in_+_case_+_of_-_colon_-__+_the_+_bundle_+_is_+_crossing_+_structureal_+_edges]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_10mm_+_in_+_case_+_of_-_colon_-__+_the_+_bundle_+_is_+_crossing_+_structureal_+_edges
*CAT: n
*SEM: orRel[rel=minimum_+_10mm_+_in_+_case_+_of_-_colon_-__+_the_+_bundle_+_is_+_crossing_+_structureal_+_edges]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_label_+_printed_+_black_+_on_+_white_+_background
*CAT: n
*SEM: unaryRel[rel=asne_+_0248_+_label_+_printed_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_label_+_printed_+_black_+_on_+_white_+_background
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_label_+_printed_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_label_+_printed_+_black_+_on_+_white_+_background
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_label_+_printed_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_label_+_printed_+_black_+_on_+_white_+_background
*CAT: n
*SEM: orRel[rel=asne_+_0248_+_label_+_printed_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protected
*CAT: n
*SEM: unaryRel[rel=mechanical_+_protected]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protected
*CAT: n
*SEM: twoRel[rel=mechanical_+_protected]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protected
*CAT: n
*SEM: twoRel[rel=mechanical_+_protected]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protected
*CAT: n
*SEM: orRel[rel=mechanical_+_protected]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g
*CAT: n
*SEM: unaryRel[rel=g]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g
*CAT: n
*SEM: twoRel[rel=g]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g
*CAT: n
*SEM: twoRel[rel=g]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g
*CAT: n
*SEM: orRel[rel=g]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance_+_to_+_structure
*CAT: n
*SEM: unaryRel[rel=clearance_+_to_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance_+_to_+_structure
*CAT: n
*SEM: twoRel[rel=clearance_+_to_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance_+_to_+_structure
*CAT: n
*SEM: twoRel[rel=clearance_+_to_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance_+_to_+_structure
*CAT: n
*SEM: orRel[rel=clearance_+_to_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_when_+_cables
*CAT: n
*SEM: unaryRel[rel=identification_+_when_+_cables]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_when_+_cables
*CAT: n
*SEM: twoRel[rel=identification_+_when_+_cables]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_when_+_cables
*CAT: n
*SEM: twoRel[rel=identification_+_when_+_cables]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_when_+_cables
*CAT: n
*SEM: orRel[rel=identification_+_when_+_cables]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additionally
*CAT: n
*SEM: unaryRel[rel=additionally]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additionally
*CAT: n
*SEM: twoRel[rel=additionally]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additionally
*CAT: n
*SEM: twoRel[rel=additionally]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additionally
*CAT: n
*SEM: orRel[rel=additionally]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_25mm_+_after_+_loss_+_of_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=d_-_greaterThan_-__-_equalto_-__+_25mm_+_after_+_loss_+_of_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_25mm_+_after_+_loss_+_of_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=d_-_greaterThan_-__-_equalto_-__+_25mm_+_after_+_loss_+_of_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_25mm_+_after_+_loss_+_of_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=d_-_greaterThan_-__-_equalto_-__+_25mm_+_after_+_loss_+_of_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_25mm_+_after_+_loss_+_of_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=d_-_greaterThan_-__-_equalto_-__+_25mm_+_after_+_loss_+_of_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: directly
*CAT: n
*SEM: unaryRel[rel=directly]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: directly
*CAT: n
*SEM: twoRel[rel=directly]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: directly
*CAT: n
*SEM: twoRel[rel=directly]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: directly
*CAT: n
*SEM: orRel[rel=directly]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: either
*CAT: n
*SEM: unaryRel[rel=either]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: either
*CAT: n
*SEM: twoRel[rel=either]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: either
*CAT: n
*SEM: twoRel[rel=either]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: either
*CAT: n
*SEM: orRel[rel=either]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_intermediate_+_bracket
*CAT: n
*SEM: unaryRel[rel=an_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=an_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=an_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_intermediate_+_bracket
*CAT: n
*SEM: orRel[rel=an_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_equipment_+_on_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: unaryRel[rel=single_+_equipment_+_on_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_equipment_+_on_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: twoRel[rel=single_+_equipment_+_on_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_equipment_+_on_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: twoRel[rel=single_+_equipment_+_on_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_equipment_+_on_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: orRel[rel=single_+_equipment_+_on_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: backshell
*CAT: n
*SEM: unaryRel[rel=backshell]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: backshell
*CAT: n
*SEM: twoRel[rel=backshell]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: backshell
*CAT: n
*SEM: twoRel[rel=backshell]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: backshell
*CAT: n
*SEM: orRel[rel=backshell]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loads_+_due_+_to_+_structural_+_deflections
*CAT: n
*SEM: unaryRel[rel=loads_+_due_+_to_+_structural_+_deflections]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loads_+_due_+_to_+_structural_+_deflections
*CAT: n
*SEM: twoRel[rel=loads_+_due_+_to_+_structural_+_deflections]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loads_+_due_+_to_+_structural_+_deflections
*CAT: n
*SEM: twoRel[rel=loads_+_due_+_to_+_structural_+_deflections]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loads_+_due_+_to_+_structural_+_deflections
*CAT: n
*SEM: orRel[rel=loads_+_due_+_to_+_structural_+_deflections]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle._+_on_+_attachment_+_point_+_level
*CAT: n
*SEM: unaryRel[rel=electrical_+_bundle._+_on_+_attachment_+_point_+_level]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle._+_on_+_attachment_+_point_+_level
*CAT: n
*SEM: twoRel[rel=electrical_+_bundle._+_on_+_attachment_+_point_+_level]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle._+_on_+_attachment_+_point_+_level
*CAT: n
*SEM: twoRel[rel=electrical_+_bundle._+_on_+_attachment_+_point_+_level]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle._+_on_+_attachment_+_point_+_level
*CAT: n
*SEM: orRel[rel=electrical_+_bundle._+_on_+_attachment_+_point_+_level]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: possibly
*CAT: n
*SEM: unaryRel[rel=possibly]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: possibly
*CAT: n
*SEM: twoRel[rel=possibly]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: possibly
*CAT: n
*SEM: twoRel[rel=possibly]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: possibly
*CAT: n
*SEM: orRel[rel=possibly]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing_+_of_+_one_+_single_+_pipe
*CAT: n
*SEM: unaryRel[rel=routing_+_of_+_one_+_single_+_pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing_+_of_+_one_+_single_+_pipe
*CAT: n
*SEM: twoRel[rel=routing_+_of_+_one_+_single_+_pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing_+_of_+_one_+_single_+_pipe
*CAT: n
*SEM: twoRel[rel=routing_+_of_+_one_+_single_+_pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing_+_of_+_one_+_single_+_pipe
*CAT: n
*SEM: orRel[rel=routing_+_of_+_one_+_single_+_pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_cable
*CAT: n
*SEM: unaryRel[rel=each_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_cable
*CAT: n
*SEM: twoRel[rel=each_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_cable
*CAT: n
*SEM: twoRel[rel=each_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_cable
*CAT: n
*SEM: orRel[rel=each_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_bends
*CAT: n
*SEM: unaryRel[rel=two_+_bends]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_bends
*CAT: n
*SEM: twoRel[rel=two_+_bends]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_bends
*CAT: n
*SEM: twoRel[rel=two_+_bends]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_bends
*CAT: n
*SEM: orRel[rel=two_+_bends]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluid_+_leackage_+_zones_+_class_+_aor_+_en_+_2997_+_class_+_rs
*CAT: n
*SEM: unaryRel[rel=flammable_+_fluid_+_leackage_+_zones_+_class_+_aor_+_en_+_2997_+_class_+_rs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluid_+_leackage_+_zones_+_class_+_aor_+_en_+_2997_+_class_+_rs
*CAT: n
*SEM: twoRel[rel=flammable_+_fluid_+_leackage_+_zones_+_class_+_aor_+_en_+_2997_+_class_+_rs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluid_+_leackage_+_zones_+_class_+_aor_+_en_+_2997_+_class_+_rs
*CAT: n
*SEM: twoRel[rel=flammable_+_fluid_+_leackage_+_zones_+_class_+_aor_+_en_+_2997_+_class_+_rs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluid_+_leackage_+_zones_+_class_+_aor_+_en_+_2997_+_class_+_rs
*CAT: n
*SEM: orRel[rel=flammable_+_fluid_+_leackage_+_zones_+_class_+_aor_+_en_+_2997_+_class_+_rs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_8_+_times_+_outer
*CAT: n
*SEM: unaryRel[rel=bend_+_8_+_times_+_outer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_8_+_times_+_outer
*CAT: n
*SEM: twoRel[rel=bend_+_8_+_times_+_outer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_8_+_times_+_outer
*CAT: n
*SEM: twoRel[rel=bend_+_8_+_times_+_outer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_8_+_times_+_outer
*CAT: n
*SEM: orRel[rel=bend_+_8_+_times_+_outer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stud
*CAT: n
*SEM: unaryRel[rel=stud]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stud
*CAT: n
*SEM: twoRel[rel=stud]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stud
*CAT: n
*SEM: twoRel[rel=stud]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stud
*CAT: n
*SEM: orRel[rel=stud]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rqt_+_3288
*CAT: n
*SEM: unaryRel[rel=rqt_+_3288]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rqt_+_3288
*CAT: n
*SEM: twoRel[rel=rqt_+_3288]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rqt_+_3288
*CAT: n
*SEM: twoRel[rel=rqt_+_3288]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rqt_+_3288
*CAT: n
*SEM: orRel[rel=rqt_+_3288]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_bundles
*CAT: n
*SEM: unaryRel[rel=other_+_bundles]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_bundles
*CAT: n
*SEM: twoRel[rel=other_+_bundles]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_bundles
*CAT: n
*SEM: twoRel[rel=other_+_bundles]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_bundles
*CAT: n
*SEM: orRel[rel=other_+_bundles]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: unaryRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: twoRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: twoRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: orRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: examples
*CAT: n
*SEM: unaryRel[rel=examples]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: examples
*CAT: n
*SEM: twoRel[rel=examples]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: examples
*CAT: n
*SEM: twoRel[rel=examples]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: examples
*CAT: n
*SEM: orRel[rel=examples]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_axis
*CAT: n
*SEM: unaryRel[rel=vertical_+_axis]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_axis
*CAT: n
*SEM: twoRel[rel=vertical_+_axis]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_axis
*CAT: n
*SEM: twoRel[rel=vertical_+_axis]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_axis
*CAT: n
*SEM: orRel[rel=vertical_+_axis]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 250_+_mm
*CAT: n
*SEM: unaryRel[rel=250_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 250_+_mm
*CAT: n
*SEM: twoRel[rel=250_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 250_+_mm
*CAT: n
*SEM: twoRel[rel=250_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 250_+_mm
*CAT: n
*SEM: orRel[rel=250_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: resist_+_applied_+_mechanical_+_loads
*CAT: n
*SEM: unaryRel[rel=resist_+_applied_+_mechanical_+_loads]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: resist_+_applied_+_mechanical_+_loads
*CAT: n
*SEM: twoRel[rel=resist_+_applied_+_mechanical_+_loads]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: resist_+_applied_+_mechanical_+_loads
*CAT: n
*SEM: twoRel[rel=resist_+_applied_+_mechanical_+_loads]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: resist_+_applied_+_mechanical_+_loads
*CAT: n
*SEM: orRel[rel=resist_+_applied_+_mechanical_+_loads]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut-off_+_connectors
*CAT: n
*SEM: unaryRel[rel=cut-off_+_connectors]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut-off_+_connectors
*CAT: n
*SEM: twoRel[rel=cut-off_+_connectors]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut-off_+_connectors
*CAT: n
*SEM: twoRel[rel=cut-off_+_connectors]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut-off_+_connectors
*CAT: n
*SEM: orRel[rel=cut-off_+_connectors]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius_+_this
*CAT: n
*SEM: unaryRel[rel=minimum_+_bend_+_radius_+_this]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius_+_this
*CAT: n
*SEM: twoRel[rel=minimum_+_bend_+_radius_+_this]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius_+_this
*CAT: n
*SEM: twoRel[rel=minimum_+_bend_+_radius_+_this]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius_+_this
*CAT: n
*SEM: orRel[rel=minimum_+_bend_+_radius_+_this]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance
*CAT: n
*SEM: unaryRel[rel=clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance
*CAT: n
*SEM: twoRel[rel=clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance
*CAT: n
*SEM: twoRel[rel=clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance
*CAT: n
*SEM: orRel[rel=clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2110_+__-_dash_-__+_multi-hole
*CAT: n
*SEM: unaryRel[rel=abs2110_+__-_dash_-__+_multi-hole]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2110_+__-_dash_-__+_multi-hole
*CAT: n
*SEM: twoRel[rel=abs2110_+__-_dash_-__+_multi-hole]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2110_+__-_dash_-__+_multi-hole
*CAT: n
*SEM: twoRel[rel=abs2110_+__-_dash_-__+_multi-hole]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2110_+__-_dash_-__+_multi-hole
*CAT: n
*SEM: orRel[rel=abs2110_+__-_dash_-__+_multi-hole]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_label_+_on_+_a_-_backslash_-_c_+_structure
*CAT: n
*SEM: unaryRel[rel=metallic_+_label_+_on_+_a_-_backslash_-_c_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_label_+_on_+_a_-_backslash_-_c_+_structure
*CAT: n
*SEM: twoRel[rel=metallic_+_label_+_on_+_a_-_backslash_-_c_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_label_+_on_+_a_-_backslash_-_c_+_structure
*CAT: n
*SEM: twoRel[rel=metallic_+_label_+_on_+_a_-_backslash_-_c_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_label_+_on_+_a_-_backslash_-_c_+_structure
*CAT: n
*SEM: orRel[rel=metallic_+_label_+_on_+_a_-_backslash_-_c_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa9117_+_identification_+_label
*CAT: n
*SEM: unaryRel[rel=nsa9117_+_identification_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa9117_+_identification_+_label
*CAT: n
*SEM: twoRel[rel=nsa9117_+_identification_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa9117_+_identification_+_label
*CAT: n
*SEM: twoRel[rel=nsa9117_+_identification_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa9117_+_identification_+_label
*CAT: n
*SEM: orRel[rel=nsa9117_+_identification_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-service_+_needs
*CAT: n
*SEM: unaryRel[rel=in-service_+_needs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-service_+_needs
*CAT: n
*SEM: twoRel[rel=in-service_+_needs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-service_+_needs
*CAT: n
*SEM: twoRel[rel=in-service_+_needs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-service_+_needs
*CAT: n
*SEM: orRel[rel=in-service_+_needs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_zones
*CAT: n
*SEM: unaryRel[rel=fire_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_zones
*CAT: n
*SEM: twoRel[rel=fire_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_zones
*CAT: n
*SEM: twoRel[rel=fire_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_zones
*CAT: n
*SEM: orRel[rel=fire_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block
*CAT: n
*SEM: unaryRel[rel=clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block
*CAT: n
*SEM: twoRel[rel=clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block
*CAT: n
*SEM: twoRel[rel=clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block
*CAT: n
*SEM: orRel[rel=clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0646_+_identification_+_sleeve
*CAT: n
*SEM: unaryRel[rel=asne0646_+_identification_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0646_+_identification_+_sleeve
*CAT: n
*SEM: twoRel[rel=asne0646_+_identification_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0646_+_identification_+_sleeve
*CAT: n
*SEM: twoRel[rel=asne0646_+_identification_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0646_+_identification_+_sleeve
*CAT: n
*SEM: orRel[rel=asne0646_+_identification_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve
*CAT: n
*SEM: unaryRel[rel=sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve
*CAT: n
*SEM: twoRel[rel=sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve
*CAT: n
*SEM: twoRel[rel=sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve
*CAT: n
*SEM: orRel[rel=sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_of_+_5xd
*CAT: n
*SEM: unaryRel[rel=bend_+_radius_+_of_+_5xd]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_of_+_5xd
*CAT: n
*SEM: twoRel[rel=bend_+_radius_+_of_+_5xd]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_of_+_5xd
*CAT: n
*SEM: twoRel[rel=bend_+_radius_+_of_+_5xd]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_of_+_5xd
*CAT: n
*SEM: orRel[rel=bend_+_radius_+_of_+_5xd]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermally_+_regulated_+_areas_+_of_+_the_+_fuselage
*CAT: n
*SEM: unaryRel[rel=thermally_+_regulated_+_areas_+_of_+_the_+_fuselage]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermally_+_regulated_+_areas_+_of_+_the_+_fuselage
*CAT: n
*SEM: twoRel[rel=thermally_+_regulated_+_areas_+_of_+_the_+_fuselage]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermally_+_regulated_+_areas_+_of_+_the_+_fuselage
*CAT: n
*SEM: twoRel[rel=thermally_+_regulated_+_areas_+_of_+_the_+_fuselage]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermally_+_regulated_+_areas_+_of_+_the_+_fuselage
*CAT: n
*SEM: orRel[rel=thermally_+_regulated_+_areas_+_of_+_the_+_fuselage]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire-sensing_+_element
*CAT: n
*SEM: unaryRel[rel=fire-sensing_+_element]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire-sensing_+_element
*CAT: n
*SEM: twoRel[rel=fire-sensing_+_element]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire-sensing_+_element
*CAT: n
*SEM: twoRel[rel=fire-sensing_+_element]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire-sensing_+_element
*CAT: n
*SEM: orRel[rel=fire-sensing_+_element]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5429_+_thermal_+_protection_+_on_+_the_+_primary_+_instlation
*CAT: n
*SEM: unaryRel[rel=abs5429_+_thermal_+_protection_+_on_+_the_+_primary_+_instlation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5429_+_thermal_+_protection_+_on_+_the_+_primary_+_instlation
*CAT: n
*SEM: twoRel[rel=abs5429_+_thermal_+_protection_+_on_+_the_+_primary_+_instlation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5429_+_thermal_+_protection_+_on_+_the_+_primary_+_instlation
*CAT: n
*SEM: twoRel[rel=abs5429_+_thermal_+_protection_+_on_+_the_+_primary_+_instlation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5429_+_thermal_+_protection_+_on_+_the_+_primary_+_instlation
*CAT: n
*SEM: orRel[rel=abs5429_+_thermal_+_protection_+_on_+_the_+_primary_+_instlation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing_+_case_+_a
*CAT: n
*SEM: unaryRel[rel=routing_+_case_+_a]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing_+_case_+_a
*CAT: n
*SEM: twoRel[rel=routing_+_case_+_a]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing_+_case_+_a
*CAT: n
*SEM: twoRel[rel=routing_+_case_+_a]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing_+_case_+_a
*CAT: n
*SEM: orRel[rel=routing_+_case_+_a]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical
*CAT: n
*SEM: unaryRel[rel=optical]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical
*CAT: n
*SEM: twoRel[rel=optical]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical
*CAT: n
*SEM: twoRel[rel=optical]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical
*CAT: n
*SEM: orRel[rel=optical]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150mm_+__-_greaterThan_-__+_d_+__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=150mm_+__-_greaterThan_-__+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150mm_+__-_greaterThan_-__+_d_+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=150mm_+__-_greaterThan_-__+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150mm_+__-_greaterThan_-__+_d_+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=150mm_+__-_greaterThan_-__+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150mm_+__-_greaterThan_-__+_d_+__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=150mm_+__-_greaterThan_-__+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_pump_+_fairings
*CAT: n
*SEM: unaryRel[rel=fuel_+_pump_+_fairings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_pump_+_fairings
*CAT: n
*SEM: twoRel[rel=fuel_+_pump_+_fairings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_pump_+_fairings
*CAT: n
*SEM: twoRel[rel=fuel_+_pump_+_fairings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_pump_+_fairings
*CAT: n
*SEM: orRel[rel=fuel_+_pump_+_fairings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction_+_zones
*CAT: n
*SEM: unaryRel[rel=junction_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction_+_zones
*CAT: n
*SEM: twoRel[rel=junction_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction_+_zones
*CAT: n
*SEM: twoRel[rel=junction_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction_+_zones
*CAT: n
*SEM: orRel[rel=junction_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_caps_+_when
*CAT: n
*SEM: unaryRel[rel=end_+_caps_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_caps_+_when
*CAT: n
*SEM: twoRel[rel=end_+_caps_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_caps_+_when
*CAT: n
*SEM: twoRel[rel=end_+_caps_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_caps_+_when
*CAT: n
*SEM: orRel[rel=end_+_caps_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: individual_+_numbers
*CAT: n
*SEM: unaryRel[rel=individual_+_numbers]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: individual_+_numbers
*CAT: n
*SEM: twoRel[rel=individual_+_numbers]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: individual_+_numbers
*CAT: n
*SEM: twoRel[rel=individual_+_numbers]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: individual_+_numbers
*CAT: n
*SEM: orRel[rel=individual_+_numbers]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then_+_the_+_lower_+_limit
*CAT: n
*SEM: unaryRel[rel=then_+_the_+_lower_+_limit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then_+_the_+_lower_+_limit
*CAT: n
*SEM: twoRel[rel=then_+_the_+_lower_+_limit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then_+_the_+_lower_+_limit
*CAT: n
*SEM: twoRel[rel=then_+_the_+_lower_+_limit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then_+_the_+_lower_+_limit
*CAT: n
*SEM: orRel[rel=then_+_the_+_lower_+_limit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair
*CAT: n
*SEM: unaryRel[rel=repair]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair
*CAT: n
*SEM: twoRel[rel=repair]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair
*CAT: n
*SEM: twoRel[rel=repair]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair
*CAT: n
*SEM: orRel[rel=repair]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_modules
*CAT: n
*SEM: unaryRel[rel=sealed_+_modules]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_modules
*CAT: n
*SEM: twoRel[rel=sealed_+_modules]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_modules
*CAT: n
*SEM: twoRel[rel=sealed_+_modules]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_modules
*CAT: n
*SEM: orRel[rel=sealed_+_modules]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_fuel_+_tank
*CAT: n
*SEM: unaryRel[rel=inside_+_fuel_+_tank]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_fuel_+_tank
*CAT: n
*SEM: twoRel[rel=inside_+_fuel_+_tank]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_fuel_+_tank
*CAT: n
*SEM: twoRel[rel=inside_+_fuel_+_tank]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_fuel_+_tank
*CAT: n
*SEM: orRel[rel=inside_+_fuel_+_tank]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_tape_+_asna5107-b
*CAT: n
*SEM: unaryRel[rel=black_+_tape_+_asna5107-b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_tape_+_asna5107-b
*CAT: n
*SEM: twoRel[rel=black_+_tape_+_asna5107-b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_tape_+_asna5107-b
*CAT: n
*SEM: twoRel[rel=black_+_tape_+_asna5107-b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_tape_+_asna5107-b
*CAT: n
*SEM: orRel[rel=black_+_tape_+_asna5107-b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_other
*CAT: n
*SEM: unaryRel[rel=each_+_other]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_other
*CAT: n
*SEM: twoRel[rel=each_+_other]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_other
*CAT: n
*SEM: twoRel[rel=each_+_other]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_other
*CAT: n
*SEM: orRel[rel=each_+_other]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_air
*CAT: n
*SEM: unaryRel[rel=hot_+_air]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_air
*CAT: n
*SEM: twoRel[rel=hot_+_air]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_air
*CAT: n
*SEM: twoRel[rel=hot_+_air]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_air
*CAT: n
*SEM: orRel[rel=hot_+_air]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation
*CAT: n
*SEM: unaryRel[rel=installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation
*CAT: n
*SEM: twoRel[rel=installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation
*CAT: n
*SEM: twoRel[rel=installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation
*CAT: n
*SEM: orRel[rel=installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: failure_+_of_+_one_+_attachment_+_point_+__-_opensb_-_loap_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=failure_+_of_+_one_+_attachment_+_point_+__-_opensb_-_loap_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: failure_+_of_+_one_+_attachment_+_point_+__-_opensb_-_loap_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=failure_+_of_+_one_+_attachment_+_point_+__-_opensb_-_loap_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: failure_+_of_+_one_+_attachment_+_point_+__-_opensb_-_loap_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=failure_+_of_+_one_+_attachment_+_point_+__-_opensb_-_loap_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: failure_+_of_+_one_+_attachment_+_point_+__-_opensb_-_loap_-_closesb_-_
*CAT: n
*SEM: orRel[rel=failure_+_of_+_one_+_attachment_+_point_+__-_opensb_-_loap_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_bundle_+_operationg_+_temperature
*CAT: n
*SEM: unaryRel[rel=maximum_+_bundle_+_operationg_+_temperature]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_bundle_+_operationg_+_temperature
*CAT: n
*SEM: twoRel[rel=maximum_+_bundle_+_operationg_+_temperature]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_bundle_+_operationg_+_temperature
*CAT: n
*SEM: twoRel[rel=maximum_+_bundle_+_operationg_+_temperature]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_bundle_+_operationg_+_temperature
*CAT: n
*SEM: orRel[rel=maximum_+_bundle_+_operationg_+_temperature]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tha_+_backshell
*CAT: n
*SEM: unaryRel[rel=tha_+_backshell]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tha_+_backshell
*CAT: n
*SEM: twoRel[rel=tha_+_backshell]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tha_+_backshell
*CAT: n
*SEM: twoRel[rel=tha_+_backshell]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tha_+_backshell
*CAT: n
*SEM: orRel[rel=tha_+_backshell]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then_+_pin1
*CAT: n
*SEM: unaryRel[rel=then_+_pin1]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then_+_pin1
*CAT: n
*SEM: twoRel[rel=then_+_pin1]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then_+_pin1
*CAT: n
*SEM: twoRel[rel=then_+_pin1]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then_+_pin1
*CAT: n
*SEM: orRel[rel=then_+_pin1]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_attachment_+_device_+_asne0664_+_type
*CAT: n
*SEM: unaryRel[rel=on_+_attachment_+_device_+_asne0664_+_type]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_attachment_+_device_+_asne0664_+_type
*CAT: n
*SEM: twoRel[rel=on_+_attachment_+_device_+_asne0664_+_type]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_attachment_+_device_+_asne0664_+_type
*CAT: n
*SEM: twoRel[rel=on_+_attachment_+_device_+_asne0664_+_type]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_attachment_+_device_+_asne0664_+_type
*CAT: n
*SEM: orRel[rel=on_+_attachment_+_device_+_asne0664_+_type]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_clamp-block
*CAT: n
*SEM: twoRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_clamp-block
*CAT: n
*SEM: twoRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_clamp-block
*CAT: n
*SEM: orRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vca
*CAT: n
*SEM: unaryRel[rel=vca]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vca
*CAT: n
*SEM: twoRel[rel=vca]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vca
*CAT: n
*SEM: twoRel[rel=vca]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vca
*CAT: n
*SEM: orRel[rel=vca]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protect_+_hydraulic_+_pipes_+_passing_+_through_+_structure_+_structure
*CAT: n
*SEM: unaryRel[rel=protect_+_hydraulic_+_pipes_+_passing_+_through_+_structure_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protect_+_hydraulic_+_pipes_+_passing_+_through_+_structure_+_structure
*CAT: n
*SEM: twoRel[rel=protect_+_hydraulic_+_pipes_+_passing_+_through_+_structure_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protect_+_hydraulic_+_pipes_+_passing_+_through_+_structure_+_structure
*CAT: n
*SEM: twoRel[rel=protect_+_hydraulic_+_pipes_+_passing_+_through_+_structure_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protect_+_hydraulic_+_pipes_+_passing_+_through_+_structure_+_structure
*CAT: n
*SEM: orRel[rel=protect_+_hydraulic_+_pipes_+_passing_+_through_+_structure_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_provision
*CAT: n
*SEM: unaryRel[rel=spare_+_provision]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_provision
*CAT: n
*SEM: twoRel[rel=spare_+_provision]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_provision
*CAT: n
*SEM: twoRel[rel=spare_+_provision]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_provision
*CAT: n
*SEM: orRel[rel=spare_+_provision]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0000_+_45_-_degrees_-_
*CAT: n
*SEM: unaryRel[rel=0000_+_45_-_degrees_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0000_+_45_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=0000_+_45_-_degrees_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0000_+_45_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=0000_+_45_-_degrees_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0000_+_45_-_degrees_-_
*CAT: n
*SEM: orRel[rel=0000_+_45_-_degrees_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 935513-01_+_to_+_05
*CAT: n
*SEM: unaryRel[rel=935513-01_+_to_+_05]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 935513-01_+_to_+_05
*CAT: n
*SEM: twoRel[rel=935513-01_+_to_+_05]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 935513-01_+_to_+_05
*CAT: n
*SEM: twoRel[rel=935513-01_+_to_+_05]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 935513-01_+_to_+_05
*CAT: n
*SEM: orRel[rel=935513-01_+_to_+_05]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_2997_+_connector
*CAT: n
*SEM: unaryRel[rel=en_+_2997_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_2997_+_connector
*CAT: n
*SEM: twoRel[rel=en_+_2997_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_2997_+_connector
*CAT: n
*SEM: twoRel[rel=en_+_2997_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_2997_+_connector
*CAT: n
*SEM: orRel[rel=en_+_2997_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unsued_+_bases_+_of_+_relay
*CAT: n
*SEM: unaryRel[rel=unsued_+_bases_+_of_+_relay]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unsued_+_bases_+_of_+_relay
*CAT: n
*SEM: twoRel[rel=unsued_+_bases_+_of_+_relay]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unsued_+_bases_+_of_+_relay
*CAT: n
*SEM: twoRel[rel=unsued_+_bases_+_of_+_relay]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unsued_+_bases_+_of_+_relay
*CAT: n
*SEM: orRel[rel=unsued_+_bases_+_of_+_relay]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: paint_+_finish_+_inline
*CAT: n
*SEM: unaryRel[rel=paint_+_finish_+_inline]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: paint_+_finish_+_inline
*CAT: n
*SEM: twoRel[rel=paint_+_finish_+_inline]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: paint_+_finish_+_inline
*CAT: n
*SEM: twoRel[rel=paint_+_finish_+_inline]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: paint_+_finish_+_inline
*CAT: n
*SEM: orRel[rel=paint_+_finish_+_inline]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: monitoring_+_cables
*CAT: n
*SEM: unaryRel[rel=monitoring_+_cables]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: monitoring_+_cables
*CAT: n
*SEM: twoRel[rel=monitoring_+_cables]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: monitoring_+_cables
*CAT: n
*SEM: twoRel[rel=monitoring_+_cables]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: monitoring_+_cables
*CAT: n
*SEM: orRel[rel=monitoring_+_cables]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_distance
*CAT: n
*SEM: unaryRel[rel=this_+_distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_distance
*CAT: n
*SEM: twoRel[rel=this_+_distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_distance
*CAT: n
*SEM: twoRel[rel=this_+_distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_distance
*CAT: n
*SEM: orRel[rel=this_+_distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-d01
*CAT: n
*SEM: unaryRel[rel=abs1576-d01]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-d01
*CAT: n
*SEM: twoRel[rel=abs1576-d01]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-d01
*CAT: n
*SEM: twoRel[rel=abs1576-d01]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-d01
*CAT: n
*SEM: orRel[rel=abs1576-d01]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_optimal_+_length_+_be_+__-_lessthan_-__+_4_+_metres
*CAT: n
*SEM: unaryRel[rel=an_+_optimal_+_length_+_be_+__-_lessthan_-__+_4_+_metres]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_optimal_+_length_+_be_+__-_lessthan_-__+_4_+_metres
*CAT: n
*SEM: twoRel[rel=an_+_optimal_+_length_+_be_+__-_lessthan_-__+_4_+_metres]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_optimal_+_length_+_be_+__-_lessthan_-__+_4_+_metres
*CAT: n
*SEM: twoRel[rel=an_+_optimal_+_length_+_be_+__-_lessthan_-__+_4_+_metres]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_optimal_+_length_+_be_+__-_lessthan_-__+_4_+_metres
*CAT: n
*SEM: orRel[rel=an_+_optimal_+_length_+_be_+__-_lessthan_-__+_4_+_metres]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_fixed_+_bracket_+__-_opensb_-_a_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=conductive_+_fixed_+_bracket_+__-_opensb_-_a_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_fixed_+_bracket_+__-_opensb_-_a_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=conductive_+_fixed_+_bracket_+__-_opensb_-_a_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_fixed_+_bracket_+__-_opensb_-_a_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=conductive_+_fixed_+_bracket_+__-_opensb_-_a_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_fixed_+_bracket_+__-_opensb_-_a_-_closesb_-_
*CAT: n
*SEM: orRel[rel=conductive_+_fixed_+_bracket_+__-_opensb_-_a_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer
*CAT: n
*SEM: unaryRel[rel=stringer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer
*CAT: n
*SEM: twoRel[rel=stringer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer
*CAT: n
*SEM: twoRel[rel=stringer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer
*CAT: n
*SEM: orRel[rel=stringer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness
*CAT: n
*SEM: unaryRel[rel=harness]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness
*CAT: n
*SEM: twoRel[rel=harness]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness
*CAT: n
*SEM: twoRel[rel=harness]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness
*CAT: n
*SEM: orRel[rel=harness]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna_+_5107-b_+_black_+_tape_+_at_+_the_+_level_+_of_+_the_+_fixation
*CAT: n
*SEM: unaryRel[rel=asna_+_5107-b_+_black_+_tape_+_at_+_the_+_level_+_of_+_the_+_fixation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna_+_5107-b_+_black_+_tape_+_at_+_the_+_level_+_of_+_the_+_fixation
*CAT: n
*SEM: twoRel[rel=asna_+_5107-b_+_black_+_tape_+_at_+_the_+_level_+_of_+_the_+_fixation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna_+_5107-b_+_black_+_tape_+_at_+_the_+_level_+_of_+_the_+_fixation
*CAT: n
*SEM: twoRel[rel=asna_+_5107-b_+_black_+_tape_+_at_+_the_+_level_+_of_+_the_+_fixation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna_+_5107-b_+_black_+_tape_+_at_+_the_+_level_+_of_+_the_+_fixation
*CAT: n
*SEM: orRel[rel=asna_+_5107-b_+_black_+_tape_+_at_+_the_+_level_+_of_+_the_+_fixation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2017_+_high_+_pressure_+_lines
*CAT: n
*SEM: unaryRel[rel=abs2017_+_high_+_pressure_+_lines]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2017_+_high_+_pressure_+_lines
*CAT: n
*SEM: twoRel[rel=abs2017_+_high_+_pressure_+_lines]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2017_+_high_+_pressure_+_lines
*CAT: n
*SEM: twoRel[rel=abs2017_+_high_+_pressure_+_lines]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2017_+_high_+_pressure_+_lines
*CAT: n
*SEM: orRel[rel=abs2017_+_high_+_pressure_+_lines]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: corner
*CAT: n
*SEM: unaryRel[rel=corner]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: corner
*CAT: n
*SEM: twoRel[rel=corner]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: corner
*CAT: n
*SEM: twoRel[rel=corner]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: corner
*CAT: n
*SEM: orRel[rel=corner]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nas1763
*CAT: n
*SEM: unaryRel[rel=nas1763]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nas1763
*CAT: n
*SEM: twoRel[rel=nas1763]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nas1763
*CAT: n
*SEM: twoRel[rel=nas1763]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nas1763
*CAT: n
*SEM: orRel[rel=nas1763]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: addition_+_to_+_the
*CAT: n
*SEM: unaryRel[rel=addition_+_to_+_the]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: addition_+_to_+_the
*CAT: n
*SEM: twoRel[rel=addition_+_to_+_the]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: addition_+_to_+_the
*CAT: n
*SEM: twoRel[rel=addition_+_to_+_the]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: addition_+_to_+_the
*CAT: n
*SEM: orRel[rel=addition_+_to_+_the]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937502_+_shrink_+_sleeve
*CAT: n
*SEM: unaryRel[rel=nsa_+_937502_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937502_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa_+_937502_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937502_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa_+_937502_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937502_+_shrink_+_sleeve
*CAT: n
*SEM: orRel[rel=nsa_+_937502_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_wires_+_of_+_gauge_+_22
*CAT: n
*SEM: unaryRel[rel=2_+_wires_+_of_+_gauge_+_22]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_wires_+_of_+_gauge_+_22
*CAT: n
*SEM: twoRel[rel=2_+_wires_+_of_+_gauge_+_22]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_wires_+_of_+_gauge_+_22
*CAT: n
*SEM: twoRel[rel=2_+_wires_+_of_+_gauge_+_22]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_wires_+_of_+_gauge_+_22
*CAT: n
*SEM: orRel[rel=2_+_wires_+_of_+_gauge_+_22]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repairs
*CAT: n
*SEM: unaryRel[rel=repairs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repairs
*CAT: n
*SEM: twoRel[rel=repairs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repairs
*CAT: n
*SEM: twoRel[rel=repairs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repairs
*CAT: n
*SEM: orRel[rel=repairs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=movable_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=movable_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=movable_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=movable_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_pra
*CAT: n
*SEM: unaryRel[rel=account_+_pra]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_pra
*CAT: n
*SEM: twoRel[rel=account_+_pra]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_pra
*CAT: n
*SEM: twoRel[rel=account_+_pra]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_pra
*CAT: n
*SEM: orRel[rel=account_+_pra]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_orientation_+_shown_+_in_+_the_+_picture_+_below.
*CAT: n
*SEM: unaryRel[rel=an_+_orientation_+_shown_+_in_+_the_+_picture_+_below.]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_orientation_+_shown_+_in_+_the_+_picture_+_below.
*CAT: n
*SEM: twoRel[rel=an_+_orientation_+_shown_+_in_+_the_+_picture_+_below.]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_orientation_+_shown_+_in_+_the_+_picture_+_below.
*CAT: n
*SEM: twoRel[rel=an_+_orientation_+_shown_+_in_+_the_+_picture_+_below.]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_orientation_+_shown_+_in_+_the_+_picture_+_below.
*CAT: n
*SEM: orRel[rel=an_+_orientation_+_shown_+_in_+_the_+_picture_+_below.]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: white_+_background
*CAT: n
*SEM: unaryRel[rel=white_+_background]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: white_+_background
*CAT: n
*SEM: twoRel[rel=white_+_background]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: white_+_background
*CAT: n
*SEM: twoRel[rel=white_+_background]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: white_+_background
*CAT: n
*SEM: orRel[rel=white_+_background]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_frangible_+_paint
*CAT: n
*SEM: unaryRel[rel=red_+_frangible_+_paint]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_frangible_+_paint
*CAT: n
*SEM: twoRel[rel=red_+_frangible_+_paint]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_frangible_+_paint
*CAT: n
*SEM: twoRel[rel=red_+_frangible_+_paint]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_frangible_+_paint
*CAT: n
*SEM: orRel[rel=red_+_frangible_+_paint]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: unaryRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: twoRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: twoRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: orRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: axial_+_movement_+_a_+_minimum_+_clearance_+_value
*CAT: n
*SEM: unaryRel[rel=axial_+_movement_+_a_+_minimum_+_clearance_+_value]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: axial_+_movement_+_a_+_minimum_+_clearance_+_value
*CAT: n
*SEM: twoRel[rel=axial_+_movement_+_a_+_minimum_+_clearance_+_value]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: axial_+_movement_+_a_+_minimum_+_clearance_+_value
*CAT: n
*SEM: twoRel[rel=axial_+_movement_+_a_+_minimum_+_clearance_+_value]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: axial_+_movement_+_a_+_minimum_+_clearance_+_value
*CAT: n
*SEM: orRel[rel=axial_+_movement_+_a_+_minimum_+_clearance_+_value]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_c_+_0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_type_+_c_+_0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_c_+_0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_c_+_0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_c_+_0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_c_+_0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_c_+_0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd
*CAT: n
*SEM: orRel[rel=p-clamp_+_type_+_c_+_0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_unions
*CAT: n
*SEM: unaryRel[rel=removable_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_unions
*CAT: n
*SEM: twoRel[rel=removable_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_unions
*CAT: n
*SEM: twoRel[rel=removable_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_unions
*CAT: n
*SEM: orRel[rel=removable_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_contamination_+_of_+_other_+_systems_+_in_+_close_+_proximity
*CAT: n
*SEM: unaryRel[rel=prevent_+_contamination_+_of_+_other_+_systems_+_in_+_close_+_proximity]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_contamination_+_of_+_other_+_systems_+_in_+_close_+_proximity
*CAT: n
*SEM: twoRel[rel=prevent_+_contamination_+_of_+_other_+_systems_+_in_+_close_+_proximity]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_contamination_+_of_+_other_+_systems_+_in_+_close_+_proximity
*CAT: n
*SEM: twoRel[rel=prevent_+_contamination_+_of_+_other_+_systems_+_in_+_close_+_proximity]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_contamination_+_of_+_other_+_systems_+_in_+_close_+_proximity
*CAT: n
*SEM: orRel[rel=prevent_+_contamination_+_of_+_other_+_systems_+_in_+_close_+_proximity]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_sides_+_or
*CAT: n
*SEM: unaryRel[rel=both_+_sides_+_or]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_sides_+_or
*CAT: n
*SEM: twoRel[rel=both_+_sides_+_or]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_sides_+_or
*CAT: n
*SEM: twoRel[rel=both_+_sides_+_or]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_sides_+_or
*CAT: n
*SEM: orRel[rel=both_+_sides_+_or]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: point
*CAT: n
*SEM: unaryRel[rel=point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: point
*CAT: n
*SEM: twoRel[rel=point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: point
*CAT: n
*SEM: twoRel[rel=point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: point
*CAT: n
*SEM: orRel[rel=point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device_+_asne0664_+_type
*CAT: n
*SEM: unaryRel[rel=attachment_+_device_+_asne0664_+_type]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device_+_asne0664_+_type
*CAT: n
*SEM: twoRel[rel=attachment_+_device_+_asne0664_+_type]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device_+_asne0664_+_type
*CAT: n
*SEM: twoRel[rel=attachment_+_device_+_asne0664_+_type]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device_+_asne0664_+_type
*CAT: n
*SEM: orRel[rel=attachment_+_device_+_asne0664_+_type]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer_+_p5
*CAT: n
*SEM: unaryRel[rel=stringer_+_p5]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer_+_p5
*CAT: n
*SEM: twoRel[rel=stringer_+_p5]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer_+_p5
*CAT: n
*SEM: twoRel[rel=stringer_+_p5]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer_+_p5
*CAT: n
*SEM: orRel[rel=stringer_+_p5]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: boltor_+_rivetor_+_clip
*CAT: n
*SEM: unaryRel[rel=boltor_+_rivetor_+_clip]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: boltor_+_rivetor_+_clip
*CAT: n
*SEM: twoRel[rel=boltor_+_rivetor_+_clip]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: boltor_+_rivetor_+_clip
*CAT: n
*SEM: twoRel[rel=boltor_+_rivetor_+_clip]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: boltor_+_rivetor_+_clip
*CAT: n
*SEM: orRel[rel=boltor_+_rivetor_+_clip]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cockpit_+_vu
*CAT: n
*SEM: unaryRel[rel=cockpit_+_vu]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cockpit_+_vu
*CAT: n
*SEM: twoRel[rel=cockpit_+_vu]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cockpit_+_vu
*CAT: n
*SEM: twoRel[rel=cockpit_+_vu]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cockpit_+_vu
*CAT: n
*SEM: orRel[rel=cockpit_+_vu]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp
*CAT: n
*SEM: unaryRel[rel=cfrp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp
*CAT: n
*SEM: twoRel[rel=cfrp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp
*CAT: n
*SEM: twoRel[rel=cfrp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp
*CAT: n
*SEM: orRel[rel=cfrp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_way
*CAT: n
*SEM: unaryRel[rel=four_+_way]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_way
*CAT: n
*SEM: twoRel[rel=four_+_way]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_way
*CAT: n
*SEM: twoRel[rel=four_+_way]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_way
*CAT: n
*SEM: orRel[rel=four_+_way]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: usind_+_attachment_+_devices
*CAT: n
*SEM: unaryRel[rel=usind_+_attachment_+_devices]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: usind_+_attachment_+_devices
*CAT: n
*SEM: twoRel[rel=usind_+_attachment_+_devices]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: usind_+_attachment_+_devices
*CAT: n
*SEM: twoRel[rel=usind_+_attachment_+_devices]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: usind_+_attachment_+_devices
*CAT: n
*SEM: orRel[rel=usind_+_attachment_+_devices]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: telephone
*CAT: n
*SEM: unaryRel[rel=telephone]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: telephone
*CAT: n
*SEM: twoRel[rel=telephone]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: telephone
*CAT: n
*SEM: twoRel[rel=telephone]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: telephone
*CAT: n
*SEM: orRel[rel=telephone]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tightening
*CAT: n
*SEM: unaryRel[rel=tightening]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tightening
*CAT: n
*SEM: twoRel[rel=tightening]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tightening
*CAT: n
*SEM: twoRel[rel=tightening]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tightening
*CAT: n
*SEM: orRel[rel=tightening]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0127_+_cable_+_retainer
*CAT: n
*SEM: unaryRel[rel=abs_+_0127_+_cable_+_retainer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0127_+_cable_+_retainer
*CAT: n
*SEM: twoRel[rel=abs_+_0127_+_cable_+_retainer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0127_+_cable_+_retainer
*CAT: n
*SEM: twoRel[rel=abs_+_0127_+_cable_+_retainer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0127_+_cable_+_retainer
*CAT: n
*SEM: orRel[rel=abs_+_0127_+_cable_+_retainer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as21905
*CAT: n
*SEM: unaryRel[rel=as21905]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as21905
*CAT: n
*SEM: twoRel[rel=as21905]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as21905
*CAT: n
*SEM: twoRel[rel=as21905]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as21905
*CAT: n
*SEM: orRel[rel=as21905]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_blocks
*CAT: n
*SEM: unaryRel[rel=terminal_+_blocks]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_blocks
*CAT: n
*SEM: twoRel[rel=terminal_+_blocks]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_blocks
*CAT: n
*SEM: twoRel[rel=terminal_+_blocks]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_blocks
*CAT: n
*SEM: orRel[rel=terminal_+_blocks]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_structureor
*CAT: n
*SEM: unaryRel[rel=aircraft_+_structureor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_structureor
*CAT: n
*SEM: twoRel[rel=aircraft_+_structureor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_structureor
*CAT: n
*SEM: twoRel[rel=aircraft_+_structureor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_structureor
*CAT: n
*SEM: orRel[rel=aircraft_+_structureor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: emi_+_protection
*CAT: n
*SEM: unaryRel[rel=emi_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: emi_+_protection
*CAT: n
*SEM: twoRel[rel=emi_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: emi_+_protection
*CAT: n
*SEM: twoRel[rel=emi_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: emi_+_protection
*CAT: n
*SEM: orRel[rel=emi_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1353_+_overbraiding
*CAT: n
*SEM: unaryRel[rel=abs1353_+_overbraiding]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1353_+_overbraiding
*CAT: n
*SEM: twoRel[rel=abs1353_+_overbraiding]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1353_+_overbraiding
*CAT: n
*SEM: twoRel[rel=abs1353_+_overbraiding]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1353_+_overbraiding
*CAT: n
*SEM: orRel[rel=abs1353_+_overbraiding]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_stress
*CAT: n
*SEM: unaryRel[rel=e.g._+_stress]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_stress
*CAT: n
*SEM: twoRel[rel=e.g._+_stress]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_stress
*CAT: n
*SEM: twoRel[rel=e.g._+_stress]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_stress
*CAT: n
*SEM: orRel[rel=e.g._+_stress]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10_-_degrees_-__+_measured
*CAT: n
*SEM: unaryRel[rel=10_-_degrees_-__+_measured]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10_-_degrees_-__+_measured
*CAT: n
*SEM: twoRel[rel=10_-_degrees_-__+_measured]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10_-_degrees_-__+_measured
*CAT: n
*SEM: twoRel[rel=10_-_degrees_-__+_measured]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10_-_degrees_-__+_measured
*CAT: n
*SEM: orRel[rel=10_-_degrees_-__+_measured]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_12_+_mm
*CAT: n
*SEM: unaryRel[rel=least_+_12_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_12_+_mm
*CAT: n
*SEM: twoRel[rel=least_+_12_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_12_+_mm
*CAT: n
*SEM: twoRel[rel=least_+_12_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_12_+_mm
*CAT: n
*SEM: orRel[rel=least_+_12_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure
*CAT: n
*SEM: unaryRel[rel=fixed_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure
*CAT: n
*SEM: twoRel[rel=fixed_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure
*CAT: n
*SEM: twoRel[rel=fixed_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure
*CAT: n
*SEM: orRel[rel=fixed_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: a
*CAT: n
*SEM: unaryRel[rel=a]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: a
*CAT: n
*SEM: twoRel[rel=a]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: a
*CAT: n
*SEM: twoRel[rel=a]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: a
*CAT: n
*SEM: orRel[rel=a]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top.or_+_when_+_rail
*CAT: n
*SEM: unaryRel[rel=top.or_+_when_+_rail]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top.or_+_when_+_rail
*CAT: n
*SEM: twoRel[rel=top.or_+_when_+_rail]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top.or_+_when_+_rail
*CAT: n
*SEM: twoRel[rel=top.or_+_when_+_rail]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top.or_+_when_+_rail
*CAT: n
*SEM: orRel[rel=top.or_+_when_+_rail]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_connector_+_plate
*CAT: n
*SEM: unaryRel[rel=dedicated_+_connector_+_plate]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_connector_+_plate
*CAT: n
*SEM: twoRel[rel=dedicated_+_connector_+_plate]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_connector_+_plate
*CAT: n
*SEM: twoRel[rel=dedicated_+_connector_+_plate]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_connector_+_plate
*CAT: n
*SEM: orRel[rel=dedicated_+_connector_+_plate]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-__+_style_+_a_+_''_+_saddle
*CAT: n
*SEM: unaryRel[rel=_-_invcomma_-__+_style_+_a_+_''_+_saddle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-__+_style_+_a_+_''_+_saddle
*CAT: n
*SEM: twoRel[rel=_-_invcomma_-__+_style_+_a_+_''_+_saddle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-__+_style_+_a_+_''_+_saddle
*CAT: n
*SEM: twoRel[rel=_-_invcomma_-__+_style_+_a_+_''_+_saddle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-__+_style_+_a_+_''_+_saddle
*CAT: n
*SEM: orRel[rel=_-_invcomma_-__+_style_+_a_+_''_+_saddle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: opposed_+_directions
*CAT: n
*SEM: unaryRel[rel=opposed_+_directions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: opposed_+_directions
*CAT: n
*SEM: twoRel[rel=opposed_+_directions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: opposed_+_directions
*CAT: n
*SEM: twoRel[rel=opposed_+_directions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: opposed_+_directions
*CAT: n
*SEM: orRel[rel=opposed_+_directions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: the_+_safety_+_cables
*CAT: n
*SEM: unaryRel[rel=the_+_safety_+_cables]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: the_+_safety_+_cables
*CAT: n
*SEM: twoRel[rel=the_+_safety_+_cables]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: the_+_safety_+_cables
*CAT: n
*SEM: twoRel[rel=the_+_safety_+_cables]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: the_+_safety_+_cables
*CAT: n
*SEM: orRel[rel=the_+_safety_+_cables]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2.1_-_plusminus_-_10_+__-_percent_-__+_nm
*CAT: n
*SEM: unaryRel[rel=2.1_-_plusminus_-_10_+__-_percent_-__+_nm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2.1_-_plusminus_-_10_+__-_percent_-__+_nm
*CAT: n
*SEM: twoRel[rel=2.1_-_plusminus_-_10_+__-_percent_-__+_nm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2.1_-_plusminus_-_10_+__-_percent_-__+_nm
*CAT: n
*SEM: twoRel[rel=2.1_-_plusminus_-_10_+__-_percent_-__+_nm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2.1_-_plusminus_-_10_+__-_percent_-__+_nm
*CAT: n
*SEM: orRel[rel=2.1_-_plusminus_-_10_+__-_percent_-__+_nm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rod
*CAT: n
*SEM: unaryRel[rel=rod]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rod
*CAT: n
*SEM: twoRel[rel=rod]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rod
*CAT: n
*SEM: twoRel[rel=rod]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rod
*CAT: n
*SEM: orRel[rel=rod]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modification_+_of_+_overbraided_+_bundle_+_is_+_necessary
*CAT: n
*SEM: unaryRel[rel=modification_+_of_+_overbraided_+_bundle_+_is_+_necessary]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modification_+_of_+_overbraided_+_bundle_+_is_+_necessary
*CAT: n
*SEM: twoRel[rel=modification_+_of_+_overbraided_+_bundle_+_is_+_necessary]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modification_+_of_+_overbraided_+_bundle_+_is_+_necessary
*CAT: n
*SEM: twoRel[rel=modification_+_of_+_overbraided_+_bundle_+_is_+_necessary]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modification_+_of_+_overbraided_+_bundle_+_is_+_necessary
*CAT: n
*SEM: orRel[rel=modification_+_of_+_overbraided_+_bundle_+_is_+_necessary]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: min_+_d_-_greaterThan_-__-_equalto_-_5mm._+_this_+_distance
*CAT: n
*SEM: unaryRel[rel=min_+_d_-_greaterThan_-__-_equalto_-_5mm._+_this_+_distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: min_+_d_-_greaterThan_-__-_equalto_-_5mm._+_this_+_distance
*CAT: n
*SEM: twoRel[rel=min_+_d_-_greaterThan_-__-_equalto_-_5mm._+_this_+_distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: min_+_d_-_greaterThan_-__-_equalto_-_5mm._+_this_+_distance
*CAT: n
*SEM: twoRel[rel=min_+_d_-_greaterThan_-__-_equalto_-_5mm._+_this_+_distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: min_+_d_-_greaterThan_-__-_equalto_-_5mm._+_this_+_distance
*CAT: n
*SEM: orRel[rel=min_+_d_-_greaterThan_-__-_equalto_-_5mm._+_this_+_distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_structure
*CAT: n
*SEM: unaryRel[rel=to_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_structure
*CAT: n
*SEM: twoRel[rel=to_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_structure
*CAT: n
*SEM: twoRel[rel=to_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_structure
*CAT: n
*SEM: orRel[rel=to_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: skin
*CAT: n
*SEM: unaryRel[rel=skin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: skin
*CAT: n
*SEM: twoRel[rel=skin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: skin
*CAT: n
*SEM: twoRel[rel=skin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: skin
*CAT: n
*SEM: orRel[rel=skin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_at_+_electrical_+_interface_+_showing_+_functional_+_item
*CAT: n
*SEM: unaryRel[rel=vu_+_at_+_electrical_+_interface_+_showing_+_functional_+_item]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_at_+_electrical_+_interface_+_showing_+_functional_+_item
*CAT: n
*SEM: twoRel[rel=vu_+_at_+_electrical_+_interface_+_showing_+_functional_+_item]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_at_+_electrical_+_interface_+_showing_+_functional_+_item
*CAT: n
*SEM: twoRel[rel=vu_+_at_+_electrical_+_interface_+_showing_+_functional_+_item]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_at_+_electrical_+_interface_+_showing_+_functional_+_item
*CAT: n
*SEM: orRel[rel=vu_+_at_+_electrical_+_interface_+_showing_+_functional_+_item]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cavity
*CAT: n
*SEM: unaryRel[rel=cavity]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cavity
*CAT: n
*SEM: twoRel[rel=cavity]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cavity
*CAT: n
*SEM: twoRel[rel=cavity]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cavity
*CAT: n
*SEM: orRel[rel=cavity]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_t_-_degrees_-__+_bobbin
*CAT: n
*SEM: unaryRel[rel=high_+_t_-_degrees_-__+_bobbin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_t_-_degrees_-__+_bobbin
*CAT: n
*SEM: twoRel[rel=high_+_t_-_degrees_-__+_bobbin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_t_-_degrees_-__+_bobbin
*CAT: n
*SEM: twoRel[rel=high_+_t_-_degrees_-__+_bobbin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_t_-_degrees_-__+_bobbin
*CAT: n
*SEM: orRel[rel=high_+_t_-_degrees_-__+_bobbin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_col_obj2
*CAT: n
*SEM: unaryRel[rel=np_col_obj2]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_col_obj2
*CAT: n
*SEM: twoRel[rel=np_col_obj2]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_col_obj2
*CAT: n
*SEM: twoRel[rel=np_col_obj2]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_col_obj2
*CAT: n
*SEM: orRel[rel=np_col_obj2]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_3x_+_diameter_+_minimum
*CAT: n
*SEM: unaryRel[rel=bend_+_3x_+_diameter_+_minimum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_3x_+_diameter_+_minimum
*CAT: n
*SEM: twoRel[rel=bend_+_3x_+_diameter_+_minimum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_3x_+_diameter_+_minimum
*CAT: n
*SEM: twoRel[rel=bend_+_3x_+_diameter_+_minimum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_3x_+_diameter_+_minimum
*CAT: n
*SEM: orRel[rel=bend_+_3x_+_diameter_+_minimum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label
*CAT: n
*SEM: unaryRel[rel=label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label
*CAT: n
*SEM: twoRel[rel=label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label
*CAT: n
*SEM: twoRel[rel=label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label
*CAT: n
*SEM: orRel[rel=label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_connectors
*CAT: n
*SEM: unaryRel[rel=electrical_+_connectors]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_connectors
*CAT: n
*SEM: twoRel[rel=electrical_+_connectors]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_connectors
*CAT: n
*SEM: twoRel[rel=electrical_+_connectors]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_connectors
*CAT: n
*SEM: orRel[rel=electrical_+_connectors]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_modification
*CAT: n
*SEM: unaryRel[rel=unprotected_+_modification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_modification
*CAT: n
*SEM: twoRel[rel=unprotected_+_modification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_modification
*CAT: n
*SEM: twoRel[rel=unprotected_+_modification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_modification
*CAT: n
*SEM: orRel[rel=unprotected_+_modification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: such_+_a_+_way_+_that_+_individual_+_removal
*CAT: n
*SEM: unaryRel[rel=such_+_a_+_way_+_that_+_individual_+_removal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: such_+_a_+_way_+_that_+_individual_+_removal
*CAT: n
*SEM: twoRel[rel=such_+_a_+_way_+_that_+_individual_+_removal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: such_+_a_+_way_+_that_+_individual_+_removal
*CAT: n
*SEM: twoRel[rel=such_+_a_+_way_+_that_+_individual_+_removal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: such_+_a_+_way_+_that_+_individual_+_removal
*CAT: n
*SEM: orRel[rel=such_+_a_+_way_+_that_+_individual_+_removal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vca_+_on_+_moving_+_plugs._+_or
*CAT: n
*SEM: unaryRel[rel=vca_+_on_+_moving_+_plugs._+_or]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vca_+_on_+_moving_+_plugs._+_or
*CAT: n
*SEM: twoRel[rel=vca_+_on_+_moving_+_plugs._+_or]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vca_+_on_+_moving_+_plugs._+_or
*CAT: n
*SEM: twoRel[rel=vca_+_on_+_moving_+_plugs._+_or]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vca_+_on_+_moving_+_plugs._+_or
*CAT: n
*SEM: orRel[rel=vca_+_on_+_moving_+_plugs._+_or]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_r-route
*CAT: n
*SEM: unaryRel[rel=pre_+_stressed_+_r-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_r-route
*CAT: n
*SEM: twoRel[rel=pre_+_stressed_+_r-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_r-route
*CAT: n
*SEM: twoRel[rel=pre_+_stressed_+_r-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_r-route
*CAT: n
*SEM: orRel[rel=pre_+_stressed_+_r-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_lugs
*CAT: n
*SEM: unaryRel[rel=feeder_+_lugs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_lugs
*CAT: n
*SEM: twoRel[rel=feeder_+_lugs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_lugs
*CAT: n
*SEM: twoRel[rel=feeder_+_lugs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_lugs
*CAT: n
*SEM: orRel[rel=feeder_+_lugs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: yellow_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=yellow_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: yellow_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=yellow_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: yellow_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=yellow_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: yellow_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=yellow_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 200mm
*CAT: n
*SEM: unaryRel[rel=200mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 200mm
*CAT: n
*SEM: twoRel[rel=200mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 200mm
*CAT: n
*SEM: twoRel[rel=200mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 200mm
*CAT: n
*SEM: orRel[rel=200mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0126_+_shrink_+_sleeve
*CAT: n
*SEM: unaryRel[rel=asne_+_0126_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0126_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=asne_+_0126_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0126_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=asne_+_0126_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0126_+_shrink_+_sleeve
*CAT: n
*SEM: orRel[rel=asne_+_0126_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+_when_+_conduit_+_longer
*CAT: n
*SEM: unaryRel[rel=conduit_+_when_+_conduit_+_longer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+_when_+_conduit_+_longer
*CAT: n
*SEM: twoRel[rel=conduit_+_when_+_conduit_+_longer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+_when_+_conduit_+_longer
*CAT: n
*SEM: twoRel[rel=conduit_+_when_+_conduit_+_longer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+_when_+_conduit_+_longer
*CAT: n
*SEM: orRel[rel=conduit_+_when_+_conduit_+_longer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_this
*CAT: n
*SEM: unaryRel[rel=ensure_+_this]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_this
*CAT: n
*SEM: twoRel[rel=ensure_+_this]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_this
*CAT: n
*SEM: twoRel[rel=ensure_+_this]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_this
*CAT: n
*SEM: orRel[rel=ensure_+_this]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_traverse
*CAT: n
*SEM: unaryRel[rel=non_+_conductive_+_traverse]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_traverse
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_traverse]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_traverse
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_traverse]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_traverse
*CAT: n
*SEM: orRel[rel=non_+_conductive_+_traverse]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: compliant
*CAT: n
*SEM: unaryRel[rel=compliant]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: compliant
*CAT: n
*SEM: twoRel[rel=compliant]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: compliant
*CAT: n
*SEM: twoRel[rel=compliant]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: compliant
*CAT: n
*SEM: orRel[rel=compliant]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1569_+_terminal_+_modul
*CAT: n
*SEM: unaryRel[rel=abs_+_1569_+_terminal_+_modul]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1569_+_terminal_+_modul
*CAT: n
*SEM: twoRel[rel=abs_+_1569_+_terminal_+_modul]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1569_+_terminal_+_modul
*CAT: n
*SEM: twoRel[rel=abs_+_1569_+_terminal_+_modul]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1569_+_terminal_+_modul
*CAT: n
*SEM: orRel[rel=abs_+_1569_+_terminal_+_modul]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blanket
*CAT: n
*SEM: unaryRel[rel=blanket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blanket
*CAT: n
*SEM: twoRel[rel=blanket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blanket
*CAT: n
*SEM: twoRel[rel=blanket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blanket
*CAT: n
*SEM: orRel[rel=blanket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other
*CAT: n
*SEM: unaryRel[rel=other]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other
*CAT: n
*SEM: twoRel[rel=other]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other
*CAT: n
*SEM: twoRel[rel=other]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other
*CAT: n
*SEM: orRel[rel=other]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6_+_times_+_bundle_+_diameter_+_minimum_+_when
*CAT: n
*SEM: unaryRel[rel=6_+_times_+_bundle_+_diameter_+_minimum_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6_+_times_+_bundle_+_diameter_+_minimum_+_when
*CAT: n
*SEM: twoRel[rel=6_+_times_+_bundle_+_diameter_+_minimum_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6_+_times_+_bundle_+_diameter_+_minimum_+_when
*CAT: n
*SEM: twoRel[rel=6_+_times_+_bundle_+_diameter_+_minimum_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6_+_times_+_bundle_+_diameter_+_minimum_+_when
*CAT: n
*SEM: orRel[rel=6_+_times_+_bundle_+_diameter_+_minimum_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_chafing
*CAT: n
*SEM: unaryRel[rel=prevent_+_chafing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_chafing
*CAT: n
*SEM: twoRel[rel=prevent_+_chafing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_chafing
*CAT: n
*SEM: twoRel[rel=prevent_+_chafing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_chafing
*CAT: n
*SEM: orRel[rel=prevent_+_chafing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d_+_of_+_each_+_elementary_+_bundle
*CAT: n
*SEM: unaryRel[rel=asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d_+_of_+_each_+_elementary_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d_+_of_+_each_+_elementary_+_bundle
*CAT: n
*SEM: twoRel[rel=asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d_+_of_+_each_+_elementary_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d_+_of_+_each_+_elementary_+_bundle
*CAT: n
*SEM: twoRel[rel=asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d_+_of_+_each_+_elementary_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d_+_of_+_each_+_elementary_+_bundle
*CAT: n
*SEM: orRel[rel=asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d_+_of_+_each_+_elementary_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_component
*CAT: n
*SEM: unaryRel[rel=conductive_+_component]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_component
*CAT: n
*SEM: twoRel[rel=conductive_+_component]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_component
*CAT: n
*SEM: twoRel[rel=conductive_+_component]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_component
*CAT: n
*SEM: orRel[rel=conductive_+_component]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_area
*CAT: n
*SEM: unaryRel[rel=fire_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_area
*CAT: n
*SEM: twoRel[rel=fire_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_area
*CAT: n
*SEM: twoRel[rel=fire_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_area
*CAT: n
*SEM: orRel[rel=fire_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torque
*CAT: n
*SEM: unaryRel[rel=torque]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torque
*CAT: n
*SEM: twoRel[rel=torque]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torque
*CAT: n
*SEM: twoRel[rel=torque]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torque
*CAT: n
*SEM: orRel[rel=torque]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolts_+_for_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=bolts_+_for_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolts_+_for_+_clamp-block
*CAT: n
*SEM: twoRel[rel=bolts_+_for_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolts_+_for_+_clamp-block
*CAT: n
*SEM: twoRel[rel=bolts_+_for_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolts_+_for_+_clamp-block
*CAT: n
*SEM: orRel[rel=bolts_+_for_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_of_+_drained_+_hole
*CAT: n
*SEM: unaryRel[rel=interface_+_of_+_drained_+_hole]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_of_+_drained_+_hole
*CAT: n
*SEM: twoRel[rel=interface_+_of_+_drained_+_hole]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_of_+_drained_+_hole
*CAT: n
*SEM: twoRel[rel=interface_+_of_+_drained_+_hole]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_of_+_drained_+_hole
*CAT: n
*SEM: orRel[rel=interface_+_of_+_drained_+_hole]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hat_+_racks
*CAT: n
*SEM: unaryRel[rel=hat_+_racks]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hat_+_racks
*CAT: n
*SEM: twoRel[rel=hat_+_racks]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hat_+_racks
*CAT: n
*SEM: twoRel[rel=hat_+_racks]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hat_+_racks
*CAT: n
*SEM: orRel[rel=hat_+_racks]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction
*CAT: n
*SEM: unaryRel[rel=junction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction
*CAT: n
*SEM: twoRel[rel=junction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction
*CAT: n
*SEM: twoRel[rel=junction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction
*CAT: n
*SEM: orRel[rel=junction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_protection
*CAT: n
*SEM: unaryRel[rel=fire_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_protection
*CAT: n
*SEM: twoRel[rel=fire_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_protection
*CAT: n
*SEM: twoRel[rel=fire_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_protection
*CAT: n
*SEM: orRel[rel=fire_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansions_+_as_+_far
*CAT: n
*SEM: unaryRel[rel=expansions_+_as_+_far]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansions_+_as_+_far
*CAT: n
*SEM: twoRel[rel=expansions_+_as_+_far]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansions_+_as_+_far
*CAT: n
*SEM: twoRel[rel=expansions_+_as_+_far]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansions_+_as_+_far
*CAT: n
*SEM: orRel[rel=expansions_+_as_+_far]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: etc._-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=etc._-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: etc._-_closesb_-_
*CAT: n
*SEM: twoRel[rel=etc._-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: etc._-_closesb_-_
*CAT: n
*SEM: twoRel[rel=etc._-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: etc._-_closesb_-_
*CAT: n
*SEM: orRel[rel=etc._-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: appropreate_+_routing
*CAT: n
*SEM: unaryRel[rel=appropreate_+_routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: appropreate_+_routing
*CAT: n
*SEM: twoRel[rel=appropreate_+_routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: appropreate_+_routing
*CAT: n
*SEM: twoRel[rel=appropreate_+_routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: appropreate_+_routing
*CAT: n
*SEM: orRel[rel=appropreate_+_routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_or
*CAT: n
*SEM: unaryRel[rel=black_+_or]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_or
*CAT: n
*SEM: twoRel[rel=black_+_or]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_or
*CAT: n
*SEM: twoRel[rel=black_+_or]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_or
*CAT: n
*SEM: orRel[rel=black_+_or]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: its_+_installed_+_position
*CAT: n
*SEM: unaryRel[rel=its_+_installed_+_position]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: its_+_installed_+_position
*CAT: n
*SEM: twoRel[rel=its_+_installed_+_position]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: its_+_installed_+_position
*CAT: n
*SEM: twoRel[rel=its_+_installed_+_position]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: its_+_installed_+_position
*CAT: n
*SEM: orRel[rel=its_+_installed_+_position]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cu_+_cable_+_drip_+_loop
*CAT: n
*SEM: unaryRel[rel=cu_+_cable_+_drip_+_loop]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cu_+_cable_+_drip_+_loop
*CAT: n
*SEM: twoRel[rel=cu_+_cable_+_drip_+_loop]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cu_+_cable_+_drip_+_loop
*CAT: n
*SEM: twoRel[rel=cu_+_cable_+_drip_+_loop]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cu_+_cable_+_drip_+_loop
*CAT: n
*SEM: orRel[rel=cu_+_cable_+_drip_+_loop]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_loads_-_closesb_-__+_manufacturing_+_tolerances
*CAT: n
*SEM: unaryRel[rel=installation_+_loads_-_closesb_-__+_manufacturing_+_tolerances]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_loads_-_closesb_-__+_manufacturing_+_tolerances
*CAT: n
*SEM: twoRel[rel=installation_+_loads_-_closesb_-__+_manufacturing_+_tolerances]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_loads_-_closesb_-__+_manufacturing_+_tolerances
*CAT: n
*SEM: twoRel[rel=installation_+_loads_-_closesb_-__+_manufacturing_+_tolerances]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_loads_-_closesb_-__+_manufacturing_+_tolerances
*CAT: n
*SEM: orRel[rel=installation_+_loads_-_closesb_-__+_manufacturing_+_tolerances]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nut
*CAT: n
*SEM: unaryRel[rel=nut]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nut
*CAT: n
*SEM: twoRel[rel=nut]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nut
*CAT: n
*SEM: twoRel[rel=nut]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nut
*CAT: n
*SEM: orRel[rel=nut]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_label
*CAT: n
*SEM: unaryRel[rel=metallic_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_label
*CAT: n
*SEM: twoRel[rel=metallic_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_label
*CAT: n
*SEM: twoRel[rel=metallic_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_label
*CAT: n
*SEM: orRel[rel=metallic_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_case
*CAT: n
*SEM: unaryRel[rel=any_+_case]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_case
*CAT: n
*SEM: twoRel[rel=any_+_case]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_case
*CAT: n
*SEM: twoRel[rel=any_+_case]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_case
*CAT: n
*SEM: orRel[rel=any_+_case]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: application
*CAT: n
*SEM: unaryRel[rel=application]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: application
*CAT: n
*SEM: twoRel[rel=application]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: application
*CAT: n
*SEM: twoRel[rel=application]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: application
*CAT: n
*SEM: orRel[rel=application]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alluminium_+_cables_+__+_wires
*CAT: n
*SEM: unaryRel[rel=alluminium_+_cables_+__+_wires]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alluminium_+_cables_+__+_wires
*CAT: n
*SEM: twoRel[rel=alluminium_+_cables_+__+_wires]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alluminium_+_cables_+__+_wires
*CAT: n
*SEM: twoRel[rel=alluminium_+_cables_+__+_wires]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alluminium_+_cables_+__+_wires
*CAT: n
*SEM: orRel[rel=alluminium_+_cables_+__+_wires]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coupling
*CAT: n
*SEM: unaryRel[rel=coupling]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coupling
*CAT: n
*SEM: twoRel[rel=coupling]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coupling
*CAT: n
*SEM: twoRel[rel=coupling]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coupling
*CAT: n
*SEM: orRel[rel=coupling]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre
*CAT: n
*SEM: unaryRel[rel=non_+_pre]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre
*CAT: n
*SEM: twoRel[rel=non_+_pre]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre
*CAT: n
*SEM: twoRel[rel=non_+_pre]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre
*CAT: n
*SEM: orRel[rel=non_+_pre]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: unaryRel[rel=bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: twoRel[rel=bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: twoRel[rel=bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: orRel[rel=bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna0327
*CAT: n
*SEM: unaryRel[rel=asna0327]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna0327
*CAT: n
*SEM: twoRel[rel=asna0327]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna0327
*CAT: n
*SEM: twoRel[rel=asna0327]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna0327
*CAT: n
*SEM: orRel[rel=asna0327]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616_+_sealing_+_plug
*CAT: n
*SEM: unaryRel[rel=asne0616_+_sealing_+_plug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616_+_sealing_+_plug
*CAT: n
*SEM: twoRel[rel=asne0616_+_sealing_+_plug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616_+_sealing_+_plug
*CAT: n
*SEM: twoRel[rel=asne0616_+_sealing_+_plug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616_+_sealing_+_plug
*CAT: n
*SEM: orRel[rel=asne0616_+_sealing_+_plug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate
*CAT: n
*SEM: unaryRel[rel=mounting_+_plate]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate
*CAT: n
*SEM: twoRel[rel=mounting_+_plate]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate
*CAT: n
*SEM: twoRel[rel=mounting_+_plate]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate
*CAT: n
*SEM: orRel[rel=mounting_+_plate]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_between_+_3d
*CAT: n
*SEM: unaryRel[rel=bend_+_radius_+_between_+_3d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_between_+_3d
*CAT: n
*SEM: twoRel[rel=bend_+_radius_+_between_+_3d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_between_+_3d
*CAT: n
*SEM: twoRel[rel=bend_+_radius_+_between_+_3d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_between_+_3d
*CAT: n
*SEM: orRel[rel=bend_+_radius_+_between_+_3d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priorityor_+_the_+_length
*CAT: n
*SEM: unaryRel[rel=first_+_priorityor_+_the_+_length]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priorityor_+_the_+_length
*CAT: n
*SEM: twoRel[rel=first_+_priorityor_+_the_+_length]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priorityor_+_the_+_length
*CAT: n
*SEM: twoRel[rel=first_+_priorityor_+_the_+_length]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priorityor_+_the_+_length
*CAT: n
*SEM: orRel[rel=first_+_priorityor_+_the_+_length]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parallel.or
*CAT: n
*SEM: unaryRel[rel=parallel.or]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parallel.or
*CAT: n
*SEM: twoRel[rel=parallel.or]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parallel.or
*CAT: n
*SEM: twoRel[rel=parallel.or]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parallel.or
*CAT: n
*SEM: orRel[rel=parallel.or]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_bundle_+_tying_+_device
*CAT: n
*SEM: unaryRel[rel=as_+_bundle_+_tying_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_bundle_+_tying_+_device
*CAT: n
*SEM: twoRel[rel=as_+_bundle_+_tying_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_bundle_+_tying_+_device
*CAT: n
*SEM: twoRel[rel=as_+_bundle_+_tying_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_bundle_+_tying_+_device
*CAT: n
*SEM: orRel[rel=as_+_bundle_+_tying_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_centers
*CAT: n
*SEM: unaryRel[rel=power_+_centers]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_centers
*CAT: n
*SEM: twoRel[rel=power_+_centers]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_centers
*CAT: n
*SEM: twoRel[rel=power_+_centers]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_centers
*CAT: n
*SEM: orRel[rel=power_+_centers]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: last_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=last_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: last_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=last_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: last_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=last_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: last_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=last_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049_+_split_+_conduit_+_directly
*CAT: n
*SEM: unaryRel[rel=en_+_6049_+_split_+_conduit_+_directly]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049_+_split_+_conduit_+_directly
*CAT: n
*SEM: twoRel[rel=en_+_6049_+_split_+_conduit_+_directly]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049_+_split_+_conduit_+_directly
*CAT: n
*SEM: twoRel[rel=en_+_6049_+_split_+_conduit_+_directly]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049_+_split_+_conduit_+_directly
*CAT: n
*SEM: orRel[rel=en_+_6049_+_split_+_conduit_+_directly]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: highly_+_resistive_+_unions
*CAT: n
*SEM: unaryRel[rel=highly_+_resistive_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: highly_+_resistive_+_unions
*CAT: n
*SEM: twoRel[rel=highly_+_resistive_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: highly_+_resistive_+_unions
*CAT: n
*SEM: twoRel[rel=highly_+_resistive_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: highly_+_resistive_+_unions
*CAT: n
*SEM: orRel[rel=highly_+_resistive_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_graphic
*CAT: n
*SEM: unaryRel[rel=attached_+_graphic]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_graphic
*CAT: n
*SEM: twoRel[rel=attached_+_graphic]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_graphic
*CAT: n
*SEM: twoRel[rel=attached_+_graphic]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_graphic
*CAT: n
*SEM: orRel[rel=attached_+_graphic]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: n_+_polarization_+_in_+_relation
*CAT: n
*SEM: unaryRel[rel=n_+_polarization_+_in_+_relation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: n_+_polarization_+_in_+_relation
*CAT: n
*SEM: twoRel[rel=n_+_polarization_+_in_+_relation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: n_+_polarization_+_in_+_relation
*CAT: n
*SEM: twoRel[rel=n_+_polarization_+_in_+_relation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: n_+_polarization_+_in_+_relation
*CAT: n
*SEM: orRel[rel=n_+_polarization_+_in_+_relation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rf_+_system
*CAT: n
*SEM: unaryRel[rel=rf_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rf_+_system
*CAT: n
*SEM: twoRel[rel=rf_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rf_+_system
*CAT: n
*SEM: twoRel[rel=rf_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rf_+_system
*CAT: n
*SEM: orRel[rel=rf_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_-_comma_-_2_+_micrometer
*CAT: n
*SEM: unaryRel[rel=3_-_comma_-_2_+_micrometer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_-_comma_-_2_+_micrometer
*CAT: n
*SEM: twoRel[rel=3_-_comma_-_2_+_micrometer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_-_comma_-_2_+_micrometer
*CAT: n
*SEM: twoRel[rel=3_-_comma_-_2_+_micrometer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_-_comma_-_2_+_micrometer
*CAT: n
*SEM: orRel[rel=3_-_comma_-_2_+_micrometer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_component
*CAT: n
*SEM: unaryRel[rel=self-locking_+_component]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_component
*CAT: n
*SEM: twoRel[rel=self-locking_+_component]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_component
*CAT: n
*SEM: twoRel[rel=self-locking_+_component]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_component
*CAT: n
*SEM: orRel[rel=self-locking_+_component]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=hydraulic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=hydraulic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=hydraulic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_-_opensb_-_optical_-_closesb_-__+_routes
*CAT: n
*SEM: unaryRel[rel=r_-_opensb_-_optical_-_closesb_-__+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_-_opensb_-_optical_-_closesb_-__+_routes
*CAT: n
*SEM: twoRel[rel=r_-_opensb_-_optical_-_closesb_-__+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_-_opensb_-_optical_-_closesb_-__+_routes
*CAT: n
*SEM: twoRel[rel=r_-_opensb_-_optical_-_closesb_-__+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_-_opensb_-_optical_-_closesb_-__+_routes
*CAT: n
*SEM: orRel[rel=r_-_opensb_-_optical_-_closesb_-__+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm
*CAT: n
*SEM: unaryRel[rel=25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm
*CAT: n
*SEM: twoRel[rel=25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm
*CAT: n
*SEM: twoRel[rel=25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm
*CAT: n
*SEM: orRel[rel=25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie_+_cable_+_tie
*CAT: n
*SEM: unaryRel[rel=nsa_+_935401_+_cable_+_tie_+_cable_+_tie]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie_+_cable_+_tie
*CAT: n
*SEM: twoRel[rel=nsa_+_935401_+_cable_+_tie_+_cable_+_tie]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie_+_cable_+_tie
*CAT: n
*SEM: twoRel[rel=nsa_+_935401_+_cable_+_tie_+_cable_+_tie]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie_+_cable_+_tie
*CAT: n
*SEM: orRel[rel=nsa_+_935401_+_cable_+_tie_+_cable_+_tie]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_+_conduit_+_e.g
*CAT: n
*SEM: unaryRel[rel=closed_+_conduit_+_e.g]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_+_conduit_+_e.g
*CAT: n
*SEM: twoRel[rel=closed_+_conduit_+_e.g]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_+_conduit_+_e.g
*CAT: n
*SEM: twoRel[rel=closed_+_conduit_+_e.g]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_+_conduit_+_e.g
*CAT: n
*SEM: orRel[rel=closed_+_conduit_+_e.g]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_key_+_way
*CAT: n
*SEM: unaryRel[rel=master_+_key_+_way]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_key_+_way
*CAT: n
*SEM: twoRel[rel=master_+_key_+_way]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_key_+_way
*CAT: n
*SEM: twoRel[rel=master_+_key_+_way]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_key_+_way
*CAT: n
*SEM: orRel[rel=master_+_key_+_way]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_end
*CAT: n
*SEM: unaryRel[rel=each_+_end]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_end
*CAT: n
*SEM: twoRel[rel=each_+_end]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_end
*CAT: n
*SEM: twoRel[rel=each_+_end]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_end
*CAT: n
*SEM: orRel[rel=each_+_end]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: areas
*CAT: n
*SEM: unaryRel[rel=areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: areas
*CAT: n
*SEM: twoRel[rel=areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: areas
*CAT: n
*SEM: twoRel[rel=areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: areas
*CAT: n
*SEM: orRel[rel=areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_braided_+_bundle
*CAT: n
*SEM: unaryRel[rel=each_+_braided_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_braided_+_bundle
*CAT: n
*SEM: twoRel[rel=each_+_braided_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_braided_+_bundle
*CAT: n
*SEM: twoRel[rel=each_+_braided_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_braided_+_bundle
*CAT: n
*SEM: orRel[rel=each_+_braided_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop_+_when
*CAT: n
*SEM: unaryRel[rel=drip_+_loop_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop_+_when
*CAT: n
*SEM: twoRel[rel=drip_+_loop_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop_+_when
*CAT: n
*SEM: twoRel[rel=drip_+_loop_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop_+_when
*CAT: n
*SEM: orRel[rel=drip_+_loop_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: supports
*CAT: n
*SEM: unaryRel[rel=supports]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: supports
*CAT: n
*SEM: twoRel[rel=supports]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: supports
*CAT: n
*SEM: twoRel[rel=supports]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: supports
*CAT: n
*SEM: orRel[rel=supports]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_damage
*CAT: n
*SEM: unaryRel[rel=mechanical_+_damage]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_damage
*CAT: n
*SEM: twoRel[rel=mechanical_+_damage]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_damage
*CAT: n
*SEM: twoRel[rel=mechanical_+_damage]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_damage
*CAT: n
*SEM: orRel[rel=mechanical_+_damage]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: axial_+_movement_+_a_+_minimum_+_clearance_+_value_+__-_opensb_-_1_-_closesb_-__+_of_+_10_+_mm
*CAT: n
*SEM: unaryRel[rel=axial_+_movement_+_a_+_minimum_+_clearance_+_value_+__-_opensb_-_1_-_closesb_-__+_of_+_10_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: axial_+_movement_+_a_+_minimum_+_clearance_+_value_+__-_opensb_-_1_-_closesb_-__+_of_+_10_+_mm
*CAT: n
*SEM: twoRel[rel=axial_+_movement_+_a_+_minimum_+_clearance_+_value_+__-_opensb_-_1_-_closesb_-__+_of_+_10_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: axial_+_movement_+_a_+_minimum_+_clearance_+_value_+__-_opensb_-_1_-_closesb_-__+_of_+_10_+_mm
*CAT: n
*SEM: twoRel[rel=axial_+_movement_+_a_+_minimum_+_clearance_+_value_+__-_opensb_-_1_-_closesb_-__+_of_+_10_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: axial_+_movement_+_a_+_minimum_+_clearance_+_value_+__-_opensb_-_1_-_closesb_-__+_of_+_10_+_mm
*CAT: n
*SEM: orRel[rel=axial_+_movement_+_a_+_minimum_+_clearance_+_value_+__-_opensb_-_1_-_closesb_-__+_of_+_10_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: by_+_min_+_d_-_greaterThan_-__-_equalto_-_3mm
*CAT: n
*SEM: unaryRel[rel=by_+_min_+_d_-_greaterThan_-__-_equalto_-_3mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: by_+_min_+_d_-_greaterThan_-__-_equalto_-_3mm
*CAT: n
*SEM: twoRel[rel=by_+_min_+_d_-_greaterThan_-__-_equalto_-_3mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: by_+_min_+_d_-_greaterThan_-__-_equalto_-_3mm
*CAT: n
*SEM: twoRel[rel=by_+_min_+_d_-_greaterThan_-__-_equalto_-_3mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: by_+_min_+_d_-_greaterThan_-__-_equalto_-_3mm
*CAT: n
*SEM: orRel[rel=by_+_min_+_d_-_greaterThan_-__-_equalto_-_3mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_power_+_center_+_which
*CAT: n
*SEM: unaryRel[rel=inside_+_power_+_center_+_which]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_power_+_center_+_which
*CAT: n
*SEM: twoRel[rel=inside_+_power_+_center_+_which]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_power_+_center_+_which
*CAT: n
*SEM: twoRel[rel=inside_+_power_+_center_+_which]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_power_+_center_+_which
*CAT: n
*SEM: orRel[rel=inside_+_power_+_center_+_which]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_tank_+_ribs
*CAT: n
*SEM: unaryRel[rel=other_+_tank_+_ribs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_tank_+_ribs
*CAT: n
*SEM: twoRel[rel=other_+_tank_+_ribs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_tank_+_ribs
*CAT: n
*SEM: twoRel[rel=other_+_tank_+_ribs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_tank_+_ribs
*CAT: n
*SEM: orRel[rel=other_+_tank_+_ribs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_2_-_closesb_-__+_on_+_first_+_priority
*CAT: n
*SEM: unaryRel[rel=network_+_2_-_closesb_-__+_on_+_first_+_priority]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_2_-_closesb_-__+_on_+_first_+_priority
*CAT: n
*SEM: twoRel[rel=network_+_2_-_closesb_-__+_on_+_first_+_priority]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_2_-_closesb_-__+_on_+_first_+_priority
*CAT: n
*SEM: twoRel[rel=network_+_2_-_closesb_-__+_on_+_first_+_priority]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_2_-_closesb_-__+_on_+_first_+_priority
*CAT: n
*SEM: orRel[rel=network_+_2_-_closesb_-__+_on_+_first_+_priority]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_r-route_+__-_opensb_-_optical_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=non_+_pre_+_stressed_+_r-route_+__-_opensb_-_optical_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_r-route_+__-_opensb_-_optical_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=non_+_pre_+_stressed_+_r-route_+__-_opensb_-_optical_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_r-route_+__-_opensb_-_optical_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=non_+_pre_+_stressed_+_r-route_+__-_opensb_-_optical_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_r-route_+__-_opensb_-_optical_-_closesb_-_
*CAT: n
*SEM: orRel[rel=non_+_pre_+_stressed_+_r-route_+__-_opensb_-_optical_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_clamp
*CAT: n
*SEM: unaryRel[rel=conductive_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_clamp
*CAT: n
*SEM: twoRel[rel=conductive_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_clamp
*CAT: n
*SEM: twoRel[rel=conductive_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_clamp
*CAT: n
*SEM: orRel[rel=conductive_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundles_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_spare_+_conduit_+_lenght_+_outside_+_bundle
*CAT: n
*SEM: unaryRel[rel=bundles_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_spare_+_conduit_+_lenght_+_outside_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundles_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_spare_+_conduit_+_lenght_+_outside_+_bundle
*CAT: n
*SEM: twoRel[rel=bundles_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_spare_+_conduit_+_lenght_+_outside_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundles_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_spare_+_conduit_+_lenght_+_outside_+_bundle
*CAT: n
*SEM: twoRel[rel=bundles_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_spare_+_conduit_+_lenght_+_outside_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundles_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_spare_+_conduit_+_lenght_+_outside_+_bundle
*CAT: n
*SEM: orRel[rel=bundles_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_spare_+_conduit_+_lenght_+_outside_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: constraints
*CAT: n
*SEM: unaryRel[rel=constraints]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: constraints
*CAT: n
*SEM: twoRel[rel=constraints]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: constraints
*CAT: n
*SEM: twoRel[rel=constraints]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: constraints
*CAT: n
*SEM: orRel[rel=constraints]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: place_+_of_+_smallest_+_clearance_+_between_+_a_+_rigid_+_pipe
*CAT: n
*SEM: unaryRel[rel=place_+_of_+_smallest_+_clearance_+_between_+_a_+_rigid_+_pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: place_+_of_+_smallest_+_clearance_+_between_+_a_+_rigid_+_pipe
*CAT: n
*SEM: twoRel[rel=place_+_of_+_smallest_+_clearance_+_between_+_a_+_rigid_+_pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: place_+_of_+_smallest_+_clearance_+_between_+_a_+_rigid_+_pipe
*CAT: n
*SEM: twoRel[rel=place_+_of_+_smallest_+_clearance_+_between_+_a_+_rigid_+_pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: place_+_of_+_smallest_+_clearance_+_between_+_a_+_rigid_+_pipe
*CAT: n
*SEM: orRel[rel=place_+_of_+_smallest_+_clearance_+_between_+_a_+_rigid_+_pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: incisions
*CAT: n
*SEM: unaryRel[rel=incisions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: incisions
*CAT: n
*SEM: twoRel[rel=incisions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: incisions
*CAT: n
*SEM: twoRel[rel=incisions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: incisions
*CAT: n
*SEM: orRel[rel=incisions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616_+_sealing_+_plug_+_in_+_al_+_area
*CAT: n
*SEM: unaryRel[rel=asne0616_+_sealing_+_plug_+_in_+_al_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616_+_sealing_+_plug_+_in_+_al_+_area
*CAT: n
*SEM: twoRel[rel=asne0616_+_sealing_+_plug_+_in_+_al_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616_+_sealing_+_plug_+_in_+_al_+_area
*CAT: n
*SEM: twoRel[rel=asne0616_+_sealing_+_plug_+_in_+_al_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616_+_sealing_+_plug_+_in_+_al_+_area
*CAT: n
*SEM: orRel[rel=asne0616_+_sealing_+_plug_+_in_+_al_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permit_+_free_+_pass_+_of_+_connector
*CAT: n
*SEM: unaryRel[rel=permit_+_free_+_pass_+_of_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permit_+_free_+_pass_+_of_+_connector
*CAT: n
*SEM: twoRel[rel=permit_+_free_+_pass_+_of_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permit_+_free_+_pass_+_of_+_connector
*CAT: n
*SEM: twoRel[rel=permit_+_free_+_pass_+_of_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permit_+_free_+_pass_+_of_+_connector
*CAT: n
*SEM: orRel[rel=permit_+_free_+_pass_+_of_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: soldered_+_selectors
*CAT: n
*SEM: unaryRel[rel=soldered_+_selectors]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: soldered_+_selectors
*CAT: n
*SEM: twoRel[rel=soldered_+_selectors]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: soldered_+_selectors
*CAT: n
*SEM: twoRel[rel=soldered_+_selectors]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: soldered_+_selectors
*CAT: n
*SEM: orRel[rel=soldered_+_selectors]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_wires
*CAT: n
*SEM: unaryRel[rel=electrical_+_wires]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_wires
*CAT: n
*SEM: twoRel[rel=electrical_+_wires]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_wires
*CAT: n
*SEM: twoRel[rel=electrical_+_wires]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_wires
*CAT: n
*SEM: orRel[rel=electrical_+_wires]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_conduit_+_to
*CAT: n
*SEM: unaryRel[rel=abs_+_0887_+_conduit_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_conduit_+_to
*CAT: n
*SEM: twoRel[rel=abs_+_0887_+_conduit_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_conduit_+_to
*CAT: n
*SEM: twoRel[rel=abs_+_0887_+_conduit_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_conduit_+_to
*CAT: n
*SEM: orRel[rel=abs_+_0887_+_conduit_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thrird_+_priority
*CAT: n
*SEM: unaryRel[rel=thrird_+_priority]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thrird_+_priority
*CAT: n
*SEM: twoRel[rel=thrird_+_priority]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thrird_+_priority
*CAT: n
*SEM: twoRel[rel=thrird_+_priority]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thrird_+_priority
*CAT: n
*SEM: orRel[rel=thrird_+_priority]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_electrical_+_bundle
*CAT: n
*SEM: unaryRel[rel=inside_+_electrical_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_electrical_+_bundle
*CAT: n
*SEM: twoRel[rel=inside_+_electrical_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_electrical_+_bundle
*CAT: n
*SEM: twoRel[rel=inside_+_electrical_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_electrical_+_bundle
*CAT: n
*SEM: orRel[rel=inside_+_electrical_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_justified
*CAT: n
*SEM: unaryRel[rel=be_+_justified]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_justified
*CAT: n
*SEM: twoRel[rel=be_+_justified]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_justified
*CAT: n
*SEM: twoRel[rel=be_+_justified]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_justified
*CAT: n
*SEM: orRel[rel=be_+_justified]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_connectors
*CAT: n
*SEM: unaryRel[rel=label_+_connectors]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_connectors
*CAT: n
*SEM: twoRel[rel=label_+_connectors]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_connectors
*CAT: n
*SEM: twoRel[rel=label_+_connectors]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_connectors
*CAT: n
*SEM: orRel[rel=label_+_connectors]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertically
*CAT: n
*SEM: unaryRel[rel=vertically]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertically
*CAT: n
*SEM: twoRel[rel=vertically]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertically
*CAT: n
*SEM: twoRel[rel=vertically]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertically
*CAT: n
*SEM: orRel[rel=vertically]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_areas_+_in_+_case_+_of_+_bundle
*CAT: n
*SEM: unaryRel[rel=fire_+_areas_+_in_+_case_+_of_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_areas_+_in_+_case_+_of_+_bundle
*CAT: n
*SEM: twoRel[rel=fire_+_areas_+_in_+_case_+_of_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_areas_+_in_+_case_+_of_+_bundle
*CAT: n
*SEM: twoRel[rel=fire_+_areas_+_in_+_case_+_of_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_areas_+_in_+_case_+_of_+_bundle
*CAT: n
*SEM: orRel[rel=fire_+_areas_+_in_+_case_+_of_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: braided_+_open_+_conduit
*CAT: n
*SEM: unaryRel[rel=braided_+_open_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: braided_+_open_+_conduit
*CAT: n
*SEM: twoRel[rel=braided_+_open_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: braided_+_open_+_conduit
*CAT: n
*SEM: twoRel[rel=braided_+_open_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: braided_+_open_+_conduit
*CAT: n
*SEM: orRel[rel=braided_+_open_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: also_+_graphic
*CAT: n
*SEM: unaryRel[rel=also_+_graphic]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: also_+_graphic
*CAT: n
*SEM: twoRel[rel=also_+_graphic]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: also_+_graphic
*CAT: n
*SEM: twoRel[rel=also_+_graphic]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: also_+_graphic
*CAT: n
*SEM: orRel[rel=also_+_graphic]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sidp29_+_compliant
*CAT: n
*SEM: unaryRel[rel=sidp29_+_compliant]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sidp29_+_compliant
*CAT: n
*SEM: twoRel[rel=sidp29_+_compliant]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sidp29_+_compliant
*CAT: n
*SEM: twoRel[rel=sidp29_+_compliant]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sidp29_+_compliant
*CAT: n
*SEM: orRel[rel=sidp29_+_compliant]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_25mm_+_d_+__-_greaterThan_-__+__-_equalto_-_10mm
*CAT: n
*SEM: unaryRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_25mm_+_d_+__-_greaterThan_-__+__-_equalto_-_10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_25mm_+_d_+__-_greaterThan_-__+__-_equalto_-_10mm
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_25mm_+_d_+__-_greaterThan_-__+__-_equalto_-_10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_25mm_+_d_+__-_greaterThan_-__+__-_equalto_-_10mm
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_25mm_+_d_+__-_greaterThan_-__+__-_equalto_-_10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_25mm_+_d_+__-_greaterThan_-__+__-_equalto_-_10mm
*CAT: n
*SEM: orRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_25mm_+_d_+__-_greaterThan_-__+__-_equalto_-_10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coupling
*CAT: n
*SEM: unaryRel[rel=coupling]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coupling
*CAT: n
*SEM: twoRel[rel=coupling]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coupling
*CAT: n
*SEM: twoRel[rel=coupling]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coupling
*CAT: n
*SEM: orRel[rel=coupling]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: orientation
*CAT: n
*SEM: unaryRel[rel=orientation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: orientation
*CAT: n
*SEM: twoRel[rel=orientation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: orientation
*CAT: n
*SEM: twoRel[rel=orientation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: orientation
*CAT: n
*SEM: orRel[rel=orientation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bobbin
*CAT: n
*SEM: unaryRel[rel=bobbin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bobbin
*CAT: n
*SEM: twoRel[rel=bobbin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bobbin
*CAT: n
*SEM: twoRel[rel=bobbin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bobbin
*CAT: n
*SEM: orRel[rel=bobbin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_loosable
*CAT: n
*SEM: unaryRel[rel=non_+_loosable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_loosable
*CAT: n
*SEM: twoRel[rel=non_+_loosable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_loosable
*CAT: n
*SEM: twoRel[rel=non_+_loosable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_loosable
*CAT: n
*SEM: orRel[rel=non_+_loosable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: marked
*CAT: n
*SEM: unaryRel[rel=marked]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: marked
*CAT: n
*SEM: twoRel[rel=marked]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: marked
*CAT: n
*SEM: twoRel[rel=marked]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: marked
*CAT: n
*SEM: orRel[rel=marked]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_successive_+__-_opensb_-_distance_+__-_smallerThan_-__+_10_+_d_-_closesb_-__+_90_-_degrees_-__+_bends_+_in_+_the_+_same_+_plane.
*CAT: n
*SEM: unaryRel[rel=2_+_successive_+__-_opensb_-_distance_+__-_smallerThan_-__+_10_+_d_-_closesb_-__+_90_-_degrees_-__+_bends_+_in_+_the_+_same_+_plane.]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_successive_+__-_opensb_-_distance_+__-_smallerThan_-__+_10_+_d_-_closesb_-__+_90_-_degrees_-__+_bends_+_in_+_the_+_same_+_plane.
*CAT: n
*SEM: twoRel[rel=2_+_successive_+__-_opensb_-_distance_+__-_smallerThan_-__+_10_+_d_-_closesb_-__+_90_-_degrees_-__+_bends_+_in_+_the_+_same_+_plane.]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_successive_+__-_opensb_-_distance_+__-_smallerThan_-__+_10_+_d_-_closesb_-__+_90_-_degrees_-__+_bends_+_in_+_the_+_same_+_plane.
*CAT: n
*SEM: twoRel[rel=2_+_successive_+__-_opensb_-_distance_+__-_smallerThan_-__+_10_+_d_-_closesb_-__+_90_-_degrees_-__+_bends_+_in_+_the_+_same_+_plane.]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_successive_+__-_opensb_-_distance_+__-_smallerThan_-__+_10_+_d_-_closesb_-__+_90_-_degrees_-__+_bends_+_in_+_the_+_same_+_plane.
*CAT: n
*SEM: orRel[rel=2_+_successive_+__-_opensb_-_distance_+__-_smallerThan_-__+_10_+_d_-_closesb_-__+_90_-_degrees_-__+_bends_+_in_+_the_+_same_+_plane.]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_spacer_+_in_+_hot
*CAT: n
*SEM: unaryRel[rel=metallic_+_spacer_+_in_+_hot]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_spacer_+_in_+_hot
*CAT: n
*SEM: twoRel[rel=metallic_+_spacer_+_in_+_hot]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_spacer_+_in_+_hot
*CAT: n
*SEM: twoRel[rel=metallic_+_spacer_+_in_+_hot]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_spacer_+_in_+_hot
*CAT: n
*SEM: orRel[rel=metallic_+_spacer_+_in_+_hot]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reinforced_+_saddle_+_clamp
*CAT: n
*SEM: unaryRel[rel=reinforced_+_saddle_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reinforced_+_saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=reinforced_+_saddle_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reinforced_+_saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=reinforced_+_saddle_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reinforced_+_saddle_+_clamp
*CAT: n
*SEM: orRel[rel=reinforced_+_saddle_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipelines
*CAT: n
*SEM: unaryRel[rel=pipelines]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipelines
*CAT: n
*SEM: twoRel[rel=pipelines]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipelines
*CAT: n
*SEM: twoRel[rel=pipelines]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipelines
*CAT: n
*SEM: orRel[rel=pipelines]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: table_+_below
*CAT: n
*SEM: unaryRel[rel=table_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: table_+_below
*CAT: n
*SEM: twoRel[rel=table_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: table_+_below
*CAT: n
*SEM: twoRel[rel=table_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: table_+_below
*CAT: n
*SEM: orRel[rel=table_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asn53203_+_rupturing_+_wire
*CAT: n
*SEM: unaryRel[rel=asn53203_+_rupturing_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asn53203_+_rupturing_+_wire
*CAT: n
*SEM: twoRel[rel=asn53203_+_rupturing_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asn53203_+_rupturing_+_wire
*CAT: n
*SEM: twoRel[rel=asn53203_+_rupturing_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asn53203_+_rupturing_+_wire
*CAT: n
*SEM: orRel[rel=asn53203_+_rupturing_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_below
*CAT: n
*SEM: unaryRel[rel=picture_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_below
*CAT: n
*SEM: twoRel[rel=picture_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_below
*CAT: n
*SEM: twoRel[rel=picture_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_below
*CAT: n
*SEM: orRel[rel=picture_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locations_+_where_+_fluids
*CAT: n
*SEM: unaryRel[rel=locations_+_where_+_fluids]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locations_+_where_+_fluids
*CAT: n
*SEM: twoRel[rel=locations_+_where_+_fluids]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locations_+_where_+_fluids
*CAT: n
*SEM: twoRel[rel=locations_+_where_+_fluids]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locations_+_where_+_fluids
*CAT: n
*SEM: orRel[rel=locations_+_where_+_fluids]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions.
*CAT: n
*SEM: unaryRel[rel=minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions.]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions.
*CAT: n
*SEM: twoRel[rel=minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions.]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions.
*CAT: n
*SEM: twoRel[rel=minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions.]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions.
*CAT: n
*SEM: orRel[rel=minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions.]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label
*CAT: n
*SEM: unaryRel[rel=label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label
*CAT: n
*SEM: twoRel[rel=label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label
*CAT: n
*SEM: twoRel[rel=label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label
*CAT: n
*SEM: orRel[rel=label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_area_+_class_+_a
*CAT: n
*SEM: unaryRel[rel=fire_+_area_+_class_+_a]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_area_+_class_+_a
*CAT: n
*SEM: twoRel[rel=fire_+_area_+_class_+_a]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_area_+_class_+_a
*CAT: n
*SEM: twoRel[rel=fire_+_area_+_class_+_a]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_area_+_class_+_a
*CAT: n
*SEM: orRel[rel=fire_+_area_+_class_+_a]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp_+_part_+_secoured_+_routing_+_case_+_a
*CAT: n
*SEM: unaryRel[rel=cfrp_+_part_+_secoured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp_+_part_+_secoured_+_routing_+_case_+_a
*CAT: n
*SEM: twoRel[rel=cfrp_+_part_+_secoured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp_+_part_+_secoured_+_routing_+_case_+_a
*CAT: n
*SEM: twoRel[rel=cfrp_+_part_+_secoured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp_+_part_+_secoured_+_routing_+_case_+_a
*CAT: n
*SEM: orRel[rel=cfrp_+_part_+_secoured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+__-_backslash_-__+_colonettes
*CAT: n
*SEM: unaryRel[rel=stand-off_+__-_backslash_-__+_colonettes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+__-_backslash_-__+_colonettes
*CAT: n
*SEM: twoRel[rel=stand-off_+__-_backslash_-__+_colonettes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+__-_backslash_-__+_colonettes
*CAT: n
*SEM: twoRel[rel=stand-off_+__-_backslash_-__+_colonettes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+__-_backslash_-__+_colonettes
*CAT: n
*SEM: orRel[rel=stand-off_+__-_backslash_-__+_colonettes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more
*CAT: n
*SEM: unaryRel[rel=more]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more
*CAT: n
*SEM: twoRel[rel=more]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more
*CAT: n
*SEM: twoRel[rel=more]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more
*CAT: n
*SEM: orRel[rel=more]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre
*CAT: n
*SEM: unaryRel[rel=pre]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre
*CAT: n
*SEM: twoRel[rel=pre]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre
*CAT: n
*SEM: twoRel[rel=pre]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre
*CAT: n
*SEM: orRel[rel=pre]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tools
*CAT: n
*SEM: unaryRel[rel=tools]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tools
*CAT: n
*SEM: twoRel[rel=tools]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tools
*CAT: n
*SEM: twoRel[rel=tools]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tools
*CAT: n
*SEM: orRel[rel=tools]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_must_+_be_+_designed
*CAT: n
*SEM: unaryRel[rel=installation_+_must_+_be_+_designed]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_must_+_be_+_designed
*CAT: n
*SEM: twoRel[rel=installation_+_must_+_be_+_designed]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_must_+_be_+_designed
*CAT: n
*SEM: twoRel[rel=installation_+_must_+_be_+_designed]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_must_+_be_+_designed
*CAT: n
*SEM: orRel[rel=installation_+_must_+_be_+_designed]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceways_+_is_+_limited_+_due
*CAT: n
*SEM: unaryRel[rel=raceways_+_is_+_limited_+_due]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceways_+_is_+_limited_+_due
*CAT: n
*SEM: twoRel[rel=raceways_+_is_+_limited_+_due]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceways_+_is_+_limited_+_due
*CAT: n
*SEM: twoRel[rel=raceways_+_is_+_limited_+_due]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceways_+_is_+_limited_+_due
*CAT: n
*SEM: orRel[rel=raceways_+_is_+_limited_+_due]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936601_+_crimped_+_cap
*CAT: n
*SEM: unaryRel[rel=nsa_+_936601_+_crimped_+_cap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936601_+_crimped_+_cap
*CAT: n
*SEM: twoRel[rel=nsa_+_936601_+_crimped_+_cap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936601_+_crimped_+_cap
*CAT: n
*SEM: twoRel[rel=nsa_+_936601_+_crimped_+_cap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936601_+_crimped_+_cap
*CAT: n
*SEM: orRel[rel=nsa_+_936601_+_crimped_+_cap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_pipes
*CAT: n
*SEM: unaryRel[rel=repair_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_pipes
*CAT: n
*SEM: twoRel[rel=repair_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_pipes
*CAT: n
*SEM: twoRel[rel=repair_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_pipes
*CAT: n
*SEM: orRel[rel=repair_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5527_+_spacer
*CAT: n
*SEM: unaryRel[rel=nsa5527_+_spacer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5527_+_spacer
*CAT: n
*SEM: twoRel[rel=nsa5527_+_spacer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5527_+_spacer
*CAT: n
*SEM: twoRel[rel=nsa5527_+_spacer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5527_+_spacer
*CAT: n
*SEM: orRel[rel=nsa5527_+_spacer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_data_+_bus_+_cable
*CAT: n
*SEM: unaryRel[rel=afdx_+_data_+_bus_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_data_+_bus_+_cable
*CAT: n
*SEM: twoRel[rel=afdx_+_data_+_bus_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_data_+_bus_+_cable
*CAT: n
*SEM: twoRel[rel=afdx_+_data_+_bus_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_data_+_bus_+_cable
*CAT: n
*SEM: orRel[rel=afdx_+_data_+_bus_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_layer
*CAT: n
*SEM: unaryRel[rel=two_+_layer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_layer
*CAT: n
*SEM: twoRel[rel=two_+_layer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_layer
*CAT: n
*SEM: twoRel[rel=two_+_layer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_layer
*CAT: n
*SEM: orRel[rel=two_+_layer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_protection
*CAT: n
*SEM: unaryRel[rel=additional_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_protection
*CAT: n
*SEM: twoRel[rel=additional_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_protection
*CAT: n
*SEM: twoRel[rel=additional_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_protection
*CAT: n
*SEM: orRel[rel=additional_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_the
*CAT: n
*SEM: unaryRel[rel=taking_+_into_+_account_+_the]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_the
*CAT: n
*SEM: twoRel[rel=taking_+_into_+_account_+_the]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_the
*CAT: n
*SEM: twoRel[rel=taking_+_into_+_account_+_the]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_the
*CAT: n
*SEM: orRel[rel=taking_+_into_+_account_+_the]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support
*CAT: n
*SEM: unaryRel[rel=support]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support
*CAT: n
*SEM: twoRel[rel=support]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support
*CAT: n
*SEM: twoRel[rel=support]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support
*CAT: n
*SEM: orRel[rel=support]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: main_+_bundle
*CAT: n
*SEM: unaryRel[rel=main_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: main_+_bundle
*CAT: n
*SEM: twoRel[rel=main_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: main_+_bundle
*CAT: n
*SEM: twoRel[rel=main_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: main_+_bundle
*CAT: n
*SEM: orRel[rel=main_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_these_+_cases
*CAT: n
*SEM: unaryRel[rel=in_+_these_+_cases]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_these_+_cases
*CAT: n
*SEM: twoRel[rel=in_+_these_+_cases]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_these_+_cases
*CAT: n
*SEM: twoRel[rel=in_+_these_+_cases]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_these_+_cases
*CAT: n
*SEM: orRel[rel=in_+_these_+_cases]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dealing
*CAT: n
*SEM: unaryRel[rel=dealing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dealing
*CAT: n
*SEM: twoRel[rel=dealing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dealing
*CAT: n
*SEM: twoRel[rel=dealing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dealing
*CAT: n
*SEM: orRel[rel=dealing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: unaryRel[rel=bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: twoRel[rel=bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: twoRel[rel=bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: orRel[rel=bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire_+_only_+_draw_+_wire
*CAT: n
*SEM: unaryRel[rel=draw_+_wire_+_only_+_draw_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire_+_only_+_draw_+_wire
*CAT: n
*SEM: twoRel[rel=draw_+_wire_+_only_+_draw_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire_+_only_+_draw_+_wire
*CAT: n
*SEM: twoRel[rel=draw_+_wire_+_only_+_draw_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire_+_only_+_draw_+_wire
*CAT: n
*SEM: orRel[rel=draw_+_wire_+_only_+_draw_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_rod
*CAT: n
*SEM: unaryRel[rel=circular_+_rod]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_rod
*CAT: n
*SEM: twoRel[rel=circular_+_rod]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_rod
*CAT: n
*SEM: twoRel[rel=circular_+_rod]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_rod
*CAT: n
*SEM: orRel[rel=circular_+_rod]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hose
*CAT: n
*SEM: unaryRel[rel=hose]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hose
*CAT: n
*SEM: twoRel[rel=hose]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hose
*CAT: n
*SEM: twoRel[rel=hose]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hose
*CAT: n
*SEM: orRel[rel=hose]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1m
*CAT: n
*SEM: unaryRel[rel=1m]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1m
*CAT: n
*SEM: twoRel[rel=1m]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1m
*CAT: n
*SEM: twoRel[rel=1m]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1m
*CAT: n
*SEM: orRel[rel=1m]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_bundle
*CAT: n
*SEM: unaryRel[rel=aluminium_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_bundle
*CAT: n
*SEM: twoRel[rel=aluminium_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_bundle
*CAT: n
*SEM: twoRel[rel=aluminium_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_bundle
*CAT: n
*SEM: orRel[rel=aluminium_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch_+_below_+__-_opensb_-_e.g._+_nsa5516_+_or
*CAT: n
*SEM: unaryRel[rel=sketch_+_below_+__-_opensb_-_e.g._+_nsa5516_+_or]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch_+_below_+__-_opensb_-_e.g._+_nsa5516_+_or
*CAT: n
*SEM: twoRel[rel=sketch_+_below_+__-_opensb_-_e.g._+_nsa5516_+_or]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch_+_below_+__-_opensb_-_e.g._+_nsa5516_+_or
*CAT: n
*SEM: twoRel[rel=sketch_+_below_+__-_opensb_-_e.g._+_nsa5516_+_or]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch_+_below_+__-_opensb_-_e.g._+_nsa5516_+_or
*CAT: n
*SEM: orRel[rel=sketch_+_below_+__-_opensb_-_e.g._+_nsa5516_+_or]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 300mm_+_maximum
*CAT: n
*SEM: unaryRel[rel=300mm_+_maximum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 300mm_+_maximum
*CAT: n
*SEM: twoRel[rel=300mm_+_maximum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 300mm_+_maximum
*CAT: n
*SEM: twoRel[rel=300mm_+_maximum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 300mm_+_maximum
*CAT: n
*SEM: orRel[rel=300mm_+_maximum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_instlation_+_when_+_direct_+_contact
*CAT: n
*SEM: unaryRel[rel=primary_+_instlation_+_when_+_direct_+_contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_instlation_+_when_+_direct_+_contact
*CAT: n
*SEM: twoRel[rel=primary_+_instlation_+_when_+_direct_+_contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_instlation_+_when_+_direct_+_contact
*CAT: n
*SEM: twoRel[rel=primary_+_instlation_+_when_+_direct_+_contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_instlation_+_when_+_direct_+_contact
*CAT: n
*SEM: orRel[rel=primary_+_instlation_+_when_+_direct_+_contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_zones_+_connectors
*CAT: n
*SEM: unaryRel[rel=hazardous_+_zones_+_connectors]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_zones_+_connectors
*CAT: n
*SEM: twoRel[rel=hazardous_+_zones_+_connectors]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_zones_+_connectors
*CAT: n
*SEM: twoRel[rel=hazardous_+_zones_+_connectors]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_zones_+_connectors
*CAT: n
*SEM: orRel[rel=hazardous_+_zones_+_connectors]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3545_+_connector
*CAT: n
*SEM: unaryRel[rel=en_+_3545_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3545_+_connector
*CAT: n
*SEM: twoRel[rel=en_+_3545_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3545_+_connector
*CAT: n
*SEM: twoRel[rel=en_+_3545_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3545_+_connector
*CAT: n
*SEM: orRel[rel=en_+_3545_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air_+_conditioning_-_closesb_-__+_ducts
*CAT: n
*SEM: unaryRel[rel=air_+_conditioning_-_closesb_-__+_ducts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air_+_conditioning_-_closesb_-__+_ducts
*CAT: n
*SEM: twoRel[rel=air_+_conditioning_-_closesb_-__+_ducts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air_+_conditioning_-_closesb_-__+_ducts
*CAT: n
*SEM: twoRel[rel=air_+_conditioning_-_closesb_-__+_ducts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air_+_conditioning_-_closesb_-__+_ducts
*CAT: n
*SEM: orRel[rel=air_+_conditioning_-_closesb_-__+_ducts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_contect_+_to_+_metallic_+_parts
*CAT: n
*SEM: unaryRel[rel=no_+_contect_+_to_+_metallic_+_parts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_contect_+_to_+_metallic_+_parts
*CAT: n
*SEM: twoRel[rel=no_+_contect_+_to_+_metallic_+_parts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_contect_+_to_+_metallic_+_parts
*CAT: n
*SEM: twoRel[rel=no_+_contect_+_to_+_metallic_+_parts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_contect_+_to_+_metallic_+_parts
*CAT: n
*SEM: orRel[rel=no_+_contect_+_to_+_metallic_+_parts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna0327_+_rivet
*CAT: n
*SEM: unaryRel[rel=asna0327_+_rivet]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna0327_+_rivet
*CAT: n
*SEM: twoRel[rel=asna0327_+_rivet]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna0327_+_rivet
*CAT: n
*SEM: twoRel[rel=asna0327_+_rivet]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna0327_+_rivet
*CAT: n
*SEM: orRel[rel=asna0327_+_rivet]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tube
*CAT: n
*SEM: unaryRel[rel=tube]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tube
*CAT: n
*SEM: twoRel[rel=tube]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tube
*CAT: n
*SEM: twoRel[rel=tube]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tube
*CAT: n
*SEM: orRel[rel=tube]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maintenance
*CAT: n
*SEM: unaryRel[rel=maintenance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maintenance
*CAT: n
*SEM: twoRel[rel=maintenance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maintenance
*CAT: n
*SEM: twoRel[rel=maintenance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maintenance
*CAT: n
*SEM: orRel[rel=maintenance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_identification_+_label_+_when
*CAT: n
*SEM: unaryRel[rel=asne_+_0248_+_identification_+_label_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_identification_+_label_+_when
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_identification_+_label_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_identification_+_label_+_when
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_identification_+_label_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_identification_+_label_+_when
*CAT: n
*SEM: orRel[rel=asne_+_0248_+_identification_+_label_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_c
*CAT: n
*SEM: unaryRel[rel=col_obj1_c]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_c
*CAT: n
*SEM: twoRel[rel=col_obj1_c]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_c
*CAT: n
*SEM: twoRel[rel=col_obj1_c]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_c
*CAT: n
*SEM: orRel[rel=col_obj1_c]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: floating_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=floating_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: floating_+_clamp-block
*CAT: n
*SEM: twoRel[rel=floating_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: floating_+_clamp-block
*CAT: n
*SEM: twoRel[rel=floating_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: floating_+_clamp-block
*CAT: n
*SEM: orRel[rel=floating_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: seletion_+_of_+_separators
*CAT: n
*SEM: unaryRel[rel=seletion_+_of_+_separators]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: seletion_+_of_+_separators
*CAT: n
*SEM: twoRel[rel=seletion_+_of_+_separators]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: seletion_+_of_+_separators
*CAT: n
*SEM: twoRel[rel=seletion_+_of_+_separators]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: seletion_+_of_+_separators
*CAT: n
*SEM: orRel[rel=seletion_+_of_+_separators]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_clamp_+_per_+_side_+_at_+_section_+_interfaces
*CAT: n
*SEM: unaryRel[rel=two_+_clamp_+_per_+_side_+_at_+_section_+_interfaces]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_clamp_+_per_+_side_+_at_+_section_+_interfaces
*CAT: n
*SEM: twoRel[rel=two_+_clamp_+_per_+_side_+_at_+_section_+_interfaces]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_clamp_+_per_+_side_+_at_+_section_+_interfaces
*CAT: n
*SEM: twoRel[rel=two_+_clamp_+_per_+_side_+_at_+_section_+_interfaces]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_clamp_+_per_+_side_+_at_+_section_+_interfaces
*CAT: n
*SEM: orRel[rel=two_+_clamp_+_per_+_side_+_at_+_section_+_interfaces]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_area_+_class_+_aor_+_en_+_2997_+_class_+_rs
*CAT: n
*SEM: unaryRel[rel=swamp_+_area_+_class_+_aor_+_en_+_2997_+_class_+_rs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_area_+_class_+_aor_+_en_+_2997_+_class_+_rs
*CAT: n
*SEM: twoRel[rel=swamp_+_area_+_class_+_aor_+_en_+_2997_+_class_+_rs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_area_+_class_+_aor_+_en_+_2997_+_class_+_rs
*CAT: n
*SEM: twoRel[rel=swamp_+_area_+_class_+_aor_+_en_+_2997_+_class_+_rs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_area_+_class_+_aor_+_en_+_2997_+_class_+_rs
*CAT: n
*SEM: orRel[rel=swamp_+_area_+_class_+_aor_+_en_+_2997_+_class_+_rs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contacts
*CAT: n
*SEM: unaryRel[rel=socket_+_contacts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contacts
*CAT: n
*SEM: twoRel[rel=socket_+_contacts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contacts
*CAT: n
*SEM: twoRel[rel=socket_+_contacts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contacts
*CAT: n
*SEM: orRel[rel=socket_+_contacts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_6_+_times_+_outer
*CAT: n
*SEM: unaryRel[rel=bend_+_6_+_times_+_outer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_6_+_times_+_outer
*CAT: n
*SEM: twoRel[rel=bend_+_6_+_times_+_outer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_6_+_times_+_outer
*CAT: n
*SEM: twoRel[rel=bend_+_6_+_times_+_outer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_6_+_times_+_outer
*CAT: n
*SEM: orRel[rel=bend_+_6_+_times_+_outer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_elbow_+_unions
*CAT: n
*SEM: unaryRel[rel=two_+_elbow_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_elbow_+_unions
*CAT: n
*SEM: twoRel[rel=two_+_elbow_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_elbow_+_unions
*CAT: n
*SEM: twoRel[rel=two_+_elbow_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_elbow_+_unions
*CAT: n
*SEM: orRel[rel=two_+_elbow_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hose_+_routing
*CAT: n
*SEM: unaryRel[rel=hose_+_routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hose_+_routing
*CAT: n
*SEM: twoRel[rel=hose_+_routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hose_+_routing
*CAT: n
*SEM: twoRel[rel=hose_+_routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hose_+_routing
*CAT: n
*SEM: orRel[rel=hose_+_routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_6mm
*CAT: n
*SEM: unaryRel[rel=least_+_6mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_6mm
*CAT: n
*SEM: twoRel[rel=least_+_6mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_6mm
*CAT: n
*SEM: twoRel[rel=least_+_6mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_6mm
*CAT: n
*SEM: orRel[rel=least_+_6mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modular_+_terminal_+_blocks
*CAT: n
*SEM: unaryRel[rel=modular_+_terminal_+_blocks]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modular_+_terminal_+_blocks
*CAT: n
*SEM: twoRel[rel=modular_+_terminal_+_blocks]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modular_+_terminal_+_blocks
*CAT: n
*SEM: twoRel[rel=modular_+_terminal_+_blocks]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modular_+_terminal_+_blocks
*CAT: n
*SEM: orRel[rel=modular_+_terminal_+_blocks]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: free_+_movement
*CAT: n
*SEM: unaryRel[rel=free_+_movement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: free_+_movement
*CAT: n
*SEM: twoRel[rel=free_+_movement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: free_+_movement
*CAT: n
*SEM: twoRel[rel=free_+_movement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: free_+_movement
*CAT: n
*SEM: orRel[rel=free_+_movement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_of_+_350mm
*CAT: n
*SEM: unaryRel[rel=maximum_+_pitch_+_of_+_350mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_of_+_350mm
*CAT: n
*SEM: twoRel[rel=maximum_+_pitch_+_of_+_350mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_of_+_350mm
*CAT: n
*SEM: twoRel[rel=maximum_+_pitch_+_of_+_350mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_of_+_350mm
*CAT: n
*SEM: orRel[rel=maximum_+_pitch_+_of_+_350mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_fflz
*CAT: n
*SEM: unaryRel[rel=in_+_fflz]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_fflz
*CAT: n
*SEM: twoRel[rel=in_+_fflz]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_fflz
*CAT: n
*SEM: twoRel[rel=in_+_fflz]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_fflz
*CAT: n
*SEM: orRel[rel=in_+_fflz]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: current_+_carrying_+_screwed_+_fastener
*CAT: n
*SEM: unaryRel[rel=current_+_carrying_+_screwed_+_fastener]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: current_+_carrying_+_screwed_+_fastener
*CAT: n
*SEM: twoRel[rel=current_+_carrying_+_screwed_+_fastener]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: current_+_carrying_+_screwed_+_fastener
*CAT: n
*SEM: twoRel[rel=current_+_carrying_+_screwed_+_fastener]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: current_+_carrying_+_screwed_+_fastener
*CAT: n
*SEM: orRel[rel=current_+_carrying_+_screwed_+_fastener]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: beginning
*CAT: n
*SEM: unaryRel[rel=beginning]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: beginning
*CAT: n
*SEM: twoRel[rel=beginning]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: beginning
*CAT: n
*SEM: twoRel[rel=beginning]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: beginning
*CAT: n
*SEM: orRel[rel=beginning]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ptfe_+_inner_+_tube
*CAT: n
*SEM: unaryRel[rel=ptfe_+_inner_+_tube]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ptfe_+_inner_+_tube
*CAT: n
*SEM: twoRel[rel=ptfe_+_inner_+_tube]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ptfe_+_inner_+_tube
*CAT: n
*SEM: twoRel[rel=ptfe_+_inner_+_tube]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ptfe_+_inner_+_tube
*CAT: n
*SEM: orRel[rel=ptfe_+_inner_+_tube]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: male_+_end_+_union
*CAT: n
*SEM: unaryRel[rel=male_+_end_+_union]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: male_+_end_+_union
*CAT: n
*SEM: twoRel[rel=male_+_end_+_union]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: male_+_end_+_union
*CAT: n
*SEM: twoRel[rel=male_+_end_+_union]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: male_+_end_+_union
*CAT: n
*SEM: orRel[rel=male_+_end_+_union]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__-_equalto_-_300mm
*CAT: n
*SEM: unaryRel[rel=d_+__-_smallerThan_-__-_equalto_-_300mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__-_equalto_-_300mm
*CAT: n
*SEM: twoRel[rel=d_+__-_smallerThan_-__-_equalto_-_300mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__-_equalto_-_300mm
*CAT: n
*SEM: twoRel[rel=d_+__-_smallerThan_-__-_equalto_-_300mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__-_equalto_-_300mm
*CAT: n
*SEM: orRel[rel=d_+__-_smallerThan_-__-_equalto_-_300mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: very_+_long_+_hydraulic_+_pipes
*CAT: n
*SEM: unaryRel[rel=very_+_long_+_hydraulic_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: very_+_long_+_hydraulic_+_pipes
*CAT: n
*SEM: twoRel[rel=very_+_long_+_hydraulic_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: very_+_long_+_hydraulic_+_pipes
*CAT: n
*SEM: twoRel[rel=very_+_long_+_hydraulic_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: very_+_long_+_hydraulic_+_pipes
*CAT: n
*SEM: orRel[rel=very_+_long_+_hydraulic_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_distance_+_of_+_15mm
*CAT: n
*SEM: unaryRel[rel=minimum_+_distance_+_of_+_15mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_distance_+_of_+_15mm
*CAT: n
*SEM: twoRel[rel=minimum_+_distance_+_of_+_15mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_distance_+_of_+_15mm
*CAT: n
*SEM: twoRel[rel=minimum_+_distance_+_of_+_15mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_distance_+_of_+_15mm
*CAT: n
*SEM: orRel[rel=minimum_+_distance_+_of_+_15mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: are_+_not_+_permitted
*CAT: n
*SEM: unaryRel[rel=are_+_not_+_permitted]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: are_+_not_+_permitted
*CAT: n
*SEM: twoRel[rel=are_+_not_+_permitted]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: are_+_not_+_permitted
*CAT: n
*SEM: twoRel[rel=are_+_not_+_permitted]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: are_+_not_+_permitted
*CAT: n
*SEM: orRel[rel=are_+_not_+_permitted]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: radii
*CAT: n
*SEM: unaryRel[rel=radii]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: radii
*CAT: n
*SEM: twoRel[rel=radii]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: radii
*CAT: n
*SEM: twoRel[rel=radii]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: radii
*CAT: n
*SEM: orRel[rel=radii]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: printed_+_black
*CAT: n
*SEM: unaryRel[rel=printed_+_black]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: printed_+_black
*CAT: n
*SEM: twoRel[rel=printed_+_black]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: printed_+_black
*CAT: n
*SEM: twoRel[rel=printed_+_black]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: printed_+_black
*CAT: n
*SEM: orRel[rel=printed_+_black]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbd_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle
*CAT: n
*SEM: unaryRel[rel=nsa5516_+_cbd_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbd_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=nsa5516_+_cbd_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbd_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=nsa5516_+_cbd_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbd_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle
*CAT: n
*SEM: orRel[rel=nsa5516_+_cbd_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_zone_+_which
*CAT: n
*SEM: unaryRel[rel=pylon_+_zone_+_which]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_zone_+_which
*CAT: n
*SEM: twoRel[rel=pylon_+_zone_+_which]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_zone_+_which
*CAT: n
*SEM: twoRel[rel=pylon_+_zone_+_which]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_zone_+_which
*CAT: n
*SEM: orRel[rel=pylon_+_zone_+_which]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_systems
*CAT: n
*SEM: unaryRel[rel=mechanical_+_systems]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_systems
*CAT: n
*SEM: twoRel[rel=mechanical_+_systems]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_systems
*CAT: n
*SEM: twoRel[rel=mechanical_+_systems]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_systems
*CAT: n
*SEM: orRel[rel=mechanical_+_systems]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 200
*CAT: n
*SEM: unaryRel[rel=200]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 200
*CAT: n
*SEM: twoRel[rel=200]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 200
*CAT: n
*SEM: twoRel[rel=200]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 200
*CAT: n
*SEM: orRel[rel=200]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_a_+_“multi-hole”_+_type_+_clamp_+_block_+_solution
*CAT: n
*SEM: unaryRel[rel=as_+_a_+_“multi-hole”_+_type_+_clamp_+_block_+_solution]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_a_+_“multi-hole”_+_type_+_clamp_+_block_+_solution
*CAT: n
*SEM: twoRel[rel=as_+_a_+_“multi-hole”_+_type_+_clamp_+_block_+_solution]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_a_+_“multi-hole”_+_type_+_clamp_+_block_+_solution
*CAT: n
*SEM: twoRel[rel=as_+_a_+_“multi-hole”_+_type_+_clamp_+_block_+_solution]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_a_+_“multi-hole”_+_type_+_clamp_+_block_+_solution
*CAT: n
*SEM: orRel[rel=as_+_a_+_“multi-hole”_+_type_+_clamp_+_block_+_solution]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: third_+_priority_+_not
*CAT: n
*SEM: unaryRel[rel=third_+_priority_+_not]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: third_+_priority_+_not
*CAT: n
*SEM: twoRel[rel=third_+_priority_+_not]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: third_+_priority_+_not
*CAT: n
*SEM: twoRel[rel=third_+_priority_+_not]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: third_+_priority_+_not
*CAT: n
*SEM: orRel[rel=third_+_priority_+_not]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obb
*CAT: n
*SEM: unaryRel[rel=obb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obb
*CAT: n
*SEM: twoRel[rel=obb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obb
*CAT: n
*SEM: twoRel[rel=obb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obb
*CAT: n
*SEM: orRel[rel=obb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_derivation
*CAT: n
*SEM: unaryRel[rel=double_+_derivation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_derivation
*CAT: n
*SEM: twoRel[rel=double_+_derivation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_derivation
*CAT: n
*SEM: twoRel[rel=double_+_derivation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_derivation
*CAT: n
*SEM: orRel[rel=double_+_derivation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: phases
*CAT: n
*SEM: unaryRel[rel=phases]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: phases
*CAT: n
*SEM: twoRel[rel=phases]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: phases
*CAT: n
*SEM: twoRel[rel=phases]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: phases
*CAT: n
*SEM: orRel[rel=phases]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_d_+__-_greaterThan_-__+__-_equalto_-_25mm
*CAT: n
*SEM: unaryRel[rel=distance_+_d_+__-_greaterThan_-__+__-_equalto_-_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_d_+__-_greaterThan_-__+__-_equalto_-_25mm
*CAT: n
*SEM: twoRel[rel=distance_+_d_+__-_greaterThan_-__+__-_equalto_-_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_d_+__-_greaterThan_-__+__-_equalto_-_25mm
*CAT: n
*SEM: twoRel[rel=distance_+_d_+__-_greaterThan_-__+__-_equalto_-_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_d_+__-_greaterThan_-__+__-_equalto_-_25mm
*CAT: n
*SEM: orRel[rel=distance_+_d_+__-_greaterThan_-__+__-_equalto_-_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: significant_+_bends
*CAT: n
*SEM: unaryRel[rel=significant_+_bends]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: significant_+_bends
*CAT: n
*SEM: twoRel[rel=significant_+_bends]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: significant_+_bends
*CAT: n
*SEM: twoRel[rel=significant_+_bends]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: significant_+_bends
*CAT: n
*SEM: orRel[rel=significant_+_bends]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: place_+_of_+_smallest_+_clearance_+_between_+_rigid_+_pipe
*CAT: n
*SEM: unaryRel[rel=place_+_of_+_smallest_+_clearance_+_between_+_rigid_+_pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: place_+_of_+_smallest_+_clearance_+_between_+_rigid_+_pipe
*CAT: n
*SEM: twoRel[rel=place_+_of_+_smallest_+_clearance_+_between_+_rigid_+_pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: place_+_of_+_smallest_+_clearance_+_between_+_rigid_+_pipe
*CAT: n
*SEM: twoRel[rel=place_+_of_+_smallest_+_clearance_+_between_+_rigid_+_pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: place_+_of_+_smallest_+_clearance_+_between_+_rigid_+_pipe
*CAT: n
*SEM: orRel[rel=place_+_of_+_smallest_+_clearance_+_between_+_rigid_+_pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: friction
*CAT: n
*SEM: unaryRel[rel=friction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: friction
*CAT: n
*SEM: twoRel[rel=friction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: friction
*CAT: n
*SEM: twoRel[rel=friction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: friction
*CAT: n
*SEM: orRel[rel=friction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50mm_+__-_greaterThan_-__+__-_equalto_-_d_+__-_greaterThan_-__+__-_equalto_-_25mm
*CAT: n
*SEM: unaryRel[rel=50mm_+__-_greaterThan_-__+__-_equalto_-_d_+__-_greaterThan_-__+__-_equalto_-_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50mm_+__-_greaterThan_-__+__-_equalto_-_d_+__-_greaterThan_-__+__-_equalto_-_25mm
*CAT: n
*SEM: twoRel[rel=50mm_+__-_greaterThan_-__+__-_equalto_-_d_+__-_greaterThan_-__+__-_equalto_-_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50mm_+__-_greaterThan_-__+__-_equalto_-_d_+__-_greaterThan_-__+__-_equalto_-_25mm
*CAT: n
*SEM: twoRel[rel=50mm_+__-_greaterThan_-__+__-_equalto_-_d_+__-_greaterThan_-__+__-_equalto_-_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50mm_+__-_greaterThan_-__+__-_equalto_-_d_+__-_greaterThan_-__+__-_equalto_-_25mm
*CAT: n
*SEM: orRel[rel=50mm_+__-_greaterThan_-__+__-_equalto_-_d_+__-_greaterThan_-__+__-_equalto_-_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_directly_+_the_+_structure_+_element
*CAT: n
*SEM: unaryRel[rel=not_+_directly_+_the_+_structure_+_element]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_directly_+_the_+_structure_+_element
*CAT: n
*SEM: twoRel[rel=not_+_directly_+_the_+_structure_+_element]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_directly_+_the_+_structure_+_element
*CAT: n
*SEM: twoRel[rel=not_+_directly_+_the_+_structure_+_element]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_directly_+_the_+_structure_+_element
*CAT: n
*SEM: orRel[rel=not_+_directly_+_the_+_structure_+_element]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detection
*CAT: n
*SEM: unaryRel[rel=detection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detection
*CAT: n
*SEM: twoRel[rel=detection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detection
*CAT: n
*SEM: twoRel[rel=detection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detection
*CAT: n
*SEM: orRel[rel=detection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to
*CAT: n
*SEM: unaryRel[rel=to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to
*CAT: n
*SEM: twoRel[rel=to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to
*CAT: n
*SEM: twoRel[rel=to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to
*CAT: n
*SEM: orRel[rel=to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: open_-_backslash_-_split_+_conduit_-_backslash_-_sleeve
*CAT: n
*SEM: unaryRel[rel=open_-_backslash_-_split_+_conduit_-_backslash_-_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: open_-_backslash_-_split_+_conduit_-_backslash_-_sleeve
*CAT: n
*SEM: twoRel[rel=open_-_backslash_-_split_+_conduit_-_backslash_-_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: open_-_backslash_-_split_+_conduit_-_backslash_-_sleeve
*CAT: n
*SEM: twoRel[rel=open_-_backslash_-_split_+_conduit_-_backslash_-_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: open_-_backslash_-_split_+_conduit_-_backslash_-_sleeve
*CAT: n
*SEM: orRel[rel=open_-_backslash_-_split_+_conduit_-_backslash_-_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_priorityor_+_on_+_one_+_connector_+_plate
*CAT: n
*SEM: unaryRel[rel=second_+_priorityor_+_on_+_one_+_connector_+_plate]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_priorityor_+_on_+_one_+_connector_+_plate
*CAT: n
*SEM: twoRel[rel=second_+_priorityor_+_on_+_one_+_connector_+_plate]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_priorityor_+_on_+_one_+_connector_+_plate
*CAT: n
*SEM: twoRel[rel=second_+_priorityor_+_on_+_one_+_connector_+_plate]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_priorityor_+_on_+_one_+_connector_+_plate
*CAT: n
*SEM: orRel[rel=second_+_priorityor_+_on_+_one_+_connector_+_plate]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relevant_+_requirement
*CAT: n
*SEM: unaryRel[rel=relevant_+_requirement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relevant_+_requirement
*CAT: n
*SEM: twoRel[rel=relevant_+_requirement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relevant_+_requirement
*CAT: n
*SEM: twoRel[rel=relevant_+_requirement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relevant_+_requirement
*CAT: n
*SEM: orRel[rel=relevant_+_requirement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_nsa5516_+_cbdor_+_as62200
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_nsa5516_+_cbdor_+_as62200]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_nsa5516_+_cbdor_+_as62200
*CAT: n
*SEM: twoRel[rel=p-clamp_+_nsa5516_+_cbdor_+_as62200]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_nsa5516_+_cbdor_+_as62200
*CAT: n
*SEM: twoRel[rel=p-clamp_+_nsa5516_+_cbdor_+_as62200]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_nsa5516_+_cbdor_+_as62200
*CAT: n
*SEM: orRel[rel=p-clamp_+_nsa5516_+_cbdor_+_as62200]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en6049
*CAT: n
*SEM: unaryRel[rel=en6049]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en6049
*CAT: n
*SEM: twoRel[rel=en6049]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en6049
*CAT: n
*SEM: twoRel[rel=en6049]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en6049
*CAT: n
*SEM: orRel[rel=en6049]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fool_+_proofing
*CAT: n
*SEM: unaryRel[rel=fool_+_proofing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fool_+_proofing
*CAT: n
*SEM: twoRel[rel=fool_+_proofing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fool_+_proofing
*CAT: n
*SEM: twoRel[rel=fool_+_proofing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fool_+_proofing
*CAT: n
*SEM: orRel[rel=fool_+_proofing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937210_+_shrink
*CAT: n
*SEM: unaryRel[rel=nsa_+_937210_+_shrink]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937210_+_shrink
*CAT: n
*SEM: twoRel[rel=nsa_+_937210_+_shrink]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937210_+_shrink
*CAT: n
*SEM: twoRel[rel=nsa_+_937210_+_shrink]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937210_+_shrink
*CAT: n
*SEM: orRel[rel=nsa_+_937210_+_shrink]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: groups_+_of_+_four_+__-_opensb_-_maximum_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=groups_+_of_+_four_+__-_opensb_-_maximum_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: groups_+_of_+_four_+__-_opensb_-_maximum_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=groups_+_of_+_four_+__-_opensb_-_maximum_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: groups_+_of_+_four_+__-_opensb_-_maximum_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=groups_+_of_+_four_+__-_opensb_-_maximum_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: groups_+_of_+_four_+__-_opensb_-_maximum_-_closesb_-_
*CAT: n
*SEM: orRel[rel=groups_+_of_+_four_+__-_opensb_-_maximum_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length
*CAT: n
*SEM: unaryRel[rel=length]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length
*CAT: n
*SEM: twoRel[rel=length]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length
*CAT: n
*SEM: twoRel[rel=length]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length
*CAT: n
*SEM: orRel[rel=length]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_installation
*CAT: n
*SEM: unaryRel[rel=electrical_+_installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_installation
*CAT: n
*SEM: twoRel[rel=electrical_+_installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_installation
*CAT: n
*SEM: twoRel[rel=electrical_+_installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_installation
*CAT: n
*SEM: orRel[rel=electrical_+_installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: umbrella
*CAT: n
*SEM: unaryRel[rel=umbrella]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: umbrella
*CAT: n
*SEM: twoRel[rel=umbrella]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: umbrella
*CAT: n
*SEM: twoRel[rel=umbrella]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: umbrella
*CAT: n
*SEM: orRel[rel=umbrella]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fluid
*CAT: n
*SEM: unaryRel[rel=fluid]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fluid
*CAT: n
*SEM: twoRel[rel=fluid]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fluid
*CAT: n
*SEM: twoRel[rel=fluid]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fluid
*CAT: n
*SEM: orRel[rel=fluid]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: derivative
*CAT: n
*SEM: unaryRel[rel=derivative]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: derivative
*CAT: n
*SEM: twoRel[rel=derivative]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: derivative
*CAT: n
*SEM: twoRel[rel=derivative]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: derivative
*CAT: n
*SEM: orRel[rel=derivative]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_v-support
*CAT: n
*SEM: unaryRel[rel=one_+_v-support]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_v-support
*CAT: n
*SEM: twoRel[rel=one_+_v-support]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_v-support
*CAT: n
*SEM: twoRel[rel=one_+_v-support]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_v-support
*CAT: n
*SEM: orRel[rel=one_+_v-support]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 12_-_comma_-_7mm_+_the_+_bundle
*CAT: n
*SEM: unaryRel[rel=12_-_comma_-_7mm_+_the_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 12_-_comma_-_7mm_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=12_-_comma_-_7mm_+_the_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 12_-_comma_-_7mm_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=12_-_comma_-_7mm_+_the_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 12_-_comma_-_7mm_+_the_+_bundle
*CAT: n
*SEM: orRel[rel=12_-_comma_-_7mm_+_the_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic
*CAT: n
*SEM: unaryRel[rel=graphic]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic
*CAT: n
*SEM: twoRel[rel=graphic]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic
*CAT: n
*SEM: twoRel[rel=graphic]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic
*CAT: n
*SEM: orRel[rel=graphic]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connection_+_to
*CAT: n
*SEM: unaryRel[rel=connection_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connection_+_to
*CAT: n
*SEM: twoRel[rel=connection_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connection_+_to
*CAT: n
*SEM: twoRel[rel=connection_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connection_+_to
*CAT: n
*SEM: orRel[rel=connection_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: heat_+_shrinkable_+_cap
*CAT: n
*SEM: unaryRel[rel=heat_+_shrinkable_+_cap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: heat_+_shrinkable_+_cap
*CAT: n
*SEM: twoRel[rel=heat_+_shrinkable_+_cap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: heat_+_shrinkable_+_cap
*CAT: n
*SEM: twoRel[rel=heat_+_shrinkable_+_cap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: heat_+_shrinkable_+_cap
*CAT: n
*SEM: orRel[rel=heat_+_shrinkable_+_cap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: free_+_zones
*CAT: n
*SEM: unaryRel[rel=free_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: free_+_zones
*CAT: n
*SEM: twoRel[rel=free_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: free_+_zones
*CAT: n
*SEM: twoRel[rel=free_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: free_+_zones
*CAT: n
*SEM: orRel[rel=free_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air-line_+_distance_+_10_+_mm
*CAT: n
*SEM: unaryRel[rel=air-line_+_distance_+_10_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air-line_+_distance_+_10_+_mm
*CAT: n
*SEM: twoRel[rel=air-line_+_distance_+_10_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air-line_+_distance_+_10_+_mm
*CAT: n
*SEM: twoRel[rel=air-line_+_distance_+_10_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air-line_+_distance_+_10_+_mm
*CAT: n
*SEM: orRel[rel=air-line_+_distance_+_10_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_length
*CAT: n
*SEM: unaryRel[rel=minimum_+_length]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_length
*CAT: n
*SEM: twoRel[rel=minimum_+_length]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_length
*CAT: n
*SEM: twoRel[rel=minimum_+_length]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_length
*CAT: n
*SEM: orRel[rel=minimum_+_length]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_pipes
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_pipes
*CAT: n
*SEM: twoRel[rel=hydraulic_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_pipes
*CAT: n
*SEM: twoRel[rel=hydraulic_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_pipes
*CAT: n
*SEM: orRel[rel=hydraulic_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_-_comma_-_2micrometer
*CAT: n
*SEM: unaryRel[rel=3_-_comma_-_2micrometer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_-_comma_-_2micrometer
*CAT: n
*SEM: twoRel[rel=3_-_comma_-_2micrometer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_-_comma_-_2micrometer
*CAT: n
*SEM: twoRel[rel=3_-_comma_-_2micrometer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_-_comma_-_2micrometer
*CAT: n
*SEM: orRel[rel=3_-_comma_-_2micrometer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: accesseable
*CAT: n
*SEM: unaryRel[rel=accesseable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: accesseable
*CAT: n
*SEM: twoRel[rel=accesseable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: accesseable
*CAT: n
*SEM: twoRel[rel=accesseable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: accesseable
*CAT: n
*SEM: orRel[rel=accesseable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guide_+_identification
*CAT: n
*SEM: unaryRel[rel=guide_+_identification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guide_+_identification
*CAT: n
*SEM: twoRel[rel=guide_+_identification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guide_+_identification
*CAT: n
*SEM: twoRel[rel=guide_+_identification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guide_+_identification
*CAT: n
*SEM: orRel[rel=guide_+_identification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cases_+_where_+_wire_+_locking_+_cannot_+_be_+_avoided
*CAT: n
*SEM: unaryRel[rel=cases_+_where_+_wire_+_locking_+_cannot_+_be_+_avoided]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cases_+_where_+_wire_+_locking_+_cannot_+_be_+_avoided
*CAT: n
*SEM: twoRel[rel=cases_+_where_+_wire_+_locking_+_cannot_+_be_+_avoided]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cases_+_where_+_wire_+_locking_+_cannot_+_be_+_avoided
*CAT: n
*SEM: twoRel[rel=cases_+_where_+_wire_+_locking_+_cannot_+_be_+_avoided]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cases_+_where_+_wire_+_locking_+_cannot_+_be_+_avoided
*CAT: n
*SEM: orRel[rel=cases_+_where_+_wire_+_locking_+_cannot_+_be_+_avoided]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component
*CAT: n
*SEM: unaryRel[rel=component]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component
*CAT: n
*SEM: twoRel[rel=component]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component
*CAT: n
*SEM: twoRel[rel=component]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component
*CAT: n
*SEM: orRel[rel=component]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protectionor
*CAT: n
*SEM: unaryRel[rel=protectionor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protectionor
*CAT: n
*SEM: twoRel[rel=protectionor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protectionor
*CAT: n
*SEM: twoRel[rel=protectionor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protectionor
*CAT: n
*SEM: orRel[rel=protectionor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: points
*CAT: n
*SEM: unaryRel[rel=points]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: points
*CAT: n
*SEM: twoRel[rel=points]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: points
*CAT: n
*SEM: twoRel[rel=points]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: points
*CAT: n
*SEM: orRel[rel=points]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna2553_+_spring_+_washer
*CAT: n
*SEM: unaryRel[rel=asna2553_+_spring_+_washer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna2553_+_spring_+_washer
*CAT: n
*SEM: twoRel[rel=asna2553_+_spring_+_washer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna2553_+_spring_+_washer
*CAT: n
*SEM: twoRel[rel=asna2553_+_spring_+_washer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna2553_+_spring_+_washer
*CAT: n
*SEM: orRel[rel=asna2553_+_spring_+_washer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_bend
*CAT: n
*SEM: unaryRel[rel=single_+_bend]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_bend
*CAT: n
*SEM: twoRel[rel=single_+_bend]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_bend
*CAT: n
*SEM: twoRel[rel=single_+_bend]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_bend
*CAT: n
*SEM: orRel[rel=single_+_bend]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_pair
*CAT: n
*SEM: unaryRel[rel=attached_+_pair]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_pair
*CAT: n
*SEM: twoRel[rel=attached_+_pair]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_pair
*CAT: n
*SEM: twoRel[rel=attached_+_pair]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_pair
*CAT: n
*SEM: orRel[rel=attached_+_pair]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route_+__-_opensb_-_optical_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=r-route_+__-_opensb_-_optical_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route_+__-_opensb_-_optical_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=r-route_+__-_opensb_-_optical_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route_+__-_opensb_-_optical_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=r-route_+__-_opensb_-_optical_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route_+__-_opensb_-_optical_-_closesb_-_
*CAT: n
*SEM: orRel[rel=r-route_+__-_opensb_-_optical_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre-stressed_+_bundle
*CAT: n
*SEM: unaryRel[rel=pre-stressed_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre-stressed_+_bundle
*CAT: n
*SEM: twoRel[rel=pre-stressed_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre-stressed_+_bundle
*CAT: n
*SEM: twoRel[rel=pre-stressed_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre-stressed_+_bundle
*CAT: n
*SEM: orRel[rel=pre-stressed_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_pipes
*CAT: n
*SEM: unaryRel[rel=straight_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_pipes
*CAT: n
*SEM: twoRel[rel=straight_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_pipes
*CAT: n
*SEM: twoRel[rel=straight_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_pipes
*CAT: n
*SEM: orRel[rel=straight_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harnesses
*CAT: n
*SEM: unaryRel[rel=harnesses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harnesses
*CAT: n
*SEM: twoRel[rel=harnesses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harnesses
*CAT: n
*SEM: twoRel[rel=harnesses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harnesses
*CAT: n
*SEM: orRel[rel=harnesses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_lead
*CAT: n
*SEM: unaryRel[rel=bonding_+_lead]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_lead
*CAT: n
*SEM: twoRel[rel=bonding_+_lead]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_lead
*CAT: n
*SEM: twoRel[rel=bonding_+_lead]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_lead
*CAT: n
*SEM: orRel[rel=bonding_+_lead]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air
*CAT: n
*SEM: unaryRel[rel=bleed_+_air]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air
*CAT: n
*SEM: twoRel[rel=bleed_+_air]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air
*CAT: n
*SEM: twoRel[rel=bleed_+_air]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air
*CAT: n
*SEM: orRel[rel=bleed_+_air]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_colour_+_code
*CAT: n
*SEM: unaryRel[rel=different_+_colour_+_code]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_colour_+_code
*CAT: n
*SEM: twoRel[rel=different_+_colour_+_code]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_colour_+_code
*CAT: n
*SEM: twoRel[rel=different_+_colour_+_code]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_colour_+_code
*CAT: n
*SEM: orRel[rel=different_+_colour_+_code]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_sensor
*CAT: n
*SEM: unaryRel[rel=temperature_+_sensor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_sensor
*CAT: n
*SEM: twoRel[rel=temperature_+_sensor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_sensor
*CAT: n
*SEM: twoRel[rel=temperature_+_sensor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_sensor
*CAT: n
*SEM: orRel[rel=temperature_+_sensor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_extinguishing_+_circuit
*CAT: n
*SEM: unaryRel[rel=fire_+_extinguishing_+_circuit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_extinguishing_+_circuit
*CAT: n
*SEM: twoRel[rel=fire_+_extinguishing_+_circuit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_extinguishing_+_circuit
*CAT: n
*SEM: twoRel[rel=fire_+_extinguishing_+_circuit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_extinguishing_+_circuit
*CAT: n
*SEM: orRel[rel=fire_+_extinguishing_+_circuit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_-_backslash_-__+_grounding_+_bracket
*CAT: n
*SEM: unaryRel[rel=bonding_-_backslash_-__+_grounding_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_-_backslash_-__+_grounding_+_bracket
*CAT: n
*SEM: twoRel[rel=bonding_-_backslash_-__+_grounding_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_-_backslash_-__+_grounding_+_bracket
*CAT: n
*SEM: twoRel[rel=bonding_-_backslash_-__+_grounding_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_-_backslash_-__+_grounding_+_bracket
*CAT: n
*SEM: orRel[rel=bonding_-_backslash_-__+_grounding_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as
*CAT: n
*SEM: unaryRel[rel=as]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as
*CAT: n
*SEM: twoRel[rel=as]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as
*CAT: n
*SEM: twoRel[rel=as]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as
*CAT: n
*SEM: orRel[rel=as]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: deviation
*CAT: n
*SEM: unaryRel[rel=deviation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: deviation
*CAT: n
*SEM: twoRel[rel=deviation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: deviation
*CAT: n
*SEM: twoRel[rel=deviation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: deviation
*CAT: n
*SEM: orRel[rel=deviation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer_+_p0
*CAT: n
*SEM: unaryRel[rel=stringer_+_p0]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer_+_p0
*CAT: n
*SEM: twoRel[rel=stringer_+_p0]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer_+_p0
*CAT: n
*SEM: twoRel[rel=stringer_+_p0]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer_+_p0
*CAT: n
*SEM: orRel[rel=stringer_+_p0]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: moving_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: unaryRel[rel=moving_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: moving_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: twoRel[rel=moving_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: moving_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: twoRel[rel=moving_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: moving_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: orRel[rel=moving_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm
*CAT: n
*SEM: unaryRel[rel=50_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm
*CAT: n
*SEM: twoRel[rel=50_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm
*CAT: n
*SEM: twoRel[rel=50_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm
*CAT: n
*SEM: orRel[rel=50_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g_+_antenna..
*CAT: n
*SEM: unaryRel[rel=e.g_+_antenna..]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g_+_antenna..
*CAT: n
*SEM: twoRel[rel=e.g_+_antenna..]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g_+_antenna..
*CAT: n
*SEM: twoRel[rel=e.g_+_antenna..]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g_+_antenna..
*CAT: n
*SEM: orRel[rel=e.g_+_antenna..]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_the_+_installation_+_of_+_repair_+_pipes_+_in_+_case_+_of_+_damage
*CAT: n
*SEM: unaryRel[rel=allow_+_the_+_installation_+_of_+_repair_+_pipes_+_in_+_case_+_of_+_damage]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_the_+_installation_+_of_+_repair_+_pipes_+_in_+_case_+_of_+_damage
*CAT: n
*SEM: twoRel[rel=allow_+_the_+_installation_+_of_+_repair_+_pipes_+_in_+_case_+_of_+_damage]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_the_+_installation_+_of_+_repair_+_pipes_+_in_+_case_+_of_+_damage
*CAT: n
*SEM: twoRel[rel=allow_+_the_+_installation_+_of_+_repair_+_pipes_+_in_+_case_+_of_+_damage]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_the_+_installation_+_of_+_repair_+_pipes_+_in_+_case_+_of_+_damage
*CAT: n
*SEM: orRel[rel=allow_+_the_+_installation_+_of_+_repair_+_pipes_+_in_+_case_+_of_+_damage]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bending_+_radii_+_for_+_support
*CAT: n
*SEM: unaryRel[rel=bending_+_radii_+_for_+_support]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bending_+_radii_+_for_+_support
*CAT: n
*SEM: twoRel[rel=bending_+_radii_+_for_+_support]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bending_+_radii_+_for_+_support
*CAT: n
*SEM: twoRel[rel=bending_+_radii_+_for_+_support]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bending_+_radii_+_for_+_support
*CAT: n
*SEM: orRel[rel=bending_+_radii_+_for_+_support]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: unaryRel[rel=obstructive_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: twoRel[rel=obstructive_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: twoRel[rel=obstructive_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: orRel[rel=obstructive_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_d_+__-_smallerThan_-_
*CAT: n
*SEM: unaryRel[rel=maximum_+_pitch_+_d_+__-_smallerThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_d_+__-_smallerThan_-_
*CAT: n
*SEM: twoRel[rel=maximum_+_pitch_+_d_+__-_smallerThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_d_+__-_smallerThan_-_
*CAT: n
*SEM: twoRel[rel=maximum_+_pitch_+_d_+__-_smallerThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_d_+__-_smallerThan_-_
*CAT: n
*SEM: orRel[rel=maximum_+_pitch_+_d_+__-_smallerThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle_-_opensb_-_s_-_closesb_-__+_between_+_0_-_degrees_-_
*CAT: n
*SEM: unaryRel[rel=bend_+_angle_-_opensb_-_s_-_closesb_-__+_between_+_0_-_degrees_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle_-_opensb_-_s_-_closesb_-__+_between_+_0_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=bend_+_angle_-_opensb_-_s_-_closesb_-__+_between_+_0_-_degrees_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle_-_opensb_-_s_-_closesb_-__+_between_+_0_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=bend_+_angle_-_opensb_-_s_-_closesb_-__+_between_+_0_-_degrees_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle_-_opensb_-_s_-_closesb_-__+_between_+_0_-_degrees_-_
*CAT: n
*SEM: orRel[rel=bend_+_angle_-_opensb_-_s_-_closesb_-__+_between_+_0_-_degrees_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_view
*CAT: n
*SEM: unaryRel[rel=front_+_view]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_view
*CAT: n
*SEM: twoRel[rel=front_+_view]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_view
*CAT: n
*SEM: twoRel[rel=front_+_view]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_view
*CAT: n
*SEM: orRel[rel=front_+_view]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wedge_+_type_+_support_+_nsa_+_935513-01
*CAT: n
*SEM: unaryRel[rel=wedge_+_type_+_support_+_nsa_+_935513-01]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wedge_+_type_+_support_+_nsa_+_935513-01
*CAT: n
*SEM: twoRel[rel=wedge_+_type_+_support_+_nsa_+_935513-01]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wedge_+_type_+_support_+_nsa_+_935513-01
*CAT: n
*SEM: twoRel[rel=wedge_+_type_+_support_+_nsa_+_935513-01]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wedge_+_type_+_support_+_nsa_+_935513-01
*CAT: n
*SEM: orRel[rel=wedge_+_type_+_support_+_nsa_+_935513-01]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_fuel_+_tank_+_boundaries
*CAT: n
*SEM: unaryRel[rel=any_+_fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_fuel_+_tank_+_boundaries
*CAT: n
*SEM: twoRel[rel=any_+_fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_fuel_+_tank_+_boundaries
*CAT: n
*SEM: twoRel[rel=any_+_fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_fuel_+_tank_+_boundaries
*CAT: n
*SEM: orRel[rel=any_+_fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relation_+_2n_+__-_greaterThan_-__+_5_+_d2_+__-_smallerThan_-__+_2
*CAT: n
*SEM: unaryRel[rel=relation_+_2n_+__-_greaterThan_-__+_5_+_d2_+__-_smallerThan_-__+_2]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relation_+_2n_+__-_greaterThan_-__+_5_+_d2_+__-_smallerThan_-__+_2
*CAT: n
*SEM: twoRel[rel=relation_+_2n_+__-_greaterThan_-__+_5_+_d2_+__-_smallerThan_-__+_2]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relation_+_2n_+__-_greaterThan_-__+_5_+_d2_+__-_smallerThan_-__+_2
*CAT: n
*SEM: twoRel[rel=relation_+_2n_+__-_greaterThan_-__+_5_+_d2_+__-_smallerThan_-__+_2]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relation_+_2n_+__-_greaterThan_-__+_5_+_d2_+__-_smallerThan_-__+_2
*CAT: n
*SEM: orRel[rel=relation_+_2n_+__-_greaterThan_-__+_5_+_d2_+__-_smallerThan_-__+_2]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_solution
*CAT: n
*SEM: unaryRel[rel=standard_+_solution]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_solution
*CAT: n
*SEM: twoRel[rel=standard_+_solution]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_solution
*CAT: n
*SEM: twoRel[rel=standard_+_solution]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_solution
*CAT: n
*SEM: orRel[rel=standard_+_solution]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: order_+_to
*CAT: n
*SEM: unaryRel[rel=order_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: order_+_to
*CAT: n
*SEM: twoRel[rel=order_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: order_+_to
*CAT: n
*SEM: twoRel[rel=order_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: order_+_to
*CAT: n
*SEM: orRel[rel=order_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bends
*CAT: n
*SEM: unaryRel[rel=bends]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bends
*CAT: n
*SEM: twoRel[rel=bends]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bends
*CAT: n
*SEM: twoRel[rel=bends]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bends
*CAT: n
*SEM: orRel[rel=bends]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gap_+_when
*CAT: n
*SEM: unaryRel[rel=gap_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gap_+_when
*CAT: n
*SEM: twoRel[rel=gap_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gap_+_when
*CAT: n
*SEM: twoRel[rel=gap_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gap_+_when
*CAT: n
*SEM: orRel[rel=gap_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vt
*CAT: n
*SEM: unaryRel[rel=vt]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vt
*CAT: n
*SEM: twoRel[rel=vt]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vt
*CAT: n
*SEM: twoRel[rel=vt]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vt
*CAT: n
*SEM: orRel[rel=vt]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_route_+_category
*CAT: n
*SEM: unaryRel[rel=each_+_route_+_category]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_route_+_category
*CAT: n
*SEM: twoRel[rel=each_+_route_+_category]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_route_+_category
*CAT: n
*SEM: twoRel[rel=each_+_route_+_category]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_route_+_category
*CAT: n
*SEM: orRel[rel=each_+_route_+_category]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: axes
*CAT: n
*SEM: unaryRel[rel=axes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: axes
*CAT: n
*SEM: twoRel[rel=axes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: axes
*CAT: n
*SEM: twoRel[rel=axes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: axes
*CAT: n
*SEM: orRel[rel=axes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_to
*CAT: n
*SEM: unaryRel[rel=pipes_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_to
*CAT: n
*SEM: twoRel[rel=pipes_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_to
*CAT: n
*SEM: twoRel[rel=pipes_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_to
*CAT: n
*SEM: orRel[rel=pipes_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-__+_37mm
*CAT: n
*SEM: unaryRel[rel=d_+__-_greaterThan_-__+__-_equalto_-__+_37mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-__+_37mm
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-__+_37mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-__+_37mm
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-__+_37mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-__+_37mm
*CAT: n
*SEM: orRel[rel=d_+__-_greaterThan_-__+__-_equalto_-__+_37mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below_-_colon_-_
*CAT: n
*SEM: unaryRel[rel=figure_+_below_-_colon_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below_-_colon_-_
*CAT: n
*SEM: twoRel[rel=figure_+_below_-_colon_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below_-_colon_-_
*CAT: n
*SEM: twoRel[rel=figure_+_below_-_colon_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below_-_colon_-_
*CAT: n
*SEM: orRel[rel=figure_+_below_-_colon_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate_+_not_+_exceeding_+_60_-_percent_-__+_at_+_aircraft_+_delivery
*CAT: n
*SEM: unaryRel[rel=fillingrate_+_not_+_exceeding_+_60_-_percent_-__+_at_+_aircraft_+_delivery]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate_+_not_+_exceeding_+_60_-_percent_-__+_at_+_aircraft_+_delivery
*CAT: n
*SEM: twoRel[rel=fillingrate_+_not_+_exceeding_+_60_-_percent_-__+_at_+_aircraft_+_delivery]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate_+_not_+_exceeding_+_60_-_percent_-__+_at_+_aircraft_+_delivery
*CAT: n
*SEM: twoRel[rel=fillingrate_+_not_+_exceeding_+_60_-_percent_-__+_at_+_aircraft_+_delivery]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate_+_not_+_exceeding_+_60_-_percent_-__+_at_+_aircraft_+_delivery
*CAT: n
*SEM: orRel[rel=fillingrate_+_not_+_exceeding_+_60_-_percent_-__+_at_+_aircraft_+_delivery]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single
*CAT: n
*SEM: unaryRel[rel=single]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single
*CAT: n
*SEM: twoRel[rel=single]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single
*CAT: n
*SEM: twoRel[rel=single]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single
*CAT: n
*SEM: orRel[rel=single]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossing_+_linesor_+_at_+_all_+_times
*CAT: n
*SEM: unaryRel[rel=crossing_+_linesor_+_at_+_all_+_times]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossing_+_linesor_+_at_+_all_+_times
*CAT: n
*SEM: twoRel[rel=crossing_+_linesor_+_at_+_all_+_times]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossing_+_linesor_+_at_+_all_+_times
*CAT: n
*SEM: twoRel[rel=crossing_+_linesor_+_at_+_all_+_times]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossing_+_linesor_+_at_+_all_+_times
*CAT: n
*SEM: orRel[rel=crossing_+_linesor_+_at_+_all_+_times]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_clearance
*CAT: n
*SEM: unaryRel[rel=additional_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_clearance
*CAT: n
*SEM: twoRel[rel=additional_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_clearance
*CAT: n
*SEM: twoRel[rel=additional_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_clearance
*CAT: n
*SEM: orRel[rel=additional_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part
*CAT: n
*SEM: unaryRel[rel=structural_+_part]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part
*CAT: n
*SEM: twoRel[rel=structural_+_part]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part
*CAT: n
*SEM: twoRel[rel=structural_+_part]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part
*CAT: n
*SEM: orRel[rel=structural_+_part]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: code_+_w
*CAT: n
*SEM: unaryRel[rel=code_+_w]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: code_+_w
*CAT: n
*SEM: twoRel[rel=code_+_w]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: code_+_w
*CAT: n
*SEM: twoRel[rel=code_+_w]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: code_+_w
*CAT: n
*SEM: orRel[rel=code_+_w]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1128_+_can_+_be_+_used
*CAT: n
*SEM: unaryRel[rel=abs1128_+_can_+_be_+_used]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1128_+_can_+_be_+_used
*CAT: n
*SEM: twoRel[rel=abs1128_+_can_+_be_+_used]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1128_+_can_+_be_+_used
*CAT: n
*SEM: twoRel[rel=abs1128_+_can_+_be_+_used]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1128_+_can_+_be_+_used
*CAT: n
*SEM: orRel[rel=abs1128_+_can_+_be_+_used]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_hazardous_+_areas
*CAT: n
*SEM: unaryRel[rel=pressurized_+_hazardous_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_hazardous_+_areas
*CAT: n
*SEM: twoRel[rel=pressurized_+_hazardous_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_hazardous_+_areas
*CAT: n
*SEM: twoRel[rel=pressurized_+_hazardous_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_hazardous_+_areas
*CAT: n
*SEM: orRel[rel=pressurized_+_hazardous_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 30mm_+_each_+_end
*CAT: n
*SEM: unaryRel[rel=30mm_+_each_+_end]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 30mm_+_each_+_end
*CAT: n
*SEM: twoRel[rel=30mm_+_each_+_end]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 30mm_+_each_+_end
*CAT: n
*SEM: twoRel[rel=30mm_+_each_+_end]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 30mm_+_each_+_end
*CAT: n
*SEM: orRel[rel=30mm_+_each_+_end]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansion_+_loop
*CAT: n
*SEM: unaryRel[rel=expansion_+_loop]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansion_+_loop
*CAT: n
*SEM: twoRel[rel=expansion_+_loop]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansion_+_loop
*CAT: n
*SEM: twoRel[rel=expansion_+_loop]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansion_+_loop
*CAT: n
*SEM: orRel[rel=expansion_+_loop]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route
*CAT: n
*SEM: unaryRel[rel=case_+_of_+_crossing-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route
*CAT: n
*SEM: twoRel[rel=case_+_of_+_crossing-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route
*CAT: n
*SEM: twoRel[rel=case_+_of_+_crossing-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route
*CAT: n
*SEM: orRel[rel=case_+_of_+_crossing-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 180_-_degrees_-_
*CAT: n
*SEM: unaryRel[rel=180_-_degrees_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 180_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=180_-_degrees_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 180_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=180_-_degrees_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 180_-_degrees_-_
*CAT: n
*SEM: orRel[rel=180_-_degrees_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_the_+_repair_+_of_+_pipes_+_in_+_such_+_a_+_way_+_that_+_they_+_can_+_cover_+_any_+_problem_+_occurring_+_in_+_the_+_identified_+_zones
*CAT: n
*SEM: unaryRel[rel=allow_+_the_+_repair_+_of_+_pipes_+_in_+_such_+_a_+_way_+_that_+_they_+_can_+_cover_+_any_+_problem_+_occurring_+_in_+_the_+_identified_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_the_+_repair_+_of_+_pipes_+_in_+_such_+_a_+_way_+_that_+_they_+_can_+_cover_+_any_+_problem_+_occurring_+_in_+_the_+_identified_+_zones
*CAT: n
*SEM: twoRel[rel=allow_+_the_+_repair_+_of_+_pipes_+_in_+_such_+_a_+_way_+_that_+_they_+_can_+_cover_+_any_+_problem_+_occurring_+_in_+_the_+_identified_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_the_+_repair_+_of_+_pipes_+_in_+_such_+_a_+_way_+_that_+_they_+_can_+_cover_+_any_+_problem_+_occurring_+_in_+_the_+_identified_+_zones
*CAT: n
*SEM: twoRel[rel=allow_+_the_+_repair_+_of_+_pipes_+_in_+_such_+_a_+_way_+_that_+_they_+_can_+_cover_+_any_+_problem_+_occurring_+_in_+_the_+_identified_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_the_+_repair_+_of_+_pipes_+_in_+_such_+_a_+_way_+_that_+_they_+_can_+_cover_+_any_+_problem_+_occurring_+_in_+_the_+_identified_+_zones
*CAT: n
*SEM: orRel[rel=allow_+_the_+_repair_+_of_+_pipes_+_in_+_such_+_a_+_way_+_that_+_they_+_can_+_cover_+_any_+_problem_+_occurring_+_in_+_the_+_identified_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_less_+_than
*CAT: n
*SEM: unaryRel[rel=not_+_less_+_than]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_less_+_than
*CAT: n
*SEM: twoRel[rel=not_+_less_+_than]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_less_+_than
*CAT: n
*SEM: twoRel[rel=not_+_less_+_than]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_less_+_than
*CAT: n
*SEM: orRel[rel=not_+_less_+_than]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_-_comma_-_5mm
*CAT: n
*SEM: unaryRel[rel=3_-_comma_-_5mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_-_comma_-_5mm
*CAT: n
*SEM: twoRel[rel=3_-_comma_-_5mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_-_comma_-_5mm
*CAT: n
*SEM: twoRel[rel=3_-_comma_-_5mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_-_comma_-_5mm
*CAT: n
*SEM: orRel[rel=3_-_comma_-_5mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10_+_mm
*CAT: n
*SEM: unaryRel[rel=10_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10_+_mm
*CAT: n
*SEM: twoRel[rel=10_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10_+_mm
*CAT: n
*SEM: twoRel[rel=10_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10_+_mm
*CAT: n
*SEM: orRel[rel=10_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_support
*CAT: n
*SEM: unaryRel[rel=dedicated_+_support]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_support
*CAT: n
*SEM: twoRel[rel=dedicated_+_support]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_support
*CAT: n
*SEM: twoRel[rel=dedicated_+_support]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_support
*CAT: n
*SEM: orRel[rel=dedicated_+_support]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses
*CAT: n
*SEM: orRel[rel=flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: confined_+_areas
*CAT: n
*SEM: unaryRel[rel=confined_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: confined_+_areas
*CAT: n
*SEM: twoRel[rel=confined_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: confined_+_areas
*CAT: n
*SEM: twoRel[rel=confined_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: confined_+_areas
*CAT: n
*SEM: orRel[rel=confined_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_connector
*CAT: n
*SEM: unaryRel[rel=circular_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_connector
*CAT: n
*SEM: twoRel[rel=circular_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_connector
*CAT: n
*SEM: twoRel[rel=circular_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_connector
*CAT: n
*SEM: orRel[rel=circular_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0396_+__-_invcomma_-_style_+_a_-_invcomma_-__+_saddle_+_clamp
*CAT: n
*SEM: unaryRel[rel=abs0396_+__-_invcomma_-_style_+_a_-_invcomma_-__+_saddle_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0396_+__-_invcomma_-_style_+_a_-_invcomma_-__+_saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=abs0396_+__-_invcomma_-_style_+_a_-_invcomma_-__+_saddle_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0396_+__-_invcomma_-_style_+_a_-_invcomma_-__+_saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=abs0396_+__-_invcomma_-_style_+_a_-_invcomma_-__+_saddle_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0396_+__-_invcomma_-_style_+_a_-_invcomma_-__+_saddle_+_clamp
*CAT: n
*SEM: orRel[rel=abs0396_+__-_invcomma_-_style_+_a_-_invcomma_-__+_saddle_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_diameter_+_d
*CAT: n
*SEM: unaryRel[rel=bundle_+_diameter_+_d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_diameter_+_d
*CAT: n
*SEM: twoRel[rel=bundle_+_diameter_+_d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_diameter_+_d
*CAT: n
*SEM: twoRel[rel=bundle_+_diameter_+_d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_diameter_+_d
*CAT: n
*SEM: orRel[rel=bundle_+_diameter_+_d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_on_+_normal_+_installation_+_in_+_accordance
*CAT: n
*SEM: unaryRel[rel=bundle_+_on_+_normal_+_installation_+_in_+_accordance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_on_+_normal_+_installation_+_in_+_accordance
*CAT: n
*SEM: twoRel[rel=bundle_+_on_+_normal_+_installation_+_in_+_accordance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_on_+_normal_+_installation_+_in_+_accordance
*CAT: n
*SEM: twoRel[rel=bundle_+_on_+_normal_+_installation_+_in_+_accordance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_on_+_normal_+_installation_+_in_+_accordance
*CAT: n
*SEM: orRel[rel=bundle_+_on_+_normal_+_installation_+_in_+_accordance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_maximum_+_surface_+_roughness
*CAT: n
*SEM: unaryRel[rel=bundle_+_maximum_+_surface_+_roughness]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_maximum_+_surface_+_roughness
*CAT: n
*SEM: twoRel[rel=bundle_+_maximum_+_surface_+_roughness]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_maximum_+_surface_+_roughness
*CAT: n
*SEM: twoRel[rel=bundle_+_maximum_+_surface_+_roughness]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_maximum_+_surface_+_roughness
*CAT: n
*SEM: orRel[rel=bundle_+_maximum_+_surface_+_roughness]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two
*CAT: n
*SEM: unaryRel[rel=two]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two
*CAT: n
*SEM: twoRel[rel=two]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two
*CAT: n
*SEM: twoRel[rel=two]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two
*CAT: n
*SEM: orRel[rel=two]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vice_+_versa
*CAT: n
*SEM: unaryRel[rel=vice_+_versa]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vice_+_versa
*CAT: n
*SEM: twoRel[rel=vice_+_versa]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vice_+_versa
*CAT: n
*SEM: twoRel[rel=vice_+_versa]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vice_+_versa
*CAT: n
*SEM: orRel[rel=vice_+_versa]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_color
*CAT: n
*SEM: unaryRel[rel=same_+_color]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_color
*CAT: n
*SEM: twoRel[rel=same_+_color]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_color
*CAT: n
*SEM: twoRel[rel=same_+_color]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_color
*CAT: n
*SEM: orRel[rel=same_+_color]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_fluid
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_fluid]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_fluid
*CAT: n
*SEM: twoRel[rel=hydraulic_+_fluid]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_fluid
*CAT: n
*SEM: twoRel[rel=hydraulic_+_fluid]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_fluid
*CAT: n
*SEM: orRel[rel=hydraulic_+_fluid]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5080_+_psi_+_pipes
*CAT: n
*SEM: unaryRel[rel=5080_+_psi_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5080_+_psi_+_pipes
*CAT: n
*SEM: twoRel[rel=5080_+_psi_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5080_+_psi_+_pipes
*CAT: n
*SEM: twoRel[rel=5080_+_psi_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5080_+_psi_+_pipes
*CAT: n
*SEM: orRel[rel=5080_+_psi_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lavatories
*CAT: n
*SEM: unaryRel[rel=lavatories]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lavatories
*CAT: n
*SEM: twoRel[rel=lavatories]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lavatories
*CAT: n
*SEM: twoRel[rel=lavatories]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lavatories
*CAT: n
*SEM: orRel[rel=lavatories]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+__-_opensb_-_vs_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=virtual_+_splice_+__-_opensb_-_vs_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+__-_opensb_-_vs_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=virtual_+_splice_+__-_opensb_-_vs_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+__-_opensb_-_vs_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=virtual_+_splice_+__-_opensb_-_vs_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+__-_opensb_-_vs_-_closesb_-_
*CAT: n
*SEM: orRel[rel=virtual_+_splice_+__-_opensb_-_vs_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150mm_-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-__-_equalto_-__+_25mm
*CAT: n
*SEM: unaryRel[rel=150mm_-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150mm_-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-__-_equalto_-__+_25mm
*CAT: n
*SEM: twoRel[rel=150mm_-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150mm_-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-__-_equalto_-__+_25mm
*CAT: n
*SEM: twoRel[rel=150mm_-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150mm_-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-__-_equalto_-__+_25mm
*CAT: n
*SEM: orRel[rel=150mm_-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_angle_+_junction
*CAT: n
*SEM: unaryRel[rel=straight_+_angle_+_junction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_angle_+_junction
*CAT: n
*SEM: twoRel[rel=straight_+_angle_+_junction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_angle_+_junction
*CAT: n
*SEM: twoRel[rel=straight_+_angle_+_junction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_angle_+_junction
*CAT: n
*SEM: orRel[rel=straight_+_angle_+_junction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_distance
*CAT: n
*SEM: unaryRel[rel=maximum_+_distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_distance
*CAT: n
*SEM: twoRel[rel=maximum_+_distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_distance
*CAT: n
*SEM: twoRel[rel=maximum_+_distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_distance
*CAT: n
*SEM: orRel[rel=maximum_+_distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch
*CAT: n
*SEM: unaryRel[rel=maximum_+_pitch]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch
*CAT: n
*SEM: twoRel[rel=maximum_+_pitch]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch
*CAT: n
*SEM: twoRel[rel=maximum_+_pitch]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch
*CAT: n
*SEM: orRel[rel=maximum_+_pitch]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point_+_when
*CAT: n
*SEM: unaryRel[rel=dedicated_+_attachment_+_point_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point_+_when
*CAT: n
*SEM: twoRel[rel=dedicated_+_attachment_+_point_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point_+_when
*CAT: n
*SEM: twoRel[rel=dedicated_+_attachment_+_point_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point_+_when
*CAT: n
*SEM: orRel[rel=dedicated_+_attachment_+_point_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot
*CAT: n
*SEM: unaryRel[rel=hot]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot
*CAT: n
*SEM: twoRel[rel=hot]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot
*CAT: n
*SEM: twoRel[rel=hot]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot
*CAT: n
*SEM: orRel[rel=hot]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: suction_+_pipes
*CAT: n
*SEM: unaryRel[rel=suction_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: suction_+_pipes
*CAT: n
*SEM: twoRel[rel=suction_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: suction_+_pipes
*CAT: n
*SEM: twoRel[rel=suction_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: suction_+_pipes
*CAT: n
*SEM: orRel[rel=suction_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_composite_+_structure
*CAT: n
*SEM: unaryRel[rel=conductive_+_composite_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_composite_+_structure
*CAT: n
*SEM: twoRel[rel=conductive_+_composite_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_composite_+_structure
*CAT: n
*SEM: twoRel[rel=conductive_+_composite_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_composite_+_structure
*CAT: n
*SEM: orRel[rel=conductive_+_composite_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: several_+_aluminium_+_bus_+_barsor_+_aluminium
*CAT: n
*SEM: unaryRel[rel=several_+_aluminium_+_bus_+_barsor_+_aluminium]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: several_+_aluminium_+_bus_+_barsor_+_aluminium
*CAT: n
*SEM: twoRel[rel=several_+_aluminium_+_bus_+_barsor_+_aluminium]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: several_+_aluminium_+_bus_+_barsor_+_aluminium
*CAT: n
*SEM: twoRel[rel=several_+_aluminium_+_bus_+_barsor_+_aluminium]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: several_+_aluminium_+_bus_+_barsor_+_aluminium
*CAT: n
*SEM: orRel[rel=several_+_aluminium_+_bus_+_barsor_+_aluminium]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_+_inches
*CAT: n
*SEM: unaryRel[rel=3_+_inches]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_+_inches
*CAT: n
*SEM: twoRel[rel=3_+_inches]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_+_inches
*CAT: n
*SEM: twoRel[rel=3_+_inches]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_+_inches
*CAT: n
*SEM: orRel[rel=3_+_inches]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_connector_+_plate
*CAT: n
*SEM: unaryRel[rel=one_+_connector_+_plate]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_connector_+_plate
*CAT: n
*SEM: twoRel[rel=one_+_connector_+_plate]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_connector_+_plate
*CAT: n
*SEM: twoRel[rel=one_+_connector_+_plate]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_connector_+_plate
*CAT: n
*SEM: orRel[rel=one_+_connector_+_plate]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_three_+_derivation_+_at_+_a_+_single_+_position
*CAT: n
*SEM: unaryRel[rel=maximum_+_three_+_derivation_+_at_+_a_+_single_+_position]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_three_+_derivation_+_at_+_a_+_single_+_position
*CAT: n
*SEM: twoRel[rel=maximum_+_three_+_derivation_+_at_+_a_+_single_+_position]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_three_+_derivation_+_at_+_a_+_single_+_position
*CAT: n
*SEM: twoRel[rel=maximum_+_three_+_derivation_+_at_+_a_+_single_+_position]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_three_+_derivation_+_at_+_a_+_single_+_position
*CAT: n
*SEM: orRel[rel=maximum_+_three_+_derivation_+_at_+_a_+_single_+_position]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: washer
*CAT: n
*SEM: unaryRel[rel=washer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: washer
*CAT: n
*SEM: twoRel[rel=washer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: washer
*CAT: n
*SEM: twoRel[rel=washer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: washer
*CAT: n
*SEM: orRel[rel=washer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breakers
*CAT: n
*SEM: unaryRel[rel=circuit_+_breakers]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breakers
*CAT: n
*SEM: twoRel[rel=circuit_+_breakers]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breakers
*CAT: n
*SEM: twoRel[rel=circuit_+_breakers]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breakers
*CAT: n
*SEM: orRel[rel=circuit_+_breakers]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector
*CAT: n
*SEM: unaryRel[rel=connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector
*CAT: n
*SEM: twoRel[rel=connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector
*CAT: n
*SEM: twoRel[rel=connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector
*CAT: n
*SEM: orRel[rel=connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: unaryRel[rel=component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: twoRel[rel=component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: twoRel[rel=component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: orRel[rel=component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: applied_+_mechanical_+_loads
*CAT: n
*SEM: unaryRel[rel=applied_+_mechanical_+_loads]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: applied_+_mechanical_+_loads
*CAT: n
*SEM: twoRel[rel=applied_+_mechanical_+_loads]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: applied_+_mechanical_+_loads
*CAT: n
*SEM: twoRel[rel=applied_+_mechanical_+_loads]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: applied_+_mechanical_+_loads
*CAT: n
*SEM: orRel[rel=applied_+_mechanical_+_loads]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: complete_+_loop
*CAT: n
*SEM: unaryRel[rel=complete_+_loop]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: complete_+_loop
*CAT: n
*SEM: twoRel[rel=complete_+_loop]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: complete_+_loop
*CAT: n
*SEM: twoRel[rel=complete_+_loop]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: complete_+_loop
*CAT: n
*SEM: orRel[rel=complete_+_loop]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=efcs_+_virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=efcs_+_virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=efcs_+_virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: orRel[rel=efcs_+_virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification
*CAT: n
*SEM: unaryRel[rel=identification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification
*CAT: n
*SEM: twoRel[rel=identification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification
*CAT: n
*SEM: twoRel[rel=identification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification
*CAT: n
*SEM: orRel[rel=identification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire_+_insulation_+_prior_+_to
*CAT: n
*SEM: unaryRel[rel=wire_+_insulation_+_prior_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire_+_insulation_+_prior_+_to
*CAT: n
*SEM: twoRel[rel=wire_+_insulation_+_prior_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire_+_insulation_+_prior_+_to
*CAT: n
*SEM: twoRel[rel=wire_+_insulation_+_prior_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire_+_insulation_+_prior_+_to
*CAT: n
*SEM: orRel[rel=wire_+_insulation_+_prior_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_2_+_solutionor
*CAT: n
*SEM: unaryRel[rel=priority_+_2_+_solutionor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_2_+_solutionor
*CAT: n
*SEM: twoRel[rel=priority_+_2_+_solutionor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_2_+_solutionor
*CAT: n
*SEM: twoRel[rel=priority_+_2_+_solutionor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_2_+_solutionor
*CAT: n
*SEM: orRel[rel=priority_+_2_+_solutionor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_the_+_last_+_attachment_+_point_+_at_+_harnesses_+_passing_+_through_+_different_+_area_+__-_opensb_-_e.g._+_cabin_+_through_+_cargo_+_floor_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=at_+_the_+_last_+_attachment_+_point_+_at_+_harnesses_+_passing_+_through_+_different_+_area_+__-_opensb_-_e.g._+_cabin_+_through_+_cargo_+_floor_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_the_+_last_+_attachment_+_point_+_at_+_harnesses_+_passing_+_through_+_different_+_area_+__-_opensb_-_e.g._+_cabin_+_through_+_cargo_+_floor_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=at_+_the_+_last_+_attachment_+_point_+_at_+_harnesses_+_passing_+_through_+_different_+_area_+__-_opensb_-_e.g._+_cabin_+_through_+_cargo_+_floor_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_the_+_last_+_attachment_+_point_+_at_+_harnesses_+_passing_+_through_+_different_+_area_+__-_opensb_-_e.g._+_cabin_+_through_+_cargo_+_floor_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=at_+_the_+_last_+_attachment_+_point_+_at_+_harnesses_+_passing_+_through_+_different_+_area_+__-_opensb_-_e.g._+_cabin_+_through_+_cargo_+_floor_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_the_+_last_+_attachment_+_point_+_at_+_harnesses_+_passing_+_through_+_different_+_area_+__-_opensb_-_e.g._+_cabin_+_through_+_cargo_+_floor_-_closesb_-_
*CAT: n
*SEM: orRel[rel=at_+_the_+_last_+_attachment_+_point_+_at_+_harnesses_+_passing_+_through_+_different_+_area_+__-_opensb_-_e.g._+_cabin_+_through_+_cargo_+_floor_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_nsa937493
*CAT: n
*SEM: unaryRel[rel=two_+_nsa937493]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_nsa937493
*CAT: n
*SEM: twoRel[rel=two_+_nsa937493]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_nsa937493
*CAT: n
*SEM: twoRel[rel=two_+_nsa937493]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_nsa937493
*CAT: n
*SEM: orRel[rel=two_+_nsa937493]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up
*CAT: n
*SEM: unaryRel[rel=up]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up
*CAT: n
*SEM: twoRel[rel=up]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up
*CAT: n
*SEM: twoRel[rel=up]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up
*CAT: n
*SEM: orRel[rel=up]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_equipment
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_equipment
*CAT: n
*SEM: twoRel[rel=hydraulic_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_equipment
*CAT: n
*SEM: twoRel[rel=hydraulic_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_equipment
*CAT: n
*SEM: orRel[rel=hydraulic_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structures
*CAT: n
*SEM: unaryRel[rel=structures]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structures
*CAT: n
*SEM: twoRel[rel=structures]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structures
*CAT: n
*SEM: twoRel[rel=structures]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structures
*CAT: n
*SEM: orRel[rel=structures]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separable_+_unions
*CAT: n
*SEM: unaryRel[rel=separable_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separable_+_unions
*CAT: n
*SEM: twoRel[rel=separable_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separable_+_unions
*CAT: n
*SEM: twoRel[rel=separable_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separable_+_unions
*CAT: n
*SEM: orRel[rel=separable_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unions.
*CAT: n
*SEM: unaryRel[rel=unions.]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unions.
*CAT: n
*SEM: twoRel[rel=unions.]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unions.
*CAT: n
*SEM: twoRel[rel=unions.]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unions.
*CAT: n
*SEM: orRel[rel=unions.]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3545xxxm
*CAT: n
*SEM: unaryRel[rel=en3545xxxm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3545xxxm
*CAT: n
*SEM: twoRel[rel=en3545xxxm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3545xxxm
*CAT: n
*SEM: twoRel[rel=en3545xxxm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3545xxxm
*CAT: n
*SEM: orRel[rel=en3545xxxm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_connector_+_dimensions
*CAT: n
*SEM: unaryRel[rel=account_+_connector_+_dimensions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_connector_+_dimensions
*CAT: n
*SEM: twoRel[rel=account_+_connector_+_dimensions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_connector_+_dimensions
*CAT: n
*SEM: twoRel[rel=account_+_connector_+_dimensions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_connector_+_dimensions
*CAT: n
*SEM: orRel[rel=account_+_connector_+_dimensions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_movement
*CAT: n
*SEM: unaryRel[rel=bundle_+_movement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_movement
*CAT: n
*SEM: twoRel[rel=bundle_+_movement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_movement
*CAT: n
*SEM: twoRel[rel=bundle_+_movement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_movement
*CAT: n
*SEM: orRel[rel=bundle_+_movement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_cables_+__-_backslash_-__+_wires
*CAT: n
*SEM: unaryRel[rel=copper_+_cables_+__-_backslash_-__+_wires]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_cables_+__-_backslash_-__+_wires
*CAT: n
*SEM: twoRel[rel=copper_+_cables_+__-_backslash_-__+_wires]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_cables_+__-_backslash_-__+_wires
*CAT: n
*SEM: twoRel[rel=copper_+_cables_+__-_backslash_-__+_wires]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_cables_+__-_backslash_-__+_wires
*CAT: n
*SEM: orRel[rel=copper_+_cables_+__-_backslash_-__+_wires]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_routing
*CAT: n
*SEM: unaryRel[rel=vertical_+_routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_routing
*CAT: n
*SEM: twoRel[rel=vertical_+_routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_routing
*CAT: n
*SEM: twoRel[rel=vertical_+_routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_routing
*CAT: n
*SEM: orRel[rel=vertical_+_routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wires
*CAT: n
*SEM: unaryRel[rel=wires]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wires
*CAT: n
*SEM: twoRel[rel=wires]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wires
*CAT: n
*SEM: twoRel[rel=wires]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wires
*CAT: n
*SEM: orRel[rel=wires]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.5_+_inch_+_diameter
*CAT: n
*SEM: unaryRel[rel=0.5_+_inch_+_diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.5_+_inch_+_diameter
*CAT: n
*SEM: twoRel[rel=0.5_+_inch_+_diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.5_+_inch_+_diameter
*CAT: n
*SEM: twoRel[rel=0.5_+_inch_+_diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.5_+_inch_+_diameter
*CAT: n
*SEM: orRel[rel=0.5_+_inch_+_diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block_+_in_+_a_+_distance_+_given_+_in_+_the_+_attached_+_figure_+__-_backslash_-__+_table
*CAT: n
*SEM: unaryRel[rel=clamp-block_+_in_+_a_+_distance_+_given_+_in_+_the_+_attached_+_figure_+__-_backslash_-__+_table]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block_+_in_+_a_+_distance_+_given_+_in_+_the_+_attached_+_figure_+__-_backslash_-__+_table
*CAT: n
*SEM: twoRel[rel=clamp-block_+_in_+_a_+_distance_+_given_+_in_+_the_+_attached_+_figure_+__-_backslash_-__+_table]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block_+_in_+_a_+_distance_+_given_+_in_+_the_+_attached_+_figure_+__-_backslash_-__+_table
*CAT: n
*SEM: twoRel[rel=clamp-block_+_in_+_a_+_distance_+_given_+_in_+_the_+_attached_+_figure_+__-_backslash_-__+_table]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block_+_in_+_a_+_distance_+_given_+_in_+_the_+_attached_+_figure_+__-_backslash_-__+_table
*CAT: n
*SEM: orRel[rel=clamp-block_+_in_+_a_+_distance_+_given_+_in_+_the_+_attached_+_figure_+__-_backslash_-__+_table]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: replacement
*CAT: n
*SEM: unaryRel[rel=replacement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: replacement
*CAT: n
*SEM: twoRel[rel=replacement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: replacement
*CAT: n
*SEM: twoRel[rel=replacement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: replacement
*CAT: n
*SEM: orRel[rel=replacement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 101.6mm
*CAT: n
*SEM: unaryRel[rel=101.6mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 101.6mm
*CAT: n
*SEM: twoRel[rel=101.6mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 101.6mm
*CAT: n
*SEM: twoRel[rel=101.6mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 101.6mm
*CAT: n
*SEM: orRel[rel=101.6mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire-sensing_+_element
*CAT: n
*SEM: unaryRel[rel=fire-sensing_+_element]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire-sensing_+_element
*CAT: n
*SEM: twoRel[rel=fire-sensing_+_element]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire-sensing_+_element
*CAT: n
*SEM: twoRel[rel=fire-sensing_+_element]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire-sensing_+_element
*CAT: n
*SEM: orRel[rel=fire-sensing_+_element]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_5_+_pipes
*CAT: n
*SEM: unaryRel[rel=maximum_+_5_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_5_+_pipes
*CAT: n
*SEM: twoRel[rel=maximum_+_5_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_5_+_pipes
*CAT: n
*SEM: twoRel[rel=maximum_+_5_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_5_+_pipes
*CAT: n
*SEM: orRel[rel=maximum_+_5_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_25mm
*CAT: n
*SEM: unaryRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_25mm
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_25mm
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_25mm
*CAT: n
*SEM: orRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_shell_+_continuity
*CAT: n
*SEM: unaryRel[rel=electrical_+_shell_+_continuity]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_shell_+_continuity
*CAT: n
*SEM: twoRel[rel=electrical_+_shell_+_continuity]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_shell_+_continuity
*CAT: n
*SEM: twoRel[rel=electrical_+_shell_+_continuity]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_shell_+_continuity
*CAT: n
*SEM: orRel[rel=electrical_+_shell_+_continuity]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight_+_saving
*CAT: n
*SEM: unaryRel[rel=weight_+_saving]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight_+_saving
*CAT: n
*SEM: twoRel[rel=weight_+_saving]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight_+_saving
*CAT: n
*SEM: twoRel[rel=weight_+_saving]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight_+_saving
*CAT: n
*SEM: orRel[rel=weight_+_saving]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: use
*CAT: n
*SEM: unaryRel[rel=use]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: use
*CAT: n
*SEM: twoRel[rel=use]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: use
*CAT: n
*SEM: twoRel[rel=use]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: use
*CAT: n
*SEM: orRel[rel=use]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fie_+_seals
*CAT: n
*SEM: unaryRel[rel=fie_+_seals]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fie_+_seals
*CAT: n
*SEM: twoRel[rel=fie_+_seals]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fie_+_seals
*CAT: n
*SEM: twoRel[rel=fie_+_seals]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fie_+_seals
*CAT: n
*SEM: orRel[rel=fie_+_seals]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop_+_inside_+_vu
*CAT: n
*SEM: unaryRel[rel=drip_+_loop_+_inside_+_vu]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop_+_inside_+_vu
*CAT: n
*SEM: twoRel[rel=drip_+_loop_+_inside_+_vu]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop_+_inside_+_vu
*CAT: n
*SEM: twoRel[rel=drip_+_loop_+_inside_+_vu]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop_+_inside_+_vu
*CAT: n
*SEM: orRel[rel=drip_+_loop_+_inside_+_vu]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_12_+_to_+_24
*CAT: n
*SEM: unaryRel[rel=gauge_+_12_+_to_+_24]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_12_+_to_+_24
*CAT: n
*SEM: twoRel[rel=gauge_+_12_+_to_+_24]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_12_+_to_+_24
*CAT: n
*SEM: twoRel[rel=gauge_+_12_+_to_+_24]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_12_+_to_+_24
*CAT: n
*SEM: orRel[rel=gauge_+_12_+_to_+_24]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_can_+_guarantee_+_a_+_constant_+_clearance
*CAT: n
*SEM: unaryRel[rel=structure_+_can_+_guarantee_+_a_+_constant_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_can_+_guarantee_+_a_+_constant_+_clearance
*CAT: n
*SEM: twoRel[rel=structure_+_can_+_guarantee_+_a_+_constant_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_can_+_guarantee_+_a_+_constant_+_clearance
*CAT: n
*SEM: twoRel[rel=structure_+_can_+_guarantee_+_a_+_constant_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_can_+_guarantee_+_a_+_constant_+_clearance
*CAT: n
*SEM: orRel[rel=structure_+_can_+_guarantee_+_a_+_constant_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m
*CAT: n
*SEM: unaryRel[rel=m]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m
*CAT: n
*SEM: twoRel[rel=m]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m
*CAT: n
*SEM: twoRel[rel=m]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m
*CAT: n
*SEM: orRel[rel=m]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equivalent_+_reinforcement
*CAT: n
*SEM: unaryRel[rel=equivalent_+_reinforcement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equivalent_+_reinforcement
*CAT: n
*SEM: twoRel[rel=equivalent_+_reinforcement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equivalent_+_reinforcement
*CAT: n
*SEM: twoRel[rel=equivalent_+_reinforcement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equivalent_+_reinforcement
*CAT: n
*SEM: orRel[rel=equivalent_+_reinforcement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_gauge_+_contact_+_when_+_smal_+_gauge_+_wire
*CAT: n
*SEM: unaryRel[rel=large_+_gauge_+_contact_+_when_+_smal_+_gauge_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_gauge_+_contact_+_when_+_smal_+_gauge_+_wire
*CAT: n
*SEM: twoRel[rel=large_+_gauge_+_contact_+_when_+_smal_+_gauge_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_gauge_+_contact_+_when_+_smal_+_gauge_+_wire
*CAT: n
*SEM: twoRel[rel=large_+_gauge_+_contact_+_when_+_smal_+_gauge_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_gauge_+_contact_+_when_+_smal_+_gauge_+_wire
*CAT: n
*SEM: orRel[rel=large_+_gauge_+_contact_+_when_+_smal_+_gauge_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stud_+_feeder_+_lug
*CAT: n
*SEM: unaryRel[rel=stud_+_feeder_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stud_+_feeder_+_lug
*CAT: n
*SEM: twoRel[rel=stud_+_feeder_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stud_+_feeder_+_lug
*CAT: n
*SEM: twoRel[rel=stud_+_feeder_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stud_+_feeder_+_lug
*CAT: n
*SEM: orRel[rel=stud_+_feeder_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_at_+_alternating_+_positions
*CAT: n
*SEM: unaryRel[rel=pipes_+_at_+_alternating_+_positions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_at_+_alternating_+_positions
*CAT: n
*SEM: twoRel[rel=pipes_+_at_+_alternating_+_positions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_at_+_alternating_+_positions
*CAT: n
*SEM: twoRel[rel=pipes_+_at_+_alternating_+_positions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_at_+_alternating_+_positions
*CAT: n
*SEM: orRel[rel=pipes_+_at_+_alternating_+_positions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: silicon_+_seal
*CAT: n
*SEM: unaryRel[rel=silicon_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: silicon_+_seal
*CAT: n
*SEM: twoRel[rel=silicon_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: silicon_+_seal
*CAT: n
*SEM: twoRel[rel=silicon_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: silicon_+_seal
*CAT: n
*SEM: orRel[rel=silicon_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_gauge_+_contact
*CAT: n
*SEM: unaryRel[rel=large_+_gauge_+_contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_gauge_+_contact
*CAT: n
*SEM: twoRel[rel=large_+_gauge_+_contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_gauge_+_contact
*CAT: n
*SEM: twoRel[rel=large_+_gauge_+_contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_gauge_+_contact
*CAT: n
*SEM: orRel[rel=large_+_gauge_+_contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight_+_saving_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=weight_+_saving_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight_+_saving_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=weight_+_saving_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight_+_saving_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=weight_+_saving_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight_+_saving_-_closesb_-_
*CAT: n
*SEM: orRel[rel=weight_+_saving_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1500_+_saddle_+_clamp
*CAT: n
*SEM: unaryRel[rel=abs1500_+_saddle_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1500_+_saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=abs1500_+_saddle_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1500_+_saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=abs1500_+_saddle_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1500_+_saddle_+_clamp
*CAT: n
*SEM: orRel[rel=abs1500_+_saddle_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrically
*CAT: n
*SEM: unaryRel[rel=electrically]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrically
*CAT: n
*SEM: twoRel[rel=electrically]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrically
*CAT: n
*SEM: twoRel[rel=electrically]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrically
*CAT: n
*SEM: orRel[rel=electrically]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_taken_+_into_+_account
*CAT: n
*SEM: unaryRel[rel=be_+_taken_+_into_+_account]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_taken_+_into_+_account
*CAT: n
*SEM: twoRel[rel=be_+_taken_+_into_+_account]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_taken_+_into_+_account
*CAT: n
*SEM: twoRel[rel=be_+_taken_+_into_+_account]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_taken_+_into_+_account
*CAT: n
*SEM: orRel[rel=be_+_taken_+_into_+_account]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduce_+_relative_+_movement
*CAT: n
*SEM: unaryRel[rel=reduce_+_relative_+_movement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduce_+_relative_+_movement
*CAT: n
*SEM: twoRel[rel=reduce_+_relative_+_movement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduce_+_relative_+_movement
*CAT: n
*SEM: twoRel[rel=reduce_+_relative_+_movement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduce_+_relative_+_movement
*CAT: n
*SEM: orRel[rel=reduce_+_relative_+_movement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_cable
*CAT: n
*SEM: unaryRel[rel=optical_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_cable
*CAT: n
*SEM: twoRel[rel=optical_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_cable
*CAT: n
*SEM: twoRel[rel=optical_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_cable
*CAT: n
*SEM: orRel[rel=optical_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_rigid_+_conduit_+_outlet
*CAT: n
*SEM: unaryRel[rel=metallic_+_rigid_+_conduit_+_outlet]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_rigid_+_conduit_+_outlet
*CAT: n
*SEM: twoRel[rel=metallic_+_rigid_+_conduit_+_outlet]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_rigid_+_conduit_+_outlet
*CAT: n
*SEM: twoRel[rel=metallic_+_rigid_+_conduit_+_outlet]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_rigid_+_conduit_+_outlet
*CAT: n
*SEM: orRel[rel=metallic_+_rigid_+_conduit_+_outlet]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_distance
*CAT: n
*SEM: unaryRel[rel=minimum_+_distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_distance
*CAT: n
*SEM: twoRel[rel=minimum_+_distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_distance
*CAT: n
*SEM: twoRel[rel=minimum_+_distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_distance
*CAT: n
*SEM: orRel[rel=minimum_+_distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_wiring_+_density
*CAT: n
*SEM: unaryRel[rel=high_+_wiring_+_density]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_wiring_+_density
*CAT: n
*SEM: twoRel[rel=high_+_wiring_+_density]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_wiring_+_density
*CAT: n
*SEM: twoRel[rel=high_+_wiring_+_density]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_wiring_+_density
*CAT: n
*SEM: orRel[rel=high_+_wiring_+_density]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_of_+_sum_+_of_+_mechanical_+_distance_+_plus_+_sagging_-_backslash_-_swelling
*CAT: n
*SEM: unaryRel[rel=distance_+_of_+_sum_+_of_+_mechanical_+_distance_+_plus_+_sagging_-_backslash_-_swelling]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_of_+_sum_+_of_+_mechanical_+_distance_+_plus_+_sagging_-_backslash_-_swelling
*CAT: n
*SEM: twoRel[rel=distance_+_of_+_sum_+_of_+_mechanical_+_distance_+_plus_+_sagging_-_backslash_-_swelling]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_of_+_sum_+_of_+_mechanical_+_distance_+_plus_+_sagging_-_backslash_-_swelling
*CAT: n
*SEM: twoRel[rel=distance_+_of_+_sum_+_of_+_mechanical_+_distance_+_plus_+_sagging_-_backslash_-_swelling]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_of_+_sum_+_of_+_mechanical_+_distance_+_plus_+_sagging_-_backslash_-_swelling
*CAT: n
*SEM: orRel[rel=distance_+_of_+_sum_+_of_+_mechanical_+_distance_+_plus_+_sagging_-_backslash_-_swelling]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: occurance
*CAT: n
*SEM: unaryRel[rel=occurance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: occurance
*CAT: n
*SEM: twoRel[rel=occurance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: occurance
*CAT: n
*SEM: twoRel[rel=occurance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: occurance
*CAT: n
*SEM: orRel[rel=occurance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: screw
*CAT: n
*SEM: unaryRel[rel=screw]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: screw
*CAT: n
*SEM: twoRel[rel=screw]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: screw
*CAT: n
*SEM: twoRel[rel=screw]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: screw
*CAT: n
*SEM: orRel[rel=screw]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: failure
*CAT: n
*SEM: unaryRel[rel=failure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: failure
*CAT: n
*SEM: twoRel[rel=failure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: failure
*CAT: n
*SEM: twoRel[rel=failure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: failure
*CAT: n
*SEM: orRel[rel=failure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0_-_degrees_-_
*CAT: n
*SEM: unaryRel[rel=0_-_degrees_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=0_-_degrees_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=0_-_degrees_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0_-_degrees_-_
*CAT: n
*SEM: orRel[rel=0_-_degrees_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+__-_greaterThan_-__+__-_equalto_-_3mm
*CAT: n
*SEM: unaryRel[rel=g_+__-_greaterThan_-__+__-_equalto_-_3mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+__-_greaterThan_-__+__-_equalto_-_3mm
*CAT: n
*SEM: twoRel[rel=g_+__-_greaterThan_-__+__-_equalto_-_3mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+__-_greaterThan_-__+__-_equalto_-_3mm
*CAT: n
*SEM: twoRel[rel=g_+__-_greaterThan_-__+__-_equalto_-_3mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+__-_greaterThan_-__+__-_equalto_-_3mm
*CAT: n
*SEM: orRel[rel=g_+__-_greaterThan_-__+__-_equalto_-_3mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: uv_+_laser_+_when_+_possible
*CAT: n
*SEM: unaryRel[rel=uv_+_laser_+_when_+_possible]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: uv_+_laser_+_when_+_possible
*CAT: n
*SEM: twoRel[rel=uv_+_laser_+_when_+_possible]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: uv_+_laser_+_when_+_possible
*CAT: n
*SEM: twoRel[rel=uv_+_laser_+_when_+_possible]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: uv_+_laser_+_when_+_possible
*CAT: n
*SEM: orRel[rel=uv_+_laser_+_when_+_possible]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_vu_+_to
*CAT: n
*SEM: unaryRel[rel=inside_+_vu_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_vu_+_to
*CAT: n
*SEM: twoRel[rel=inside_+_vu_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_vu_+_to
*CAT: n
*SEM: twoRel[rel=inside_+_vu_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_vu_+_to
*CAT: n
*SEM: orRel[rel=inside_+_vu_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: axis
*CAT: n
*SEM: unaryRel[rel=axis]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: axis
*CAT: n
*SEM: twoRel[rel=axis]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: axis
*CAT: n
*SEM: twoRel[rel=axis]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: axis
*CAT: n
*SEM: orRel[rel=axis]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate
*CAT: n
*SEM: unaryRel[rel=fillingrate]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate
*CAT: n
*SEM: twoRel[rel=fillingrate]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate
*CAT: n
*SEM: twoRel[rel=fillingrate]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate
*CAT: n
*SEM: orRel[rel=fillingrate]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cabin_+_furnishing_+_equipment
*CAT: n
*SEM: unaryRel[rel=cabin_+_furnishing_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cabin_+_furnishing_+_equipment
*CAT: n
*SEM: twoRel[rel=cabin_+_furnishing_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cabin_+_furnishing_+_equipment
*CAT: n
*SEM: twoRel[rel=cabin_+_furnishing_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cabin_+_furnishing_+_equipment
*CAT: n
*SEM: orRel[rel=cabin_+_furnishing_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937901_+_clipped_+_label
*CAT: n
*SEM: unaryRel[rel=nsa_+_937901_+_clipped_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937901_+_clipped_+_label
*CAT: n
*SEM: twoRel[rel=nsa_+_937901_+_clipped_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937901_+_clipped_+_label
*CAT: n
*SEM: twoRel[rel=nsa_+_937901_+_clipped_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937901_+_clipped_+_label
*CAT: n
*SEM: orRel[rel=nsa_+_937901_+_clipped_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_fluel_+_tank_+_or
*CAT: n
*SEM: unaryRel[rel=inside_+_fluel_+_tank_+_or]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_fluel_+_tank_+_or
*CAT: n
*SEM: twoRel[rel=inside_+_fluel_+_tank_+_or]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_fluel_+_tank_+_or
*CAT: n
*SEM: twoRel[rel=inside_+_fluel_+_tank_+_or]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_fluel_+_tank_+_or
*CAT: n
*SEM: orRel[rel=inside_+_fluel_+_tank_+_or]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_installation
*CAT: n
*SEM: unaryRel[rel=normal_+_installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_installation
*CAT: n
*SEM: twoRel[rel=normal_+_installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_installation
*CAT: n
*SEM: twoRel[rel=normal_+_installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_installation
*CAT: n
*SEM: orRel[rel=normal_+_installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_0.5
*CAT: n
*SEM: unaryRel[rel=least_+_0.5]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_0.5
*CAT: n
*SEM: twoRel[rel=least_+_0.5]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_0.5
*CAT: n
*SEM: twoRel[rel=least_+_0.5]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_0.5
*CAT: n
*SEM: orRel[rel=least_+_0.5]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_parts
*CAT: n
*SEM: unaryRel[rel=master_+_parts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_parts
*CAT: n
*SEM: twoRel[rel=master_+_parts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_parts
*CAT: n
*SEM: twoRel[rel=master_+_parts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_parts
*CAT: n
*SEM: orRel[rel=master_+_parts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_identification
*CAT: n
*SEM: unaryRel[rel=cable_+_identification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_identification
*CAT: n
*SEM: twoRel[rel=cable_+_identification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_identification
*CAT: n
*SEM: twoRel[rel=cable_+_identification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_identification
*CAT: n
*SEM: orRel[rel=cable_+_identification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: limited_+_due_+_to
*CAT: n
*SEM: unaryRel[rel=limited_+_due_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: limited_+_due_+_to
*CAT: n
*SEM: twoRel[rel=limited_+_due_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: limited_+_due_+_to
*CAT: n
*SEM: twoRel[rel=limited_+_due_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: limited_+_due_+_to
*CAT: n
*SEM: orRel[rel=limited_+_due_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: resistance
*CAT: n
*SEM: unaryRel[rel=resistance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: resistance
*CAT: n
*SEM: twoRel[rel=resistance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: resistance
*CAT: n
*SEM: twoRel[rel=resistance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: resistance
*CAT: n
*SEM: orRel[rel=resistance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank
*CAT: n
*SEM: unaryRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank
*CAT: n
*SEM: twoRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank
*CAT: n
*SEM: twoRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank
*CAT: n
*SEM: orRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: regards_+_to_+_structure
*CAT: n
*SEM: unaryRel[rel=regards_+_to_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: regards_+_to_+_structure
*CAT: n
*SEM: twoRel[rel=regards_+_to_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: regards_+_to_+_structure
*CAT: n
*SEM: twoRel[rel=regards_+_to_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: regards_+_to_+_structure
*CAT: n
*SEM: orRel[rel=regards_+_to_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_wiring
*CAT: n
*SEM: unaryRel[rel=electrical_+_wiring]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_wiring
*CAT: n
*SEM: twoRel[rel=electrical_+_wiring]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_wiring
*CAT: n
*SEM: twoRel[rel=electrical_+_wiring]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_wiring
*CAT: n
*SEM: orRel[rel=electrical_+_wiring]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3._+_label
*CAT: n
*SEM: unaryRel[rel=3._+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3._+_label
*CAT: n
*SEM: twoRel[rel=3._+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3._+_label
*CAT: n
*SEM: twoRel[rel=3._+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3._+_label
*CAT: n
*SEM: orRel[rel=3._+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swaging_+_union_+_operations
*CAT: n
*SEM: unaryRel[rel=swaging_+_union_+_operations]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swaging_+_union_+_operations
*CAT: n
*SEM: twoRel[rel=swaging_+_union_+_operations]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swaging_+_union_+_operations
*CAT: n
*SEM: twoRel[rel=swaging_+_union_+_operations]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swaging_+_union_+_operations
*CAT: n
*SEM: orRel[rel=swaging_+_union_+_operations]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_near_+_each_+_harness_+_extremity_+_printed_+_in_+_black_+_on_+_white_+_background_+_part_+_number_+_vb_+_number
*CAT: n
*SEM: unaryRel[rel=asne_+_0248_+_near_+_each_+_harness_+_extremity_+_printed_+_in_+_black_+_on_+_white_+_background_+_part_+_number_+_vb_+_number]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_near_+_each_+_harness_+_extremity_+_printed_+_in_+_black_+_on_+_white_+_background_+_part_+_number_+_vb_+_number
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_near_+_each_+_harness_+_extremity_+_printed_+_in_+_black_+_on_+_white_+_background_+_part_+_number_+_vb_+_number]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_near_+_each_+_harness_+_extremity_+_printed_+_in_+_black_+_on_+_white_+_background_+_part_+_number_+_vb_+_number
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_near_+_each_+_harness_+_extremity_+_printed_+_in_+_black_+_on_+_white_+_background_+_part_+_number_+_vb_+_number]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_near_+_each_+_harness_+_extremity_+_printed_+_in_+_black_+_on_+_white_+_background_+_part_+_number_+_vb_+_number
*CAT: n
*SEM: orRel[rel=asne_+_0248_+_near_+_each_+_harness_+_extremity_+_printed_+_in_+_black_+_on_+_white_+_background_+_part_+_number_+_vb_+_number]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: togehter_+_to_+_a_+_single_+_equipment
*CAT: n
*SEM: unaryRel[rel=togehter_+_to_+_a_+_single_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: togehter_+_to_+_a_+_single_+_equipment
*CAT: n
*SEM: twoRel[rel=togehter_+_to_+_a_+_single_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: togehter_+_to_+_a_+_single_+_equipment
*CAT: n
*SEM: twoRel[rel=togehter_+_to_+_a_+_single_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: togehter_+_to_+_a_+_single_+_equipment
*CAT: n
*SEM: orRel[rel=togehter_+_to_+_a_+_single_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diodes
*CAT: n
*SEM: unaryRel[rel=diodes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diodes
*CAT: n
*SEM: twoRel[rel=diodes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diodes
*CAT: n
*SEM: twoRel[rel=diodes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diodes
*CAT: n
*SEM: orRel[rel=diodes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_sub-systems
*CAT: n
*SEM: unaryRel[rel=different_+_sub-systems]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_sub-systems
*CAT: n
*SEM: twoRel[rel=different_+_sub-systems]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_sub-systems
*CAT: n
*SEM: twoRel[rel=different_+_sub-systems]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_sub-systems
*CAT: n
*SEM: orRel[rel=different_+_sub-systems]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamps
*CAT: n
*SEM: unaryRel[rel=clamps]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamps
*CAT: n
*SEM: twoRel[rel=clamps]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamps
*CAT: n
*SEM: twoRel[rel=clamps]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamps
*CAT: n
*SEM: orRel[rel=clamps]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 07-05-007
*CAT: n
*SEM: unaryRel[rel=07-05-007]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 07-05-007
*CAT: n
*SEM: twoRel[rel=07-05-007]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 07-05-007
*CAT: n
*SEM: twoRel[rel=07-05-007]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 07-05-007
*CAT: n
*SEM: orRel[rel=07-05-007]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l+10mm
*CAT: n
*SEM: unaryRel[rel=l+10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l+10mm
*CAT: n
*SEM: twoRel[rel=l+10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l+10mm
*CAT: n
*SEM: twoRel[rel=l+10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l+10mm
*CAT: n
*SEM: orRel[rel=l+10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1409_-_backslash_-_abs1408_+_single-hole_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=abs1409_-_backslash_-_abs1408_+_single-hole_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1409_-_backslash_-_abs1408_+_single-hole_+_clamp-block
*CAT: n
*SEM: twoRel[rel=abs1409_-_backslash_-_abs1408_+_single-hole_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1409_-_backslash_-_abs1408_+_single-hole_+_clamp-block
*CAT: n
*SEM: twoRel[rel=abs1409_-_backslash_-_abs1408_+_single-hole_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1409_-_backslash_-_abs1408_+_single-hole_+_clamp-block
*CAT: n
*SEM: orRel[rel=abs1409_-_backslash_-_abs1408_+_single-hole_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_loads
*CAT: n
*SEM: unaryRel[rel=installation_+_loads]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_loads
*CAT: n
*SEM: twoRel[rel=installation_+_loads]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_loads
*CAT: n
*SEM: twoRel[rel=installation_+_loads]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_loads
*CAT: n
*SEM: orRel[rel=installation_+_loads]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: etc_-_ldots_-_
*CAT: n
*SEM: unaryRel[rel=etc_-_ldots_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: etc_-_ldots_-_
*CAT: n
*SEM: twoRel[rel=etc_-_ldots_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: etc_-_ldots_-_
*CAT: n
*SEM: twoRel[rel=etc_-_ldots_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: etc_-_ldots_-_
*CAT: n
*SEM: orRel[rel=etc_-_ldots_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_diameter_-_backslash_-_section_+_of_+_50mm_+__-_opensb_-_including_+_margin_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=maximum_+_diameter_-_backslash_-_section_+_of_+_50mm_+__-_opensb_-_including_+_margin_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_diameter_-_backslash_-_section_+_of_+_50mm_+__-_opensb_-_including_+_margin_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=maximum_+_diameter_-_backslash_-_section_+_of_+_50mm_+__-_opensb_-_including_+_margin_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_diameter_-_backslash_-_section_+_of_+_50mm_+__-_opensb_-_including_+_margin_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=maximum_+_diameter_-_backslash_-_section_+_of_+_50mm_+__-_opensb_-_including_+_margin_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_diameter_-_backslash_-_section_+_of_+_50mm_+__-_opensb_-_including_+_margin_-_closesb_-_
*CAT: n
*SEM: orRel[rel=maximum_+_diameter_-_backslash_-_section_+_of_+_50mm_+__-_opensb_-_including_+_margin_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_bracket
*CAT: n
*SEM: unaryRel[rel=fixed_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_bracket
*CAT: n
*SEM: twoRel[rel=fixed_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_bracket
*CAT: n
*SEM: twoRel[rel=fixed_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_bracket
*CAT: n
*SEM: orRel[rel=fixed_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachable_+_labels
*CAT: n
*SEM: unaryRel[rel=attachable_+_labels]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachable_+_labels
*CAT: n
*SEM: twoRel[rel=attachable_+_labels]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachable_+_labels
*CAT: n
*SEM: twoRel[rel=attachable_+_labels]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachable_+_labels
*CAT: n
*SEM: orRel[rel=attachable_+_labels]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other-route
*CAT: n
*SEM: unaryRel[rel=other-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other-route
*CAT: n
*SEM: twoRel[rel=other-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other-route
*CAT: n
*SEM: twoRel[rel=other-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other-route
*CAT: n
*SEM: orRel[rel=other-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: middle
*CAT: n
*SEM: unaryRel[rel=middle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: middle
*CAT: n
*SEM: twoRel[rel=middle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: middle
*CAT: n
*SEM: twoRel[rel=middle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: middle
*CAT: n
*SEM: orRel[rel=middle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: t_+__-_greaterThan_-__+_150_-_degrees_-_c
*CAT: n
*SEM: unaryRel[rel=t_+__-_greaterThan_-__+_150_-_degrees_-_c]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: t_+__-_greaterThan_-__+_150_-_degrees_-_c
*CAT: n
*SEM: twoRel[rel=t_+__-_greaterThan_-__+_150_-_degrees_-_c]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: t_+__-_greaterThan_-__+_150_-_degrees_-_c
*CAT: n
*SEM: twoRel[rel=t_+__-_greaterThan_-__+_150_-_degrees_-_c]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: t_+__-_greaterThan_-__+_150_-_degrees_-_c
*CAT: n
*SEM: orRel[rel=t_+__-_greaterThan_-__+_150_-_degrees_-_c]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=level_+_of_+_virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=level_+_of_+_virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=level_+_of_+_virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: orRel[rel=level_+_of_+_virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guarantee_+_the_+_two_+_independent_+_parallels_+_detection_+_loops
*CAT: n
*SEM: unaryRel[rel=guarantee_+_the_+_two_+_independent_+_parallels_+_detection_+_loops]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guarantee_+_the_+_two_+_independent_+_parallels_+_detection_+_loops
*CAT: n
*SEM: twoRel[rel=guarantee_+_the_+_two_+_independent_+_parallels_+_detection_+_loops]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guarantee_+_the_+_two_+_independent_+_parallels_+_detection_+_loops
*CAT: n
*SEM: twoRel[rel=guarantee_+_the_+_two_+_independent_+_parallels_+_detection_+_loops]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guarantee_+_the_+_two_+_independent_+_parallels_+_detection_+_loops
*CAT: n
*SEM: orRel[rel=guarantee_+_the_+_two_+_independent_+_parallels_+_detection_+_loops]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_color
*CAT: n
*SEM: unaryRel[rel=red_+_color]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_color
*CAT: n
*SEM: twoRel[rel=red_+_color]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_color
*CAT: n
*SEM: twoRel[rel=red_+_color]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_color
*CAT: n
*SEM: orRel[rel=red_+_color]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: unaryRel[rel=component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: twoRel[rel=component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: twoRel[rel=component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: orRel[rel=component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bended_+_pipe
*CAT: n
*SEM: unaryRel[rel=bended_+_pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bended_+_pipe
*CAT: n
*SEM: twoRel[rel=bended_+_pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bended_+_pipe
*CAT: n
*SEM: twoRel[rel=bended_+_pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bended_+_pipe
*CAT: n
*SEM: orRel[rel=bended_+_pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_growth_+_potential
*CAT: n
*SEM: unaryRel[rel=bundle_+_growth_+_potential]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_growth_+_potential
*CAT: n
*SEM: twoRel[rel=bundle_+_growth_+_potential]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_growth_+_potential
*CAT: n
*SEM: twoRel[rel=bundle_+_growth_+_potential]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_growth_+_potential
*CAT: n
*SEM: orRel[rel=bundle_+_growth_+_potential]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: water_+_ingress
*CAT: n
*SEM: unaryRel[rel=water_+_ingress]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: water_+_ingress
*CAT: n
*SEM: twoRel[rel=water_+_ingress]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: water_+_ingress
*CAT: n
*SEM: twoRel[rel=water_+_ingress]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: water_+_ingress
*CAT: n
*SEM: orRel[rel=water_+_ingress]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_length_+_of_+_500_+_mm_+_regardless_+_of_+_the_+_diameter
*CAT: n
*SEM: unaryRel[rel=maximum_+_length_+_of_+_500_+_mm_+_regardless_+_of_+_the_+_diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_length_+_of_+_500_+_mm_+_regardless_+_of_+_the_+_diameter
*CAT: n
*SEM: twoRel[rel=maximum_+_length_+_of_+_500_+_mm_+_regardless_+_of_+_the_+_diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_length_+_of_+_500_+_mm_+_regardless_+_of_+_the_+_diameter
*CAT: n
*SEM: twoRel[rel=maximum_+_length_+_of_+_500_+_mm_+_regardless_+_of_+_the_+_diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_length_+_of_+_500_+_mm_+_regardless_+_of_+_the_+_diameter
*CAT: n
*SEM: orRel[rel=maximum_+_length_+_of_+_500_+_mm_+_regardless_+_of_+_the_+_diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface
*CAT: n
*SEM: unaryRel[rel=interface]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface
*CAT: n
*SEM: twoRel[rel=interface]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface
*CAT: n
*SEM: twoRel[rel=interface]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface
*CAT: n
*SEM: orRel[rel=interface]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routes
*CAT: n
*SEM: unaryRel[rel=routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routes
*CAT: n
*SEM: twoRel[rel=routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routes
*CAT: n
*SEM: twoRel[rel=routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routes
*CAT: n
*SEM: orRel[rel=routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mk_+_system
*CAT: n
*SEM: unaryRel[rel=mk_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mk_+_system
*CAT: n
*SEM: twoRel[rel=mk_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mk_+_system
*CAT: n
*SEM: twoRel[rel=mk_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mk_+_system
*CAT: n
*SEM: orRel[rel=mk_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cushion_+_material
*CAT: n
*SEM: unaryRel[rel=cushion_+_material]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cushion_+_material
*CAT: n
*SEM: twoRel[rel=cushion_+_material]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cushion_+_material
*CAT: n
*SEM: twoRel[rel=cushion_+_material]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cushion_+_material
*CAT: n
*SEM: orRel[rel=cushion_+_material]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_bend_+_to_+_beginning
*CAT: n
*SEM: unaryRel[rel=first_+_bend_+_to_+_beginning]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_bend_+_to_+_beginning
*CAT: n
*SEM: twoRel[rel=first_+_bend_+_to_+_beginning]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_bend_+_to_+_beginning
*CAT: n
*SEM: twoRel[rel=first_+_bend_+_to_+_beginning]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_bend_+_to_+_beginning
*CAT: n
*SEM: orRel[rel=first_+_bend_+_to_+_beginning]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: peek_+_ramp
*CAT: n
*SEM: unaryRel[rel=peek_+_ramp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: peek_+_ramp
*CAT: n
*SEM: twoRel[rel=peek_+_ramp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: peek_+_ramp
*CAT: n
*SEM: twoRel[rel=peek_+_ramp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: peek_+_ramp
*CAT: n
*SEM: orRel[rel=peek_+_ramp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_side._+_flange_+_of_+_pressure_+_seals
*CAT: n
*SEM: unaryRel[rel=pressurized_+_side._+_flange_+_of_+_pressure_+_seals]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_side._+_flange_+_of_+_pressure_+_seals
*CAT: n
*SEM: twoRel[rel=pressurized_+_side._+_flange_+_of_+_pressure_+_seals]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_side._+_flange_+_of_+_pressure_+_seals
*CAT: n
*SEM: twoRel[rel=pressurized_+_side._+_flange_+_of_+_pressure_+_seals]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_side._+_flange_+_of_+_pressure_+_seals
*CAT: n
*SEM: orRel[rel=pressurized_+_side._+_flange_+_of_+_pressure_+_seals]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hinge_+_no_+_contact
*CAT: n
*SEM: unaryRel[rel=hinge_+_no_+_contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hinge_+_no_+_contact
*CAT: n
*SEM: twoRel[rel=hinge_+_no_+_contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hinge_+_no_+_contact
*CAT: n
*SEM: twoRel[rel=hinge_+_no_+_contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hinge_+_no_+_contact
*CAT: n
*SEM: orRel[rel=hinge_+_no_+_contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646_+_connector
*CAT: n
*SEM: unaryRel[rel=en_+_3646_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646_+_connector
*CAT: n
*SEM: twoRel[rel=en_+_3646_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646_+_connector
*CAT: n
*SEM: twoRel[rel=en_+_3646_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646_+_connector
*CAT: n
*SEM: orRel[rel=en_+_3646_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: silicon_+_dioxide_+_harness_+_installation
*CAT: n
*SEM: unaryRel[rel=silicon_+_dioxide_+_harness_+_installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: silicon_+_dioxide_+_harness_+_installation
*CAT: n
*SEM: twoRel[rel=silicon_+_dioxide_+_harness_+_installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: silicon_+_dioxide_+_harness_+_installation
*CAT: n
*SEM: twoRel[rel=silicon_+_dioxide_+_harness_+_installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: silicon_+_dioxide_+_harness_+_installation
*CAT: n
*SEM: orRel[rel=silicon_+_dioxide_+_harness_+_installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pa6.6_+_finish_+_when_+_zonal
*CAT: n
*SEM: unaryRel[rel=pa6.6_+_finish_+_when_+_zonal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pa6.6_+_finish_+_when_+_zonal
*CAT: n
*SEM: twoRel[rel=pa6.6_+_finish_+_when_+_zonal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pa6.6_+_finish_+_when_+_zonal
*CAT: n
*SEM: twoRel[rel=pa6.6_+_finish_+_when_+_zonal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pa6.6_+_finish_+_when_+_zonal
*CAT: n
*SEM: orRel[rel=pa6.6_+_finish_+_when_+_zonal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+__-_equalto_-__+_d.
*CAT: n
*SEM: unaryRel[rel=d_+__-_smallerThan_-__+__-_equalto_-__+_d.]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+__-_equalto_-__+_d.
*CAT: n
*SEM: twoRel[rel=d_+__-_smallerThan_-__+__-_equalto_-__+_d.]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+__-_equalto_-__+_d.
*CAT: n
*SEM: twoRel[rel=d_+__-_smallerThan_-__+__-_equalto_-__+_d.]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+__-_equalto_-__+_d.
*CAT: n
*SEM: orRel[rel=d_+__-_smallerThan_-__+__-_equalto_-__+_d.]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_pipes
*CAT: n
*SEM: unaryRel[rel=rigid_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_pipes
*CAT: n
*SEM: twoRel[rel=rigid_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_pipes
*CAT: n
*SEM: twoRel[rel=rigid_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_pipes
*CAT: n
*SEM: orRel[rel=rigid_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_segregation
*CAT: n
*SEM: unaryRel[rel=connector_+_segregation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_segregation
*CAT: n
*SEM: twoRel[rel=connector_+_segregation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_segregation
*CAT: n
*SEM: twoRel[rel=connector_+_segregation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_segregation
*CAT: n
*SEM: orRel[rel=connector_+_segregation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell
*CAT: n
*SEM: unaryRel[rel=back_+_shell]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell
*CAT: n
*SEM: twoRel[rel=back_+_shell]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell
*CAT: n
*SEM: twoRel[rel=back_+_shell]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell
*CAT: n
*SEM: orRel[rel=back_+_shell]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead
*CAT: n
*SEM: unaryRel[rel=bulkhead]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead
*CAT: n
*SEM: twoRel[rel=bulkhead]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead
*CAT: n
*SEM: twoRel[rel=bulkhead]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead
*CAT: n
*SEM: orRel[rel=bulkhead]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell_+_orientation
*CAT: n
*SEM: unaryRel[rel=back_+_shell_+_orientation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell_+_orientation
*CAT: n
*SEM: twoRel[rel=back_+_shell_+_orientation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell_+_orientation
*CAT: n
*SEM: twoRel[rel=back_+_shell_+_orientation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell_+_orientation
*CAT: n
*SEM: orRel[rel=back_+_shell_+_orientation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_pipe
*CAT: n
*SEM: unaryRel[rel=rigid_+_pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_pipe
*CAT: n
*SEM: twoRel[rel=rigid_+_pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_pipe
*CAT: n
*SEM: twoRel[rel=rigid_+_pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_pipe
*CAT: n
*SEM: orRel[rel=rigid_+_pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_of_+_fire_+_seal_+_in_+_a_+_straight_+_routing
*CAT: n
*SEM: unaryRel[rel=front_+_of_+_fire_+_seal_+_in_+_a_+_straight_+_routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_of_+_fire_+_seal_+_in_+_a_+_straight_+_routing
*CAT: n
*SEM: twoRel[rel=front_+_of_+_fire_+_seal_+_in_+_a_+_straight_+_routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_of_+_fire_+_seal_+_in_+_a_+_straight_+_routing
*CAT: n
*SEM: twoRel[rel=front_+_of_+_fire_+_seal_+_in_+_a_+_straight_+_routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_of_+_fire_+_seal_+_in_+_a_+_straight_+_routing
*CAT: n
*SEM: orRel[rel=front_+_of_+_fire_+_seal_+_in_+_a_+_straight_+_routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_structure
*CAT: n
*SEM: unaryRel[rel=aircraft_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_structure
*CAT: n
*SEM: twoRel[rel=aircraft_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_structure
*CAT: n
*SEM: twoRel[rel=aircraft_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_structure
*CAT: n
*SEM: orRel[rel=aircraft_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routes_+_they_+_are_+_in_+_contact
*CAT: n
*SEM: unaryRel[rel=routes_+_they_+_are_+_in_+_contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routes_+_they_+_are_+_in_+_contact
*CAT: n
*SEM: twoRel[rel=routes_+_they_+_are_+_in_+_contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routes_+_they_+_are_+_in_+_contact
*CAT: n
*SEM: twoRel[rel=routes_+_they_+_are_+_in_+_contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routes_+_they_+_are_+_in_+_contact
*CAT: n
*SEM: orRel[rel=routes_+_they_+_are_+_in_+_contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_successive
*CAT: n
*SEM: unaryRel[rel=2_+_successive]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_successive
*CAT: n
*SEM: twoRel[rel=2_+_successive]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_successive
*CAT: n
*SEM: twoRel[rel=2_+_successive]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_successive
*CAT: n
*SEM: orRel[rel=2_+_successive]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minor_+_potential_+_misalignments
*CAT: n
*SEM: unaryRel[rel=minor_+_potential_+_misalignments]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minor_+_potential_+_misalignments
*CAT: n
*SEM: twoRel[rel=minor_+_potential_+_misalignments]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minor_+_potential_+_misalignments
*CAT: n
*SEM: twoRel[rel=minor_+_potential_+_misalignments]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minor_+_potential_+_misalignments
*CAT: n
*SEM: orRel[rel=minor_+_potential_+_misalignments]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lug_+_not
*CAT: n
*SEM: unaryRel[rel=lug_+_not]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lug_+_not
*CAT: n
*SEM: twoRel[rel=lug_+_not]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lug_+_not
*CAT: n
*SEM: twoRel[rel=lug_+_not]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lug_+_not
*CAT: n
*SEM: orRel[rel=lug_+_not]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_electrical_+_item
*CAT: n
*SEM: unaryRel[rel=each_+_electrical_+_item]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_electrical_+_item
*CAT: n
*SEM: twoRel[rel=each_+_electrical_+_item]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_electrical_+_item
*CAT: n
*SEM: twoRel[rel=each_+_electrical_+_item]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_electrical_+_item
*CAT: n
*SEM: orRel[rel=each_+_electrical_+_item]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_pipe_+_connection
*CAT: n
*SEM: unaryRel[rel=intermediate_+_pipe_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_pipe_+_connection
*CAT: n
*SEM: twoRel[rel=intermediate_+_pipe_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_pipe_+_connection
*CAT: n
*SEM: twoRel[rel=intermediate_+_pipe_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_pipe_+_connection
*CAT: n
*SEM: orRel[rel=intermediate_+_pipe_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: which_+_sizes
*CAT: n
*SEM: unaryRel[rel=which_+_sizes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: which_+_sizes
*CAT: n
*SEM: twoRel[rel=which_+_sizes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: which_+_sizes
*CAT: n
*SEM: twoRel[rel=which_+_sizes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: which_+_sizes
*CAT: n
*SEM: orRel[rel=which_+_sizes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_component_+_or
*CAT: n
*SEM: unaryRel[rel=self-locking_+_component_+_or]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_component_+_or
*CAT: n
*SEM: twoRel[rel=self-locking_+_component_+_or]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_component_+_or
*CAT: n
*SEM: twoRel[rel=self-locking_+_component_+_or]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_component_+_or
*CAT: n
*SEM: orRel[rel=self-locking_+_component_+_or]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first
*CAT: n
*SEM: unaryRel[rel=first]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first
*CAT: n
*SEM: twoRel[rel=first]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first
*CAT: n
*SEM: twoRel[rel=first]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first
*CAT: n
*SEM: orRel[rel=first]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+_0mm
*CAT: n
*SEM: unaryRel[rel=10mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+_0mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+_0mm
*CAT: n
*SEM: twoRel[rel=10mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+_0mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+_0mm
*CAT: n
*SEM: twoRel[rel=10mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+_0mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+_0mm
*CAT: n
*SEM: orRel[rel=10mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+_0mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priorityor_+_lock_+_wire
*CAT: n
*SEM: unaryRel[rel=first_+_priorityor_+_lock_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priorityor_+_lock_+_wire
*CAT: n
*SEM: twoRel[rel=first_+_priorityor_+_lock_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priorityor_+_lock_+_wire
*CAT: n
*SEM: twoRel[rel=first_+_priorityor_+_lock_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priorityor_+_lock_+_wire
*CAT: n
*SEM: orRel[rel=first_+_priorityor_+_lock_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd
*CAT: n
*SEM: unaryRel[rel=0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd
*CAT: n
*SEM: twoRel[rel=0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd
*CAT: n
*SEM: twoRel[rel=0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd
*CAT: n
*SEM: orRel[rel=0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduced
*CAT: n
*SEM: unaryRel[rel=reduced]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduced
*CAT: n
*SEM: twoRel[rel=reduced]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduced
*CAT: n
*SEM: twoRel[rel=reduced]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduced
*CAT: n
*SEM: orRel[rel=reduced]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cover
*CAT: n
*SEM: unaryRel[rel=cover]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cover
*CAT: n
*SEM: twoRel[rel=cover]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cover
*CAT: n
*SEM: twoRel[rel=cover]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cover
*CAT: n
*SEM: orRel[rel=cover]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flareless_+_hydraulic_+_unions
*CAT: n
*SEM: unaryRel[rel=flareless_+_hydraulic_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flareless_+_hydraulic_+_unions
*CAT: n
*SEM: twoRel[rel=flareless_+_hydraulic_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flareless_+_hydraulic_+_unions
*CAT: n
*SEM: twoRel[rel=flareless_+_hydraulic_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flareless_+_hydraulic_+_unions
*CAT: n
*SEM: orRel[rel=flareless_+_hydraulic_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150_-_degrees_-_c.or
*CAT: n
*SEM: unaryRel[rel=150_-_degrees_-_c.or]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150_-_degrees_-_c.or
*CAT: n
*SEM: twoRel[rel=150_-_degrees_-_c.or]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150_-_degrees_-_c.or
*CAT: n
*SEM: twoRel[rel=150_-_degrees_-_c.or]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150_-_degrees_-_c.or
*CAT: n
*SEM: orRel[rel=150_-_degrees_-_c.or]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_bottle
*CAT: n
*SEM: unaryRel[rel=drain_+_bottle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_bottle
*CAT: n
*SEM: twoRel[rel=drain_+_bottle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_bottle
*CAT: n
*SEM: twoRel[rel=drain_+_bottle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_bottle
*CAT: n
*SEM: orRel[rel=drain_+_bottle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: u
*CAT: n
*SEM: unaryRel[rel=u]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: u
*CAT: n
*SEM: twoRel[rel=u]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: u
*CAT: n
*SEM: twoRel[rel=u]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: u
*CAT: n
*SEM: orRel[rel=u]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fasten_+_a_+_electrical_+_active_+_item_+_which_+_are_+_protuding_+_1
*CAT: n
*SEM: unaryRel[rel=fasten_+_a_+_electrical_+_active_+_item_+_which_+_are_+_protuding_+_1]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fasten_+_a_+_electrical_+_active_+_item_+_which_+_are_+_protuding_+_1
*CAT: n
*SEM: twoRel[rel=fasten_+_a_+_electrical_+_active_+_item_+_which_+_are_+_protuding_+_1]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fasten_+_a_+_electrical_+_active_+_item_+_which_+_are_+_protuding_+_1
*CAT: n
*SEM: twoRel[rel=fasten_+_a_+_electrical_+_active_+_item_+_which_+_are_+_protuding_+_1]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fasten_+_a_+_electrical_+_active_+_item_+_which_+_are_+_protuding_+_1
*CAT: n
*SEM: orRel[rel=fasten_+_a_+_electrical_+_active_+_item_+_which_+_are_+_protuding_+_1]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restricted_+_access_+_areas
*CAT: n
*SEM: unaryRel[rel=restricted_+_access_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restricted_+_access_+_areas
*CAT: n
*SEM: twoRel[rel=restricted_+_access_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restricted_+_access_+_areas
*CAT: n
*SEM: twoRel[rel=restricted_+_access_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restricted_+_access_+_areas
*CAT: n
*SEM: orRel[rel=restricted_+_access_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0425_+_sealed_+_vg
*CAT: n
*SEM: unaryRel[rel=asne0425_+_sealed_+_vg]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0425_+_sealed_+_vg
*CAT: n
*SEM: twoRel[rel=asne0425_+_sealed_+_vg]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0425_+_sealed_+_vg
*CAT: n
*SEM: twoRel[rel=asne0425_+_sealed_+_vg]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0425_+_sealed_+_vg
*CAT: n
*SEM: orRel[rel=asne0425_+_sealed_+_vg]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_protectionor
*CAT: n
*SEM: unaryRel[rel=additional_+_protectionor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_protectionor
*CAT: n
*SEM: twoRel[rel=additional_+_protectionor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_protectionor
*CAT: n
*SEM: twoRel[rel=additional_+_protectionor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_protectionor
*CAT: n
*SEM: orRel[rel=additional_+_protectionor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: necessary
*CAT: n
*SEM: unaryRel[rel=necessary]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: necessary
*CAT: n
*SEM: twoRel[rel=necessary]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: necessary
*CAT: n
*SEM: twoRel[rel=necessary]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: necessary
*CAT: n
*SEM: orRel[rel=necessary]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90_-_degrees_-__+_angles
*CAT: n
*SEM: unaryRel[rel=90_-_degrees_-__+_angles]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90_-_degrees_-__+_angles
*CAT: n
*SEM: twoRel[rel=90_-_degrees_-__+_angles]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90_-_degrees_-__+_angles
*CAT: n
*SEM: twoRel[rel=90_-_degrees_-__+_angles]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90_-_degrees_-__+_angles
*CAT: n
*SEM: orRel[rel=90_-_degrees_-__+_angles]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1.44_+_inches_+__-_opensb_-_36.576mm_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=1.44_+_inches_+__-_opensb_-_36.576mm_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1.44_+_inches_+__-_opensb_-_36.576mm_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=1.44_+_inches_+__-_opensb_-_36.576mm_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1.44_+_inches_+__-_opensb_-_36.576mm_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=1.44_+_inches_+__-_opensb_-_36.576mm_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1.44_+_inches_+__-_opensb_-_36.576mm_-_closesb_-_
*CAT: n
*SEM: orRel[rel=1.44_+_inches_+__-_opensb_-_36.576mm_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_25mmor
*CAT: n
*SEM: unaryRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_25mmor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_25mmor
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_25mmor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_25mmor
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_25mmor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_25mmor
*CAT: n
*SEM: orRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_25mmor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_cut
*CAT: n
*SEM: unaryRel[rel=account_+_cut]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_cut
*CAT: n
*SEM: twoRel[rel=account_+_cut]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_cut
*CAT: n
*SEM: twoRel[rel=account_+_cut]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_cut
*CAT: n
*SEM: orRel[rel=account_+_cut]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25_-_comma_-_4_+_mm
*CAT: n
*SEM: unaryRel[rel=25_-_comma_-_4_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25_-_comma_-_4_+_mm
*CAT: n
*SEM: twoRel[rel=25_-_comma_-_4_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25_-_comma_-_4_+_mm
*CAT: n
*SEM: twoRel[rel=25_-_comma_-_4_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25_-_comma_-_4_+_mm
*CAT: n
*SEM: orRel[rel=25_-_comma_-_4_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: light_+_blue_+_background
*CAT: n
*SEM: unaryRel[rel=light_+_blue_+_background]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: light_+_blue_+_background
*CAT: n
*SEM: twoRel[rel=light_+_blue_+_background]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: light_+_blue_+_background
*CAT: n
*SEM: twoRel[rel=light_+_blue_+_background]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: light_+_blue_+_background
*CAT: n
*SEM: orRel[rel=light_+_blue_+_background]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_system
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_system
*CAT: n
*SEM: twoRel[rel=hydraulic_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_system
*CAT: n
*SEM: twoRel[rel=hydraulic_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_system
*CAT: n
*SEM: orRel[rel=hydraulic_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2083
*CAT: n
*SEM: unaryRel[rel=abs2083]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2083
*CAT: n
*SEM: twoRel[rel=abs2083]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2083
*CAT: n
*SEM: twoRel[rel=abs2083]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2083
*CAT: n
*SEM: orRel[rel=abs2083]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restricted_+_access_+_areas_+__-_opensb_-_e.g._+_in_+_pylon_+_zone_+_in_+_order
*CAT: n
*SEM: unaryRel[rel=restricted_+_access_+_areas_+__-_opensb_-_e.g._+_in_+_pylon_+_zone_+_in_+_order]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restricted_+_access_+_areas_+__-_opensb_-_e.g._+_in_+_pylon_+_zone_+_in_+_order
*CAT: n
*SEM: twoRel[rel=restricted_+_access_+_areas_+__-_opensb_-_e.g._+_in_+_pylon_+_zone_+_in_+_order]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restricted_+_access_+_areas_+__-_opensb_-_e.g._+_in_+_pylon_+_zone_+_in_+_order
*CAT: n
*SEM: twoRel[rel=restricted_+_access_+_areas_+__-_opensb_-_e.g._+_in_+_pylon_+_zone_+_in_+_order]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restricted_+_access_+_areas_+__-_opensb_-_e.g._+_in_+_pylon_+_zone_+_in_+_order
*CAT: n
*SEM: orRel[rel=restricted_+_access_+_areas_+__-_opensb_-_e.g._+_in_+_pylon_+_zone_+_in_+_order]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: white_+_color
*CAT: n
*SEM: unaryRel[rel=white_+_color]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: white_+_color
*CAT: n
*SEM: twoRel[rel=white_+_color]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: white_+_color
*CAT: n
*SEM: twoRel[rel=white_+_color]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: white_+_color
*CAT: n
*SEM: orRel[rel=white_+_color]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90_-_degrees_-_
*CAT: n
*SEM: unaryRel[rel=90_-_degrees_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=90_-_degrees_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=90_-_degrees_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90_-_degrees_-_
*CAT: n
*SEM: orRel[rel=90_-_degrees_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two-elbow_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=two-elbow_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two-elbow_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=two-elbow_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two-elbow_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=two-elbow_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two-elbow_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=two-elbow_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_length
*CAT: n
*SEM: unaryRel[rel=maximum_+_length]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_length
*CAT: n
*SEM: twoRel[rel=maximum_+_length]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_length
*CAT: n
*SEM: twoRel[rel=maximum_+_length]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_length
*CAT: n
*SEM: orRel[rel=maximum_+_length]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: switch_+_guard
*CAT: n
*SEM: unaryRel[rel=switch_+_guard]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: switch_+_guard
*CAT: n
*SEM: twoRel[rel=switch_+_guard]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: switch_+_guard
*CAT: n
*SEM: twoRel[rel=switch_+_guard]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: switch_+_guard
*CAT: n
*SEM: orRel[rel=switch_+_guard]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+__-_opensb_-_plug_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=connector_+__-_opensb_-_plug_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+__-_opensb_-_plug_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=connector_+__-_opensb_-_plug_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+__-_opensb_-_plug_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=connector_+__-_opensb_-_plug_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+__-_opensb_-_plug_-_closesb_-_
*CAT: n
*SEM: orRel[rel=connector_+__-_opensb_-_plug_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5m
*CAT: n
*SEM: unaryRel[rel=5m]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5m
*CAT: n
*SEM: twoRel[rel=5m]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5m
*CAT: n
*SEM: twoRel[rel=5m]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5m
*CAT: n
*SEM: orRel[rel=5m]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: traverse
*CAT: n
*SEM: unaryRel[rel=traverse]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: traverse
*CAT: n
*SEM: twoRel[rel=traverse]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: traverse
*CAT: n
*SEM: twoRel[rel=traverse]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: traverse
*CAT: n
*SEM: orRel[rel=traverse]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_plug
*CAT: n
*SEM: unaryRel[rel=sealed_+_plug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_plug
*CAT: n
*SEM: twoRel[rel=sealed_+_plug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_plug
*CAT: n
*SEM: twoRel[rel=sealed_+_plug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_plug
*CAT: n
*SEM: orRel[rel=sealed_+_plug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_harness_+_m-route
*CAT: n
*SEM: unaryRel[rel=optional_+_harness_+_m-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_harness_+_m-route
*CAT: n
*SEM: twoRel[rel=optional_+_harness_+_m-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_harness_+_m-route
*CAT: n
*SEM: twoRel[rel=optional_+_harness_+_m-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_harness_+_m-route
*CAT: n
*SEM: orRel[rel=optional_+_harness_+_m-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: several_+_wires
*CAT: n
*SEM: unaryRel[rel=several_+_wires]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: several_+_wires
*CAT: n
*SEM: twoRel[rel=several_+_wires]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: several_+_wires
*CAT: n
*SEM: twoRel[rel=several_+_wires]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: several_+_wires
*CAT: n
*SEM: orRel[rel=several_+_wires]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_ties
*CAT: n
*SEM: unaryRel[rel=cable_+_ties]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_ties
*CAT: n
*SEM: twoRel[rel=cable_+_ties]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_ties
*CAT: n
*SEM: twoRel[rel=cable_+_ties]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_ties
*CAT: n
*SEM: orRel[rel=cable_+_ties]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_g
*CAT: n
*SEM: unaryRel[rel=col_obj1_g]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_g
*CAT: n
*SEM: twoRel[rel=col_obj1_g]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_g
*CAT: n
*SEM: twoRel[rel=col_obj1_g]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_g
*CAT: n
*SEM: orRel[rel=col_obj1_g]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20cm
*CAT: n
*SEM: unaryRel[rel=20cm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20cm
*CAT: n
*SEM: twoRel[rel=20cm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20cm
*CAT: n
*SEM: twoRel[rel=20cm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20cm
*CAT: n
*SEM: orRel[rel=20cm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_bend
*CAT: n
*SEM: unaryRel[rel=pipe_+_bend]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_bend
*CAT: n
*SEM: twoRel[rel=pipe_+_bend]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_bend
*CAT: n
*SEM: twoRel[rel=pipe_+_bend]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_bend
*CAT: n
*SEM: orRel[rel=pipe_+_bend]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_to
*CAT: n
*SEM: unaryRel[rel=pipes_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_to
*CAT: n
*SEM: twoRel[rel=pipes_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_to
*CAT: n
*SEM: twoRel[rel=pipes_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_to
*CAT: n
*SEM: orRel[rel=pipes_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_spare_+_conduit
*CAT: n
*SEM: unaryRel[rel=inside_+_spare_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_spare_+_conduit
*CAT: n
*SEM: twoRel[rel=inside_+_spare_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_spare_+_conduit
*CAT: n
*SEM: twoRel[rel=inside_+_spare_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_spare_+_conduit
*CAT: n
*SEM: orRel[rel=inside_+_spare_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside
*CAT: n
*SEM: unaryRel[rel=inside]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside
*CAT: n
*SEM: twoRel[rel=inside]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside
*CAT: n
*SEM: twoRel[rel=inside]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside
*CAT: n
*SEM: orRel[rel=inside]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_modules
*CAT: n
*SEM: unaryRel[rel=terminal_+_modules]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_modules
*CAT: n
*SEM: twoRel[rel=terminal_+_modules]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_modules
*CAT: n
*SEM: twoRel[rel=terminal_+_modules]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_modules
*CAT: n
*SEM: orRel[rel=terminal_+_modules]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: oxygen
*CAT: n
*SEM: unaryRel[rel=oxygen]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: oxygen
*CAT: n
*SEM: twoRel[rel=oxygen]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: oxygen
*CAT: n
*SEM: twoRel[rel=oxygen]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: oxygen
*CAT: n
*SEM: orRel[rel=oxygen]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: radius
*CAT: n
*SEM: unaryRel[rel=radius]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: radius
*CAT: n
*SEM: twoRel[rel=radius]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: radius
*CAT: n
*SEM: twoRel[rel=radius]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: radius
*CAT: n
*SEM: orRel[rel=radius]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure._+_these_+_repair_+_zones
*CAT: n
*SEM: unaryRel[rel=attached_+_figure._+_these_+_repair_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure._+_these_+_repair_+_zones
*CAT: n
*SEM: twoRel[rel=attached_+_figure._+_these_+_repair_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure._+_these_+_repair_+_zones
*CAT: n
*SEM: twoRel[rel=attached_+_figure._+_these_+_repair_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure._+_these_+_repair_+_zones
*CAT: n
*SEM: orRel[rel=attached_+_figure._+_these_+_repair_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: holes_+_to_+_a_+_minimum
*CAT: n
*SEM: unaryRel[rel=holes_+_to_+_a_+_minimum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: holes_+_to_+_a_+_minimum
*CAT: n
*SEM: twoRel[rel=holes_+_to_+_a_+_minimum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: holes_+_to_+_a_+_minimum
*CAT: n
*SEM: twoRel[rel=holes_+_to_+_a_+_minimum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: holes_+_to_+_a_+_minimum
*CAT: n
*SEM: orRel[rel=holes_+_to_+_a_+_minimum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop
*CAT: n
*SEM: unaryRel[rel=drip_+_loop]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop
*CAT: n
*SEM: twoRel[rel=drip_+_loop]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop
*CAT: n
*SEM: twoRel[rel=drip_+_loop]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop
*CAT: n
*SEM: orRel[rel=drip_+_loop]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_components
*CAT: n
*SEM: unaryRel[rel=pylon_+_components]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_components
*CAT: n
*SEM: twoRel[rel=pylon_+_components]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_components
*CAT: n
*SEM: twoRel[rel=pylon_+_components]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_components
*CAT: n
*SEM: orRel[rel=pylon_+_components]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+__+_chains
*CAT: n
*SEM: unaryRel[rel=geometry_+__+_chains]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+__+_chains
*CAT: n
*SEM: twoRel[rel=geometry_+__+_chains]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+__+_chains
*CAT: n
*SEM: twoRel[rel=geometry_+__+_chains]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+__+_chains
*CAT: n
*SEM: orRel[rel=geometry_+__+_chains]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: components
*CAT: n
*SEM: unaryRel[rel=components]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: components
*CAT: n
*SEM: twoRel[rel=components]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: components
*CAT: n
*SEM: twoRel[rel=components]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: components
*CAT: n
*SEM: orRel[rel=components]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guarantee_+_stress_+_free_+_installation
*CAT: n
*SEM: unaryRel[rel=guarantee_+_stress_+_free_+_installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guarantee_+_stress_+_free_+_installation
*CAT: n
*SEM: twoRel[rel=guarantee_+_stress_+_free_+_installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guarantee_+_stress_+_free_+_installation
*CAT: n
*SEM: twoRel[rel=guarantee_+_stress_+_free_+_installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guarantee_+_stress_+_free_+_installation
*CAT: n
*SEM: orRel[rel=guarantee_+_stress_+_free_+_installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195_+__-_opensb_-_preferred_+_for_+_weight_+_saving_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=abs2195_+__-_opensb_-_preferred_+_for_+_weight_+_saving_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195_+__-_opensb_-_preferred_+_for_+_weight_+_saving_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=abs2195_+__-_opensb_-_preferred_+_for_+_weight_+_saving_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195_+__-_opensb_-_preferred_+_for_+_weight_+_saving_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=abs2195_+__-_opensb_-_preferred_+_for_+_weight_+_saving_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195_+__-_opensb_-_preferred_+_for_+_weight_+_saving_-_closesb_-_
*CAT: n
*SEM: orRel[rel=abs2195_+__-_opensb_-_preferred_+_for_+_weight_+_saving_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1571_+_pressure
*CAT: n
*SEM: unaryRel[rel=abs_+_1571_+_pressure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1571_+_pressure
*CAT: n
*SEM: twoRel[rel=abs_+_1571_+_pressure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1571_+_pressure
*CAT: n
*SEM: twoRel[rel=abs_+_1571_+_pressure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1571_+_pressure
*CAT: n
*SEM: orRel[rel=abs_+_1571_+_pressure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: corresponding_+_pipe_+_material
*CAT: n
*SEM: unaryRel[rel=corresponding_+_pipe_+_material]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: corresponding_+_pipe_+_material
*CAT: n
*SEM: twoRel[rel=corresponding_+_pipe_+_material]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: corresponding_+_pipe_+_material
*CAT: n
*SEM: twoRel[rel=corresponding_+_pipe_+_material]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: corresponding_+_pipe_+_material
*CAT: n
*SEM: orRel[rel=corresponding_+_pipe_+_material]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame_+_between_+_stringer_+_p5
*CAT: n
*SEM: unaryRel[rel=frame_+_between_+_stringer_+_p5]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame_+_between_+_stringer_+_p5
*CAT: n
*SEM: twoRel[rel=frame_+_between_+_stringer_+_p5]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame_+_between_+_stringer_+_p5
*CAT: n
*SEM: twoRel[rel=frame_+_between_+_stringer_+_p5]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame_+_between_+_stringer_+_p5
*CAT: n
*SEM: orRel[rel=frame_+_between_+_stringer_+_p5]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: printable_+_wire
*CAT: n
*SEM: unaryRel[rel=printable_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: printable_+_wire
*CAT: n
*SEM: twoRel[rel=printable_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: printable_+_wire
*CAT: n
*SEM: twoRel[rel=printable_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: printable_+_wire
*CAT: n
*SEM: orRel[rel=printable_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius._+_this
*CAT: n
*SEM: unaryRel[rel=minimum_+_bend_+_radius._+_this]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius._+_this
*CAT: n
*SEM: twoRel[rel=minimum_+_bend_+_radius._+_this]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius._+_this
*CAT: n
*SEM: twoRel[rel=minimum_+_bend_+_radius._+_this]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius._+_this
*CAT: n
*SEM: orRel[rel=minimum_+_bend_+_radius._+_this]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_areasor
*CAT: n
*SEM: unaryRel[rel=swamp_+_areasor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_areasor
*CAT: n
*SEM: twoRel[rel=swamp_+_areasor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_areasor
*CAT: n
*SEM: twoRel[rel=swamp_+_areasor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_areasor
*CAT: n
*SEM: orRel[rel=swamp_+_areasor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice
*CAT: n
*SEM: unaryRel[rel=virtual_+_splice]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice
*CAT: n
*SEM: twoRel[rel=virtual_+_splice]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice
*CAT: n
*SEM: twoRel[rel=virtual_+_splice]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice
*CAT: n
*SEM: orRel[rel=virtual_+_splice]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diect
*CAT: n
*SEM: unaryRel[rel=diect]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diect
*CAT: n
*SEM: twoRel[rel=diect]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diect
*CAT: n
*SEM: twoRel[rel=diect]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diect
*CAT: n
*SEM: orRel[rel=diect]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+_chains
*CAT: n
*SEM: unaryRel[rel=geometry_+_chains]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+_chains
*CAT: n
*SEM: twoRel[rel=geometry_+_chains]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+_chains
*CAT: n
*SEM: twoRel[rel=geometry_+_chains]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+_chains
*CAT: n
*SEM: orRel[rel=geometry_+_chains]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_bifurcation_+_angle_+__-_openbb_-_45_-_degrees_-__+_60_-_degrees_-__-_closebb_-_
*CAT: n
*SEM: unaryRel[rel=low_+_bifurcation_+_angle_+__-_openbb_-_45_-_degrees_-__+_60_-_degrees_-__-_closebb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_bifurcation_+_angle_+__-_openbb_-_45_-_degrees_-__+_60_-_degrees_-__-_closebb_-_
*CAT: n
*SEM: twoRel[rel=low_+_bifurcation_+_angle_+__-_openbb_-_45_-_degrees_-__+_60_-_degrees_-__-_closebb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_bifurcation_+_angle_+__-_openbb_-_45_-_degrees_-__+_60_-_degrees_-__-_closebb_-_
*CAT: n
*SEM: twoRel[rel=low_+_bifurcation_+_angle_+__-_openbb_-_45_-_degrees_-__+_60_-_degrees_-__-_closebb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_bifurcation_+_angle_+__-_openbb_-_45_-_degrees_-__+_60_-_degrees_-__-_closebb_-_
*CAT: n
*SEM: orRel[rel=low_+_bifurcation_+_angle_+__-_openbb_-_45_-_degrees_-__+_60_-_degrees_-__-_closebb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_area_+_other_+_areas
*CAT: n
*SEM: unaryRel[rel=hazardous_+_area_+_other_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_area_+_other_+_areas
*CAT: n
*SEM: twoRel[rel=hazardous_+_area_+_other_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_area_+_other_+_areas
*CAT: n
*SEM: twoRel[rel=hazardous_+_area_+_other_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_area_+_other_+_areas
*CAT: n
*SEM: orRel[rel=hazardous_+_area_+_other_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150_+_mm_+_on_+_bends_+_on_+_the_+_support_+_tubes
*CAT: n
*SEM: unaryRel[rel=150_+_mm_+_on_+_bends_+_on_+_the_+_support_+_tubes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150_+_mm_+_on_+_bends_+_on_+_the_+_support_+_tubes
*CAT: n
*SEM: twoRel[rel=150_+_mm_+_on_+_bends_+_on_+_the_+_support_+_tubes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150_+_mm_+_on_+_bends_+_on_+_the_+_support_+_tubes
*CAT: n
*SEM: twoRel[rel=150_+_mm_+_on_+_bends_+_on_+_the_+_support_+_tubes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150_+_mm_+_on_+_bends_+_on_+_the_+_support_+_tubes
*CAT: n
*SEM: orRel[rel=150_+_mm_+_on_+_bends_+_on_+_the_+_support_+_tubes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge
*CAT: n
*SEM: unaryRel[rel=max_+_80_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge
*CAT: n
*SEM: twoRel[rel=max_+_80_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge
*CAT: n
*SEM: twoRel[rel=max_+_80_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge
*CAT: n
*SEM: orRel[rel=max_+_80_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: termination
*CAT: n
*SEM: unaryRel[rel=termination]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: termination
*CAT: n
*SEM: twoRel[rel=termination]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: termination
*CAT: n
*SEM: twoRel[rel=termination]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: termination
*CAT: n
*SEM: orRel[rel=termination]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_end_+_extremities
*CAT: n
*SEM: unaryRel[rel=pipe_+_end_+_extremities]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_end_+_extremities
*CAT: n
*SEM: twoRel[rel=pipe_+_end_+_extremities]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_end_+_extremities
*CAT: n
*SEM: twoRel[rel=pipe_+_end_+_extremities]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_end_+_extremities
*CAT: n
*SEM: orRel[rel=pipe_+_end_+_extremities]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings
*CAT: n
*SEM: unaryRel[rel=routings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings
*CAT: n
*SEM: twoRel[rel=routings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings
*CAT: n
*SEM: twoRel[rel=routings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings
*CAT: n
*SEM: orRel[rel=routings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_items
*CAT: n
*SEM: unaryRel[rel=other_+_items]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_items
*CAT: n
*SEM: twoRel[rel=other_+_items]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_items
*CAT: n
*SEM: twoRel[rel=other_+_items]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_items
*CAT: n
*SEM: orRel[rel=other_+_items]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_plate
*CAT: n
*SEM: unaryRel[rel=end_+_plate]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_plate
*CAT: n
*SEM: twoRel[rel=end_+_plate]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_plate
*CAT: n
*SEM: twoRel[rel=end_+_plate]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_plate
*CAT: n
*SEM: orRel[rel=end_+_plate]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain
*CAT: n
*SEM: unaryRel[rel=drain]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain
*CAT: n
*SEM: twoRel[rel=drain]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain
*CAT: n
*SEM: twoRel[rel=drain]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain
*CAT: n
*SEM: orRel[rel=drain]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195
*CAT: n
*SEM: unaryRel[rel=abs2195]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195
*CAT: n
*SEM: twoRel[rel=abs2195]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195
*CAT: n
*SEM: twoRel[rel=abs2195]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195
*CAT: n
*SEM: orRel[rel=abs2195]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: male_+_end_+_unions
*CAT: n
*SEM: unaryRel[rel=male_+_end_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: male_+_end_+_unions
*CAT: n
*SEM: twoRel[rel=male_+_end_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: male_+_end_+_unions
*CAT: n
*SEM: twoRel[rel=male_+_end_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: male_+_end_+_unions
*CAT: n
*SEM: orRel[rel=male_+_end_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu
*CAT: n
*SEM: unaryRel[rel=vu]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu
*CAT: n
*SEM: twoRel[rel=vu]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu
*CAT: n
*SEM: twoRel[rel=vu]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu
*CAT: n
*SEM: orRel[rel=vu]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_preference
*CAT: n
*SEM: unaryRel[rel=in_+_preference]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_preference
*CAT: n
*SEM: twoRel[rel=in_+_preference]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_preference
*CAT: n
*SEM: twoRel[rel=in_+_preference]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_preference
*CAT: n
*SEM: orRel[rel=in_+_preference]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_bundle
*CAT: n
*SEM: unaryRel[rel=same_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_bundle
*CAT: n
*SEM: twoRel[rel=same_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_bundle
*CAT: n
*SEM: twoRel[rel=same_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_bundle
*CAT: n
*SEM: orRel[rel=same_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_where_+_connection
*CAT: n
*SEM: unaryRel[rel=zone_+_where_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_where_+_connection
*CAT: n
*SEM: twoRel[rel=zone_+_where_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_where_+_connection
*CAT: n
*SEM: twoRel[rel=zone_+_where_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_where_+_connection
*CAT: n
*SEM: orRel[rel=zone_+_where_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diametrically_+_opposite_+_each_+_other_+_when
*CAT: n
*SEM: unaryRel[rel=diametrically_+_opposite_+_each_+_other_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diametrically_+_opposite_+_each_+_other_+_when
*CAT: n
*SEM: twoRel[rel=diametrically_+_opposite_+_each_+_other_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diametrically_+_opposite_+_each_+_other_+_when
*CAT: n
*SEM: twoRel[rel=diametrically_+_opposite_+_each_+_other_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diametrically_+_opposite_+_each_+_other_+_when
*CAT: n
*SEM: orRel[rel=diametrically_+_opposite_+_each_+_other_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fluids
*CAT: n
*SEM: unaryRel[rel=fluids]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fluids
*CAT: n
*SEM: twoRel[rel=fluids]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fluids
*CAT: n
*SEM: twoRel[rel=fluids]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fluids
*CAT: n
*SEM: orRel[rel=fluids]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_vu
*CAT: n
*SEM: unaryRel[rel=small_+_vu]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_vu
*CAT: n
*SEM: twoRel[rel=small_+_vu]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_vu
*CAT: n
*SEM: twoRel[rel=small_+_vu]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_vu
*CAT: n
*SEM: orRel[rel=small_+_vu]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_delivery_+_when_+_length
*CAT: n
*SEM: unaryRel[rel=aircraft_+_delivery_+_when_+_length]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_delivery_+_when_+_length
*CAT: n
*SEM: twoRel[rel=aircraft_+_delivery_+_when_+_length]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_delivery_+_when_+_length
*CAT: n
*SEM: twoRel[rel=aircraft_+_delivery_+_when_+_length]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_delivery_+_when_+_length
*CAT: n
*SEM: orRel[rel=aircraft_+_delivery_+_when_+_length]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs-route
*CAT: n
*SEM: unaryRel[rel=efcs-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs-route
*CAT: n
*SEM: twoRel[rel=efcs-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs-route
*CAT: n
*SEM: twoRel[rel=efcs-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs-route
*CAT: n
*SEM: orRel[rel=efcs-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_side
*CAT: n
*SEM: unaryRel[rel=up_+_side]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_side
*CAT: n
*SEM: twoRel[rel=up_+_side]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_side
*CAT: n
*SEM: twoRel[rel=up_+_side]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_side
*CAT: n
*SEM: orRel[rel=up_+_side]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90_-_degrees_-__+_angle_+_to
*CAT: n
*SEM: unaryRel[rel=90_-_degrees_-__+_angle_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90_-_degrees_-__+_angle_+_to
*CAT: n
*SEM: twoRel[rel=90_-_degrees_-__+_angle_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90_-_degrees_-__+_angle_+_to
*CAT: n
*SEM: twoRel[rel=90_-_degrees_-__+_angle_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90_-_degrees_-__+_angle_+_to
*CAT: n
*SEM: orRel[rel=90_-_degrees_-__+_angle_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: combi_+_bracket_+_e.g
*CAT: n
*SEM: unaryRel[rel=combi_+_bracket_+_e.g]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: combi_+_bracket_+_e.g
*CAT: n
*SEM: twoRel[rel=combi_+_bracket_+_e.g]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: combi_+_bracket_+_e.g
*CAT: n
*SEM: twoRel[rel=combi_+_bracket_+_e.g]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: combi_+_bracket_+_e.g
*CAT: n
*SEM: orRel[rel=combi_+_bracket_+_e.g]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: probe
*CAT: n
*SEM: unaryRel[rel=probe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: probe
*CAT: n
*SEM: twoRel[rel=probe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: probe
*CAT: n
*SEM: twoRel[rel=probe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: probe
*CAT: n
*SEM: orRel[rel=probe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unions
*CAT: n
*SEM: unaryRel[rel=unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unions
*CAT: n
*SEM: twoRel[rel=unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unions
*CAT: n
*SEM: twoRel[rel=unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unions
*CAT: n
*SEM: orRel[rel=unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_a_+_pull_+_back_+_area
*CAT: n
*SEM: unaryRel[rel=account_+_a_+_pull_+_back_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_a_+_pull_+_back_+_area
*CAT: n
*SEM: twoRel[rel=account_+_a_+_pull_+_back_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_a_+_pull_+_back_+_area
*CAT: n
*SEM: twoRel[rel=account_+_a_+_pull_+_back_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_a_+_pull_+_back_+_area
*CAT: n
*SEM: orRel[rel=account_+_a_+_pull_+_back_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_identification
*CAT: n
*SEM: unaryRel[rel=same_+_identification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_identification
*CAT: n
*SEM: twoRel[rel=same_+_identification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_identification
*CAT: n
*SEM: twoRel[rel=same_+_identification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_identification
*CAT: n
*SEM: orRel[rel=same_+_identification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_coupling
*CAT: n
*SEM: unaryRel[rel=rigid_+_coupling]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_coupling
*CAT: n
*SEM: twoRel[rel=rigid_+_coupling]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_coupling
*CAT: n
*SEM: twoRel[rel=rigid_+_coupling]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_coupling
*CAT: n
*SEM: orRel[rel=rigid_+_coupling]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_other_+_ata_+_chapter
*CAT: n
*SEM: unaryRel[rel=no_+_other_+_ata_+_chapter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_other_+_ata_+_chapter
*CAT: n
*SEM: twoRel[rel=no_+_other_+_ata_+_chapter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_other_+_ata_+_chapter
*CAT: n
*SEM: twoRel[rel=no_+_other_+_ata_+_chapter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_other_+_ata_+_chapter
*CAT: n
*SEM: orRel[rel=no_+_other_+_ata_+_chapter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935829_+_end_+_fitting
*CAT: n
*SEM: unaryRel[rel=nsa_+_935829_+_end_+_fitting]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935829_+_end_+_fitting
*CAT: n
*SEM: twoRel[rel=nsa_+_935829_+_end_+_fitting]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935829_+_end_+_fitting
*CAT: n
*SEM: twoRel[rel=nsa_+_935829_+_end_+_fitting]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935829_+_end_+_fitting
*CAT: n
*SEM: orRel[rel=nsa_+_935829_+_end_+_fitting]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_bundle
*CAT: n
*SEM: unaryRel[rel=single_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_bundle
*CAT: n
*SEM: twoRel[rel=single_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_bundle
*CAT: n
*SEM: twoRel[rel=single_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_bundle
*CAT: n
*SEM: orRel[rel=single_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_fixed_+_points
*CAT: n
*SEM: unaryRel[rel=two_+_fixed_+_points]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_fixed_+_points
*CAT: n
*SEM: twoRel[rel=two_+_fixed_+_points]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_fixed_+_points
*CAT: n
*SEM: twoRel[rel=two_+_fixed_+_points]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_fixed_+_points
*CAT: n
*SEM: orRel[rel=two_+_fixed_+_points]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: disnance
*CAT: n
*SEM: unaryRel[rel=disnance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: disnance
*CAT: n
*SEM: twoRel[rel=disnance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: disnance
*CAT: n
*SEM: twoRel[rel=disnance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: disnance
*CAT: n
*SEM: orRel[rel=disnance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f02_+_when_+_the_+_bundle
*CAT: n
*SEM: unaryRel[rel=abs1576-f02_+_when_+_the_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f02_+_when_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=abs1576-f02_+_when_+_the_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f02_+_when_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=abs1576-f02_+_when_+_the_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f02_+_when_+_the_+_bundle
*CAT: n
*SEM: orRel[rel=abs1576-f02_+_when_+_the_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539_+_protective_+_bobbin_+_when
*CAT: n
*SEM: unaryRel[rel=nsa_+_5539_+_protective_+_bobbin_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539_+_protective_+_bobbin_+_when
*CAT: n
*SEM: twoRel[rel=nsa_+_5539_+_protective_+_bobbin_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539_+_protective_+_bobbin_+_when
*CAT: n
*SEM: twoRel[rel=nsa_+_5539_+_protective_+_bobbin_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539_+_protective_+_bobbin_+_when
*CAT: n
*SEM: orRel[rel=nsa_+_5539_+_protective_+_bobbin_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_of_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=installation_+_of_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_of_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=installation_+_of_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_of_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=installation_+_of_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_of_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=installation_+_of_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbd_+_+_+_mechanical_+_protection
*CAT: n
*SEM: unaryRel[rel=nsa5516_+_cbd_+_+_+_mechanical_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbd_+_+_+_mechanical_+_protection
*CAT: n
*SEM: twoRel[rel=nsa5516_+_cbd_+_+_+_mechanical_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbd_+_+_+_mechanical_+_protection
*CAT: n
*SEM: twoRel[rel=nsa5516_+_cbd_+_+_+_mechanical_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbd_+_+_+_mechanical_+_protection
*CAT: n
*SEM: orRel[rel=nsa5516_+_cbd_+_+_+_mechanical_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_connection
*CAT: n
*SEM: unaryRel[rel=interface_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_connection
*CAT: n
*SEM: twoRel[rel=interface_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_connection
*CAT: n
*SEM: twoRel[rel=interface_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_connection
*CAT: n
*SEM: orRel[rel=interface_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: growth
*CAT: n
*SEM: unaryRel[rel=growth]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: growth
*CAT: n
*SEM: twoRel[rel=growth]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: growth
*CAT: n
*SEM: twoRel[rel=growth]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: growth
*CAT: n
*SEM: orRel[rel=growth]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diamater_+_d_+__-_smallerThan_-_
*CAT: n
*SEM: unaryRel[rel=diamater_+_d_+__-_smallerThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diamater_+_d_+__-_smallerThan_-_
*CAT: n
*SEM: twoRel[rel=diamater_+_d_+__-_smallerThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diamater_+_d_+__-_smallerThan_-_
*CAT: n
*SEM: twoRel[rel=diamater_+_d_+__-_smallerThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diamater_+_d_+__-_smallerThan_-_
*CAT: n
*SEM: orRel[rel=diamater_+_d_+__-_smallerThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptable
*CAT: n
*SEM: unaryRel[rel=receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptable
*CAT: n
*SEM: twoRel[rel=receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptable
*CAT: n
*SEM: twoRel[rel=receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptable
*CAT: n
*SEM: orRel[rel=receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: risk
*CAT: n
*SEM: unaryRel[rel=risk]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: risk
*CAT: n
*SEM: twoRel[rel=risk]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: risk
*CAT: n
*SEM: twoRel[rel=risk]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: risk
*CAT: n
*SEM: orRel[rel=risk]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: such_+_a_+_way
*CAT: n
*SEM: unaryRel[rel=such_+_a_+_way]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: such_+_a_+_way
*CAT: n
*SEM: twoRel[rel=such_+_a_+_way]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: such_+_a_+_way
*CAT: n
*SEM: twoRel[rel=such_+_a_+_way]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: such_+_a_+_way
*CAT: n
*SEM: orRel[rel=such_+_a_+_way]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_environment_+_where_+_insufficient_+_space
*CAT: n
*SEM: unaryRel[rel=structural_+_environment_+_where_+_insufficient_+_space]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_environment_+_where_+_insufficient_+_space
*CAT: n
*SEM: twoRel[rel=structural_+_environment_+_where_+_insufficient_+_space]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_environment_+_where_+_insufficient_+_space
*CAT: n
*SEM: twoRel[rel=structural_+_environment_+_where_+_insufficient_+_space]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_environment_+_where_+_insufficient_+_space
*CAT: n
*SEM: orRel[rel=structural_+_environment_+_where_+_insufficient_+_space]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label
*CAT: n
*SEM: unaryRel[rel=label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label
*CAT: n
*SEM: twoRel[rel=label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label
*CAT: n
*SEM: twoRel[rel=label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label
*CAT: n
*SEM: orRel[rel=label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four
*CAT: n
*SEM: unaryRel[rel=four]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four
*CAT: n
*SEM: twoRel[rel=four]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four
*CAT: n
*SEM: twoRel[rel=four]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four
*CAT: n
*SEM: orRel[rel=four]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2997_+_connector
*CAT: n
*SEM: unaryRel[rel=2997_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2997_+_connector
*CAT: n
*SEM: twoRel[rel=2997_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2997_+_connector
*CAT: n
*SEM: twoRel[rel=2997_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2997_+_connector
*CAT: n
*SEM: orRel[rel=2997_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-adhesive_+_fin_+_label
*CAT: n
*SEM: unaryRel[rel=self-adhesive_+_fin_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-adhesive_+_fin_+_label
*CAT: n
*SEM: twoRel[rel=self-adhesive_+_fin_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-adhesive_+_fin_+_label
*CAT: n
*SEM: twoRel[rel=self-adhesive_+_fin_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-adhesive_+_fin_+_label
*CAT: n
*SEM: orRel[rel=self-adhesive_+_fin_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straightness_+_tolerance
*CAT: n
*SEM: unaryRel[rel=straightness_+_tolerance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straightness_+_tolerance
*CAT: n
*SEM: twoRel[rel=straightness_+_tolerance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straightness_+_tolerance
*CAT: n
*SEM: twoRel[rel=straightness_+_tolerance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straightness_+_tolerance
*CAT: n
*SEM: orRel[rel=straightness_+_tolerance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_wire
*CAT: n
*SEM: unaryRel[rel=optical_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_wire
*CAT: n
*SEM: twoRel[rel=optical_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_wire
*CAT: n
*SEM: twoRel[rel=optical_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_wire
*CAT: n
*SEM: orRel[rel=optical_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive
*CAT: n
*SEM: unaryRel[rel=non_+_conductive]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive
*CAT: n
*SEM: twoRel[rel=non_+_conductive]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive
*CAT: n
*SEM: twoRel[rel=non_+_conductive]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive
*CAT: n
*SEM: orRel[rel=non_+_conductive]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_repairs
*CAT: n
*SEM: unaryRel[rel=2_+_repairs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_repairs
*CAT: n
*SEM: twoRel[rel=2_+_repairs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_repairs
*CAT: n
*SEM: twoRel[rel=2_+_repairs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_repairs
*CAT: n
*SEM: orRel[rel=2_+_repairs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_recommendedor_+_class_+_rs
*CAT: n
*SEM: unaryRel[rel=not_+_recommendedor_+_class_+_rs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_recommendedor_+_class_+_rs
*CAT: n
*SEM: twoRel[rel=not_+_recommendedor_+_class_+_rs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_recommendedor_+_class_+_rs
*CAT: n
*SEM: twoRel[rel=not_+_recommendedor_+_class_+_rs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_recommendedor_+_class_+_rs
*CAT: n
*SEM: orRel[rel=not_+_recommendedor_+_class_+_rs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundlediameter_+_d
*CAT: n
*SEM: unaryRel[rel=bundlediameter_+_d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundlediameter_+_d
*CAT: n
*SEM: twoRel[rel=bundlediameter_+_d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundlediameter_+_d
*CAT: n
*SEM: twoRel[rel=bundlediameter_+_d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundlediameter_+_d
*CAT: n
*SEM: orRel[rel=bundlediameter_+_d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_sizes_+_larger_+_12
*CAT: n
*SEM: unaryRel[rel=pipe_+_sizes_+_larger_+_12]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_sizes_+_larger_+_12
*CAT: n
*SEM: twoRel[rel=pipe_+_sizes_+_larger_+_12]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_sizes_+_larger_+_12
*CAT: n
*SEM: twoRel[rel=pipe_+_sizes_+_larger_+_12]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_sizes_+_larger_+_12
*CAT: n
*SEM: orRel[rel=pipe_+_sizes_+_larger_+_12]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: class_+_e_+_fire_+_compartment
*CAT: n
*SEM: unaryRel[rel=class_+_e_+_fire_+_compartment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: class_+_e_+_fire_+_compartment
*CAT: n
*SEM: twoRel[rel=class_+_e_+_fire_+_compartment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: class_+_e_+_fire_+_compartment
*CAT: n
*SEM: twoRel[rel=class_+_e_+_fire_+_compartment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: class_+_e_+_fire_+_compartment
*CAT: n
*SEM: orRel[rel=class_+_e_+_fire_+_compartment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l_+__-_greaterThan_-_3
*CAT: n
*SEM: unaryRel[rel=length_+_l_+__-_greaterThan_-_3]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l_+__-_greaterThan_-_3
*CAT: n
*SEM: twoRel[rel=length_+_l_+__-_greaterThan_-_3]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l_+__-_greaterThan_-_3
*CAT: n
*SEM: twoRel[rel=length_+_l_+__-_greaterThan_-_3]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l_+__-_greaterThan_-_3
*CAT: n
*SEM: orRel[rel=length_+_l_+__-_greaterThan_-_3]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_siri_+_application
*CAT: n
*SEM: unaryRel[rel=in_+_siri_+_application]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_siri_+_application
*CAT: n
*SEM: twoRel[rel=in_+_siri_+_application]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_siri_+_application
*CAT: n
*SEM: twoRel[rel=in_+_siri_+_application]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_siri_+_application
*CAT: n
*SEM: orRel[rel=in_+_siri_+_application]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_distance
*CAT: n
*SEM: unaryRel[rel=mechanical_+_distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_distance
*CAT: n
*SEM: twoRel[rel=mechanical_+_distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_distance
*CAT: n
*SEM: twoRel[rel=mechanical_+_distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_distance
*CAT: n
*SEM: orRel[rel=mechanical_+_distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata_+_92_+_as_+_well
*CAT: n
*SEM: unaryRel[rel=ata_+_92_+_as_+_well]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata_+_92_+_as_+_well
*CAT: n
*SEM: twoRel[rel=ata_+_92_+_as_+_well]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata_+_92_+_as_+_well
*CAT: n
*SEM: twoRel[rel=ata_+_92_+_as_+_well]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata_+_92_+_as_+_well
*CAT: n
*SEM: orRel[rel=ata_+_92_+_as_+_well]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_conduit_+_size_+_of_+_9
*CAT: n
*SEM: unaryRel[rel=minimum_+_conduit_+_size_+_of_+_9]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_conduit_+_size_+_of_+_9
*CAT: n
*SEM: twoRel[rel=minimum_+_conduit_+_size_+_of_+_9]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_conduit_+_size_+_of_+_9
*CAT: n
*SEM: twoRel[rel=minimum_+_conduit_+_size_+_of_+_9]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_conduit_+_size_+_of_+_9
*CAT: n
*SEM: orRel[rel=minimum_+_conduit_+_size_+_of_+_9]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_type
*CAT: n
*SEM: unaryRel[rel=each_+_type]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_type
*CAT: n
*SEM: twoRel[rel=each_+_type]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_type
*CAT: n
*SEM: twoRel[rel=each_+_type]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_type
*CAT: n
*SEM: orRel[rel=each_+_type]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hexagonal_+_bolt
*CAT: n
*SEM: unaryRel[rel=hexagonal_+_bolt]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hexagonal_+_bolt
*CAT: n
*SEM: twoRel[rel=hexagonal_+_bolt]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hexagonal_+_bolt
*CAT: n
*SEM: twoRel[rel=hexagonal_+_bolt]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hexagonal_+_bolt
*CAT: n
*SEM: orRel[rel=hexagonal_+_bolt]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+_to_+_the_+_next_+_pipe_+_bending
*CAT: n
*SEM: unaryRel[rel=10mm_+_to_+_the_+_next_+_pipe_+_bending]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+_to_+_the_+_next_+_pipe_+_bending
*CAT: n
*SEM: twoRel[rel=10mm_+_to_+_the_+_next_+_pipe_+_bending]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+_to_+_the_+_next_+_pipe_+_bending
*CAT: n
*SEM: twoRel[rel=10mm_+_to_+_the_+_next_+_pipe_+_bending]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+_to_+_the_+_next_+_pipe_+_bending
*CAT: n
*SEM: orRel[rel=10mm_+_to_+_the_+_next_+_pipe_+_bending]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_figure
*CAT: n
*SEM: unaryRel[rel=following_+_figure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_figure
*CAT: n
*SEM: twoRel[rel=following_+_figure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_figure
*CAT: n
*SEM: twoRel[rel=following_+_figure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_figure
*CAT: n
*SEM: orRel[rel=following_+_figure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dynaomic_+_section
*CAT: n
*SEM: unaryRel[rel=dynaomic_+_section]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dynaomic_+_section
*CAT: n
*SEM: twoRel[rel=dynaomic_+_section]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dynaomic_+_section
*CAT: n
*SEM: twoRel[rel=dynaomic_+_section]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dynaomic_+_section
*CAT: n
*SEM: orRel[rel=dynaomic_+_section]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_optical_+_cable
*CAT: n
*SEM: unaryRel[rel=single_+_optical_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_optical_+_cable
*CAT: n
*SEM: twoRel[rel=single_+_optical_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_optical_+_cable
*CAT: n
*SEM: twoRel[rel=single_+_optical_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_optical_+_cable
*CAT: n
*SEM: orRel[rel=single_+_optical_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248
*CAT: n
*SEM: unaryRel[rel=asne_+_0248]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248
*CAT: n
*SEM: twoRel[rel=asne_+_0248]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248
*CAT: n
*SEM: twoRel[rel=asne_+_0248]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248
*CAT: n
*SEM: orRel[rel=asne_+_0248]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation
*CAT: n
*SEM: unaryRel[rel=fixation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation
*CAT: n
*SEM: twoRel[rel=fixation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation
*CAT: n
*SEM: twoRel[rel=fixation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation
*CAT: n
*SEM: orRel[rel=fixation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gap
*CAT: n
*SEM: unaryRel[rel=gap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gap
*CAT: n
*SEM: twoRel[rel=gap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gap
*CAT: n
*SEM: twoRel[rel=gap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gap
*CAT: n
*SEM: orRel[rel=gap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_operation
*CAT: n
*SEM: unaryRel[rel=equipment_+_operation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_operation
*CAT: n
*SEM: twoRel[rel=equipment_+_operation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_operation
*CAT: n
*SEM: twoRel[rel=equipment_+_operation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_operation
*CAT: n
*SEM: orRel[rel=equipment_+_operation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: monitoring_+_cables_+_when_+_designs
*CAT: n
*SEM: unaryRel[rel=monitoring_+_cables_+_when_+_designs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: monitoring_+_cables_+_when_+_designs
*CAT: n
*SEM: twoRel[rel=monitoring_+_cables_+_when_+_designs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: monitoring_+_cables_+_when_+_designs
*CAT: n
*SEM: twoRel[rel=monitoring_+_cables_+_when_+_designs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: monitoring_+_cables_+_when_+_designs
*CAT: n
*SEM: orRel[rel=monitoring_+_cables_+_when_+_designs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_permissible_+_bend_+_radius
*CAT: n
*SEM: unaryRel[rel=minimum_+_permissible_+_bend_+_radius]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_permissible_+_bend_+_radius
*CAT: n
*SEM: twoRel[rel=minimum_+_permissible_+_bend_+_radius]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_permissible_+_bend_+_radius
*CAT: n
*SEM: twoRel[rel=minimum_+_permissible_+_bend_+_radius]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_permissible_+_bend_+_radius
*CAT: n
*SEM: orRel[rel=minimum_+_permissible_+_bend_+_radius]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_harness_+_extremity
*CAT: n
*SEM: unaryRel[rel=each_+_harness_+_extremity]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_harness_+_extremity
*CAT: n
*SEM: twoRel[rel=each_+_harness_+_extremity]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_harness_+_extremity
*CAT: n
*SEM: twoRel[rel=each_+_harness_+_extremity]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_harness_+_extremity
*CAT: n
*SEM: orRel[rel=each_+_harness_+_extremity]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1472
*CAT: n
*SEM: unaryRel[rel=abs1472]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1472
*CAT: n
*SEM: twoRel[rel=abs1472]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1472
*CAT: n
*SEM: twoRel[rel=abs1472]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1472
*CAT: n
*SEM: orRel[rel=abs1472]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ..._-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=..._-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ..._-_closesb_-_
*CAT: n
*SEM: twoRel[rel=..._-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ..._-_closesb_-_
*CAT: n
*SEM: twoRel[rel=..._-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ..._-_closesb_-_
*CAT: n
*SEM: orRel[rel=..._-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5th_+_digit
*CAT: n
*SEM: unaryRel[rel=5th_+_digit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5th_+_digit
*CAT: n
*SEM: twoRel[rel=5th_+_digit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5th_+_digit
*CAT: n
*SEM: twoRel[rel=5th_+_digit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5th_+_digit
*CAT: n
*SEM: orRel[rel=5th_+_digit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0470_+_label
*CAT: n
*SEM: unaryRel[rel=asne0470_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0470_+_label
*CAT: n
*SEM: twoRel[rel=asne0470_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0470_+_label
*CAT: n
*SEM: twoRel[rel=asne0470_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0470_+_label
*CAT: n
*SEM: orRel[rel=asne0470_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_radius_+_value
*CAT: n
*SEM: unaryRel[rel=one_+_radius_+_value]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_radius_+_value
*CAT: n
*SEM: twoRel[rel=one_+_radius_+_value]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_radius_+_value
*CAT: n
*SEM: twoRel[rel=one_+_radius_+_value]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_radius_+_value
*CAT: n
*SEM: orRel[rel=one_+_radius_+_value]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3545_+_connector
*CAT: n
*SEM: unaryRel[rel=3545_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3545_+_connector
*CAT: n
*SEM: twoRel[rel=3545_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3545_+_connector
*CAT: n
*SEM: twoRel[rel=3545_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3545_+_connector
*CAT: n
*SEM: orRel[rel=3545_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see_+_as_+_well
*CAT: n
*SEM: unaryRel[rel=see_+_as_+_well]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see_+_as_+_well
*CAT: n
*SEM: twoRel[rel=see_+_as_+_well]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see_+_as_+_well
*CAT: n
*SEM: twoRel[rel=see_+_as_+_well]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see_+_as_+_well
*CAT: n
*SEM: orRel[rel=see_+_as_+_well]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_side
*CAT: n
*SEM: unaryRel[rel=pressurized_+_side]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_side
*CAT: n
*SEM: twoRel[rel=pressurized_+_side]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_side
*CAT: n
*SEM: twoRel[rel=pressurized_+_side]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_side
*CAT: n
*SEM: orRel[rel=pressurized_+_side]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nut
*CAT: n
*SEM: unaryRel[rel=nut]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nut
*CAT: n
*SEM: twoRel[rel=nut]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nut
*CAT: n
*SEM: twoRel[rel=nut]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nut
*CAT: n
*SEM: orRel[rel=nut]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0000
*CAT: n
*SEM: unaryRel[rel=0000]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0000
*CAT: n
*SEM: twoRel[rel=0000]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0000
*CAT: n
*SEM: twoRel[rel=0000]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0000
*CAT: n
*SEM: orRel[rel=0000]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_tool_+_access
*CAT: n
*SEM: unaryRel[rel=specific_+_tool_+_access]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_tool_+_access
*CAT: n
*SEM: twoRel[rel=specific_+_tool_+_access]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_tool_+_access
*CAT: n
*SEM: twoRel[rel=specific_+_tool_+_access]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_tool_+_access
*CAT: n
*SEM: orRel[rel=specific_+_tool_+_access]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pattern_+_edge
*CAT: n
*SEM: unaryRel[rel=pattern_+_edge]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pattern_+_edge
*CAT: n
*SEM: twoRel[rel=pattern_+_edge]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pattern_+_edge
*CAT: n
*SEM: twoRel[rel=pattern_+_edge]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pattern_+_edge
*CAT: n
*SEM: orRel[rel=pattern_+_edge]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_unions_+_connection
*CAT: n
*SEM: unaryRel[rel=straight_+_unions_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_unions_+_connection
*CAT: n
*SEM: twoRel[rel=straight_+_unions_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_unions_+_connection
*CAT: n
*SEM: twoRel[rel=straight_+_unions_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_unions_+_connection
*CAT: n
*SEM: orRel[rel=straight_+_unions_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance_+_to_+_each_+_other
*CAT: n
*SEM: unaryRel[rel=minimum_+_clearance_+_to_+_each_+_other]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance_+_to_+_each_+_other
*CAT: n
*SEM: twoRel[rel=minimum_+_clearance_+_to_+_each_+_other]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance_+_to_+_each_+_other
*CAT: n
*SEM: twoRel[rel=minimum_+_clearance_+_to_+_each_+_other]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance_+_to_+_each_+_other
*CAT: n
*SEM: orRel[rel=minimum_+_clearance_+_to_+_each_+_other]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_aluminium_+_cables
*CAT: n
*SEM: unaryRel[rel=non_+_aluminium_+_cables]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_aluminium_+_cables
*CAT: n
*SEM: twoRel[rel=non_+_aluminium_+_cables]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_aluminium_+_cables
*CAT: n
*SEM: twoRel[rel=non_+_aluminium_+_cables]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_aluminium_+_cables
*CAT: n
*SEM: orRel[rel=non_+_aluminium_+_cables]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: varnish_+_after_+_printing
*CAT: n
*SEM: unaryRel[rel=varnish_+_after_+_printing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: varnish_+_after_+_printing
*CAT: n
*SEM: twoRel[rel=varnish_+_after_+_printing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: varnish_+_after_+_printing
*CAT: n
*SEM: twoRel[rel=varnish_+_after_+_printing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: varnish_+_after_+_printing
*CAT: n
*SEM: orRel[rel=varnish_+_after_+_printing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: continuous_+_fuel_+_immersion_+_when
*CAT: n
*SEM: unaryRel[rel=continuous_+_fuel_+_immersion_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: continuous_+_fuel_+_immersion_+_when
*CAT: n
*SEM: twoRel[rel=continuous_+_fuel_+_immersion_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: continuous_+_fuel_+_immersion_+_when
*CAT: n
*SEM: twoRel[rel=continuous_+_fuel_+_immersion_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: continuous_+_fuel_+_immersion_+_when
*CAT: n
*SEM: orRel[rel=continuous_+_fuel_+_immersion_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: directly_+_uv_+_laser
*CAT: n
*SEM: unaryRel[rel=directly_+_uv_+_laser]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: directly_+_uv_+_laser
*CAT: n
*SEM: twoRel[rel=directly_+_uv_+_laser]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: directly_+_uv_+_laser
*CAT: n
*SEM: twoRel[rel=directly_+_uv_+_laser]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: directly_+_uv_+_laser
*CAT: n
*SEM: orRel[rel=directly_+_uv_+_laser]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: system_+_specialist_+_requirements
*CAT: n
*SEM: unaryRel[rel=system_+_specialist_+_requirements]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: system_+_specialist_+_requirements
*CAT: n
*SEM: twoRel[rel=system_+_specialist_+_requirements]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: system_+_specialist_+_requirements
*CAT: n
*SEM: twoRel[rel=system_+_specialist_+_requirements]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: system_+_specialist_+_requirements
*CAT: n
*SEM: orRel[rel=system_+_specialist_+_requirements]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearances
*CAT: n
*SEM: unaryRel[rel=minimum_+_clearances]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearances
*CAT: n
*SEM: twoRel[rel=minimum_+_clearances]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearances
*CAT: n
*SEM: twoRel[rel=minimum_+_clearances]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearances
*CAT: n
*SEM: orRel[rel=minimum_+_clearances]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: groups
*CAT: n
*SEM: unaryRel[rel=groups]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: groups
*CAT: n
*SEM: twoRel[rel=groups]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: groups
*CAT: n
*SEM: twoRel[rel=groups]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: groups
*CAT: n
*SEM: orRel[rel=groups]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_tee-_+_junction_+_y_+_angle
*CAT: n
*SEM: unaryRel[rel=single_+_tee-_+_junction_+_y_+_angle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_tee-_+_junction_+_y_+_angle
*CAT: n
*SEM: twoRel[rel=single_+_tee-_+_junction_+_y_+_angle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_tee-_+_junction_+_y_+_angle
*CAT: n
*SEM: twoRel[rel=single_+_tee-_+_junction_+_y_+_angle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_tee-_+_junction_+_y_+_angle
*CAT: n
*SEM: orRel[rel=single_+_tee-_+_junction_+_y_+_angle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: box
*CAT: n
*SEM: unaryRel[rel=box]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: box
*CAT: n
*SEM: twoRel[rel=box]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: box
*CAT: n
*SEM: twoRel[rel=box]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: box
*CAT: n
*SEM: orRel[rel=box]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max
*CAT: n
*SEM: unaryRel[rel=max]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max
*CAT: n
*SEM: twoRel[rel=max]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max
*CAT: n
*SEM: twoRel[rel=max]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max
*CAT: n
*SEM: orRel[rel=max]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_area
*CAT: n
*SEM: unaryRel[rel=different_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_area
*CAT: n
*SEM: twoRel[rel=different_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_area
*CAT: n
*SEM: twoRel[rel=different_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_area
*CAT: n
*SEM: orRel[rel=different_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: away
*CAT: n
*SEM: unaryRel[rel=away]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: away
*CAT: n
*SEM: twoRel[rel=away]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: away
*CAT: n
*SEM: twoRel[rel=away]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: away
*CAT: n
*SEM: orRel[rel=away]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tolerance_+_analysis_+_results
*CAT: n
*SEM: unaryRel[rel=tolerance_+_analysis_+_results]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tolerance_+_analysis_+_results
*CAT: n
*SEM: twoRel[rel=tolerance_+_analysis_+_results]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tolerance_+_analysis_+_results
*CAT: n
*SEM: twoRel[rel=tolerance_+_analysis_+_results]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tolerance_+_analysis_+_results
*CAT: n
*SEM: orRel[rel=tolerance_+_analysis_+_results]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: functional_+_recepabletor_+_dummy_+_plugs
*CAT: n
*SEM: unaryRel[rel=functional_+_recepabletor_+_dummy_+_plugs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: functional_+_recepabletor_+_dummy_+_plugs
*CAT: n
*SEM: twoRel[rel=functional_+_recepabletor_+_dummy_+_plugs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: functional_+_recepabletor_+_dummy_+_plugs
*CAT: n
*SEM: twoRel[rel=functional_+_recepabletor_+_dummy_+_plugs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: functional_+_recepabletor_+_dummy_+_plugs
*CAT: n
*SEM: orRel[rel=functional_+_recepabletor_+_dummy_+_plugs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+__+_maximum_+_bend_+_angle
*CAT: n
*SEM: unaryRel[rel=minimum_+__+_maximum_+_bend_+_angle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+__+_maximum_+_bend_+_angle
*CAT: n
*SEM: twoRel[rel=minimum_+__+_maximum_+_bend_+_angle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+__+_maximum_+_bend_+_angle
*CAT: n
*SEM: twoRel[rel=minimum_+__+_maximum_+_bend_+_angle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+__+_maximum_+_bend_+_angle
*CAT: n
*SEM: orRel[rel=minimum_+__+_maximum_+_bend_+_angle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation
*CAT: n
*SEM: unaryRel[rel=fixation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation
*CAT: n
*SEM: twoRel[rel=fixation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation
*CAT: n
*SEM: twoRel[rel=fixation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation
*CAT: n
*SEM: orRel[rel=fixation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_connector
*CAT: n
*SEM: unaryRel[rel=one_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_connector
*CAT: n
*SEM: twoRel[rel=one_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_connector
*CAT: n
*SEM: twoRel[rel=one_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_connector
*CAT: n
*SEM: orRel[rel=one_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: accordance
*CAT: n
*SEM: unaryRel[rel=accordance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: accordance
*CAT: n
*SEM: twoRel[rel=accordance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: accordance
*CAT: n
*SEM: twoRel[rel=accordance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: accordance
*CAT: n
*SEM: orRel[rel=accordance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: captive_+_quick_+_release_+_fastener
*CAT: n
*SEM: unaryRel[rel=captive_+_quick_+_release_+_fastener]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: captive_+_quick_+_release_+_fastener
*CAT: n
*SEM: twoRel[rel=captive_+_quick_+_release_+_fastener]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: captive_+_quick_+_release_+_fastener
*CAT: n
*SEM: twoRel[rel=captive_+_quick_+_release_+_fastener]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: captive_+_quick_+_release_+_fastener
*CAT: n
*SEM: orRel[rel=captive_+_quick_+_release_+_fastener]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-_+_route_+_attachment_-_backslash_-_fixation_+_point
*CAT: n
*SEM: unaryRel[rel=g-_+_route_+_attachment_-_backslash_-_fixation_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-_+_route_+_attachment_-_backslash_-_fixation_+_point
*CAT: n
*SEM: twoRel[rel=g-_+_route_+_attachment_-_backslash_-_fixation_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-_+_route_+_attachment_-_backslash_-_fixation_+_point
*CAT: n
*SEM: twoRel[rel=g-_+_route_+_attachment_-_backslash_-_fixation_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-_+_route_+_attachment_-_backslash_-_fixation_+_point
*CAT: n
*SEM: orRel[rel=g-_+_route_+_attachment_-_backslash_-_fixation_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_number
*CAT: n
*SEM: unaryRel[rel=vu_+_number]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_number
*CAT: n
*SEM: twoRel[rel=vu_+_number]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_number
*CAT: n
*SEM: twoRel[rel=vu_+_number]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_number
*CAT: n
*SEM: orRel[rel=vu_+_number]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: suitable_+_to
*CAT: n
*SEM: unaryRel[rel=suitable_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: suitable_+_to
*CAT: n
*SEM: twoRel[rel=suitable_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: suitable_+_to
*CAT: n
*SEM: twoRel[rel=suitable_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: suitable_+_to
*CAT: n
*SEM: orRel[rel=suitable_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe
*CAT: n
*SEM: unaryRel[rel=pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe
*CAT: n
*SEM: twoRel[rel=pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe
*CAT: n
*SEM: twoRel[rel=pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe
*CAT: n
*SEM: orRel[rel=pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=attached_+_figure_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=attached_+_figure_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=attached_+_figure_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure_-_closesb_-_
*CAT: n
*SEM: orRel[rel=attached_+_figure_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as4330_+_design_+_standard
*CAT: n
*SEM: unaryRel[rel=as4330_+_design_+_standard]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as4330_+_design_+_standard
*CAT: n
*SEM: twoRel[rel=as4330_+_design_+_standard]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as4330_+_design_+_standard
*CAT: n
*SEM: twoRel[rel=as4330_+_design_+_standard]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as4330_+_design_+_standard
*CAT: n
*SEM: orRel[rel=as4330_+_design_+_standard]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_of_+_a_+_pipe_+_run
*CAT: n
*SEM: unaryRel[rel=installation_+_of_+_a_+_pipe_+_run]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_of_+_a_+_pipe_+_run
*CAT: n
*SEM: twoRel[rel=installation_+_of_+_a_+_pipe_+_run]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_of_+_a_+_pipe_+_run
*CAT: n
*SEM: twoRel[rel=installation_+_of_+_a_+_pipe_+_run]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_of_+_a_+_pipe_+_run
*CAT: n
*SEM: orRel[rel=installation_+_of_+_a_+_pipe_+_run]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-route
*CAT: n
*SEM: unaryRel[rel=p-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-route
*CAT: n
*SEM: twoRel[rel=p-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-route
*CAT: n
*SEM: twoRel[rel=p-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-route
*CAT: n
*SEM: orRel[rel=p-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_22
*CAT: n
*SEM: unaryRel[rel=gauge_+_22]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_22
*CAT: n
*SEM: twoRel[rel=gauge_+_22]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_22
*CAT: n
*SEM: twoRel[rel=gauge_+_22]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_22
*CAT: n
*SEM: orRel[rel=gauge_+_22]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: refer_+_to
*CAT: n
*SEM: unaryRel[rel=refer_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: refer_+_to
*CAT: n
*SEM: twoRel[rel=refer_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: refer_+_to
*CAT: n
*SEM: twoRel[rel=refer_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: refer_+_to
*CAT: n
*SEM: orRel[rel=refer_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_adidtional_+_protection
*CAT: n
*SEM: unaryRel[rel=an_+_adidtional_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_adidtional_+_protection
*CAT: n
*SEM: twoRel[rel=an_+_adidtional_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_adidtional_+_protection
*CAT: n
*SEM: twoRel[rel=an_+_adidtional_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_adidtional_+_protection
*CAT: n
*SEM: orRel[rel=an_+_adidtional_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 36.576mm
*CAT: n
*SEM: unaryRel[rel=36.576mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 36.576mm
*CAT: n
*SEM: twoRel[rel=36.576mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 36.576mm
*CAT: n
*SEM: twoRel[rel=36.576mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 36.576mm
*CAT: n
*SEM: orRel[rel=36.576mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_1_+_solutionor
*CAT: n
*SEM: unaryRel[rel=priority_+_1_+_solutionor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_1_+_solutionor
*CAT: n
*SEM: twoRel[rel=priority_+_1_+_solutionor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_1_+_solutionor
*CAT: n
*SEM: twoRel[rel=priority_+_1_+_solutionor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_1_+_solutionor
*CAT: n
*SEM: orRel[rel=priority_+_1_+_solutionor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_segregation_+_segregation
*CAT: n
*SEM: unaryRel[rel=network_+_segregation_+_segregation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_segregation_+_segregation
*CAT: n
*SEM: twoRel[rel=network_+_segregation_+_segregation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_segregation_+_segregation
*CAT: n
*SEM: twoRel[rel=network_+_segregation_+_segregation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_segregation_+_segregation
*CAT: n
*SEM: orRel[rel=network_+_segregation_+_segregation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: impossible
*CAT: n
*SEM: unaryRel[rel=impossible]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: impossible
*CAT: n
*SEM: twoRel[rel=impossible]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: impossible
*CAT: n
*SEM: twoRel[rel=impossible]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: impossible
*CAT: n
*SEM: orRel[rel=impossible]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: peek_+_when_+_zonal
*CAT: n
*SEM: unaryRel[rel=peek_+_when_+_zonal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: peek_+_when_+_zonal
*CAT: n
*SEM: twoRel[rel=peek_+_when_+_zonal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: peek_+_when_+_zonal
*CAT: n
*SEM: twoRel[rel=peek_+_when_+_zonal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: peek_+_when_+_zonal
*CAT: n
*SEM: orRel[rel=peek_+_when_+_zonal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1475-01_+_label
*CAT: n
*SEM: unaryRel[rel=abs_+_1475-01_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1475-01_+_label
*CAT: n
*SEM: twoRel[rel=abs_+_1475-01_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1475-01_+_label
*CAT: n
*SEM: twoRel[rel=abs_+_1475-01_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1475-01_+_label
*CAT: n
*SEM: orRel[rel=abs_+_1475-01_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: several_+_pipelines
*CAT: n
*SEM: unaryRel[rel=several_+_pipelines]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: several_+_pipelines
*CAT: n
*SEM: twoRel[rel=several_+_pipelines]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: several_+_pipelines
*CAT: n
*SEM: twoRel[rel=several_+_pipelines]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: several_+_pipelines
*CAT: n
*SEM: orRel[rel=several_+_pipelines]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: order
*CAT: n
*SEM: unaryRel[rel=order]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: order
*CAT: n
*SEM: twoRel[rel=order]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: order
*CAT: n
*SEM: twoRel[rel=order]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: order
*CAT: n
*SEM: orRel[rel=order]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_protection
*CAT: n
*SEM: unaryRel[rel=electrical_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_protection
*CAT: n
*SEM: twoRel[rel=electrical_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_protection
*CAT: n
*SEM: twoRel[rel=electrical_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_protection
*CAT: n
*SEM: orRel[rel=electrical_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system
*CAT: n
*SEM: unaryRel[rel=bleed_+_air_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system
*CAT: n
*SEM: twoRel[rel=bleed_+_air_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system
*CAT: n
*SEM: twoRel[rel=bleed_+_air_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system
*CAT: n
*SEM: orRel[rel=bleed_+_air_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_+_hole_+_bulkhead_+_connections
*CAT: n
*SEM: unaryRel[rel=3_+_hole_+_bulkhead_+_connections]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_+_hole_+_bulkhead_+_connections
*CAT: n
*SEM: twoRel[rel=3_+_hole_+_bulkhead_+_connections]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_+_hole_+_bulkhead_+_connections
*CAT: n
*SEM: twoRel[rel=3_+_hole_+_bulkhead_+_connections]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_+_hole_+_bulkhead_+_connections
*CAT: n
*SEM: orRel[rel=3_+_hole_+_bulkhead_+_connections]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distortion_+_due_+_to_+_mechanical_+_effort
*CAT: n
*SEM: unaryRel[rel=distortion_+_due_+_to_+_mechanical_+_effort]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distortion_+_due_+_to_+_mechanical_+_effort
*CAT: n
*SEM: twoRel[rel=distortion_+_due_+_to_+_mechanical_+_effort]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distortion_+_due_+_to_+_mechanical_+_effort
*CAT: n
*SEM: twoRel[rel=distortion_+_due_+_to_+_mechanical_+_effort]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distortion_+_due_+_to_+_mechanical_+_effort
*CAT: n
*SEM: orRel[rel=distortion_+_due_+_to_+_mechanical_+_effort]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_plate
*CAT: n
*SEM: unaryRel[rel=interface_+_plate]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_plate
*CAT: n
*SEM: twoRel[rel=interface_+_plate]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_plate
*CAT: n
*SEM: twoRel[rel=interface_+_plate]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_plate
*CAT: n
*SEM: orRel[rel=interface_+_plate]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flare_+_less_+_hydraulic_+_junction
*CAT: n
*SEM: unaryRel[rel=flare_+_less_+_hydraulic_+_junction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flare_+_less_+_hydraulic_+_junction
*CAT: n
*SEM: twoRel[rel=flare_+_less_+_hydraulic_+_junction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flare_+_less_+_hydraulic_+_junction
*CAT: n
*SEM: twoRel[rel=flare_+_less_+_hydraulic_+_junction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flare_+_less_+_hydraulic_+_junction
*CAT: n
*SEM: orRel[rel=flare_+_less_+_hydraulic_+_junction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lines_+_running_+_in_+_parallelor_+_at_+_all_+_times
*CAT: n
*SEM: unaryRel[rel=lines_+_running_+_in_+_parallelor_+_at_+_all_+_times]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lines_+_running_+_in_+_parallelor_+_at_+_all_+_times
*CAT: n
*SEM: twoRel[rel=lines_+_running_+_in_+_parallelor_+_at_+_all_+_times]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lines_+_running_+_in_+_parallelor_+_at_+_all_+_times
*CAT: n
*SEM: twoRel[rel=lines_+_running_+_in_+_parallelor_+_at_+_all_+_times]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lines_+_running_+_in_+_parallelor_+_at_+_all_+_times
*CAT: n
*SEM: orRel[rel=lines_+_running_+_in_+_parallelor_+_at_+_all_+_times]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tables
*CAT: n
*SEM: unaryRel[rel=tables]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tables
*CAT: n
*SEM: twoRel[rel=tables]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tables
*CAT: n
*SEM: twoRel[rel=tables]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tables
*CAT: n
*SEM: orRel[rel=tables]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_cut-off_+_connectors
*CAT: n
*SEM: unaryRel[rel=fixed_+_cut-off_+_connectors]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_cut-off_+_connectors
*CAT: n
*SEM: twoRel[rel=fixed_+_cut-off_+_connectors]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_cut-off_+_connectors
*CAT: n
*SEM: twoRel[rel=fixed_+_cut-off_+_connectors]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_cut-off_+_connectors
*CAT: n
*SEM: orRel[rel=fixed_+_cut-off_+_connectors]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_number
*CAT: n
*SEM: unaryRel[rel=route_+_number]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_number
*CAT: n
*SEM: twoRel[rel=route_+_number]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_number
*CAT: n
*SEM: twoRel[rel=route_+_number]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_number
*CAT: n
*SEM: orRel[rel=route_+_number]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_pipes
*CAT: n
*SEM: unaryRel[rel=more_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_pipes
*CAT: n
*SEM: twoRel[rel=more_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_pipes
*CAT: n
*SEM: twoRel[rel=more_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_pipes
*CAT: n
*SEM: orRel[rel=more_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: critical_+_circuitsor_+_en_+_2997_+_class_+_rs
*CAT: n
*SEM: unaryRel[rel=critical_+_circuitsor_+_en_+_2997_+_class_+_rs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: critical_+_circuitsor_+_en_+_2997_+_class_+_rs
*CAT: n
*SEM: twoRel[rel=critical_+_circuitsor_+_en_+_2997_+_class_+_rs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: critical_+_circuitsor_+_en_+_2997_+_class_+_rs
*CAT: n
*SEM: twoRel[rel=critical_+_circuitsor_+_en_+_2997_+_class_+_rs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: critical_+_circuitsor_+_en_+_2997_+_class_+_rs
*CAT: n
*SEM: orRel[rel=critical_+_circuitsor_+_en_+_2997_+_class_+_rs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connection_+_point
*CAT: n
*SEM: unaryRel[rel=connection_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connection_+_point
*CAT: n
*SEM: twoRel[rel=connection_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connection_+_point
*CAT: n
*SEM: twoRel[rel=connection_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connection_+_point
*CAT: n
*SEM: orRel[rel=connection_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure
*CAT: n
*SEM: unaryRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure
*CAT: n
*SEM: twoRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure
*CAT: n
*SEM: twoRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure
*CAT: n
*SEM: orRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimise_+_pipe_+_crossings
*CAT: n
*SEM: unaryRel[rel=minimise_+_pipe_+_crossings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimise_+_pipe_+_crossings
*CAT: n
*SEM: twoRel[rel=minimise_+_pipe_+_crossings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimise_+_pipe_+_crossings
*CAT: n
*SEM: twoRel[rel=minimise_+_pipe_+_crossings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimise_+_pipe_+_crossings
*CAT: n
*SEM: orRel[rel=minimise_+_pipe_+_crossings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossbeams_+_in_+_confined_+_areas
*CAT: n
*SEM: unaryRel[rel=crossbeams_+_in_+_confined_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossbeams_+_in_+_confined_+_areas
*CAT: n
*SEM: twoRel[rel=crossbeams_+_in_+_confined_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossbeams_+_in_+_confined_+_areas
*CAT: n
*SEM: twoRel[rel=crossbeams_+_in_+_confined_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossbeams_+_in_+_confined_+_areas
*CAT: n
*SEM: orRel[rel=crossbeams_+_in_+_confined_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stud_+_of_+_virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=stud_+_of_+_virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stud_+_of_+_virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=stud_+_of_+_virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stud_+_of_+_virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=stud_+_of_+_virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stud_+_of_+_virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: orRel[rel=stud_+_of_+_virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: these_+_particular_+_cases
*CAT: n
*SEM: unaryRel[rel=these_+_particular_+_cases]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: these_+_particular_+_cases
*CAT: n
*SEM: twoRel[rel=these_+_particular_+_cases]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: these_+_particular_+_cases
*CAT: n
*SEM: twoRel[rel=these_+_particular_+_cases]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: these_+_particular_+_cases
*CAT: n
*SEM: orRel[rel=these_+_particular_+_cases]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_clamping
*CAT: n
*SEM: unaryRel[rel=double_+_clamping]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_clamping
*CAT: n
*SEM: twoRel[rel=double_+_clamping]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_clamping
*CAT: n
*SEM: twoRel[rel=double_+_clamping]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_clamping
*CAT: n
*SEM: orRel[rel=double_+_clamping]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_seal_+_when_+_no_+_backshell
*CAT: n
*SEM: unaryRel[rel=pressure_+_seal_+_when_+_no_+_backshell]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_seal_+_when_+_no_+_backshell
*CAT: n
*SEM: twoRel[rel=pressure_+_seal_+_when_+_no_+_backshell]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_seal_+_when_+_no_+_backshell
*CAT: n
*SEM: twoRel[rel=pressure_+_seal_+_when_+_no_+_backshell]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_seal_+_when_+_no_+_backshell
*CAT: n
*SEM: orRel[rel=pressure_+_seal_+_when_+_no_+_backshell]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch_+_p_+__-_greaterThan_-__+__-_equalto_-_150mm
*CAT: n
*SEM: unaryRel[rel=pitch_+_p_+__-_greaterThan_-__+__-_equalto_-_150mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch_+_p_+__-_greaterThan_-__+__-_equalto_-_150mm
*CAT: n
*SEM: twoRel[rel=pitch_+_p_+__-_greaterThan_-__+__-_equalto_-_150mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch_+_p_+__-_greaterThan_-__+__-_equalto_-_150mm
*CAT: n
*SEM: twoRel[rel=pitch_+_p_+__-_greaterThan_-__+__-_equalto_-_150mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch_+_p_+__-_greaterThan_-__+__-_equalto_-_150mm
*CAT: n
*SEM: orRel[rel=pitch_+_p_+__-_greaterThan_-__+__-_equalto_-_150mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: responsible_+_coc
*CAT: n
*SEM: unaryRel[rel=responsible_+_coc]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: responsible_+_coc
*CAT: n
*SEM: twoRel[rel=responsible_+_coc]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: responsible_+_coc
*CAT: n
*SEM: twoRel[rel=responsible_+_coc]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: responsible_+_coc
*CAT: n
*SEM: orRel[rel=responsible_+_coc]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch_+_p_+__-_greaterThan_-__-_equalto_-_150mm
*CAT: n
*SEM: unaryRel[rel=pitch_+_p_+__-_greaterThan_-__-_equalto_-_150mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch_+_p_+__-_greaterThan_-__-_equalto_-_150mm
*CAT: n
*SEM: twoRel[rel=pitch_+_p_+__-_greaterThan_-__-_equalto_-_150mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch_+_p_+__-_greaterThan_-__-_equalto_-_150mm
*CAT: n
*SEM: twoRel[rel=pitch_+_p_+__-_greaterThan_-__-_equalto_-_150mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch_+_p_+__-_greaterThan_-__-_equalto_-_150mm
*CAT: n
*SEM: orRel[rel=pitch_+_p_+__-_greaterThan_-__-_equalto_-_150mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chafing_+_sheath
*CAT: n
*SEM: unaryRel[rel=chafing_+_sheath]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chafing_+_sheath
*CAT: n
*SEM: twoRel[rel=chafing_+_sheath]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chafing_+_sheath
*CAT: n
*SEM: twoRel[rel=chafing_+_sheath]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chafing_+_sheath
*CAT: n
*SEM: orRel[rel=chafing_+_sheath]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm_+_minimum
*CAT: n
*SEM: unaryRel[rel=20mm_+_minimum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm_+_minimum
*CAT: n
*SEM: twoRel[rel=20mm_+_minimum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm_+_minimum
*CAT: n
*SEM: twoRel[rel=20mm_+_minimum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm_+_minimum
*CAT: n
*SEM: orRel[rel=20mm_+_minimum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_a
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_type_+_a]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_a
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_a]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_a
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_a]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_a
*CAT: n
*SEM: orRel[rel=p-clamp_+_type_+_a]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_areas_+_to_+_other_+_areas
*CAT: n
*SEM: unaryRel[rel=fire_+_areas_+_to_+_other_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_areas_+_to_+_other_+_areas
*CAT: n
*SEM: twoRel[rel=fire_+_areas_+_to_+_other_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_areas_+_to_+_other_+_areas
*CAT: n
*SEM: twoRel[rel=fire_+_areas_+_to_+_other_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_areas_+_to_+_other_+_areas
*CAT: n
*SEM: orRel[rel=fire_+_areas_+_to_+_other_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp
*CAT: n
*SEM: unaryRel[rel=clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp
*CAT: n
*SEM: twoRel[rel=clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp
*CAT: n
*SEM: twoRel[rel=clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp
*CAT: n
*SEM: orRel[rel=clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: breakers
*CAT: n
*SEM: unaryRel[rel=breakers]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: breakers
*CAT: n
*SEM: twoRel[rel=breakers]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: breakers
*CAT: n
*SEM: twoRel[rel=breakers]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: breakers
*CAT: n
*SEM: orRel[rel=breakers]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_protected
*CAT: n
*SEM: unaryRel[rel=bundle_+_protected]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_protected
*CAT: n
*SEM: twoRel[rel=bundle_+_protected]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_protected
*CAT: n
*SEM: twoRel[rel=bundle_+_protected]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_protected
*CAT: n
*SEM: orRel[rel=bundle_+_protected]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s
*CAT: n
*SEM: unaryRel[rel=s]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s
*CAT: n
*SEM: twoRel[rel=s]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s
*CAT: n
*SEM: twoRel[rel=s]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s
*CAT: n
*SEM: orRel[rel=s]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_sensor_+_usinf_+_spade_+_lugs
*CAT: n
*SEM: unaryRel[rel=temperature_+_sensor_+_usinf_+_spade_+_lugs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_sensor_+_usinf_+_spade_+_lugs
*CAT: n
*SEM: twoRel[rel=temperature_+_sensor_+_usinf_+_spade_+_lugs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_sensor_+_usinf_+_spade_+_lugs
*CAT: n
*SEM: twoRel[rel=temperature_+_sensor_+_usinf_+_spade_+_lugs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_sensor_+_usinf_+_spade_+_lugs
*CAT: n
*SEM: orRel[rel=temperature_+_sensor_+_usinf_+_spade_+_lugs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 936809
*CAT: n
*SEM: unaryRel[rel=936809]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 936809
*CAT: n
*SEM: twoRel[rel=936809]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 936809
*CAT: n
*SEM: twoRel[rel=936809]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 936809
*CAT: n
*SEM: orRel[rel=936809]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vn
*CAT: n
*SEM: unaryRel[rel=vn]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vn
*CAT: n
*SEM: twoRel[rel=vn]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vn
*CAT: n
*SEM: twoRel[rel=vn]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vn
*CAT: n
*SEM: orRel[rel=vn]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 04
*CAT: n
*SEM: unaryRel[rel=04]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 04
*CAT: n
*SEM: twoRel[rel=04]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 04
*CAT: n
*SEM: twoRel[rel=04]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 04
*CAT: n
*SEM: orRel[rel=04]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: holes
*CAT: n
*SEM: unaryRel[rel=holes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: holes
*CAT: n
*SEM: twoRel[rel=holes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: holes
*CAT: n
*SEM: twoRel[rel=holes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: holes
*CAT: n
*SEM: orRel[rel=holes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas
*CAT: n
*SEM: unaryRel[rel=nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas
*CAT: n
*SEM: twoRel[rel=nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas
*CAT: n
*SEM: twoRel[rel=nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas
*CAT: n
*SEM: orRel[rel=nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_connections
*CAT: n
*SEM: unaryRel[rel=two_+_connections]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_connections
*CAT: n
*SEM: twoRel[rel=two_+_connections]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_connections
*CAT: n
*SEM: twoRel[rel=two_+_connections]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_connections
*CAT: n
*SEM: orRel[rel=two_+_connections]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fan_+_area
*CAT: n
*SEM: unaryRel[rel=fan_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fan_+_area
*CAT: n
*SEM: twoRel[rel=fan_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fan_+_area
*CAT: n
*SEM: twoRel[rel=fan_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fan_+_area
*CAT: n
*SEM: orRel[rel=fan_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-pressurised_+_zones_+__-_opensb_-_or_+_vice_+_versa_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=non-pressurised_+_zones_+__-_opensb_-_or_+_vice_+_versa_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-pressurised_+_zones_+__-_opensb_-_or_+_vice_+_versa_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=non-pressurised_+_zones_+__-_opensb_-_or_+_vice_+_versa_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-pressurised_+_zones_+__-_opensb_-_or_+_vice_+_versa_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=non-pressurised_+_zones_+__-_opensb_-_or_+_vice_+_versa_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-pressurised_+_zones_+__-_opensb_-_or_+_vice_+_versa_-_closesb_-_
*CAT: n
*SEM: orRel[rel=non-pressurised_+_zones_+__-_opensb_-_or_+_vice_+_versa_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_three_+_derivation
*CAT: n
*SEM: unaryRel[rel=maximum_+_three_+_derivation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_three_+_derivation
*CAT: n
*SEM: twoRel[rel=maximum_+_three_+_derivation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_three_+_derivation
*CAT: n
*SEM: twoRel[rel=maximum_+_three_+_derivation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_three_+_derivation
*CAT: n
*SEM: orRel[rel=maximum_+_three_+_derivation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_holes
*CAT: n
*SEM: unaryRel[rel=drain_+_holes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_holes
*CAT: n
*SEM: twoRel[rel=drain_+_holes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_holes
*CAT: n
*SEM: twoRel[rel=drain_+_holes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_holes
*CAT: n
*SEM: orRel[rel=drain_+_holes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p15_+_to
*CAT: n
*SEM: unaryRel[rel=p15_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p15_+_to
*CAT: n
*SEM: twoRel[rel=p15_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p15_+_to
*CAT: n
*SEM: twoRel[rel=p15_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p15_+_to
*CAT: n
*SEM: orRel[rel=p15_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_single_+_contact
*CAT: n
*SEM: unaryRel[rel=one_+_single_+_contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_single_+_contact
*CAT: n
*SEM: twoRel[rel=one_+_single_+_contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_single_+_contact
*CAT: n
*SEM: twoRel[rel=one_+_single_+_contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_single_+_contact
*CAT: n
*SEM: orRel[rel=one_+_single_+_contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_in_+_light_+_blue_+_background
*CAT: n
*SEM: unaryRel[rel=bundle_+_in_+_light_+_blue_+_background]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_in_+_light_+_blue_+_background
*CAT: n
*SEM: twoRel[rel=bundle_+_in_+_light_+_blue_+_background]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_in_+_light_+_blue_+_background
*CAT: n
*SEM: twoRel[rel=bundle_+_in_+_light_+_blue_+_background]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_in_+_light_+_blue_+_background
*CAT: n
*SEM: orRel[rel=bundle_+_in_+_light_+_blue_+_background]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contacts_+__-_opensb_-_en3545xxxf_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=socket_+_contacts_+__-_opensb_-_en3545xxxf_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contacts_+__-_opensb_-_en3545xxxf_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=socket_+_contacts_+__-_opensb_-_en3545xxxf_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contacts_+__-_opensb_-_en3545xxxf_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=socket_+_contacts_+__-_opensb_-_en3545xxxf_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contacts_+__-_opensb_-_en3545xxxf_-_closesb_-_
*CAT: n
*SEM: orRel[rel=socket_+_contacts_+__-_opensb_-_en3545xxxf_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dismantled_+_splices
*CAT: n
*SEM: unaryRel[rel=dismantled_+_splices]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dismantled_+_splices
*CAT: n
*SEM: twoRel[rel=dismantled_+_splices]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dismantled_+_splices
*CAT: n
*SEM: twoRel[rel=dismantled_+_splices]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dismantled_+_splices
*CAT: n
*SEM: orRel[rel=dismantled_+_splices]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ventilation_+_holes
*CAT: n
*SEM: unaryRel[rel=ventilation_+_holes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ventilation_+_holes
*CAT: n
*SEM: twoRel[rel=ventilation_+_holes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ventilation_+_holes
*CAT: n
*SEM: twoRel[rel=ventilation_+_holes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ventilation_+_holes
*CAT: n
*SEM: orRel[rel=ventilation_+_holes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0422
*CAT: n
*SEM: unaryRel[rel=asne0422]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0422
*CAT: n
*SEM: twoRel[rel=asne0422]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0422
*CAT: n
*SEM: twoRel[rel=asne0422]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0422
*CAT: n
*SEM: orRel[rel=asne0422]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0073_+_pressure_+_seal
*CAT: n
*SEM: unaryRel[rel=asne0073_+_pressure_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0073_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=asne0073_+_pressure_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0073_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=asne0073_+_pressure_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0073_+_pressure_+_seal
*CAT: n
*SEM: orRel[rel=asne0073_+_pressure_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduction
*CAT: n
*SEM: unaryRel[rel=reduction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduction
*CAT: n
*SEM: twoRel[rel=reduction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduction
*CAT: n
*SEM: twoRel[rel=reduction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduction
*CAT: n
*SEM: orRel[rel=reduction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: segregation
*CAT: n
*SEM: unaryRel[rel=segregation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: segregation
*CAT: n
*SEM: twoRel[rel=segregation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: segregation
*CAT: n
*SEM: twoRel[rel=segregation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: segregation
*CAT: n
*SEM: orRel[rel=segregation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_in_+_my_+_opinion_+_i_+_think_+_that
*CAT: n
*SEM: unaryRel[rel=bend_+_radius_+_in_+_my_+_opinion_+_i_+_think_+_that]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_in_+_my_+_opinion_+_i_+_think_+_that
*CAT: n
*SEM: twoRel[rel=bend_+_radius_+_in_+_my_+_opinion_+_i_+_think_+_that]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_in_+_my_+_opinion_+_i_+_think_+_that
*CAT: n
*SEM: twoRel[rel=bend_+_radius_+_in_+_my_+_opinion_+_i_+_think_+_that]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_in_+_my_+_opinion_+_i_+_think_+_that
*CAT: n
*SEM: orRel[rel=bend_+_radius_+_in_+_my_+_opinion_+_i_+_think_+_that]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hoses
*CAT: n
*SEM: unaryRel[rel=hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hoses
*CAT: n
*SEM: twoRel[rel=hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hoses
*CAT: n
*SEM: twoRel[rel=hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hoses
*CAT: n
*SEM: orRel[rel=hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: table
*CAT: n
*SEM: unaryRel[rel=table]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: table
*CAT: n
*SEM: twoRel[rel=table]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: table
*CAT: n
*SEM: twoRel[rel=table]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: table
*CAT: n
*SEM: orRel[rel=table]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interchangeable
*CAT: n
*SEM: unaryRel[rel=interchangeable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interchangeable
*CAT: n
*SEM: twoRel[rel=interchangeable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interchangeable
*CAT: n
*SEM: twoRel[rel=interchangeable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interchangeable
*CAT: n
*SEM: orRel[rel=interchangeable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage-htp
*CAT: n
*SEM: unaryRel[rel=fuselage-htp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage-htp
*CAT: n
*SEM: twoRel[rel=fuselage-htp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage-htp
*CAT: n
*SEM: twoRel[rel=fuselage-htp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage-htp
*CAT: n
*SEM: orRel[rel=fuselage-htp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_side_+_down_+_orientation
*CAT: n
*SEM: unaryRel[rel=up_+_side_+_down_+_orientation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_side_+_down_+_orientation
*CAT: n
*SEM: twoRel[rel=up_+_side_+_down_+_orientation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_side_+_down_+_orientation
*CAT: n
*SEM: twoRel[rel=up_+_side_+_down_+_orientation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_side_+_down_+_orientation
*CAT: n
*SEM: orRel[rel=up_+_side_+_down_+_orientation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cross-_+_junction
*CAT: n
*SEM: unaryRel[rel=cross-_+_junction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cross-_+_junction
*CAT: n
*SEM: twoRel[rel=cross-_+_junction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cross-_+_junction
*CAT: n
*SEM: twoRel[rel=cross-_+_junction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cross-_+_junction
*CAT: n
*SEM: orRel[rel=cross-_+_junction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_part_+_of_+_connector_+_on_+_fixed_+_part_+_of_+_connector_+_in_+_unpressurized_+_areas
*CAT: n
*SEM: unaryRel[rel=movable_+_part_+_of_+_connector_+_on_+_fixed_+_part_+_of_+_connector_+_in_+_unpressurized_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_part_+_of_+_connector_+_on_+_fixed_+_part_+_of_+_connector_+_in_+_unpressurized_+_areas
*CAT: n
*SEM: twoRel[rel=movable_+_part_+_of_+_connector_+_on_+_fixed_+_part_+_of_+_connector_+_in_+_unpressurized_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_part_+_of_+_connector_+_on_+_fixed_+_part_+_of_+_connector_+_in_+_unpressurized_+_areas
*CAT: n
*SEM: twoRel[rel=movable_+_part_+_of_+_connector_+_on_+_fixed_+_part_+_of_+_connector_+_in_+_unpressurized_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_part_+_of_+_connector_+_on_+_fixed_+_part_+_of_+_connector_+_in_+_unpressurized_+_areas
*CAT: n
*SEM: orRel[rel=movable_+_part_+_of_+_connector_+_on_+_fixed_+_part_+_of_+_connector_+_in_+_unpressurized_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: main_+_routing
*CAT: n
*SEM: unaryRel[rel=main_+_routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: main_+_routing
*CAT: n
*SEM: twoRel[rel=main_+_routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: main_+_routing
*CAT: n
*SEM: twoRel[rel=main_+_routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: main_+_routing
*CAT: n
*SEM: orRel[rel=main_+_routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_4674_+_emi_+_split_+_conduit
*CAT: n
*SEM: unaryRel[rel=en_+_4674_+_emi_+_split_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_4674_+_emi_+_split_+_conduit
*CAT: n
*SEM: twoRel[rel=en_+_4674_+_emi_+_split_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_4674_+_emi_+_split_+_conduit
*CAT: n
*SEM: twoRel[rel=en_+_4674_+_emi_+_split_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_4674_+_emi_+_split_+_conduit
*CAT: n
*SEM: orRel[rel=en_+_4674_+_emi_+_split_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diode_+_blocks
*CAT: n
*SEM: unaryRel[rel=diode_+_blocks]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diode_+_blocks
*CAT: n
*SEM: twoRel[rel=diode_+_blocks]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diode_+_blocks
*CAT: n
*SEM: twoRel[rel=diode_+_blocks]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diode_+_blocks
*CAT: n
*SEM: orRel[rel=diode_+_blocks]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: castle_+_nuts
*CAT: n
*SEM: unaryRel[rel=castle_+_nuts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: castle_+_nuts
*CAT: n
*SEM: twoRel[rel=castle_+_nuts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: castle_+_nuts
*CAT: n
*SEM: twoRel[rel=castle_+_nuts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: castle_+_nuts
*CAT: n
*SEM: orRel[rel=castle_+_nuts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi-braid_+_stainless_+_steel
*CAT: n
*SEM: unaryRel[rel=multi-braid_+_stainless_+_steel]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi-braid_+_stainless_+_steel
*CAT: n
*SEM: twoRel[rel=multi-braid_+_stainless_+_steel]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi-braid_+_stainless_+_steel
*CAT: n
*SEM: twoRel[rel=multi-braid_+_stainless_+_steel]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi-braid_+_stainless_+_steel
*CAT: n
*SEM: orRel[rel=multi-braid_+_stainless_+_steel]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauges_+_26_+_to_+_12
*CAT: n
*SEM: unaryRel[rel=gauges_+_26_+_to_+_12]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauges_+_26_+_to_+_12
*CAT: n
*SEM: twoRel[rel=gauges_+_26_+_to_+_12]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauges_+_26_+_to_+_12
*CAT: n
*SEM: twoRel[rel=gauges_+_26_+_to_+_12]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauges_+_26_+_to_+_12
*CAT: n
*SEM: orRel[rel=gauges_+_26_+_to_+_12]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_digit_+_g
*CAT: n
*SEM: unaryRel[rel=additional_+_digit_+_g]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_digit_+_g
*CAT: n
*SEM: twoRel[rel=additional_+_digit_+_g]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_digit_+_g
*CAT: n
*SEM: twoRel[rel=additional_+_digit_+_g]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_digit_+_g
*CAT: n
*SEM: orRel[rel=additional_+_digit_+_g]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_bulkhead_+_unions
*CAT: n
*SEM: unaryRel[rel=different_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=different_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=different_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_bulkhead_+_unions
*CAT: n
*SEM: orRel[rel=different_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_possible_+_highly_+_resistive_+_unions
*CAT: n
*SEM: unaryRel[rel=four_+_possible_+_highly_+_resistive_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_possible_+_highly_+_resistive_+_unions
*CAT: n
*SEM: twoRel[rel=four_+_possible_+_highly_+_resistive_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_possible_+_highly_+_resistive_+_unions
*CAT: n
*SEM: twoRel[rel=four_+_possible_+_highly_+_resistive_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_possible_+_highly_+_resistive_+_unions
*CAT: n
*SEM: orRel[rel=four_+_possible_+_highly_+_resistive_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_pipes
*CAT: n
*SEM: unaryRel[rel=single_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_pipes
*CAT: n
*SEM: twoRel[rel=single_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_pipes
*CAT: n
*SEM: twoRel[rel=single_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_pipes
*CAT: n
*SEM: orRel[rel=single_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch_+_p_+__-_smallerThan_-__+__-_equalto_-_150mm
*CAT: n
*SEM: unaryRel[rel=pitch_+_p_+__-_smallerThan_-__+__-_equalto_-_150mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch_+_p_+__-_smallerThan_-__+__-_equalto_-_150mm
*CAT: n
*SEM: twoRel[rel=pitch_+_p_+__-_smallerThan_-__+__-_equalto_-_150mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch_+_p_+__-_smallerThan_-__+__-_equalto_-_150mm
*CAT: n
*SEM: twoRel[rel=pitch_+_p_+__-_smallerThan_-__+__-_equalto_-_150mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch_+_p_+__-_smallerThan_-__+__-_equalto_-_150mm
*CAT: n
*SEM: orRel[rel=pitch_+_p_+__-_smallerThan_-__+__-_equalto_-_150mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3-hole_+_bulkhead_+_unions
*CAT: n
*SEM: unaryRel[rel=3-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3-hole_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=3-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3-hole_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=3-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3-hole_+_bulkhead_+_unions
*CAT: n
*SEM: orRel[rel=3-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_b_+_e.g
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_type_+_b_+_e.g]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_b_+_e.g
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_b_+_e.g]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_b_+_e.g
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_b_+_e.g]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_b_+_e.g
*CAT: n
*SEM: orRel[rel=p-clamp_+_type_+_b_+_e.g]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loose_+_connector
*CAT: n
*SEM: unaryRel[rel=loose_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loose_+_connector
*CAT: n
*SEM: twoRel[rel=loose_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loose_+_connector
*CAT: n
*SEM: twoRel[rel=loose_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loose_+_connector
*CAT: n
*SEM: orRel[rel=loose_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_col_obj3
*CAT: n
*SEM: unaryRel[rel=np_col_obj3]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_col_obj3
*CAT: n
*SEM: twoRel[rel=np_col_obj3]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_col_obj3
*CAT: n
*SEM: twoRel[rel=np_col_obj3]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_col_obj3
*CAT: n
*SEM: orRel[rel=np_col_obj3]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_pipe_+_at_+_a_+_position_+_close
*CAT: n
*SEM: unaryRel[rel=at_+_least_+_one_+_pipe_+_at_+_a_+_position_+_close]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_pipe_+_at_+_a_+_position_+_close
*CAT: n
*SEM: twoRel[rel=at_+_least_+_one_+_pipe_+_at_+_a_+_position_+_close]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_pipe_+_at_+_a_+_position_+_close
*CAT: n
*SEM: twoRel[rel=at_+_least_+_one_+_pipe_+_at_+_a_+_position_+_close]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_pipe_+_at_+_a_+_position_+_close
*CAT: n
*SEM: orRel[rel=at_+_least_+_one_+_pipe_+_at_+_a_+_position_+_close]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_bifilar_+_wire
*CAT: n
*SEM: unaryRel[rel=1_+_bifilar_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_bifilar_+_wire
*CAT: n
*SEM: twoRel[rel=1_+_bifilar_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_bifilar_+_wire
*CAT: n
*SEM: twoRel[rel=1_+_bifilar_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_bifilar_+_wire
*CAT: n
*SEM: orRel[rel=1_+_bifilar_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_connector
*CAT: n
*SEM: unaryRel[rel=level_+_of_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_connector
*CAT: n
*SEM: twoRel[rel=level_+_of_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_connector
*CAT: n
*SEM: twoRel[rel=level_+_of_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_connector
*CAT: n
*SEM: orRel[rel=level_+_of_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: considering_+_free_+_zones
*CAT: n
*SEM: unaryRel[rel=considering_+_free_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: considering_+_free_+_zones
*CAT: n
*SEM: twoRel[rel=considering_+_free_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: considering_+_free_+_zones
*CAT: n
*SEM: twoRel[rel=considering_+_free_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: considering_+_free_+_zones
*CAT: n
*SEM: orRel[rel=considering_+_free_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route
*CAT: n
*SEM: unaryRel[rel=route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route
*CAT: n
*SEM: twoRel[rel=route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route
*CAT: n
*SEM: twoRel[rel=route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route
*CAT: n
*SEM: orRel[rel=route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp
*CAT: n
*SEM: unaryRel[rel=p-clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp
*CAT: n
*SEM: twoRel[rel=p-clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp
*CAT: n
*SEM: twoRel[rel=p-clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp
*CAT: n
*SEM: orRel[rel=p-clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tanks
*CAT: n
*SEM: unaryRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tanks
*CAT: n
*SEM: twoRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tanks
*CAT: n
*SEM: twoRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tanks
*CAT: n
*SEM: orRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: n_+_polarization
*CAT: n
*SEM: unaryRel[rel=n_+_polarization]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: n_+_polarization
*CAT: n
*SEM: twoRel[rel=n_+_polarization]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: n_+_polarization
*CAT: n
*SEM: twoRel[rel=n_+_polarization]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: n_+_polarization
*CAT: n
*SEM: orRel[rel=n_+_polarization]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below
*CAT: n
*SEM: unaryRel[rel=figure_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below
*CAT: n
*SEM: twoRel[rel=figure_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below
*CAT: n
*SEM: twoRel[rel=figure_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below
*CAT: n
*SEM: orRel[rel=figure_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_item
*CAT: n
*SEM: unaryRel[rel=electrical_+_item]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_item
*CAT: n
*SEM: twoRel[rel=electrical_+_item]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_item
*CAT: n
*SEM: twoRel[rel=electrical_+_item]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_item
*CAT: n
*SEM: orRel[rel=electrical_+_item]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_to_+_virtual_+_terminal_+_block
*CAT: n
*SEM: unaryRel[rel=distance_+_to_+_virtual_+_terminal_+_block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_to_+_virtual_+_terminal_+_block
*CAT: n
*SEM: twoRel[rel=distance_+_to_+_virtual_+_terminal_+_block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_to_+_virtual_+_terminal_+_block
*CAT: n
*SEM: twoRel[rel=distance_+_to_+_virtual_+_terminal_+_block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_to_+_virtual_+_terminal_+_block
*CAT: n
*SEM: orRel[rel=distance_+_to_+_virtual_+_terminal_+_block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_required_+_clearance
*CAT: n
*SEM: unaryRel[rel=minimum_+_required_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_required_+_clearance
*CAT: n
*SEM: twoRel[rel=minimum_+_required_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_required_+_clearance
*CAT: n
*SEM: twoRel[rel=minimum_+_required_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_required_+_clearance
*CAT: n
*SEM: orRel[rel=minimum_+_required_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50mm_+_away
*CAT: n
*SEM: unaryRel[rel=50mm_+_away]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50mm_+_away
*CAT: n
*SEM: twoRel[rel=50mm_+_away]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50mm_+_away
*CAT: n
*SEM: twoRel[rel=50mm_+_away]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50mm_+_away
*CAT: n
*SEM: orRel[rel=50mm_+_away]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: applicable_+_positional_+_tolerance
*CAT: n
*SEM: unaryRel[rel=applicable_+_positional_+_tolerance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: applicable_+_positional_+_tolerance
*CAT: n
*SEM: twoRel[rel=applicable_+_positional_+_tolerance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: applicable_+_positional_+_tolerance
*CAT: n
*SEM: twoRel[rel=applicable_+_positional_+_tolerance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: applicable_+_positional_+_tolerance
*CAT: n
*SEM: orRel[rel=applicable_+_positional_+_tolerance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolded_+_brackets_+_can_+_not_+_be_+_installed
*CAT: n
*SEM: unaryRel[rel=bolded_+_brackets_+_can_+_not_+_be_+_installed]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolded_+_brackets_+_can_+_not_+_be_+_installed
*CAT: n
*SEM: twoRel[rel=bolded_+_brackets_+_can_+_not_+_be_+_installed]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolded_+_brackets_+_can_+_not_+_be_+_installed
*CAT: n
*SEM: twoRel[rel=bolded_+_brackets_+_can_+_not_+_be_+_installed]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolded_+_brackets_+_can_+_not_+_be_+_installed
*CAT: n
*SEM: orRel[rel=bolded_+_brackets_+_can_+_not_+_be_+_installed]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p5'
*CAT: n
*SEM: unaryRel[rel=p5']
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p5'
*CAT: n
*SEM: twoRel[rel=p5']
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p5'
*CAT: n
*SEM: twoRel[rel=p5']
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p5'
*CAT: n
*SEM: orRel[rel=p5']
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluids
*CAT: n
*SEM: unaryRel[rel=flammable_+_fluids]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluids
*CAT: n
*SEM: twoRel[rel=flammable_+_fluids]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluids
*CAT: n
*SEM: twoRel[rel=flammable_+_fluids]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluids
*CAT: n
*SEM: orRel[rel=flammable_+_fluids]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_segregation
*CAT: n
*SEM: unaryRel[rel=route_+_segregation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_segregation
*CAT: n
*SEM: twoRel[rel=route_+_segregation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_segregation
*CAT: n
*SEM: twoRel[rel=route_+_segregation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_segregation
*CAT: n
*SEM: orRel[rel=route_+_segregation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: big_+_harnesses
*CAT: n
*SEM: unaryRel[rel=big_+_harnesses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: big_+_harnesses
*CAT: n
*SEM: twoRel[rel=big_+_harnesses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: big_+_harnesses
*CAT: n
*SEM: twoRel[rel=big_+_harnesses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: big_+_harnesses
*CAT: n
*SEM: orRel[rel=big_+_harnesses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_vu_+_class_+_a
*CAT: n
*SEM: unaryRel[rel=small_+_vu_+_class_+_a]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_vu_+_class_+_a
*CAT: n
*SEM: twoRel[rel=small_+_vu_+_class_+_a]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_vu_+_class_+_a
*CAT: n
*SEM: twoRel[rel=small_+_vu_+_class_+_a]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_vu_+_class_+_a
*CAT: n
*SEM: orRel[rel=small_+_vu_+_class_+_a]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connection
*CAT: n
*SEM: unaryRel[rel=connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connection
*CAT: n
*SEM: twoRel[rel=connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connection
*CAT: n
*SEM: twoRel[rel=connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connection
*CAT: n
*SEM: orRel[rel=connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_cavity
*CAT: n
*SEM: unaryRel[rel=unused_+_cavity]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_cavity
*CAT: n
*SEM: twoRel[rel=unused_+_cavity]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_cavity
*CAT: n
*SEM: twoRel[rel=unused_+_cavity]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_cavity
*CAT: n
*SEM: orRel[rel=unused_+_cavity]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_angle_+_+-60_-_degrees_-_
*CAT: n
*SEM: unaryRel[rel=maximum_+_angle_+_+-60_-_degrees_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_angle_+_+-60_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=maximum_+_angle_+_+-60_-_degrees_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_angle_+_+-60_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=maximum_+_angle_+_+-60_-_degrees_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_angle_+_+-60_-_degrees_-_
*CAT: n
*SEM: orRel[rel=maximum_+_angle_+_+-60_-_degrees_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_block
*CAT: n
*SEM: unaryRel[rel=terminal_+_block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_block
*CAT: n
*SEM: twoRel[rel=terminal_+_block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_block
*CAT: n
*SEM: twoRel[rel=terminal_+_block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_block
*CAT: n
*SEM: orRel[rel=terminal_+_block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_extremity
*CAT: n
*SEM: unaryRel[rel=pipe_+_extremity]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_extremity
*CAT: n
*SEM: twoRel[rel=pipe_+_extremity]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_extremity
*CAT: n
*SEM: twoRel[rel=pipe_+_extremity]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_extremity
*CAT: n
*SEM: orRel[rel=pipe_+_extremity]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_fixation
*CAT: n
*SEM: unaryRel[rel=mechanical_+_fixation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_fixation
*CAT: n
*SEM: twoRel[rel=mechanical_+_fixation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_fixation
*CAT: n
*SEM: twoRel[rel=mechanical_+_fixation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_fixation
*CAT: n
*SEM: orRel[rel=mechanical_+_fixation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: location_+_of_+_a_+_bracket
*CAT: n
*SEM: unaryRel[rel=location_+_of_+_a_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: location_+_of_+_a_+_bracket
*CAT: n
*SEM: twoRel[rel=location_+_of_+_a_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: location_+_of_+_a_+_bracket
*CAT: n
*SEM: twoRel[rel=location_+_of_+_a_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: location_+_of_+_a_+_bracket
*CAT: n
*SEM: orRel[rel=location_+_of_+_a_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment
*CAT: n
*SEM: unaryRel[rel=equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment
*CAT: n
*SEM: twoRel[rel=equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment
*CAT: n
*SEM: twoRel[rel=equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment
*CAT: n
*SEM: orRel[rel=equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_face
*CAT: n
*SEM: unaryRel[rel=front_+_face]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_face
*CAT: n
*SEM: twoRel[rel=front_+_face]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_face
*CAT: n
*SEM: twoRel[rel=front_+_face]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_face
*CAT: n
*SEM: orRel[rel=front_+_face]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guarantee_+_sufficient_+_clearance_+_between_+_the_+_axes_+_of_+_pipes
*CAT: n
*SEM: unaryRel[rel=guarantee_+_sufficient_+_clearance_+_between_+_the_+_axes_+_of_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guarantee_+_sufficient_+_clearance_+_between_+_the_+_axes_+_of_+_pipes
*CAT: n
*SEM: twoRel[rel=guarantee_+_sufficient_+_clearance_+_between_+_the_+_axes_+_of_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guarantee_+_sufficient_+_clearance_+_between_+_the_+_axes_+_of_+_pipes
*CAT: n
*SEM: twoRel[rel=guarantee_+_sufficient_+_clearance_+_between_+_the_+_axes_+_of_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guarantee_+_sufficient_+_clearance_+_between_+_the_+_axes_+_of_+_pipes
*CAT: n
*SEM: orRel[rel=guarantee_+_sufficient_+_clearance_+_between_+_the_+_axes_+_of_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_standard_+_equipment.
*CAT: n
*SEM: unaryRel[rel=same_+_standard_+_equipment.]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_standard_+_equipment.
*CAT: n
*SEM: twoRel[rel=same_+_standard_+_equipment.]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_standard_+_equipment.
*CAT: n
*SEM: twoRel[rel=same_+_standard_+_equipment.]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_standard_+_equipment.
*CAT: n
*SEM: orRel[rel=same_+_standard_+_equipment.]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0455
*CAT: n
*SEM: unaryRel[rel=abs0455]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0455
*CAT: n
*SEM: twoRel[rel=abs0455]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0455
*CAT: n
*SEM: twoRel[rel=abs0455]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0455
*CAT: n
*SEM: orRel[rel=abs0455]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_configuration
*CAT: n
*SEM: unaryRel[rel=bundle_+_configuration]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_configuration
*CAT: n
*SEM: twoRel[rel=bundle_+_configuration]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_configuration
*CAT: n
*SEM: twoRel[rel=bundle_+_configuration]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_configuration
*CAT: n
*SEM: orRel[rel=bundle_+_configuration]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_bracket
*CAT: n
*SEM: unaryRel[rel=conductive_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_bracket
*CAT: n
*SEM: twoRel[rel=conductive_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_bracket
*CAT: n
*SEM: twoRel[rel=conductive_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_bracket
*CAT: n
*SEM: orRel[rel=conductive_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense-line_+_as_+_close
*CAT: n
*SEM: unaryRel[rel=sense-line_+_as_+_close]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense-line_+_as_+_close
*CAT: n
*SEM: twoRel[rel=sense-line_+_as_+_close]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense-line_+_as_+_close
*CAT: n
*SEM: twoRel[rel=sense-line_+_as_+_close]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense-line_+_as_+_close
*CAT: n
*SEM: orRel[rel=sense-line_+_as_+_close]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_structureor_+_onto_+_a_+_second_+_intermediate_+_bracket
*CAT: n
*SEM: unaryRel[rel=aircraft_+_structureor_+_onto_+_a_+_second_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_structureor_+_onto_+_a_+_second_+_intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=aircraft_+_structureor_+_onto_+_a_+_second_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_structureor_+_onto_+_a_+_second_+_intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=aircraft_+_structureor_+_onto_+_a_+_second_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_structureor_+_onto_+_a_+_second_+_intermediate_+_bracket
*CAT: n
*SEM: orRel[rel=aircraft_+_structureor_+_onto_+_a_+_second_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_24
*CAT: n
*SEM: unaryRel[rel=gauge_+_24]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_24
*CAT: n
*SEM: twoRel[rel=gauge_+_24]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_24
*CAT: n
*SEM: twoRel[rel=gauge_+_24]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_24
*CAT: n
*SEM: orRel[rel=gauge_+_24]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: smaller
*CAT: n
*SEM: unaryRel[rel=smaller]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: smaller
*CAT: n
*SEM: twoRel[rel=smaller]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: smaller
*CAT: n
*SEM: twoRel[rel=smaller]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: smaller
*CAT: n
*SEM: orRel[rel=smaller]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction_+_zones_+_to_+_not
*CAT: n
*SEM: unaryRel[rel=junction_+_zones_+_to_+_not]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction_+_zones_+_to_+_not
*CAT: n
*SEM: twoRel[rel=junction_+_zones_+_to_+_not]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction_+_zones_+_to_+_not
*CAT: n
*SEM: twoRel[rel=junction_+_zones_+_to_+_not]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction_+_zones_+_to_+_not
*CAT: n
*SEM: orRel[rel=junction_+_zones_+_to_+_not]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_bonded_+_bracket_+_limited
*CAT: n
*SEM: unaryRel[rel=adhesive_+_bonded_+_bracket_+_limited]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_bonded_+_bracket_+_limited
*CAT: n
*SEM: twoRel[rel=adhesive_+_bonded_+_bracket_+_limited]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_bonded_+_bracket_+_limited
*CAT: n
*SEM: twoRel[rel=adhesive_+_bonded_+_bracket_+_limited]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_bonded_+_bracket_+_limited
*CAT: n
*SEM: orRel[rel=adhesive_+_bonded_+_bracket_+_limited]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structureal_+_edges
*CAT: n
*SEM: unaryRel[rel=structureal_+_edges]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structureal_+_edges
*CAT: n
*SEM: twoRel[rel=structureal_+_edges]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structureal_+_edges
*CAT: n
*SEM: twoRel[rel=structureal_+_edges]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structureal_+_edges
*CAT: n
*SEM: orRel[rel=structureal_+_edges]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: disnance_+_of_+_d_-_greaterThan_-__-_equalto_-_25mm_+_d_-_greaterThan_-__-_equalto_-_10mm_+_in_+_case_+_of_+_secured_+_routing
*CAT: n
*SEM: unaryRel[rel=disnance_+_of_+_d_-_greaterThan_-__-_equalto_-_25mm_+_d_-_greaterThan_-__-_equalto_-_10mm_+_in_+_case_+_of_+_secured_+_routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: disnance_+_of_+_d_-_greaterThan_-__-_equalto_-_25mm_+_d_-_greaterThan_-__-_equalto_-_10mm_+_in_+_case_+_of_+_secured_+_routing
*CAT: n
*SEM: twoRel[rel=disnance_+_of_+_d_-_greaterThan_-__-_equalto_-_25mm_+_d_-_greaterThan_-__-_equalto_-_10mm_+_in_+_case_+_of_+_secured_+_routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: disnance_+_of_+_d_-_greaterThan_-__-_equalto_-_25mm_+_d_-_greaterThan_-__-_equalto_-_10mm_+_in_+_case_+_of_+_secured_+_routing
*CAT: n
*SEM: twoRel[rel=disnance_+_of_+_d_-_greaterThan_-__-_equalto_-_25mm_+_d_-_greaterThan_-__-_equalto_-_10mm_+_in_+_case_+_of_+_secured_+_routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: disnance_+_of_+_d_-_greaterThan_-__-_equalto_-_25mm_+_d_-_greaterThan_-__-_equalto_-_10mm_+_in_+_case_+_of_+_secured_+_routing
*CAT: n
*SEM: orRel[rel=disnance_+_of_+_d_-_greaterThan_-__-_equalto_-_25mm_+_d_-_greaterThan_-__-_equalto_-_10mm_+_in_+_case_+_of_+_secured_+_routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_locking
*CAT: n
*SEM: unaryRel[rel=pin_+_locking]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_locking
*CAT: n
*SEM: twoRel[rel=pin_+_locking]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_locking
*CAT: n
*SEM: twoRel[rel=pin_+_locking]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_locking
*CAT: n
*SEM: orRel[rel=pin_+_locking]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_asna0033_+_metallic_+_clamps
*CAT: n
*SEM: unaryRel[rel=two_+_asna0033_+_metallic_+_clamps]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_asna0033_+_metallic_+_clamps
*CAT: n
*SEM: twoRel[rel=two_+_asna0033_+_metallic_+_clamps]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_asna0033_+_metallic_+_clamps
*CAT: n
*SEM: twoRel[rel=two_+_asna0033_+_metallic_+_clamps]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_asna0033_+_metallic_+_clamps
*CAT: n
*SEM: orRel[rel=two_+_asna0033_+_metallic_+_clamps]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routes
*CAT: n
*SEM: unaryRel[rel=routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routes
*CAT: n
*SEM: twoRel[rel=routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routes
*CAT: n
*SEM: twoRel[rel=routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routes
*CAT: n
*SEM: orRel[rel=routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_23amps_+_class_+_rs
*CAT: n
*SEM: unaryRel[rel=to_+_23amps_+_class_+_rs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_23amps_+_class_+_rs
*CAT: n
*SEM: twoRel[rel=to_+_23amps_+_class_+_rs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_23amps_+_class_+_rs
*CAT: n
*SEM: twoRel[rel=to_+_23amps_+_class_+_rs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_23amps_+_class_+_rs
*CAT: n
*SEM: orRel[rel=to_+_23amps_+_class_+_rs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: select_+_standard_+_brackets_+_specified_+_in_+_the_+_ls0701118_+__-_invcomma_-_standard_+_selection_+_list_-_invcomma_-_
*CAT: n
*SEM: unaryRel[rel=select_+_standard_+_brackets_+_specified_+_in_+_the_+_ls0701118_+__-_invcomma_-_standard_+_selection_+_list_-_invcomma_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: select_+_standard_+_brackets_+_specified_+_in_+_the_+_ls0701118_+__-_invcomma_-_standard_+_selection_+_list_-_invcomma_-_
*CAT: n
*SEM: twoRel[rel=select_+_standard_+_brackets_+_specified_+_in_+_the_+_ls0701118_+__-_invcomma_-_standard_+_selection_+_list_-_invcomma_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: select_+_standard_+_brackets_+_specified_+_in_+_the_+_ls0701118_+__-_invcomma_-_standard_+_selection_+_list_-_invcomma_-_
*CAT: n
*SEM: twoRel[rel=select_+_standard_+_brackets_+_specified_+_in_+_the_+_ls0701118_+__-_invcomma_-_standard_+_selection_+_list_-_invcomma_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: select_+_standard_+_brackets_+_specified_+_in_+_the_+_ls0701118_+__-_invcomma_-_standard_+_selection_+_list_-_invcomma_-_
*CAT: n
*SEM: orRel[rel=select_+_standard_+_brackets_+_specified_+_in_+_the_+_ls0701118_+__-_invcomma_-_standard_+_selection_+_list_-_invcomma_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new
*CAT: n
*SEM: unaryRel[rel=new]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new
*CAT: n
*SEM: twoRel[rel=new]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new
*CAT: n
*SEM: twoRel[rel=new]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new
*CAT: n
*SEM: orRel[rel=new]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then
*CAT: n
*SEM: unaryRel[rel=then]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then
*CAT: n
*SEM: twoRel[rel=then]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then
*CAT: n
*SEM: twoRel[rel=then]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then
*CAT: n
*SEM: orRel[rel=then]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjustable_+_bracket
*CAT: n
*SEM: unaryRel[rel=adjustable_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjustable_+_bracket
*CAT: n
*SEM: twoRel[rel=adjustable_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjustable_+_bracket
*CAT: n
*SEM: twoRel[rel=adjustable_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjustable_+_bracket
*CAT: n
*SEM: orRel[rel=adjustable_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0455_+_backshell
*CAT: n
*SEM: unaryRel[rel=abs0455_+_backshell]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0455_+_backshell
*CAT: n
*SEM: twoRel[rel=abs0455_+_backshell]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0455_+_backshell
*CAT: n
*SEM: twoRel[rel=abs0455_+_backshell]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0455_+_backshell
*CAT: n
*SEM: orRel[rel=abs0455_+_backshell]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: siri_+_application
*CAT: n
*SEM: unaryRel[rel=siri_+_application]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: siri_+_application
*CAT: n
*SEM: twoRel[rel=siri_+_application]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: siri_+_application
*CAT: n
*SEM: twoRel[rel=siri_+_application]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: siri_+_application
*CAT: n
*SEM: orRel[rel=siri_+_application]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4.8mm
*CAT: n
*SEM: unaryRel[rel=4.8mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4.8mm
*CAT: n
*SEM: twoRel[rel=4.8mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4.8mm
*CAT: n
*SEM: twoRel[rel=4.8mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4.8mm
*CAT: n
*SEM: orRel[rel=4.8mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracketing_+_design_+_principles_+_catalogue_+_v00me0805619.or_+_bst_+__-_opensb_-_bracket_+_selection_+_tools_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=bracketing_+_design_+_principles_+_catalogue_+_v00me0805619.or_+_bst_+__-_opensb_-_bracket_+_selection_+_tools_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracketing_+_design_+_principles_+_catalogue_+_v00me0805619.or_+_bst_+__-_opensb_-_bracket_+_selection_+_tools_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=bracketing_+_design_+_principles_+_catalogue_+_v00me0805619.or_+_bst_+__-_opensb_-_bracket_+_selection_+_tools_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracketing_+_design_+_principles_+_catalogue_+_v00me0805619.or_+_bst_+__-_opensb_-_bracket_+_selection_+_tools_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=bracketing_+_design_+_principles_+_catalogue_+_v00me0805619.or_+_bst_+__-_opensb_-_bracket_+_selection_+_tools_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracketing_+_design_+_principles_+_catalogue_+_v00me0805619.or_+_bst_+__-_opensb_-_bracket_+_selection_+_tools_-_closesb_-_
*CAT: n
*SEM: orRel[rel=bracketing_+_design_+_principles_+_catalogue_+_v00me0805619.or_+_bst_+__-_opensb_-_bracket_+_selection_+_tools_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: can-bus_+_technology
*CAT: n
*SEM: unaryRel[rel=can-bus_+_technology]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: can-bus_+_technology
*CAT: n
*SEM: twoRel[rel=can-bus_+_technology]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: can-bus_+_technology
*CAT: n
*SEM: twoRel[rel=can-bus_+_technology]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: can-bus_+_technology
*CAT: n
*SEM: orRel[rel=can-bus_+_technology]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_temperature
*CAT: n
*SEM: unaryRel[rel=bundle_+_temperature]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_temperature
*CAT: n
*SEM: twoRel[rel=bundle_+_temperature]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_temperature
*CAT: n
*SEM: twoRel[rel=bundle_+_temperature]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_temperature
*CAT: n
*SEM: orRel[rel=bundle_+_temperature]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_single_+_optical_+_cable
*CAT: n
*SEM: unaryRel[rel=unprotected_+_single_+_optical_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_single_+_optical_+_cable
*CAT: n
*SEM: twoRel[rel=unprotected_+_single_+_optical_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_single_+_optical_+_cable
*CAT: n
*SEM: twoRel[rel=unprotected_+_single_+_optical_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_single_+_optical_+_cable
*CAT: n
*SEM: orRel[rel=unprotected_+_single_+_optical_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3545xxxf
*CAT: n
*SEM: unaryRel[rel=en3545xxxf]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3545xxxf
*CAT: n
*SEM: twoRel[rel=en3545xxxf]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3545xxxf
*CAT: n
*SEM: twoRel[rel=en3545xxxf]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3545xxxf
*CAT: n
*SEM: orRel[rel=en3545xxxf]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage-wing
*CAT: n
*SEM: unaryRel[rel=fuselage-wing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage-wing
*CAT: n
*SEM: twoRel[rel=fuselage-wing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage-wing
*CAT: n
*SEM: twoRel[rel=fuselage-wing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage-wing
*CAT: n
*SEM: orRel[rel=fuselage-wing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: secured
*CAT: n
*SEM: unaryRel[rel=secured]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: secured
*CAT: n
*SEM: twoRel[rel=secured]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: secured
*CAT: n
*SEM: twoRel[rel=secured]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: secured
*CAT: n
*SEM: orRel[rel=secured]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25
*CAT: n
*SEM: unaryRel[rel=25]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25
*CAT: n
*SEM: twoRel[rel=25]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25
*CAT: n
*SEM: twoRel[rel=25]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25
*CAT: n
*SEM: orRel[rel=25]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: looking_+_at_+_the_+_fixed_+_connector
*CAT: n
*SEM: unaryRel[rel=looking_+_at_+_the_+_fixed_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: looking_+_at_+_the_+_fixed_+_connector
*CAT: n
*SEM: twoRel[rel=looking_+_at_+_the_+_fixed_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: looking_+_at_+_the_+_fixed_+_connector
*CAT: n
*SEM: twoRel[rel=looking_+_at_+_the_+_fixed_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: looking_+_at_+_the_+_fixed_+_connector
*CAT: n
*SEM: orRel[rel=looking_+_at_+_the_+_fixed_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20
*CAT: n
*SEM: unaryRel[rel=20]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20
*CAT: n
*SEM: twoRel[rel=20]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20
*CAT: n
*SEM: twoRel[rel=20]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20
*CAT: n
*SEM: orRel[rel=20]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identify_+_bundle_+_in_+_small_+_vu
*CAT: n
*SEM: unaryRel[rel=identify_+_bundle_+_in_+_small_+_vu]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identify_+_bundle_+_in_+_small_+_vu
*CAT: n
*SEM: twoRel[rel=identify_+_bundle_+_in_+_small_+_vu]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identify_+_bundle_+_in_+_small_+_vu
*CAT: n
*SEM: twoRel[rel=identify_+_bundle_+_in_+_small_+_vu]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identify_+_bundle_+_in_+_small_+_vu
*CAT: n
*SEM: orRel[rel=identify_+_bundle_+_in_+_small_+_vu]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rules
*CAT: n
*SEM: unaryRel[rel=rules]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rules
*CAT: n
*SEM: twoRel[rel=rules]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rules
*CAT: n
*SEM: twoRel[rel=rules]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rules
*CAT: n
*SEM: orRel[rel=rules]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_sizes_+_of_+_flexible_+_hose_+_end_+_unions
*CAT: n
*SEM: unaryRel[rel=different_+_sizes_+_of_+_flexible_+_hose_+_end_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_sizes_+_of_+_flexible_+_hose_+_end_+_unions
*CAT: n
*SEM: twoRel[rel=different_+_sizes_+_of_+_flexible_+_hose_+_end_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_sizes_+_of_+_flexible_+_hose_+_end_+_unions
*CAT: n
*SEM: twoRel[rel=different_+_sizes_+_of_+_flexible_+_hose_+_end_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_sizes_+_of_+_flexible_+_hose_+_end_+_unions
*CAT: n
*SEM: orRel[rel=different_+_sizes_+_of_+_flexible_+_hose_+_end_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figures
*CAT: n
*SEM: unaryRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figures
*CAT: n
*SEM: twoRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figures
*CAT: n
*SEM: twoRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figures
*CAT: n
*SEM: orRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priority
*CAT: n
*SEM: unaryRel[rel=first_+_priority]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priority
*CAT: n
*SEM: twoRel[rel=first_+_priority]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priority
*CAT: n
*SEM: twoRel[rel=first_+_priority]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priority
*CAT: n
*SEM: orRel[rel=first_+_priority]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal
*CAT: n
*SEM: unaryRel[rel=fire_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal
*CAT: n
*SEM: twoRel[rel=fire_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal
*CAT: n
*SEM: twoRel[rel=fire_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal
*CAT: n
*SEM: orRel[rel=fire_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp
*CAT: n
*SEM: unaryRel[rel=ramp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp
*CAT: n
*SEM: twoRel[rel=ramp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp
*CAT: n
*SEM: twoRel[rel=ramp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp
*CAT: n
*SEM: orRel[rel=ramp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grounding_+_point_+__-_opensb_-_vn_-_closesb_-__-_colon_-__+_a_+_label
*CAT: n
*SEM: unaryRel[rel=grounding_+_point_+__-_opensb_-_vn_-_closesb_-__-_colon_-__+_a_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grounding_+_point_+__-_opensb_-_vn_-_closesb_-__-_colon_-__+_a_+_label
*CAT: n
*SEM: twoRel[rel=grounding_+_point_+__-_opensb_-_vn_-_closesb_-__-_colon_-__+_a_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grounding_+_point_+__-_opensb_-_vn_-_closesb_-__-_colon_-__+_a_+_label
*CAT: n
*SEM: twoRel[rel=grounding_+_point_+__-_opensb_-_vn_-_closesb_-__-_colon_-__+_a_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grounding_+_point_+__-_opensb_-_vn_-_closesb_-__-_colon_-__+_a_+_label
*CAT: n
*SEM: orRel[rel=grounding_+_point_+__-_opensb_-_vn_-_closesb_-__-_colon_-__+_a_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-__+_spare_+_conduit_+_''
*CAT: n
*SEM: unaryRel[rel=_-_invcomma_-__+_spare_+_conduit_+_'']
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-__+_spare_+_conduit_+_''
*CAT: n
*SEM: twoRel[rel=_-_invcomma_-__+_spare_+_conduit_+_'']
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-__+_spare_+_conduit_+_''
*CAT: n
*SEM: twoRel[rel=_-_invcomma_-__+_spare_+_conduit_+_'']
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-__+_spare_+_conduit_+_''
*CAT: n
*SEM: orRel[rel=_-_invcomma_-__+_spare_+_conduit_+_'']
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_points
*CAT: n
*SEM: unaryRel[rel=attachment_+_points]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_points
*CAT: n
*SEM: twoRel[rel=attachment_+_points]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_points
*CAT: n
*SEM: twoRel[rel=attachment_+_points]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_points
*CAT: n
*SEM: orRel[rel=attachment_+_points]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2226_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=abs2226_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2226_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=abs2226_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2226_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=abs2226_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2226_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=abs2226_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: between_+_two_+_non-pressurised_+_zones
*CAT: n
*SEM: unaryRel[rel=between_+_two_+_non-pressurised_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: between_+_two_+_non-pressurised_+_zones
*CAT: n
*SEM: twoRel[rel=between_+_two_+_non-pressurised_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: between_+_two_+_non-pressurised_+_zones
*CAT: n
*SEM: twoRel[rel=between_+_two_+_non-pressurised_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: between_+_two_+_non-pressurised_+_zones
*CAT: n
*SEM: orRel[rel=between_+_two_+_non-pressurised_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_the_+_functional_+_movements
*CAT: n
*SEM: unaryRel[rel=account_+_the_+_functional_+_movements]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_the_+_functional_+_movements
*CAT: n
*SEM: twoRel[rel=account_+_the_+_functional_+_movements]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_the_+_functional_+_movements
*CAT: n
*SEM: twoRel[rel=account_+_the_+_functional_+_movements]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_the_+_functional_+_movements
*CAT: n
*SEM: orRel[rel=account_+_the_+_functional_+_movements]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp_+_when_+_loss
*CAT: n
*SEM: unaryRel[rel=ramp_+_when_+_loss]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp_+_when_+_loss
*CAT: n
*SEM: twoRel[rel=ramp_+_when_+_loss]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp_+_when_+_loss
*CAT: n
*SEM: twoRel[rel=ramp_+_when_+_loss]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp_+_when_+_loss
*CAT: n
*SEM: orRel[rel=ramp_+_when_+_loss]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_structure
*CAT: n
*SEM: unaryRel[rel=e.g._+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_structure
*CAT: n
*SEM: twoRel[rel=e.g._+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_structure
*CAT: n
*SEM: twoRel[rel=e.g._+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_structure
*CAT: n
*SEM: orRel[rel=e.g._+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_electrical_+_protection_+_layer
*CAT: n
*SEM: unaryRel[rel=an_+_electrical_+_protection_+_layer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_electrical_+_protection_+_layer
*CAT: n
*SEM: twoRel[rel=an_+_electrical_+_protection_+_layer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_electrical_+_protection_+_layer
*CAT: n
*SEM: twoRel[rel=an_+_electrical_+_protection_+_layer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_electrical_+_protection_+_layer
*CAT: n
*SEM: orRel[rel=an_+_electrical_+_protection_+_layer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_identification_+_label_+_printed
*CAT: n
*SEM: unaryRel[rel=asne_+_0248_+_identification_+_label_+_printed]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_identification_+_label_+_printed
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_identification_+_label_+_printed]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_identification_+_label_+_printed
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_identification_+_label_+_printed]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_identification_+_label_+_printed
*CAT: n
*SEM: orRel[rel=asne_+_0248_+_identification_+_label_+_printed]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_pipes_+_section
*CAT: n
*SEM: unaryRel[rel=straight_+_pipes_+_section]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_pipes_+_section
*CAT: n
*SEM: twoRel[rel=straight_+_pipes_+_section]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_pipes_+_section
*CAT: n
*SEM: twoRel[rel=straight_+_pipes_+_section]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_pipes_+_section
*CAT: n
*SEM: orRel[rel=straight_+_pipes_+_section]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings
*CAT: n
*SEM: unaryRel[rel=pipe_+_routings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings
*CAT: n
*SEM: twoRel[rel=pipe_+_routings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings
*CAT: n
*SEM: twoRel[rel=pipe_+_routings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings
*CAT: n
*SEM: orRel[rel=pipe_+_routings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-__+_in_+_horitontal_+_position_+_and
*CAT: n
*SEM: unaryRel[rel=virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-__+_in_+_horitontal_+_position_+_and]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-__+_in_+_horitontal_+_position_+_and
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-__+_in_+_horitontal_+_position_+_and]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-__+_in_+_horitontal_+_position_+_and
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-__+_in_+_horitontal_+_position_+_and]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-__+_in_+_horitontal_+_position_+_and
*CAT: n
*SEM: orRel[rel=virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-__+_in_+_horitontal_+_position_+_and]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_beside
*CAT: n
*SEM: unaryRel[rel=non_+_conductive_+_structure_+_beside]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_beside
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure_+_beside]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_beside
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure_+_beside]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_beside
*CAT: n
*SEM: orRel[rel=non_+_conductive_+_structure_+_beside]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_attachment_+_points
*CAT: n
*SEM: unaryRel[rel=two_+_attachment_+_points]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_attachment_+_points
*CAT: n
*SEM: twoRel[rel=two_+_attachment_+_points]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_attachment_+_points
*CAT: n
*SEM: twoRel[rel=two_+_attachment_+_points]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_attachment_+_points
*CAT: n
*SEM: orRel[rel=two_+_attachment_+_points]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_connector_+_dummy_+_contacts_+_sealing_+_plugs_+_in_+_hazardous_+_zones_+_connectors
*CAT: n
*SEM: unaryRel[rel=sealed_+_connector_+_dummy_+_contacts_+_sealing_+_plugs_+_in_+_hazardous_+_zones_+_connectors]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_connector_+_dummy_+_contacts_+_sealing_+_plugs_+_in_+_hazardous_+_zones_+_connectors
*CAT: n
*SEM: twoRel[rel=sealed_+_connector_+_dummy_+_contacts_+_sealing_+_plugs_+_in_+_hazardous_+_zones_+_connectors]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_connector_+_dummy_+_contacts_+_sealing_+_plugs_+_in_+_hazardous_+_zones_+_connectors
*CAT: n
*SEM: twoRel[rel=sealed_+_connector_+_dummy_+_contacts_+_sealing_+_plugs_+_in_+_hazardous_+_zones_+_connectors]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_connector_+_dummy_+_contacts_+_sealing_+_plugs_+_in_+_hazardous_+_zones_+_connectors
*CAT: n
*SEM: orRel[rel=sealed_+_connector_+_dummy_+_contacts_+_sealing_+_plugs_+_in_+_hazardous_+_zones_+_connectors]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_taking_+_into_+_account_+_20_-_percent_-__+_of_+_bundle_+_growth_+_potential
*CAT: n
*SEM: unaryRel[rel=v-support_+_taking_+_into_+_account_+_20_-_percent_-__+_of_+_bundle_+_growth_+_potential]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_taking_+_into_+_account_+_20_-_percent_-__+_of_+_bundle_+_growth_+_potential
*CAT: n
*SEM: twoRel[rel=v-support_+_taking_+_into_+_account_+_20_-_percent_-__+_of_+_bundle_+_growth_+_potential]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_taking_+_into_+_account_+_20_-_percent_-__+_of_+_bundle_+_growth_+_potential
*CAT: n
*SEM: twoRel[rel=v-support_+_taking_+_into_+_account_+_20_-_percent_-__+_of_+_bundle_+_growth_+_potential]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_taking_+_into_+_account_+_20_-_percent_-__+_of_+_bundle_+_growth_+_potential
*CAT: n
*SEM: orRel[rel=v-support_+_taking_+_into_+_account_+_20_-_percent_-__+_of_+_bundle_+_growth_+_potential]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_together
*CAT: n
*SEM: unaryRel[rel=up_+_together]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_together
*CAT: n
*SEM: twoRel[rel=up_+_together]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_together
*CAT: n
*SEM: twoRel[rel=up_+_together]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_together
*CAT: n
*SEM: orRel[rel=up_+_together]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive
*CAT: n
*SEM: unaryRel[rel=adhesive]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive
*CAT: n
*SEM: twoRel[rel=adhesive]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive
*CAT: n
*SEM: twoRel[rel=adhesive]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive
*CAT: n
*SEM: orRel[rel=adhesive]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin
*CAT: n
*SEM: unaryRel[rel=pin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin
*CAT: n
*SEM: twoRel[rel=pin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin
*CAT: n
*SEM: twoRel[rel=pin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin
*CAT: n
*SEM: orRel[rel=pin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_vn_+_the_+_vn
*CAT: n
*SEM: unaryRel[rel=one_+_vn_+_the_+_vn]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_vn_+_the_+_vn
*CAT: n
*SEM: twoRel[rel=one_+_vn_+_the_+_vn]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_vn_+_the_+_vn
*CAT: n
*SEM: twoRel[rel=one_+_vn_+_the_+_vn]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_vn_+_the_+_vn
*CAT: n
*SEM: orRel[rel=one_+_vn_+_the_+_vn]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air
*CAT: n
*SEM: unaryRel[rel=air]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air
*CAT: n
*SEM: twoRel[rel=air]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air
*CAT: n
*SEM: twoRel[rel=air]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air
*CAT: n
*SEM: orRel[rel=air]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cabin
*CAT: n
*SEM: unaryRel[rel=cabin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cabin
*CAT: n
*SEM: twoRel[rel=cabin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cabin
*CAT: n
*SEM: twoRel[rel=cabin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cabin
*CAT: n
*SEM: orRel[rel=cabin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_10mm_+__-_greaterThan_-__+_d_+__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=structure_+_10mm_+__-_greaterThan_-__+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_10mm_+__-_greaterThan_-__+_d_+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=structure_+_10mm_+__-_greaterThan_-__+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_10mm_+__-_greaterThan_-__+_d_+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=structure_+_10mm_+__-_greaterThan_-__+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_10mm_+__-_greaterThan_-__+_d_+__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=structure_+_10mm_+__-_greaterThan_-__+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate_+_not
*CAT: n
*SEM: unaryRel[rel=fillingrate_+_not]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate_+_not
*CAT: n
*SEM: twoRel[rel=fillingrate_+_not]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate_+_not
*CAT: n
*SEM: twoRel[rel=fillingrate_+_not]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate_+_not
*CAT: n
*SEM: orRel[rel=fillingrate_+_not]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fully_+_separable
*CAT: n
*SEM: unaryRel[rel=fully_+_separable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fully_+_separable
*CAT: n
*SEM: twoRel[rel=fully_+_separable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fully_+_separable
*CAT: n
*SEM: twoRel[rel=fully_+_separable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fully_+_separable
*CAT: n
*SEM: orRel[rel=fully_+_separable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then_+_the_+_socket_+_contact
*CAT: n
*SEM: unaryRel[rel=then_+_the_+_socket_+_contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then_+_the_+_socket_+_contact
*CAT: n
*SEM: twoRel[rel=then_+_the_+_socket_+_contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then_+_the_+_socket_+_contact
*CAT: n
*SEM: twoRel[rel=then_+_the_+_socket_+_contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then_+_the_+_socket_+_contact
*CAT: n
*SEM: orRel[rel=then_+_the_+_socket_+_contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_table
*CAT: n
*SEM: unaryRel[rel=attached_+_table]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_table
*CAT: n
*SEM: twoRel[rel=attached_+_table]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_table
*CAT: n
*SEM: twoRel[rel=attached_+_table]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_table
*CAT: n
*SEM: orRel[rel=attached_+_table]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p
*CAT: n
*SEM: unaryRel[rel=p]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p
*CAT: n
*SEM: twoRel[rel=p]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p
*CAT: n
*SEM: twoRel[rel=p]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p
*CAT: n
*SEM: orRel[rel=p]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-_25mm
*CAT: n
*SEM: unaryRel[rel=d_-_greaterThan_-__-_equalto_-_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-_25mm
*CAT: n
*SEM: twoRel[rel=d_-_greaterThan_-__-_equalto_-_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-_25mm
*CAT: n
*SEM: twoRel[rel=d_-_greaterThan_-__-_equalto_-_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-_25mm
*CAT: n
*SEM: orRel[rel=d_-_greaterThan_-__-_equalto_-_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: union_+_asna3760va6_+_nut_+_asna3769t6
*CAT: n
*SEM: unaryRel[rel=union_+_asna3760va6_+_nut_+_asna3769t6]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: union_+_asna3760va6_+_nut_+_asna3769t6
*CAT: n
*SEM: twoRel[rel=union_+_asna3760va6_+_nut_+_asna3769t6]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: union_+_asna3760va6_+_nut_+_asna3769t6
*CAT: n
*SEM: twoRel[rel=union_+_asna3760va6_+_nut_+_asna3769t6]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: union_+_asna3760va6_+_nut_+_asna3769t6
*CAT: n
*SEM: orRel[rel=union_+_asna3760va6_+_nut_+_asna3769t6]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_plane
*CAT: n
*SEM: unaryRel[rel=single_+_plane]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_plane
*CAT: n
*SEM: twoRel[rel=single_+_plane]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_plane
*CAT: n
*SEM: twoRel[rel=single_+_plane]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_plane
*CAT: n
*SEM: orRel[rel=single_+_plane]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_manufacture
*CAT: n
*SEM: unaryRel[rel=pipe_+_manufacture]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_manufacture
*CAT: n
*SEM: twoRel[rel=pipe_+_manufacture]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_manufacture
*CAT: n
*SEM: twoRel[rel=pipe_+_manufacture]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_manufacture
*CAT: n
*SEM: orRel[rel=pipe_+_manufacture]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bottom_+_left_+_corner
*CAT: n
*SEM: unaryRel[rel=bottom_+_left_+_corner]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bottom_+_left_+_corner
*CAT: n
*SEM: twoRel[rel=bottom_+_left_+_corner]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bottom_+_left_+_corner
*CAT: n
*SEM: twoRel[rel=bottom_+_left_+_corner]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bottom_+_left_+_corner
*CAT: n
*SEM: orRel[rel=bottom_+_left_+_corner]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_the_+_bundle_+_diameter
*CAT: n
*SEM: unaryRel[rel=v-support_+_the_+_bundle_+_diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_the_+_bundle_+_diameter
*CAT: n
*SEM: twoRel[rel=v-support_+_the_+_bundle_+_diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_the_+_bundle_+_diameter
*CAT: n
*SEM: twoRel[rel=v-support_+_the_+_bundle_+_diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_the_+_bundle_+_diameter
*CAT: n
*SEM: orRel[rel=v-support_+_the_+_bundle_+_diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: screwing_+_different_+_sizes
*CAT: n
*SEM: unaryRel[rel=screwing_+_different_+_sizes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: screwing_+_different_+_sizes
*CAT: n
*SEM: twoRel[rel=screwing_+_different_+_sizes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: screwing_+_different_+_sizes
*CAT: n
*SEM: twoRel[rel=screwing_+_different_+_sizes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: screwing_+_different_+_sizes
*CAT: n
*SEM: orRel[rel=screwing_+_different_+_sizes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l_+__-_greaterThan_-_10mm
*CAT: n
*SEM: unaryRel[rel=length_+_l_+__-_greaterThan_-_10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l_+__-_greaterThan_-_10mm
*CAT: n
*SEM: twoRel[rel=length_+_l_+__-_greaterThan_-_10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l_+__-_greaterThan_-_10mm
*CAT: n
*SEM: twoRel[rel=length_+_l_+__-_greaterThan_-_10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l_+__-_greaterThan_-_10mm
*CAT: n
*SEM: orRel[rel=length_+_l_+__-_greaterThan_-_10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_installation
*CAT: n
*SEM: unaryRel[rel=normal_+_installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_installation
*CAT: n
*SEM: twoRel[rel=normal_+_installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_installation
*CAT: n
*SEM: twoRel[rel=normal_+_installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_installation
*CAT: n
*SEM: orRel[rel=normal_+_installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_derivation_+_the_+_derivations
*CAT: n
*SEM: unaryRel[rel=two_+_derivation_+_the_+_derivations]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_derivation_+_the_+_derivations
*CAT: n
*SEM: twoRel[rel=two_+_derivation_+_the_+_derivations]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_derivation_+_the_+_derivations
*CAT: n
*SEM: twoRel[rel=two_+_derivation_+_the_+_derivations]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_derivation_+_the_+_derivations
*CAT: n
*SEM: orRel[rel=two_+_derivation_+_the_+_derivations]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+_when_+_there
*CAT: n
*SEM: unaryRel[rel=10mm_+_when_+_there]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+_when_+_there
*CAT: n
*SEM: twoRel[rel=10mm_+_when_+_there]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+_when_+_there
*CAT: n
*SEM: twoRel[rel=10mm_+_when_+_there]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+_when_+_there
*CAT: n
*SEM: orRel[rel=10mm_+_when_+_there]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_according
*CAT: n
*SEM: unaryRel[rel=label_+_according]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_according
*CAT: n
*SEM: twoRel[rel=label_+_according]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_according
*CAT: n
*SEM: twoRel[rel=label_+_according]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_according
*CAT: n
*SEM: orRel[rel=label_+_according]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+_size
*CAT: n
*SEM: unaryRel[rel=conduit_+_size]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+_size
*CAT: n
*SEM: twoRel[rel=conduit_+_size]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+_size
*CAT: n
*SEM: twoRel[rel=conduit_+_size]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+_size
*CAT: n
*SEM: orRel[rel=conduit_+_size]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp-_+_structure
*CAT: n
*SEM: unaryRel[rel=cfrp-_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp-_+_structure
*CAT: n
*SEM: twoRel[rel=cfrp-_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp-_+_structure
*CAT: n
*SEM: twoRel[rel=cfrp-_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp-_+_structure
*CAT: n
*SEM: orRel[rel=cfrp-_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_umbrella_+_in_+_unpressurized
*CAT: n
*SEM: unaryRel[rel=an_+_umbrella_+_in_+_unpressurized]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_umbrella_+_in_+_unpressurized
*CAT: n
*SEM: twoRel[rel=an_+_umbrella_+_in_+_unpressurized]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_umbrella_+_in_+_unpressurized
*CAT: n
*SEM: twoRel[rel=an_+_umbrella_+_in_+_unpressurized]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_umbrella_+_in_+_unpressurized
*CAT: n
*SEM: orRel[rel=an_+_umbrella_+_in_+_unpressurized]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: solder_+_sleeve
*CAT: n
*SEM: unaryRel[rel=solder_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: solder_+_sleeve
*CAT: n
*SEM: twoRel[rel=solder_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: solder_+_sleeve
*CAT: n
*SEM: twoRel[rel=solder_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: solder_+_sleeve
*CAT: n
*SEM: orRel[rel=solder_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_distance_+_given_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: unaryRel[rel=minimum_+_distance_+_given_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_distance_+_given_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: twoRel[rel=minimum_+_distance_+_given_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_distance_+_given_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: twoRel[rel=minimum_+_distance_+_given_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_distance_+_given_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: orRel[rel=minimum_+_distance_+_given_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_priority_+_an_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=second_+_priority_+_an_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_priority_+_an_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=second_+_priority_+_an_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_priority_+_an_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=second_+_priority_+_an_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_priority_+_an_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=second_+_priority_+_an_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions
*CAT: n
*SEM: unaryRel[rel=minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions
*CAT: n
*SEM: twoRel[rel=minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions
*CAT: n
*SEM: twoRel[rel=minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions
*CAT: n
*SEM: orRel[rel=minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_case
*CAT: n
*SEM: unaryRel[rel=special_+_case]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_case
*CAT: n
*SEM: twoRel[rel=special_+_case]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_case
*CAT: n
*SEM: twoRel[rel=special_+_case]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_case
*CAT: n
*SEM: orRel[rel=special_+_case]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata26_+_pipes
*CAT: n
*SEM: unaryRel[rel=ata26_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata26_+_pipes
*CAT: n
*SEM: twoRel[rel=ata26_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata26_+_pipes
*CAT: n
*SEM: twoRel[rel=ata26_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata26_+_pipes
*CAT: n
*SEM: orRel[rel=ata26_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal
*CAT: n
*SEM: unaryRel[rel=horizontal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal
*CAT: n
*SEM: twoRel[rel=horizontal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal
*CAT: n
*SEM: twoRel[rel=horizontal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal
*CAT: n
*SEM: orRel[rel=horizontal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separable_+_hydraulic_+_unions
*CAT: n
*SEM: unaryRel[rel=separable_+_hydraulic_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separable_+_hydraulic_+_unions
*CAT: n
*SEM: twoRel[rel=separable_+_hydraulic_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separable_+_hydraulic_+_unions
*CAT: n
*SEM: twoRel[rel=separable_+_hydraulic_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separable_+_hydraulic_+_unions
*CAT: n
*SEM: orRel[rel=separable_+_hydraulic_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: follow
*CAT: n
*SEM: unaryRel[rel=follow]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: follow
*CAT: n
*SEM: twoRel[rel=follow]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: follow
*CAT: n
*SEM: twoRel[rel=follow]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: follow
*CAT: n
*SEM: orRel[rel=follow]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_part_+_design
*CAT: n
*SEM: unaryRel[rel=master_+_part_+_design]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_part_+_design
*CAT: n
*SEM: twoRel[rel=master_+_part_+_design]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_part_+_design
*CAT: n
*SEM: twoRel[rel=master_+_part_+_design]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_part_+_design
*CAT: n
*SEM: orRel[rel=master_+_part_+_design]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: active_+_item
*CAT: n
*SEM: unaryRel[rel=active_+_item]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: active_+_item
*CAT: n
*SEM: twoRel[rel=active_+_item]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: active_+_item
*CAT: n
*SEM: twoRel[rel=active_+_item]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: active_+_item
*CAT: n
*SEM: orRel[rel=active_+_item]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_labels
*CAT: n
*SEM: unaryRel[rel=identification_+_labels]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_labels
*CAT: n
*SEM: twoRel[rel=identification_+_labels]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_labels
*CAT: n
*SEM: twoRel[rel=identification_+_labels]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_labels
*CAT: n
*SEM: orRel[rel=identification_+_labels]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724
*CAT: n
*SEM: unaryRel[rel=abs_+_0724]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724
*CAT: n
*SEM: twoRel[rel=abs_+_0724]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724
*CAT: n
*SEM: twoRel[rel=abs_+_0724]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724
*CAT: n
*SEM: orRel[rel=abs_+_0724]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_buses
*CAT: n
*SEM: unaryRel[rel=hot_+_buses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_buses
*CAT: n
*SEM: twoRel[rel=hot_+_buses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_buses
*CAT: n
*SEM: twoRel[rel=hot_+_buses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_buses
*CAT: n
*SEM: orRel[rel=hot_+_buses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_ties_+_when_+_the_+_movement
*CAT: n
*SEM: unaryRel[rel=cable_+_ties_+_when_+_the_+_movement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_ties_+_when_+_the_+_movement
*CAT: n
*SEM: twoRel[rel=cable_+_ties_+_when_+_the_+_movement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_ties_+_when_+_the_+_movement
*CAT: n
*SEM: twoRel[rel=cable_+_ties_+_when_+_the_+_movement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_ties_+_when_+_the_+_movement
*CAT: n
*SEM: orRel[rel=cable_+_ties_+_when_+_the_+_movement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: that_+_are_+_assembled
*CAT: n
*SEM: unaryRel[rel=that_+_are_+_assembled]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: that_+_are_+_assembled
*CAT: n
*SEM: twoRel[rel=that_+_are_+_assembled]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: that_+_are_+_assembled
*CAT: n
*SEM: twoRel[rel=that_+_are_+_assembled]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: that_+_are_+_assembled
*CAT: n
*SEM: orRel[rel=that_+_are_+_assembled]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+__-_equalto_-_300mm
*CAT: n
*SEM: unaryRel[rel=d_+__-_smallerThan_-__+__-_equalto_-_300mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+__-_equalto_-_300mm
*CAT: n
*SEM: twoRel[rel=d_+__-_smallerThan_-__+__-_equalto_-_300mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+__-_equalto_-_300mm
*CAT: n
*SEM: twoRel[rel=d_+__-_smallerThan_-__+__-_equalto_-_300mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+__-_equalto_-_300mm
*CAT: n
*SEM: orRel[rel=d_+__-_smallerThan_-__+__-_equalto_-_300mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_zones
*CAT: n
*SEM: unaryRel[rel=repair_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_zones
*CAT: n
*SEM: twoRel[rel=repair_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_zones
*CAT: n
*SEM: twoRel[rel=repair_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_zones
*CAT: n
*SEM: orRel[rel=repair_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_25mm
*CAT: n
*SEM: unaryRel[rel=d_-_greaterThan_-__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_25mm
*CAT: n
*SEM: twoRel[rel=d_-_greaterThan_-__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_25mm
*CAT: n
*SEM: twoRel[rel=d_-_greaterThan_-__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_25mm
*CAT: n
*SEM: orRel[rel=d_-_greaterThan_-__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: such
*CAT: n
*SEM: unaryRel[rel=such]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: such
*CAT: n
*SEM: twoRel[rel=such]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: such
*CAT: n
*SEM: twoRel[rel=such]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: such
*CAT: n
*SEM: orRel[rel=such]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539
*CAT: n
*SEM: unaryRel[rel=nsa_+_5539]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539
*CAT: n
*SEM: twoRel[rel=nsa_+_5539]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539
*CAT: n
*SEM: twoRel[rel=nsa_+_5539]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539
*CAT: n
*SEM: orRel[rel=nsa_+_5539]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_couplings
*CAT: n
*SEM: unaryRel[rel=rigid_+_couplings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_couplings
*CAT: n
*SEM: twoRel[rel=rigid_+_couplings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_couplings
*CAT: n
*SEM: twoRel[rel=rigid_+_couplings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_couplings
*CAT: n
*SEM: orRel[rel=rigid_+_couplings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: numbers
*CAT: n
*SEM: unaryRel[rel=numbers]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: numbers
*CAT: n
*SEM: twoRel[rel=numbers]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: numbers
*CAT: n
*SEM: twoRel[rel=numbers]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: numbers
*CAT: n
*SEM: orRel[rel=numbers]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin
*CAT: n
*SEM: unaryRel[rel=pin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin
*CAT: n
*SEM: twoRel[rel=pin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin
*CAT: n
*SEM: twoRel[rel=pin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin
*CAT: n
*SEM: orRel[rel=pin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_20
*CAT: n
*SEM: unaryRel[rel=gauge_+_20]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_20
*CAT: n
*SEM: twoRel[rel=gauge_+_20]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_20
*CAT: n
*SEM: twoRel[rel=gauge_+_20]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_20
*CAT: n
*SEM: orRel[rel=gauge_+_20]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priorty_+_a_+_back_+_shellor
*CAT: n
*SEM: unaryRel[rel=first_+_priorty_+_a_+_back_+_shellor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priorty_+_a_+_back_+_shellor
*CAT: n
*SEM: twoRel[rel=first_+_priorty_+_a_+_back_+_shellor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priorty_+_a_+_back_+_shellor
*CAT: n
*SEM: twoRel[rel=first_+_priorty_+_a_+_back_+_shellor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priorty_+_a_+_back_+_shellor
*CAT: n
*SEM: orRel[rel=first_+_priorty_+_a_+_back_+_shellor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracketing_+_design_+_principles
*CAT: n
*SEM: unaryRel[rel=bracketing_+_design_+_principles]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracketing_+_design_+_principles
*CAT: n
*SEM: twoRel[rel=bracketing_+_design_+_principles]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracketing_+_design_+_principles
*CAT: n
*SEM: twoRel[rel=bracketing_+_design_+_principles]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracketing_+_design_+_principles
*CAT: n
*SEM: orRel[rel=bracketing_+_design_+_principles]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_locked_+_together
*CAT: n
*SEM: unaryRel[rel=be_+_locked_+_together]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_locked_+_together
*CAT: n
*SEM: twoRel[rel=be_+_locked_+_together]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_locked_+_together
*CAT: n
*SEM: twoRel[rel=be_+_locked_+_together]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_locked_+_together
*CAT: n
*SEM: orRel[rel=be_+_locked_+_together]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_harness_+_extremity_+_all
*CAT: n
*SEM: unaryRel[rel=each_+_harness_+_extremity_+_all]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_harness_+_extremity_+_all
*CAT: n
*SEM: twoRel[rel=each_+_harness_+_extremity_+_all]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_harness_+_extremity_+_all
*CAT: n
*SEM: twoRel[rel=each_+_harness_+_extremity_+_all]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_harness_+_extremity_+_all
*CAT: n
*SEM: orRel[rel=each_+_harness_+_extremity_+_all]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 60mm_+_each_+_end
*CAT: n
*SEM: unaryRel[rel=60mm_+_each_+_end]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 60mm_+_each_+_end
*CAT: n
*SEM: twoRel[rel=60mm_+_each_+_end]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 60mm_+_each_+_end
*CAT: n
*SEM: twoRel[rel=60mm_+_each_+_end]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 60mm_+_each_+_end
*CAT: n
*SEM: orRel[rel=60mm_+_each_+_end]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: c_+_is
*CAT: n
*SEM: unaryRel[rel=c_+_is]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: c_+_is
*CAT: n
*SEM: twoRel[rel=c_+_is]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: c_+_is
*CAT: n
*SEM: twoRel[rel=c_+_is]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: c_+_is
*CAT: n
*SEM: orRel[rel=c_+_is]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead_+_unions_+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_nut_+_asna3769_+_code_+__-_invcomma_-__+_w_-_invcomma_-__+_elbow_+_nas1762_+_code_+__-_invcomma_-_j_-_invcomma_-__+_union_+_abs1491_+_code_+__-_invcomma_-_t_-_invcomma_-_
*CAT: n
*SEM: unaryRel[rel=bulkhead_+_unions_+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_nut_+_asna3769_+_code_+__-_invcomma_-__+_w_-_invcomma_-__+_elbow_+_nas1762_+_code_+__-_invcomma_-_j_-_invcomma_-__+_union_+_abs1491_+_code_+__-_invcomma_-_t_-_invcomma_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead_+_unions_+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_nut_+_asna3769_+_code_+__-_invcomma_-__+_w_-_invcomma_-__+_elbow_+_nas1762_+_code_+__-_invcomma_-_j_-_invcomma_-__+_union_+_abs1491_+_code_+__-_invcomma_-_t_-_invcomma_-_
*CAT: n
*SEM: twoRel[rel=bulkhead_+_unions_+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_nut_+_asna3769_+_code_+__-_invcomma_-__+_w_-_invcomma_-__+_elbow_+_nas1762_+_code_+__-_invcomma_-_j_-_invcomma_-__+_union_+_abs1491_+_code_+__-_invcomma_-_t_-_invcomma_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead_+_unions_+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_nut_+_asna3769_+_code_+__-_invcomma_-__+_w_-_invcomma_-__+_elbow_+_nas1762_+_code_+__-_invcomma_-_j_-_invcomma_-__+_union_+_abs1491_+_code_+__-_invcomma_-_t_-_invcomma_-_
*CAT: n
*SEM: twoRel[rel=bulkhead_+_unions_+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_nut_+_asna3769_+_code_+__-_invcomma_-__+_w_-_invcomma_-__+_elbow_+_nas1762_+_code_+__-_invcomma_-_j_-_invcomma_-__+_union_+_abs1491_+_code_+__-_invcomma_-_t_-_invcomma_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead_+_unions_+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_nut_+_asna3769_+_code_+__-_invcomma_-__+_w_-_invcomma_-__+_elbow_+_nas1762_+_code_+__-_invcomma_-_j_-_invcomma_-__+_union_+_abs1491_+_code_+__-_invcomma_-_t_-_invcomma_-_
*CAT: n
*SEM: orRel[rel=bulkhead_+_unions_+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_nut_+_asna3769_+_code_+__-_invcomma_-__+_w_-_invcomma_-__+_elbow_+_nas1762_+_code_+__-_invcomma_-_j_-_invcomma_-__+_union_+_abs1491_+_code_+__-_invcomma_-_t_-_invcomma_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_relative_+_movement
*CAT: n
*SEM: unaryRel[rel=same_+_relative_+_movement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_relative_+_movement
*CAT: n
*SEM: twoRel[rel=same_+_relative_+_movement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_relative_+_movement
*CAT: n
*SEM: twoRel[rel=same_+_relative_+_movement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_relative_+_movement
*CAT: n
*SEM: orRel[rel=same_+_relative_+_movement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en6049_+_split_+_conduit
*CAT: n
*SEM: unaryRel[rel=en6049_+_split_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en6049_+_split_+_conduit
*CAT: n
*SEM: twoRel[rel=en6049_+_split_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en6049_+_split_+_conduit
*CAT: n
*SEM: twoRel[rel=en6049_+_split_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en6049_+_split_+_conduit
*CAT: n
*SEM: orRel[rel=en6049_+_split_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm_+__-_greaterThan_-__+__-_equalto_-__+_d
*CAT: n
*SEM: unaryRel[rel=20mm_+__-_greaterThan_-__+__-_equalto_-__+_d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm_+__-_greaterThan_-__+__-_equalto_-__+_d
*CAT: n
*SEM: twoRel[rel=20mm_+__-_greaterThan_-__+__-_equalto_-__+_d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm_+__-_greaterThan_-__+__-_equalto_-__+_d
*CAT: n
*SEM: twoRel[rel=20mm_+__-_greaterThan_-__+__-_equalto_-__+_d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm_+__-_greaterThan_-__+__-_equalto_-__+_d
*CAT: n
*SEM: orRel[rel=20mm_+__-_greaterThan_-__+__-_equalto_-__+_d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hanress
*CAT: n
*SEM: unaryRel[rel=hanress]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hanress
*CAT: n
*SEM: twoRel[rel=hanress]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hanress
*CAT: n
*SEM: twoRel[rel=hanress]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hanress
*CAT: n
*SEM: orRel[rel=hanress]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figures
*CAT: n
*SEM: unaryRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figures
*CAT: n
*SEM: twoRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figures
*CAT: n
*SEM: twoRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figures
*CAT: n
*SEM: orRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection
*CAT: n
*SEM: unaryRel[rel=protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection
*CAT: n
*SEM: twoRel[rel=protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection
*CAT: n
*SEM: twoRel[rel=protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection
*CAT: n
*SEM: orRel[rel=protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_seal_+_when_+_a_+_backshell
*CAT: n
*SEM: unaryRel[rel=pressure_+_seal_+_when_+_a_+_backshell]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_seal_+_when_+_a_+_backshell
*CAT: n
*SEM: twoRel[rel=pressure_+_seal_+_when_+_a_+_backshell]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_seal_+_when_+_a_+_backshell
*CAT: n
*SEM: twoRel[rel=pressure_+_seal_+_when_+_a_+_backshell]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_seal_+_when_+_a_+_backshell
*CAT: n
*SEM: orRel[rel=pressure_+_seal_+_when_+_a_+_backshell]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficiently_+_different_+_hose_+_lengths
*CAT: n
*SEM: unaryRel[rel=sufficiently_+_different_+_hose_+_lengths]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficiently_+_different_+_hose_+_lengths
*CAT: n
*SEM: twoRel[rel=sufficiently_+_different_+_hose_+_lengths]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficiently_+_different_+_hose_+_lengths
*CAT: n
*SEM: twoRel[rel=sufficiently_+_different_+_hose_+_lengths]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficiently_+_different_+_hose_+_lengths
*CAT: n
*SEM: orRel[rel=sufficiently_+_different_+_hose_+_lengths]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mobile_+_supports
*CAT: n
*SEM: unaryRel[rel=mobile_+_supports]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mobile_+_supports
*CAT: n
*SEM: twoRel[rel=mobile_+_supports]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mobile_+_supports
*CAT: n
*SEM: twoRel[rel=mobile_+_supports]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mobile_+_supports
*CAT: n
*SEM: orRel[rel=mobile_+_supports]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_specific_+_parameters
*CAT: n
*SEM: unaryRel[rel=zone_+_specific_+_parameters]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_specific_+_parameters
*CAT: n
*SEM: twoRel[rel=zone_+_specific_+_parameters]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_specific_+_parameters
*CAT: n
*SEM: twoRel[rel=zone_+_specific_+_parameters]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_specific_+_parameters
*CAT: n
*SEM: orRel[rel=zone_+_specific_+_parameters]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_not_+_electrically
*CAT: n
*SEM: unaryRel[rel=bundle_+_not_+_electrically]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_not_+_electrically
*CAT: n
*SEM: twoRel[rel=bundle_+_not_+_electrically]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_not_+_electrically
*CAT: n
*SEM: twoRel[rel=bundle_+_not_+_electrically]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_not_+_electrically
*CAT: n
*SEM: orRel[rel=bundle_+_not_+_electrically]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_nsa937493_+_insulating_+_sleeve
*CAT: n
*SEM: unaryRel[rel=two_+_nsa937493_+_insulating_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_nsa937493_+_insulating_+_sleeve
*CAT: n
*SEM: twoRel[rel=two_+_nsa937493_+_insulating_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_nsa937493_+_insulating_+_sleeve
*CAT: n
*SEM: twoRel[rel=two_+_nsa937493_+_insulating_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_nsa937493_+_insulating_+_sleeve
*CAT: n
*SEM: orRel[rel=two_+_nsa937493_+_insulating_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torques
*CAT: n
*SEM: unaryRel[rel=torques]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torques
*CAT: n
*SEM: twoRel[rel=torques]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torques
*CAT: n
*SEM: twoRel[rel=torques]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torques
*CAT: n
*SEM: orRel[rel=torques]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_bundle
*CAT: n
*SEM: unaryRel[rel=unprotected_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_bundle
*CAT: n
*SEM: twoRel[rel=unprotected_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_bundle
*CAT: n
*SEM: twoRel[rel=unprotected_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_bundle
*CAT: n
*SEM: orRel[rel=unprotected_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bst
*CAT: n
*SEM: unaryRel[rel=bst]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bst
*CAT: n
*SEM: twoRel[rel=bst]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bst
*CAT: n
*SEM: twoRel[rel=bst]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bst
*CAT: n
*SEM: orRel[rel=bst]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_coaxial_+_connector
*CAT: n
*SEM: unaryRel[rel=unused_+_coaxial_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_coaxial_+_connector
*CAT: n
*SEM: twoRel[rel=unused_+_coaxial_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_coaxial_+_connector
*CAT: n
*SEM: twoRel[rel=unused_+_coaxial_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_coaxial_+_connector
*CAT: n
*SEM: orRel[rel=unused_+_coaxial_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_harnesses
*CAT: n
*SEM: unaryRel[rel=optical_+_harnesses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_harnesses
*CAT: n
*SEM: twoRel[rel=optical_+_harnesses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_harnesses
*CAT: n
*SEM: twoRel[rel=optical_+_harnesses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_harnesses
*CAT: n
*SEM: orRel[rel=optical_+_harnesses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plate
*CAT: n
*SEM: unaryRel[rel=plate]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plate
*CAT: n
*SEM: twoRel[rel=plate]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plate
*CAT: n
*SEM: twoRel[rel=plate]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plate
*CAT: n
*SEM: orRel[rel=plate]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: largest_+_diameter
*CAT: n
*SEM: unaryRel[rel=largest_+_diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: largest_+_diameter
*CAT: n
*SEM: twoRel[rel=largest_+_diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: largest_+_diameter
*CAT: n
*SEM: twoRel[rel=largest_+_diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: largest_+_diameter
*CAT: n
*SEM: orRel[rel=largest_+_diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_zone
*CAT: n
*SEM: unaryRel[rel=pylon_+_zone]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_zone
*CAT: n
*SEM: twoRel[rel=pylon_+_zone]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_zone
*CAT: n
*SEM: twoRel[rel=pylon_+_zone]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_zone
*CAT: n
*SEM: orRel[rel=pylon_+_zone]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+__-_backslash_-__+_maximum_+_bend_+_angle_-_opensb_-_s_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=minimum_+__-_backslash_-__+_maximum_+_bend_+_angle_-_opensb_-_s_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+__-_backslash_-__+_maximum_+_bend_+_angle_-_opensb_-_s_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=minimum_+__-_backslash_-__+_maximum_+_bend_+_angle_-_opensb_-_s_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+__-_backslash_-__+_maximum_+_bend_+_angle_-_opensb_-_s_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=minimum_+__-_backslash_-__+_maximum_+_bend_+_angle_-_opensb_-_s_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+__-_backslash_-__+_maximum_+_bend_+_angle_-_opensb_-_s_-_closesb_-_
*CAT: n
*SEM: orRel[rel=minimum_+__-_backslash_-__+_maximum_+_bend_+_angle_-_opensb_-_s_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover_+_in_+_pressurized_+_zone
*CAT: n
*SEM: unaryRel[rel=spray_+_cover_+_in_+_pressurized_+_zone]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover_+_in_+_pressurized_+_zone
*CAT: n
*SEM: twoRel[rel=spray_+_cover_+_in_+_pressurized_+_zone]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover_+_in_+_pressurized_+_zone
*CAT: n
*SEM: twoRel[rel=spray_+_cover_+_in_+_pressurized_+_zone]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover_+_in_+_pressurized_+_zone
*CAT: n
*SEM: orRel[rel=spray_+_cover_+_in_+_pressurized_+_zone]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_bottle
*CAT: n
*SEM: unaryRel[rel=drain_+_bottle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_bottle
*CAT: n
*SEM: twoRel[rel=drain_+_bottle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_bottle
*CAT: n
*SEM: twoRel[rel=drain_+_bottle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_bottle
*CAT: n
*SEM: orRel[rel=drain_+_bottle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp
*CAT: n
*SEM: unaryRel[rel=swamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp
*CAT: n
*SEM: twoRel[rel=swamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp
*CAT: n
*SEM: twoRel[rel=swamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp
*CAT: n
*SEM: orRel[rel=swamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraided_+_bundle_+_when_+_repair
*CAT: n
*SEM: unaryRel[rel=overbraided_+_bundle_+_when_+_repair]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraided_+_bundle_+_when_+_repair
*CAT: n
*SEM: twoRel[rel=overbraided_+_bundle_+_when_+_repair]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraided_+_bundle_+_when_+_repair
*CAT: n
*SEM: twoRel[rel=overbraided_+_bundle_+_when_+_repair]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraided_+_bundle_+_when_+_repair
*CAT: n
*SEM: orRel[rel=overbraided_+_bundle_+_when_+_repair]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_kits_+_per_+_bundle
*CAT: n
*SEM: unaryRel[rel=four_+_kits_+_per_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_kits_+_per_+_bundle
*CAT: n
*SEM: twoRel[rel=four_+_kits_+_per_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_kits_+_per_+_bundle
*CAT: n
*SEM: twoRel[rel=four_+_kits_+_per_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_kits_+_per_+_bundle
*CAT: n
*SEM: orRel[rel=four_+_kits_+_per_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_convoluted_+_conduit
*CAT: n
*SEM: unaryRel[rel=abs_+_0887_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_convoluted_+_conduit
*CAT: n
*SEM: twoRel[rel=abs_+_0887_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_convoluted_+_conduit
*CAT: n
*SEM: twoRel[rel=abs_+_0887_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_convoluted_+_conduit
*CAT: n
*SEM: orRel[rel=abs_+_0887_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_electro-chemical_+_compatibility
*CAT: n
*SEM: unaryRel[rel=account_+_electro-chemical_+_compatibility]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_electro-chemical_+_compatibility
*CAT: n
*SEM: twoRel[rel=account_+_electro-chemical_+_compatibility]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_electro-chemical_+_compatibility
*CAT: n
*SEM: twoRel[rel=account_+_electro-chemical_+_compatibility]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_electro-chemical_+_compatibility
*CAT: n
*SEM: orRel[rel=account_+_electro-chemical_+_compatibility]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: awg16_+_to
*CAT: n
*SEM: unaryRel[rel=awg16_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: awg16_+_to
*CAT: n
*SEM: twoRel[rel=awg16_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: awg16_+_to
*CAT: n
*SEM: twoRel[rel=awg16_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: awg16_+_to
*CAT: n
*SEM: orRel[rel=awg16_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc_+_600_+_connectors
*CAT: n
*SEM: unaryRel[rel=arinc_+_600_+_connectors]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc_+_600_+_connectors
*CAT: n
*SEM: twoRel[rel=arinc_+_600_+_connectors]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc_+_600_+_connectors
*CAT: n
*SEM: twoRel[rel=arinc_+_600_+_connectors]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc_+_600_+_connectors
*CAT: n
*SEM: orRel[rel=arinc_+_600_+_connectors]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier
*CAT: n
*SEM: unaryRel[rel=definition_+_dossier]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier
*CAT: n
*SEM: twoRel[rel=definition_+_dossier]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier
*CAT: n
*SEM: twoRel[rel=definition_+_dossier]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier
*CAT: n
*SEM: orRel[rel=definition_+_dossier]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_background
*CAT: n
*SEM: unaryRel[rel=red_+_background]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_background
*CAT: n
*SEM: twoRel[rel=red_+_background]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_background
*CAT: n
*SEM: twoRel[rel=red_+_background]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_background
*CAT: n
*SEM: orRel[rel=red_+_background]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: union_+_operations
*CAT: n
*SEM: unaryRel[rel=union_+_operations]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: union_+_operations
*CAT: n
*SEM: twoRel[rel=union_+_operations]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: union_+_operations
*CAT: n
*SEM: twoRel[rel=union_+_operations]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: union_+_operations
*CAT: n
*SEM: orRel[rel=union_+_operations]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_vapor_+_area
*CAT: n
*SEM: unaryRel[rel=fuel_+_vapor_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_vapor_+_area
*CAT: n
*SEM: twoRel[rel=fuel_+_vapor_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_vapor_+_area
*CAT: n
*SEM: twoRel[rel=fuel_+_vapor_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_vapor_+_area
*CAT: n
*SEM: orRel[rel=fuel_+_vapor_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connections
*CAT: n
*SEM: unaryRel[rel=connections]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connections
*CAT: n
*SEM: twoRel[rel=connections]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connections
*CAT: n
*SEM: twoRel[rel=connections]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connections
*CAT: n
*SEM: orRel[rel=connections]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_mechanical_+_items
*CAT: n
*SEM: unaryRel[rel=removable_+_mechanical_+_items]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_mechanical_+_items
*CAT: n
*SEM: twoRel[rel=removable_+_mechanical_+_items]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_mechanical_+_items
*CAT: n
*SEM: twoRel[rel=removable_+_mechanical_+_items]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_mechanical_+_items
*CAT: n
*SEM: orRel[rel=removable_+_mechanical_+_items]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_150mm
*CAT: n
*SEM: unaryRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_150mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_150mm
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_150mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_150mm
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_150mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_150mm
*CAT: n
*SEM: orRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_150mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer
*CAT: n
*SEM: unaryRel[rel=spacer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer
*CAT: n
*SEM: twoRel[rel=spacer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer
*CAT: n
*SEM: twoRel[rel=spacer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer
*CAT: n
*SEM: orRel[rel=spacer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049-009_+_open_+_sleeve
*CAT: n
*SEM: unaryRel[rel=en_+_6049-009_+_open_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049-009_+_open_+_sleeve
*CAT: n
*SEM: twoRel[rel=en_+_6049-009_+_open_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049-009_+_open_+_sleeve
*CAT: n
*SEM: twoRel[rel=en_+_6049-009_+_open_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049-009_+_open_+_sleeve
*CAT: n
*SEM: orRel[rel=en_+_6049-009_+_open_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_well_+_attached_+_figure
*CAT: n
*SEM: unaryRel[rel=as_+_well_+_attached_+_figure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_well_+_attached_+_figure
*CAT: n
*SEM: twoRel[rel=as_+_well_+_attached_+_figure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_well_+_attached_+_figure
*CAT: n
*SEM: twoRel[rel=as_+_well_+_attached_+_figure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_well_+_attached_+_figure
*CAT: n
*SEM: orRel[rel=as_+_well_+_attached_+_figure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: exceptional_+_cases_+_a_+_maximum
*CAT: n
*SEM: unaryRel[rel=exceptional_+_cases_+_a_+_maximum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: exceptional_+_cases_+_a_+_maximum
*CAT: n
*SEM: twoRel[rel=exceptional_+_cases_+_a_+_maximum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: exceptional_+_cases_+_a_+_maximum
*CAT: n
*SEM: twoRel[rel=exceptional_+_cases_+_a_+_maximum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: exceptional_+_cases_+_a_+_maximum
*CAT: n
*SEM: orRel[rel=exceptional_+_cases_+_a_+_maximum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mandatory
*CAT: n
*SEM: unaryRel[rel=mandatory]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mandatory
*CAT: n
*SEM: twoRel[rel=mandatory]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mandatory
*CAT: n
*SEM: twoRel[rel=mandatory]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mandatory
*CAT: n
*SEM: orRel[rel=mandatory]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_cable
*CAT: n
*SEM: unaryRel[rel=twisted_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_cable
*CAT: n
*SEM: twoRel[rel=twisted_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_cable
*CAT: n
*SEM: twoRel[rel=twisted_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_cable
*CAT: n
*SEM: orRel[rel=twisted_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansions_+_the_+_conical_+_geometry
*CAT: n
*SEM: unaryRel[rel=expansions_+_the_+_conical_+_geometry]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansions_+_the_+_conical_+_geometry
*CAT: n
*SEM: twoRel[rel=expansions_+_the_+_conical_+_geometry]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansions_+_the_+_conical_+_geometry
*CAT: n
*SEM: twoRel[rel=expansions_+_the_+_conical_+_geometry]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansions_+_the_+_conical_+_geometry
*CAT: n
*SEM: orRel[rel=expansions_+_the_+_conical_+_geometry]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rectangular_+_connector
*CAT: n
*SEM: unaryRel[rel=rectangular_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rectangular_+_connector
*CAT: n
*SEM: twoRel[rel=rectangular_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rectangular_+_connector
*CAT: n
*SEM: twoRel[rel=rectangular_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rectangular_+_connector
*CAT: n
*SEM: orRel[rel=rectangular_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: open_+_conduit
*CAT: n
*SEM: unaryRel[rel=open_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: open_+_conduit
*CAT: n
*SEM: twoRel[rel=open_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: open_+_conduit
*CAT: n
*SEM: twoRel[rel=open_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: open_+_conduit
*CAT: n
*SEM: orRel[rel=open_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: yellow_+_asne0646_+_identification
*CAT: n
*SEM: unaryRel[rel=yellow_+_asne0646_+_identification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: yellow_+_asne0646_+_identification
*CAT: n
*SEM: twoRel[rel=yellow_+_asne0646_+_identification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: yellow_+_asne0646_+_identification
*CAT: n
*SEM: twoRel[rel=yellow_+_asne0646_+_identification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: yellow_+_asne0646_+_identification
*CAT: n
*SEM: orRel[rel=yellow_+_asne0646_+_identification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_connector
*CAT: n
*SEM: unaryRel[rel=standard_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_connector
*CAT: n
*SEM: twoRel[rel=standard_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_connector
*CAT: n
*SEM: twoRel[rel=standard_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_connector
*CAT: n
*SEM: orRel[rel=standard_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: keeping_+_a_+_minimum_+_distance_+_of_+_10mm
*CAT: n
*SEM: unaryRel[rel=keeping_+_a_+_minimum_+_distance_+_of_+_10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: keeping_+_a_+_minimum_+_distance_+_of_+_10mm
*CAT: n
*SEM: twoRel[rel=keeping_+_a_+_minimum_+_distance_+_of_+_10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: keeping_+_a_+_minimum_+_distance_+_of_+_10mm
*CAT: n
*SEM: twoRel[rel=keeping_+_a_+_minimum_+_distance_+_of_+_10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: keeping_+_a_+_minimum_+_distance_+_of_+_10mm
*CAT: n
*SEM: orRel[rel=keeping_+_a_+_minimum_+_distance_+_of_+_10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movement
*CAT: n
*SEM: unaryRel[rel=movement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movement
*CAT: n
*SEM: twoRel[rel=movement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movement
*CAT: n
*SEM: twoRel[rel=movement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movement
*CAT: n
*SEM: orRel[rel=movement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locations_+_where_+_fluids_+_are_+_not_+_drained
*CAT: n
*SEM: unaryRel[rel=locations_+_where_+_fluids_+_are_+_not_+_drained]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locations_+_where_+_fluids_+_are_+_not_+_drained
*CAT: n
*SEM: twoRel[rel=locations_+_where_+_fluids_+_are_+_not_+_drained]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locations_+_where_+_fluids_+_are_+_not_+_drained
*CAT: n
*SEM: twoRel[rel=locations_+_where_+_fluids_+_are_+_not_+_drained]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locations_+_where_+_fluids_+_are_+_not_+_drained
*CAT: n
*SEM: orRel[rel=locations_+_where_+_fluids_+_are_+_not_+_drained]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-_single_+_hole_-_invcomma_-__+_type_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=_-_invcomma_-_single_+_hole_-_invcomma_-__+_type_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-_single_+_hole_-_invcomma_-__+_type_+_clamp-block
*CAT: n
*SEM: twoRel[rel=_-_invcomma_-_single_+_hole_-_invcomma_-__+_type_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-_single_+_hole_-_invcomma_-__+_type_+_clamp-block
*CAT: n
*SEM: twoRel[rel=_-_invcomma_-_single_+_hole_-_invcomma_-__+_type_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-_single_+_hole_-_invcomma_-__+_type_+_clamp-block
*CAT: n
*SEM: orRel[rel=_-_invcomma_-_single_+_hole_-_invcomma_-__+_type_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fod
*CAT: n
*SEM: unaryRel[rel=fod]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fod
*CAT: n
*SEM: twoRel[rel=fod]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fod
*CAT: n
*SEM: twoRel[rel=fod]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fod
*CAT: n
*SEM: orRel[rel=fod]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stection
*CAT: n
*SEM: unaryRel[rel=stection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stection
*CAT: n
*SEM: twoRel[rel=stection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stection
*CAT: n
*SEM: twoRel[rel=stection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stection
*CAT: n
*SEM: orRel[rel=stection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 60497
*CAT: n
*SEM: unaryRel[rel=60497]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 60497
*CAT: n
*SEM: twoRel[rel=60497]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 60497
*CAT: n
*SEM: twoRel[rel=60497]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 60497
*CAT: n
*SEM: orRel[rel=60497]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes
*CAT: n
*SEM: unaryRel[rel=pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes
*CAT: n
*SEM: twoRel[rel=pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes
*CAT: n
*SEM: twoRel[rel=pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes
*CAT: n
*SEM: orRel[rel=pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aramid
*CAT: n
*SEM: unaryRel[rel=aramid]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aramid
*CAT: n
*SEM: twoRel[rel=aramid]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aramid
*CAT: n
*SEM: twoRel[rel=aramid]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aramid
*CAT: n
*SEM: orRel[rel=aramid]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50mm_+_d_+__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=50mm_+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50mm_+_d_+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=50mm_+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50mm_+_d_+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=50mm_+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50mm_+_d_+__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=50mm_+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_abs0916_+_shrink
*CAT: n
*SEM: unaryRel[rel=two_+_abs0916_+_shrink]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_abs0916_+_shrink
*CAT: n
*SEM: twoRel[rel=two_+_abs0916_+_shrink]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_abs0916_+_shrink
*CAT: n
*SEM: twoRel[rel=two_+_abs0916_+_shrink]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_abs0916_+_shrink
*CAT: n
*SEM: orRel[rel=two_+_abs0916_+_shrink]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: near_+_electrical_+_routings
*CAT: n
*SEM: unaryRel[rel=near_+_electrical_+_routings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: near_+_electrical_+_routings
*CAT: n
*SEM: twoRel[rel=near_+_electrical_+_routings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: near_+_electrical_+_routings
*CAT: n
*SEM: twoRel[rel=near_+_electrical_+_routings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: near_+_electrical_+_routings
*CAT: n
*SEM: orRel[rel=near_+_electrical_+_routings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_20mm
*CAT: n
*SEM: unaryRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_20mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_20mm
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_20mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_20mm
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_20mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_20mm
*CAT: n
*SEM: orRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_20mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna2101
*CAT: n
*SEM: unaryRel[rel=asna2101]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna2101
*CAT: n
*SEM: twoRel[rel=asna2101]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna2101
*CAT: n
*SEM: twoRel[rel=asna2101]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna2101
*CAT: n
*SEM: orRel[rel=asna2101]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unblanked_+_ventilation_+_holes
*CAT: n
*SEM: unaryRel[rel=unblanked_+_ventilation_+_holes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unblanked_+_ventilation_+_holes
*CAT: n
*SEM: twoRel[rel=unblanked_+_ventilation_+_holes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unblanked_+_ventilation_+_holes
*CAT: n
*SEM: twoRel[rel=unblanked_+_ventilation_+_holes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unblanked_+_ventilation_+_holes
*CAT: n
*SEM: orRel[rel=unblanked_+_ventilation_+_holes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_component_+_vc
*CAT: n
*SEM: unaryRel[rel=each_+_component_+_vc]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_component_+_vc
*CAT: n
*SEM: twoRel[rel=each_+_component_+_vc]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_component_+_vc
*CAT: n
*SEM: twoRel[rel=each_+_component_+_vc]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_component_+_vc
*CAT: n
*SEM: orRel[rel=each_+_component_+_vc]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_is_+_possible
*CAT: n
*SEM: unaryRel[rel=structure_+_is_+_possible]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_is_+_possible
*CAT: n
*SEM: twoRel[rel=structure_+_is_+_possible]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_is_+_possible
*CAT: n
*SEM: twoRel[rel=structure_+_is_+_possible]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_is_+_possible
*CAT: n
*SEM: orRel[rel=structure_+_is_+_possible]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_routing
*CAT: n
*SEM: unaryRel[rel=straight_+_routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_routing
*CAT: n
*SEM: twoRel[rel=straight_+_routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_routing
*CAT: n
*SEM: twoRel[rel=straight_+_routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_routing
*CAT: n
*SEM: orRel[rel=straight_+_routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_axis_+_orientation
*CAT: n
*SEM: unaryRel[rel=vertical_+_axis_+_orientation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_axis_+_orientation
*CAT: n
*SEM: twoRel[rel=vertical_+_axis_+_orientation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_axis_+_orientation
*CAT: n
*SEM: twoRel[rel=vertical_+_axis_+_orientation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_axis_+_orientation
*CAT: n
*SEM: orRel[rel=vertical_+_axis_+_orientation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torque_+_tightening_+_value_+_of_+_2.1_-_plusminus_-_10_-_percent_-__+_nm
*CAT: n
*SEM: unaryRel[rel=torque_+_tightening_+_value_+_of_+_2.1_-_plusminus_-_10_-_percent_-__+_nm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torque_+_tightening_+_value_+_of_+_2.1_-_plusminus_-_10_-_percent_-__+_nm
*CAT: n
*SEM: twoRel[rel=torque_+_tightening_+_value_+_of_+_2.1_-_plusminus_-_10_-_percent_-__+_nm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torque_+_tightening_+_value_+_of_+_2.1_-_plusminus_-_10_-_percent_-__+_nm
*CAT: n
*SEM: twoRel[rel=torque_+_tightening_+_value_+_of_+_2.1_-_plusminus_-_10_-_percent_-__+_nm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torque_+_tightening_+_value_+_of_+_2.1_-_plusminus_-_10_-_percent_-__+_nm
*CAT: n
*SEM: orRel[rel=torque_+_tightening_+_value_+_of_+_2.1_-_plusminus_-_10_-_percent_-__+_nm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: orRel[rel=virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: complementary_+_fixing
*CAT: n
*SEM: unaryRel[rel=complementary_+_fixing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: complementary_+_fixing
*CAT: n
*SEM: twoRel[rel=complementary_+_fixing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: complementary_+_fixing
*CAT: n
*SEM: twoRel[rel=complementary_+_fixing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: complementary_+_fixing
*CAT: n
*SEM: orRel[rel=complementary_+_fixing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: directly_+_to
*CAT: n
*SEM: unaryRel[rel=directly_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: directly_+_to
*CAT: n
*SEM: twoRel[rel=directly_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: directly_+_to
*CAT: n
*SEM: twoRel[rel=directly_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: directly_+_to
*CAT: n
*SEM: orRel[rel=directly_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1339-d
*CAT: n
*SEM: unaryRel[rel=abs1339-d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1339-d
*CAT: n
*SEM: twoRel[rel=abs1339-d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1339-d
*CAT: n
*SEM: twoRel[rel=abs1339-d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1339-d
*CAT: n
*SEM: orRel[rel=abs1339-d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 30_+__-_percent_-_
*CAT: n
*SEM: unaryRel[rel=30_+__-_percent_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 30_+__-_percent_-_
*CAT: n
*SEM: twoRel[rel=30_+__-_percent_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 30_+__-_percent_-_
*CAT: n
*SEM: twoRel[rel=30_+__-_percent_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 30_+__-_percent_-_
*CAT: n
*SEM: orRel[rel=30_+__-_percent_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cabin_+_monuments_+_such
*CAT: n
*SEM: unaryRel[rel=cabin_+_monuments_+_such]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cabin_+_monuments_+_such
*CAT: n
*SEM: twoRel[rel=cabin_+_monuments_+_such]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cabin_+_monuments_+_such
*CAT: n
*SEM: twoRel[rel=cabin_+_monuments_+_such]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cabin_+_monuments_+_such
*CAT: n
*SEM: orRel[rel=cabin_+_monuments_+_such]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: although_+_these
*CAT: n
*SEM: unaryRel[rel=although_+_these]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: although_+_these
*CAT: n
*SEM: twoRel[rel=although_+_these]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: although_+_these
*CAT: n
*SEM: twoRel[rel=although_+_these]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: although_+_these
*CAT: n
*SEM: orRel[rel=although_+_these]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_identification_+_labels
*CAT: n
*SEM: unaryRel[rel=route_+_identification_+_labels]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_identification_+_labels
*CAT: n
*SEM: twoRel[rel=route_+_identification_+_labels]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_identification_+_labels
*CAT: n
*SEM: twoRel[rel=route_+_identification_+_labels]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_identification_+_labels
*CAT: n
*SEM: orRel[rel=route_+_identification_+_labels]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tdd92s002d
*CAT: n
*SEM: unaryRel[rel=tdd92s002d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tdd92s002d
*CAT: n
*SEM: twoRel[rel=tdd92s002d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tdd92s002d
*CAT: n
*SEM: twoRel[rel=tdd92s002d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tdd92s002d
*CAT: n
*SEM: orRel[rel=tdd92s002d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_unions
*CAT: n
*SEM: unaryRel[rel=special_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_unions
*CAT: n
*SEM: twoRel[rel=special_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_unions
*CAT: n
*SEM: twoRel[rel=special_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_unions
*CAT: n
*SEM: orRel[rel=special_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_points
*CAT: n
*SEM: unaryRel[rel=low_+_points]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_points
*CAT: n
*SEM: twoRel[rel=low_+_points]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_points
*CAT: n
*SEM: twoRel[rel=low_+_points]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_points
*CAT: n
*SEM: orRel[rel=low_+_points]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en6049_+_split_+_conduit_+_when
*CAT: n
*SEM: unaryRel[rel=en6049_+_split_+_conduit_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en6049_+_split_+_conduit_+_when
*CAT: n
*SEM: twoRel[rel=en6049_+_split_+_conduit_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en6049_+_split_+_conduit_+_when
*CAT: n
*SEM: twoRel[rel=en6049_+_split_+_conduit_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en6049_+_split_+_conduit_+_when
*CAT: n
*SEM: orRel[rel=en6049_+_split_+_conduit_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: material_+_ptfe
*CAT: n
*SEM: unaryRel[rel=material_+_ptfe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: material_+_ptfe
*CAT: n
*SEM: twoRel[rel=material_+_ptfe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: material_+_ptfe
*CAT: n
*SEM: twoRel[rel=material_+_ptfe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: material_+_ptfe
*CAT: n
*SEM: orRel[rel=material_+_ptfe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: peak_+_condition_+_minimum_+_150_-_degrees_-_c
*CAT: n
*SEM: unaryRel[rel=peak_+_condition_+_minimum_+_150_-_degrees_-_c]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: peak_+_condition_+_minimum_+_150_-_degrees_-_c
*CAT: n
*SEM: twoRel[rel=peak_+_condition_+_minimum_+_150_-_degrees_-_c]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: peak_+_condition_+_minimum_+_150_-_degrees_-_c
*CAT: n
*SEM: twoRel[rel=peak_+_condition_+_minimum_+_150_-_degrees_-_c]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: peak_+_condition_+_minimum_+_150_-_degrees_-_c
*CAT: n
*SEM: orRel[rel=peak_+_condition_+_minimum_+_150_-_degrees_-_c]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_printed_+_in_+_pink
*CAT: n
*SEM: unaryRel[rel=efcs_+_printed_+_in_+_pink]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_printed_+_in_+_pink
*CAT: n
*SEM: twoRel[rel=efcs_+_printed_+_in_+_pink]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_printed_+_in_+_pink
*CAT: n
*SEM: twoRel[rel=efcs_+_printed_+_in_+_pink]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_printed_+_in_+_pink
*CAT: n
*SEM: orRel[rel=efcs_+_printed_+_in_+_pink]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: having_+_no_+_less_+_than_+_three_+_support_+_points
*CAT: n
*SEM: unaryRel[rel=having_+_no_+_less_+_than_+_three_+_support_+_points]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: having_+_no_+_less_+_than_+_three_+_support_+_points
*CAT: n
*SEM: twoRel[rel=having_+_no_+_less_+_than_+_three_+_support_+_points]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: having_+_no_+_less_+_than_+_three_+_support_+_points
*CAT: n
*SEM: twoRel[rel=having_+_no_+_less_+_than_+_three_+_support_+_points]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: having_+_no_+_less_+_than_+_three_+_support_+_points
*CAT: n
*SEM: orRel[rel=having_+_no_+_less_+_than_+_three_+_support_+_points]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceways_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_the_+_gap_+_between_+_raceways_+_in_+_g_-_greaterThan_-__-_equalto_-_3mm
*CAT: n
*SEM: unaryRel[rel=raceways_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_the_+_gap_+_between_+_raceways_+_in_+_g_-_greaterThan_-__-_equalto_-_3mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceways_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_the_+_gap_+_between_+_raceways_+_in_+_g_-_greaterThan_-__-_equalto_-_3mm
*CAT: n
*SEM: twoRel[rel=raceways_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_the_+_gap_+_between_+_raceways_+_in_+_g_-_greaterThan_-__-_equalto_-_3mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceways_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_the_+_gap_+_between_+_raceways_+_in_+_g_-_greaterThan_-__-_equalto_-_3mm
*CAT: n
*SEM: twoRel[rel=raceways_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_the_+_gap_+_between_+_raceways_+_in_+_g_-_greaterThan_-__-_equalto_-_3mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceways_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_the_+_gap_+_between_+_raceways_+_in_+_g_-_greaterThan_-__-_equalto_-_3mm
*CAT: n
*SEM: orRel[rel=raceways_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_the_+_gap_+_between_+_raceways_+_in_+_g_-_greaterThan_-__-_equalto_-_3mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp_+_area
*CAT: n
*SEM: unaryRel[rel=cfrp_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp_+_area
*CAT: n
*SEM: twoRel[rel=cfrp_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp_+_area
*CAT: n
*SEM: twoRel[rel=cfrp_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp_+_area
*CAT: n
*SEM: orRel[rel=cfrp_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation_+_point
*CAT: n
*SEM: unaryRel[rel=fixation_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation_+_point
*CAT: n
*SEM: twoRel[rel=fixation_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation_+_point
*CAT: n
*SEM: twoRel[rel=fixation_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation_+_point
*CAT: n
*SEM: orRel[rel=fixation_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_included_+_in_+_the_+_derivation_+_are_+_routed
*CAT: n
*SEM: unaryRel[rel=be_+_included_+_in_+_the_+_derivation_+_are_+_routed]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_included_+_in_+_the_+_derivation_+_are_+_routed
*CAT: n
*SEM: twoRel[rel=be_+_included_+_in_+_the_+_derivation_+_are_+_routed]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_included_+_in_+_the_+_derivation_+_are_+_routed
*CAT: n
*SEM: twoRel[rel=be_+_included_+_in_+_the_+_derivation_+_are_+_routed]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_included_+_in_+_the_+_derivation_+_are_+_routed
*CAT: n
*SEM: orRel[rel=be_+_included_+_in_+_the_+_derivation_+_are_+_routed]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: space_+_d
*CAT: n
*SEM: unaryRel[rel=space_+_d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: space_+_d
*CAT: n
*SEM: twoRel[rel=space_+_d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: space_+_d
*CAT: n
*SEM: twoRel[rel=space_+_d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: space_+_d
*CAT: n
*SEM: orRel[rel=space_+_d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vp
*CAT: n
*SEM: unaryRel[rel=vp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vp
*CAT: n
*SEM: twoRel[rel=vp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vp
*CAT: n
*SEM: twoRel[rel=vp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vp
*CAT: n
*SEM: orRel[rel=vp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_j
*CAT: n
*SEM: unaryRel[rel=col_obj1_j]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_j
*CAT: n
*SEM: twoRel[rel=col_obj1_j]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_j
*CAT: n
*SEM: twoRel[rel=col_obj1_j]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_j
*CAT: n
*SEM: orRel[rel=col_obj1_j]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: key_+_way_+_orientation
*CAT: n
*SEM: unaryRel[rel=key_+_way_+_orientation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: key_+_way_+_orientation
*CAT: n
*SEM: twoRel[rel=key_+_way_+_orientation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: key_+_way_+_orientation
*CAT: n
*SEM: twoRel[rel=key_+_way_+_orientation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: key_+_way_+_orientation
*CAT: n
*SEM: orRel[rel=key_+_way_+_orientation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: areas_+_where
*CAT: n
*SEM: unaryRel[rel=areas_+_where]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: areas_+_where
*CAT: n
*SEM: twoRel[rel=areas_+_where]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: areas_+_where
*CAT: n
*SEM: twoRel[rel=areas_+_where]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: areas_+_where
*CAT: n
*SEM: orRel[rel=areas_+_where]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_label
*CAT: n
*SEM: unaryRel[rel=abs_+_0724_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_label
*CAT: n
*SEM: twoRel[rel=abs_+_0724_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_label
*CAT: n
*SEM: twoRel[rel=abs_+_0724_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_label
*CAT: n
*SEM: orRel[rel=abs_+_0724_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removing_+_any_+_other_+_adjacent_+_item
*CAT: n
*SEM: unaryRel[rel=removing_+_any_+_other_+_adjacent_+_item]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removing_+_any_+_other_+_adjacent_+_item
*CAT: n
*SEM: twoRel[rel=removing_+_any_+_other_+_adjacent_+_item]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removing_+_any_+_other_+_adjacent_+_item
*CAT: n
*SEM: twoRel[rel=removing_+_any_+_other_+_adjacent_+_item]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removing_+_any_+_other_+_adjacent_+_item
*CAT: n
*SEM: orRel[rel=removing_+_any_+_other_+_adjacent_+_item]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 120_-_degrees_-_
*CAT: n
*SEM: unaryRel[rel=120_-_degrees_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 120_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=120_-_degrees_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 120_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=120_-_degrees_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 120_-_degrees_-_
*CAT: n
*SEM: orRel[rel=120_-_degrees_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e-route_+_alternatively
*CAT: n
*SEM: unaryRel[rel=e-route_+_alternatively]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e-route_+_alternatively
*CAT: n
*SEM: twoRel[rel=e-route_+_alternatively]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e-route_+_alternatively
*CAT: n
*SEM: twoRel[rel=e-route_+_alternatively]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e-route_+_alternatively
*CAT: n
*SEM: orRel[rel=e-route_+_alternatively]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: outer_+_surface_+_of_+_duct
*CAT: n
*SEM: unaryRel[rel=outer_+_surface_+_of_+_duct]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: outer_+_surface_+_of_+_duct
*CAT: n
*SEM: twoRel[rel=outer_+_surface_+_of_+_duct]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: outer_+_surface_+_of_+_duct
*CAT: n
*SEM: twoRel[rel=outer_+_surface_+_of_+_duct]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: outer_+_surface_+_of_+_duct
*CAT: n
*SEM: orRel[rel=outer_+_surface_+_of_+_duct]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zones_+_the_+_bundle_+_is_+_installed_+_in
*CAT: n
*SEM: unaryRel[rel=zones_+_the_+_bundle_+_is_+_installed_+_in]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zones_+_the_+_bundle_+_is_+_installed_+_in
*CAT: n
*SEM: twoRel[rel=zones_+_the_+_bundle_+_is_+_installed_+_in]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zones_+_the_+_bundle_+_is_+_installed_+_in
*CAT: n
*SEM: twoRel[rel=zones_+_the_+_bundle_+_is_+_installed_+_in]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zones_+_the_+_bundle_+_is_+_installed_+_in
*CAT: n
*SEM: orRel[rel=zones_+_the_+_bundle_+_is_+_installed_+_in]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5mm
*CAT: n
*SEM: unaryRel[rel=5mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5mm
*CAT: n
*SEM: twoRel[rel=5mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5mm
*CAT: n
*SEM: twoRel[rel=5mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5mm
*CAT: n
*SEM: orRel[rel=5mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_temperature
*CAT: n
*SEM: unaryRel[rel=cable_+_temperature]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_temperature
*CAT: n
*SEM: twoRel[rel=cable_+_temperature]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_temperature
*CAT: n
*SEM: twoRel[rel=cable_+_temperature]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_temperature
*CAT: n
*SEM: orRel[rel=cable_+_temperature]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: long_+_flexible_+_hoses_+_however
*CAT: n
*SEM: unaryRel[rel=long_+_flexible_+_hoses_+_however]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: long_+_flexible_+_hoses_+_however
*CAT: n
*SEM: twoRel[rel=long_+_flexible_+_hoses_+_however]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: long_+_flexible_+_hoses_+_however
*CAT: n
*SEM: twoRel[rel=long_+_flexible_+_hoses_+_however]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: long_+_flexible_+_hoses_+_however
*CAT: n
*SEM: orRel[rel=long_+_flexible_+_hoses_+_however]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: area_+_d_+__-_greaterThan_-__+__-_equalto_-_10
*CAT: n
*SEM: unaryRel[rel=area_+_d_+__-_greaterThan_-__+__-_equalto_-_10]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: area_+_d_+__-_greaterThan_-__+__-_equalto_-_10
*CAT: n
*SEM: twoRel[rel=area_+_d_+__-_greaterThan_-__+__-_equalto_-_10]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: area_+_d_+__-_greaterThan_-__+__-_equalto_-_10
*CAT: n
*SEM: twoRel[rel=area_+_d_+__-_greaterThan_-__+__-_equalto_-_10]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: area_+_d_+__-_greaterThan_-__+__-_equalto_-_10
*CAT: n
*SEM: orRel[rel=area_+_d_+__-_greaterThan_-__+__-_equalto_-_10]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier
*CAT: n
*SEM: unaryRel[rel=definition_+_dossier]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier
*CAT: n
*SEM: twoRel[rel=definition_+_dossier]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier
*CAT: n
*SEM: twoRel[rel=definition_+_dossier]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier
*CAT: n
*SEM: orRel[rel=definition_+_dossier]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: br_+__+__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: br_+__+__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420_+_lacing_+_tape
*CAT: n
*SEM: unaryRel[rel=nsa8420_+_lacing_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420_+_lacing_+_tape
*CAT: n
*SEM: twoRel[rel=nsa8420_+_lacing_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420_+_lacing_+_tape
*CAT: n
*SEM: twoRel[rel=nsa8420_+_lacing_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420_+_lacing_+_tape
*CAT: n
*SEM: orRel[rel=nsa8420_+_lacing_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 100mm_+_+_+_vu_+_length_+_to_+_the_+_wiring
*CAT: n
*SEM: unaryRel[rel=100mm_+_+_+_vu_+_length_+_to_+_the_+_wiring]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 100mm_+_+_+_vu_+_length_+_to_+_the_+_wiring
*CAT: n
*SEM: twoRel[rel=100mm_+_+_+_vu_+_length_+_to_+_the_+_wiring]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 100mm_+_+_+_vu_+_length_+_to_+_the_+_wiring
*CAT: n
*SEM: twoRel[rel=100mm_+_+_+_vu_+_length_+_to_+_the_+_wiring]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 100mm_+_+_+_vu_+_length_+_to_+_the_+_wiring
*CAT: n
*SEM: orRel[rel=100mm_+_+_+_vu_+_length_+_to_+_the_+_wiring]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: y+-xxx
*CAT: n
*SEM: unaryRel[rel=y+-xxx]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: y+-xxx
*CAT: n
*SEM: twoRel[rel=y+-xxx]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: y+-xxx
*CAT: n
*SEM: twoRel[rel=y+-xxx]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: y+-xxx
*CAT: n
*SEM: orRel[rel=y+-xxx]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 30mm
*CAT: n
*SEM: unaryRel[rel=30mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 30mm
*CAT: n
*SEM: twoRel[rel=30mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 30mm
*CAT: n
*SEM: twoRel[rel=30mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 30mm
*CAT: n
*SEM: orRel[rel=30mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: its_+_own_+_mounting_+_plate
*CAT: n
*SEM: unaryRel[rel=its_+_own_+_mounting_+_plate]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: its_+_own_+_mounting_+_plate
*CAT: n
*SEM: twoRel[rel=its_+_own_+_mounting_+_plate]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: its_+_own_+_mounting_+_plate
*CAT: n
*SEM: twoRel[rel=its_+_own_+_mounting_+_plate]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: its_+_own_+_mounting_+_plate
*CAT: n
*SEM: orRel[rel=its_+_own_+_mounting_+_plate]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as21921
*CAT: n
*SEM: unaryRel[rel=as21921]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as21921
*CAT: n
*SEM: twoRel[rel=as21921]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as21921
*CAT: n
*SEM: twoRel[rel=as21921]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as21921
*CAT: n
*SEM: orRel[rel=as21921]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: switch
*CAT: n
*SEM: unaryRel[rel=switch]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: switch
*CAT: n
*SEM: twoRel[rel=switch]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: switch
*CAT: n
*SEM: twoRel[rel=switch]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: switch
*CAT: n
*SEM: orRel[rel=switch]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relative_+_movement
*CAT: n
*SEM: unaryRel[rel=relative_+_movement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relative_+_movement
*CAT: n
*SEM: twoRel[rel=relative_+_movement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relative_+_movement
*CAT: n
*SEM: twoRel[rel=relative_+_movement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relative_+_movement
*CAT: n
*SEM: orRel[rel=relative_+_movement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable
*CAT: n
*SEM: unaryRel[rel=cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable
*CAT: n
*SEM: twoRel[rel=cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable
*CAT: n
*SEM: twoRel[rel=cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable
*CAT: n
*SEM: orRel[rel=cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loads
*CAT: n
*SEM: unaryRel[rel=loads]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loads
*CAT: n
*SEM: twoRel[rel=loads]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loads
*CAT: n
*SEM: twoRel[rel=loads]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loads
*CAT: n
*SEM: orRel[rel=loads]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: seletion
*CAT: n
*SEM: unaryRel[rel=seletion]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: seletion
*CAT: n
*SEM: twoRel[rel=seletion]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: seletion
*CAT: n
*SEM: twoRel[rel=seletion]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: seletion
*CAT: n
*SEM: orRel[rel=seletion]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646-11_+_stowage_+_receptable_+_equipped
*CAT: n
*SEM: unaryRel[rel=en_+_3646-11_+_stowage_+_receptable_+_equipped]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646-11_+_stowage_+_receptable_+_equipped
*CAT: n
*SEM: twoRel[rel=en_+_3646-11_+_stowage_+_receptable_+_equipped]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646-11_+_stowage_+_receptable_+_equipped
*CAT: n
*SEM: twoRel[rel=en_+_3646-11_+_stowage_+_receptable_+_equipped]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646-11_+_stowage_+_receptable_+_equipped
*CAT: n
*SEM: orRel[rel=en_+_3646-11_+_stowage_+_receptable_+_equipped]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_6mm._+_the_+_normal_+_gap_+_between_+_the_+_structure
*CAT: n
*SEM: unaryRel[rel=least_+_6mm._+_the_+_normal_+_gap_+_between_+_the_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_6mm._+_the_+_normal_+_gap_+_between_+_the_+_structure
*CAT: n
*SEM: twoRel[rel=least_+_6mm._+_the_+_normal_+_gap_+_between_+_the_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_6mm._+_the_+_normal_+_gap_+_between_+_the_+_structure
*CAT: n
*SEM: twoRel[rel=least_+_6mm._+_the_+_normal_+_gap_+_between_+_the_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_6mm._+_the_+_normal_+_gap_+_between_+_the_+_structure
*CAT: n
*SEM: orRel[rel=least_+_6mm._+_the_+_normal_+_gap_+_between_+_the_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_repair.
*CAT: n
*SEM: unaryRel[rel=case_+_of_+_repair.]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_repair.
*CAT: n
*SEM: twoRel[rel=case_+_of_+_repair.]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_repair.
*CAT: n
*SEM: twoRel[rel=case_+_of_+_repair.]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_repair.
*CAT: n
*SEM: orRel[rel=case_+_of_+_repair.]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: between_+_last_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=between_+_last_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: between_+_last_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=between_+_last_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: between_+_last_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=between_+_last_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: between_+_last_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=between_+_last_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: either_+_a_+_bulkhead
*CAT: n
*SEM: unaryRel[rel=either_+_a_+_bulkhead]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: either_+_a_+_bulkhead
*CAT: n
*SEM: twoRel[rel=either_+_a_+_bulkhead]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: either_+_a_+_bulkhead
*CAT: n
*SEM: twoRel[rel=either_+_a_+_bulkhead]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: either_+_a_+_bulkhead
*CAT: n
*SEM: orRel[rel=either_+_a_+_bulkhead]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: off
*CAT: n
*SEM: unaryRel[rel=off]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: off
*CAT: n
*SEM: twoRel[rel=off]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: off
*CAT: n
*SEM: twoRel[rel=off]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: off
*CAT: n
*SEM: orRel[rel=off]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shrink_+_temperature_+_which
*CAT: n
*SEM: unaryRel[rel=shrink_+_temperature_+_which]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shrink_+_temperature_+_which
*CAT: n
*SEM: twoRel[rel=shrink_+_temperature_+_which]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shrink_+_temperature_+_which
*CAT: n
*SEM: twoRel[rel=shrink_+_temperature_+_which]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shrink_+_temperature_+_which
*CAT: n
*SEM: orRel[rel=shrink_+_temperature_+_which]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bobbin_+_configuration
*CAT: n
*SEM: unaryRel[rel=bobbin_+_configuration]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bobbin_+_configuration
*CAT: n
*SEM: twoRel[rel=bobbin_+_configuration]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bobbin_+_configuration
*CAT: n
*SEM: twoRel[rel=bobbin_+_configuration]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bobbin_+_configuration
*CAT: n
*SEM: orRel[rel=bobbin_+_configuration]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dynamic_+_bundles
*CAT: n
*SEM: unaryRel[rel=dynamic_+_bundles]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dynamic_+_bundles
*CAT: n
*SEM: twoRel[rel=dynamic_+_bundles]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dynamic_+_bundles
*CAT: n
*SEM: twoRel[rel=dynamic_+_bundles]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dynamic_+_bundles
*CAT: n
*SEM: orRel[rel=dynamic_+_bundles]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_table._+_where_+_other_+_system_+_tdd_+_clearances_+_are_+_different
*CAT: n
*SEM: unaryRel[rel=attached_+_table._+_where_+_other_+_system_+_tdd_+_clearances_+_are_+_different]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_table._+_where_+_other_+_system_+_tdd_+_clearances_+_are_+_different
*CAT: n
*SEM: twoRel[rel=attached_+_table._+_where_+_other_+_system_+_tdd_+_clearances_+_are_+_different]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_table._+_where_+_other_+_system_+_tdd_+_clearances_+_are_+_different
*CAT: n
*SEM: twoRel[rel=attached_+_table._+_where_+_other_+_system_+_tdd_+_clearances_+_are_+_different]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_table._+_where_+_other_+_system_+_tdd_+_clearances_+_are_+_different
*CAT: n
*SEM: orRel[rel=attached_+_table._+_where_+_other_+_system_+_tdd_+_clearances_+_are_+_different]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve
*CAT: n
*SEM: unaryRel[rel=sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve
*CAT: n
*SEM: twoRel[rel=sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve
*CAT: n
*SEM: twoRel[rel=sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve
*CAT: n
*SEM: orRel[rel=sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillrate
*CAT: n
*SEM: unaryRel[rel=fillrate]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillrate
*CAT: n
*SEM: twoRel[rel=fillrate]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillrate
*CAT: n
*SEM: twoRel[rel=fillrate]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillrate
*CAT: n
*SEM: orRel[rel=fillrate]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 15mm_+_to_+_housing
*CAT: n
*SEM: unaryRel[rel=15mm_+_to_+_housing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 15mm_+_to_+_housing
*CAT: n
*SEM: twoRel[rel=15mm_+_to_+_housing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 15mm_+_to_+_housing
*CAT: n
*SEM: twoRel[rel=15mm_+_to_+_housing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 15mm_+_to_+_housing
*CAT: n
*SEM: orRel[rel=15mm_+_to_+_housing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_connector
*CAT: n
*SEM: unaryRel[rel=unused_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_connector
*CAT: n
*SEM: twoRel[rel=unused_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_connector
*CAT: n
*SEM: twoRel[rel=unused_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_connector
*CAT: n
*SEM: orRel[rel=unused_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient
*CAT: n
*SEM: unaryRel[rel=sufficient]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient
*CAT: n
*SEM: twoRel[rel=sufficient]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient
*CAT: n
*SEM: twoRel[rel=sufficient]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient
*CAT: n
*SEM: orRel[rel=sufficient]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch
*CAT: n
*SEM: unaryRel[rel=pitch]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch
*CAT: n
*SEM: twoRel[rel=pitch]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch
*CAT: n
*SEM: twoRel[rel=pitch]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch
*CAT: n
*SEM: orRel[rel=pitch]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: above
*CAT: n
*SEM: unaryRel[rel=above]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: above
*CAT: n
*SEM: twoRel[rel=above]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: above
*CAT: n
*SEM: twoRel[rel=above]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: above
*CAT: n
*SEM: orRel[rel=above]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_priority
*CAT: n
*SEM: unaryRel[rel=second_+_priority]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_priority
*CAT: n
*SEM: twoRel[rel=second_+_priority]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_priority
*CAT: n
*SEM: twoRel[rel=second_+_priority]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_priority
*CAT: n
*SEM: orRel[rel=second_+_priority]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wires_+_of_+_gauge_+_26
*CAT: n
*SEM: unaryRel[rel=wires_+_of_+_gauge_+_26]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wires_+_of_+_gauge_+_26
*CAT: n
*SEM: twoRel[rel=wires_+_of_+_gauge_+_26]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wires_+_of_+_gauge_+_26
*CAT: n
*SEM: twoRel[rel=wires_+_of_+_gauge_+_26]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wires_+_of_+_gauge_+_26
*CAT: n
*SEM: orRel[rel=wires_+_of_+_gauge_+_26]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_wall
*CAT: n
*SEM: unaryRel[rel=structural_+_wall]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_wall
*CAT: n
*SEM: twoRel[rel=structural_+_wall]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_wall
*CAT: n
*SEM: twoRel[rel=structural_+_wall]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_wall
*CAT: n
*SEM: orRel[rel=structural_+_wall]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: independent_+_parallel_+_detection_+_loops
*CAT: n
*SEM: unaryRel[rel=independent_+_parallel_+_detection_+_loops]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: independent_+_parallel_+_detection_+_loops
*CAT: n
*SEM: twoRel[rel=independent_+_parallel_+_detection_+_loops]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: independent_+_parallel_+_detection_+_loops
*CAT: n
*SEM: twoRel[rel=independent_+_parallel_+_detection_+_loops]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: independent_+_parallel_+_detection_+_loops
*CAT: n
*SEM: orRel[rel=independent_+_parallel_+_detection_+_loops]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_connector
*CAT: n
*SEM: unaryRel[rel=one_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_connector
*CAT: n
*SEM: twoRel[rel=one_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_connector
*CAT: n
*SEM: twoRel[rel=one_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_connector
*CAT: n
*SEM: orRel[rel=one_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_fitted_+_near_+_that_+_receptable
*CAT: n
*SEM: unaryRel[rel=label_+_fitted_+_near_+_that_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_fitted_+_near_+_that_+_receptable
*CAT: n
*SEM: twoRel[rel=label_+_fitted_+_near_+_that_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_fitted_+_near_+_that_+_receptable
*CAT: n
*SEM: twoRel[rel=label_+_fitted_+_near_+_that_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_fitted_+_near_+_that_+_receptable
*CAT: n
*SEM: orRel[rel=label_+_fitted_+_near_+_that_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: upwards
*CAT: n
*SEM: unaryRel[rel=upwards]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: upwards
*CAT: n
*SEM: twoRel[rel=upwards]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: upwards
*CAT: n
*SEM: twoRel[rel=upwards]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: upwards
*CAT: n
*SEM: orRel[rel=upwards]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0_-_degrees_-_
*CAT: n
*SEM: unaryRel[rel=0_-_degrees_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=0_-_degrees_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=0_-_degrees_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0_-_degrees_-_
*CAT: n
*SEM: orRel[rel=0_-_degrees_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permanent_+_unions
*CAT: n
*SEM: unaryRel[rel=permanent_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permanent_+_unions
*CAT: n
*SEM: twoRel[rel=permanent_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permanent_+_unions
*CAT: n
*SEM: twoRel[rel=permanent_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permanent_+_unions
*CAT: n
*SEM: orRel[rel=permanent_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hinge
*CAT: n
*SEM: unaryRel[rel=hinge]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hinge
*CAT: n
*SEM: twoRel[rel=hinge]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hinge
*CAT: n
*SEM: twoRel[rel=hinge]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hinge
*CAT: n
*SEM: orRel[rel=hinge]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0541_+_splice
*CAT: n
*SEM: unaryRel[rel=asne_+_0541_+_splice]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0541_+_splice
*CAT: n
*SEM: twoRel[rel=asne_+_0541_+_splice]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0541_+_splice
*CAT: n
*SEM: twoRel[rel=asne_+_0541_+_splice]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0541_+_splice
*CAT: n
*SEM: orRel[rel=asne_+_0541_+_splice]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_2.5_+_mm_+_additional_+_clearance_+_between_+_the_+_bundle_+_and
*CAT: n
*SEM: unaryRel[rel=ensure_+_2.5_+_mm_+_additional_+_clearance_+_between_+_the_+_bundle_+_and]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_2.5_+_mm_+_additional_+_clearance_+_between_+_the_+_bundle_+_and
*CAT: n
*SEM: twoRel[rel=ensure_+_2.5_+_mm_+_additional_+_clearance_+_between_+_the_+_bundle_+_and]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_2.5_+_mm_+_additional_+_clearance_+_between_+_the_+_bundle_+_and
*CAT: n
*SEM: twoRel[rel=ensure_+_2.5_+_mm_+_additional_+_clearance_+_between_+_the_+_bundle_+_and]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_2.5_+_mm_+_additional_+_clearance_+_between_+_the_+_bundle_+_and
*CAT: n
*SEM: orRel[rel=ensure_+_2.5_+_mm_+_additional_+_clearance_+_between_+_the_+_bundle_+_and]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_direction
*CAT: n
*SEM: unaryRel[rel=same_+_direction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_direction
*CAT: n
*SEM: twoRel[rel=same_+_direction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_direction
*CAT: n
*SEM: twoRel[rel=same_+_direction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_direction
*CAT: n
*SEM: orRel[rel=same_+_direction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_pipe_+_sizes
*CAT: n
*SEM: unaryRel[rel=large_+_pipe_+_sizes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_pipe_+_sizes
*CAT: n
*SEM: twoRel[rel=large_+_pipe_+_sizes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_pipe_+_sizes
*CAT: n
*SEM: twoRel[rel=large_+_pipe_+_sizes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_pipe_+_sizes
*CAT: n
*SEM: orRel[rel=large_+_pipe_+_sizes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_8420_+_lacing_+_tape
*CAT: n
*SEM: unaryRel[rel=nsa_+_8420_+_lacing_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_8420_+_lacing_+_tape
*CAT: n
*SEM: twoRel[rel=nsa_+_8420_+_lacing_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_8420_+_lacing_+_tape
*CAT: n
*SEM: twoRel[rel=nsa_+_8420_+_lacing_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_8420_+_lacing_+_tape
*CAT: n
*SEM: orRel[rel=nsa_+_8420_+_lacing_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum
*CAT: n
*SEM: unaryRel[rel=minimum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum
*CAT: n
*SEM: twoRel[rel=minimum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum
*CAT: n
*SEM: twoRel[rel=minimum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum
*CAT: n
*SEM: orRel[rel=minimum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: para-aramid_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=para-aramid_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: para-aramid_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=para-aramid_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: para-aramid_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=para-aramid_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: para-aramid_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=para-aramid_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: major_+_potential_+_misalignments
*CAT: n
*SEM: unaryRel[rel=major_+_potential_+_misalignments]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: major_+_potential_+_misalignments
*CAT: n
*SEM: twoRel[rel=major_+_potential_+_misalignments]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: major_+_potential_+_misalignments
*CAT: n
*SEM: twoRel[rel=major_+_potential_+_misalignments]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: major_+_potential_+_misalignments
*CAT: n
*SEM: orRel[rel=major_+_potential_+_misalignments]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_type]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type
*CAT: n
*SEM: orRel[rel=p-clamp_+_type]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_in-situ_+_swaging
*CAT: n
*SEM: unaryRel[rel=an_+_in-situ_+_swaging]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_in-situ_+_swaging
*CAT: n
*SEM: twoRel[rel=an_+_in-situ_+_swaging]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_in-situ_+_swaging
*CAT: n
*SEM: twoRel[rel=an_+_in-situ_+_swaging]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_in-situ_+_swaging
*CAT: n
*SEM: orRel[rel=an_+_in-situ_+_swaging]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_stand-off_+__+_colonettes
*CAT: n
*SEM: unaryRel[rel=plastic_+_stand-off_+__+_colonettes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_stand-off_+__+_colonettes
*CAT: n
*SEM: twoRel[rel=plastic_+_stand-off_+__+_colonettes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_stand-off_+__+_colonettes
*CAT: n
*SEM: twoRel[rel=plastic_+_stand-off_+__+_colonettes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_stand-off_+__+_colonettes
*CAT: n
*SEM: orRel[rel=plastic_+_stand-off_+__+_colonettes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_to
*CAT: n
*SEM: unaryRel[rel=distance_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_to
*CAT: n
*SEM: twoRel[rel=distance_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_to
*CAT: n
*SEM: twoRel[rel=distance_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_to
*CAT: n
*SEM: orRel[rel=distance_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339_+_f
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_abs1339_+_f]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339_+_f
*CAT: n
*SEM: twoRel[rel=p-clamp_+_abs1339_+_f]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339_+_f
*CAT: n
*SEM: twoRel[rel=p-clamp_+_abs1339_+_f]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339_+_f
*CAT: n
*SEM: orRel[rel=p-clamp_+_abs1339_+_f]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_impression-stamped_+_identification_+_band_+_of_+_cres_+_steel_+_on
*CAT: n
*SEM: unaryRel[rel=an_+_impression-stamped_+_identification_+_band_+_of_+_cres_+_steel_+_on]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_impression-stamped_+_identification_+_band_+_of_+_cres_+_steel_+_on
*CAT: n
*SEM: twoRel[rel=an_+_impression-stamped_+_identification_+_band_+_of_+_cres_+_steel_+_on]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_impression-stamped_+_identification_+_band_+_of_+_cres_+_steel_+_on
*CAT: n
*SEM: twoRel[rel=an_+_impression-stamped_+_identification_+_band_+_of_+_cres_+_steel_+_on]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_impression-stamped_+_identification_+_band_+_of_+_cres_+_steel_+_on
*CAT: n
*SEM: orRel[rel=an_+_impression-stamped_+_identification_+_band_+_of_+_cres_+_steel_+_on]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+_definintion_+_for_+_support
*CAT: n
*SEM: unaryRel[rel=geometry_+_definintion_+_for_+_support]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+_definintion_+_for_+_support
*CAT: n
*SEM: twoRel[rel=geometry_+_definintion_+_for_+_support]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+_definintion_+_for_+_support
*CAT: n
*SEM: twoRel[rel=geometry_+_definintion_+_for_+_support]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+_definintion_+_for_+_support
*CAT: n
*SEM: orRel[rel=geometry_+_definintion_+_for_+_support]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_10mm
*CAT: n
*SEM: unaryRel[rel=minimum_+_10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_10mm
*CAT: n
*SEM: twoRel[rel=minimum_+_10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_10mm
*CAT: n
*SEM: twoRel[rel=minimum_+_10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_10mm
*CAT: n
*SEM: orRel[rel=minimum_+_10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: either_+_side
*CAT: n
*SEM: unaryRel[rel=either_+_side]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: either_+_side
*CAT: n
*SEM: twoRel[rel=either_+_side]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: either_+_side
*CAT: n
*SEM: twoRel[rel=either_+_side]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: either_+_side
*CAT: n
*SEM: orRel[rel=either_+_side]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one
*CAT: n
*SEM: unaryRel[rel=least_+_one]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one
*CAT: n
*SEM: twoRel[rel=least_+_one]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one
*CAT: n
*SEM: twoRel[rel=least_+_one]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one
*CAT: n
*SEM: orRel[rel=least_+_one]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: area_+_of_+_sharp_+_edge_+_of_+_bracket
*CAT: n
*SEM: unaryRel[rel=area_+_of_+_sharp_+_edge_+_of_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: area_+_of_+_sharp_+_edge_+_of_+_bracket
*CAT: n
*SEM: twoRel[rel=area_+_of_+_sharp_+_edge_+_of_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: area_+_of_+_sharp_+_edge_+_of_+_bracket
*CAT: n
*SEM: twoRel[rel=area_+_of_+_sharp_+_edge_+_of_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: area_+_of_+_sharp_+_edge_+_of_+_bracket
*CAT: n
*SEM: orRel[rel=area_+_of_+_sharp_+_edge_+_of_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_low_+_point
*CAT: n
*SEM: unaryRel[rel=any_+_low_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_low_+_point
*CAT: n
*SEM: twoRel[rel=any_+_low_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_low_+_point
*CAT: n
*SEM: twoRel[rel=any_+_low_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_low_+_point
*CAT: n
*SEM: orRel[rel=any_+_low_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049_+_split_+_conduit
*CAT: n
*SEM: unaryRel[rel=en_+_6049_+_split_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049_+_split_+_conduit
*CAT: n
*SEM: twoRel[rel=en_+_6049_+_split_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049_+_split_+_conduit
*CAT: n
*SEM: twoRel[rel=en_+_6049_+_split_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049_+_split_+_conduit
*CAT: n
*SEM: orRel[rel=en_+_6049_+_split_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_e.g._+_nsa_+_935504
*CAT: n
*SEM: unaryRel[rel=v-support_+_e.g._+_nsa_+_935504]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_e.g._+_nsa_+_935504
*CAT: n
*SEM: twoRel[rel=v-support_+_e.g._+_nsa_+_935504]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_e.g._+_nsa_+_935504
*CAT: n
*SEM: twoRel[rel=v-support_+_e.g._+_nsa_+_935504]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_e.g._+_nsa_+_935504
*CAT: n
*SEM: orRel[rel=v-support_+_e.g._+_nsa_+_935504]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_of_+_bundle
*CAT: n
*SEM: unaryRel[rel=minimum_+_of_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_of_+_bundle
*CAT: n
*SEM: twoRel[rel=minimum_+_of_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_of_+_bundle
*CAT: n
*SEM: twoRel[rel=minimum_+_of_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_of_+_bundle
*CAT: n
*SEM: orRel[rel=minimum_+_of_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne5107-b_+_arounfd_+_the_+_bundle
*CAT: n
*SEM: unaryRel[rel=asne5107-b_+_arounfd_+_the_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne5107-b_+_arounfd_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=asne5107-b_+_arounfd_+_the_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne5107-b_+_arounfd_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=asne5107-b_+_arounfd_+_the_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne5107-b_+_arounfd_+_the_+_bundle
*CAT: n
*SEM: orRel[rel=asne5107-b_+_arounfd_+_the_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: y-axis
*CAT: n
*SEM: unaryRel[rel=y-axis]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: y-axis
*CAT: n
*SEM: twoRel[rel=y-axis]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: y-axis
*CAT: n
*SEM: twoRel[rel=y-axis]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: y-axis
*CAT: n
*SEM: orRel[rel=y-axis]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachable_+_labels_+_according
*CAT: n
*SEM: unaryRel[rel=attachable_+_labels_+_according]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachable_+_labels_+_according
*CAT: n
*SEM: twoRel[rel=attachable_+_labels_+_according]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachable_+_labels_+_according
*CAT: n
*SEM: twoRel[rel=attachable_+_labels_+_according]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachable_+_labels_+_according
*CAT: n
*SEM: orRel[rel=attachable_+_labels_+_according]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum
*CAT: n
*SEM: unaryRel[rel=maximum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum
*CAT: n
*SEM: twoRel[rel=maximum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum
*CAT: n
*SEM: twoRel[rel=maximum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum
*CAT: n
*SEM: orRel[rel=maximum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_bundle
*CAT: n
*SEM: unaryRel[rel=two_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_bundle
*CAT: n
*SEM: twoRel[rel=two_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_bundle
*CAT: n
*SEM: twoRel[rel=two_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_bundle
*CAT: n
*SEM: orRel[rel=two_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4s
*CAT: n
*SEM: unaryRel[rel=4s]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4s
*CAT: n
*SEM: twoRel[rel=4s]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4s
*CAT: n
*SEM: twoRel[rel=4s]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4s
*CAT: n
*SEM: orRel[rel=4s]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2.5_+_mm_+_additional_+_clearance
*CAT: n
*SEM: unaryRel[rel=2.5_+_mm_+_additional_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2.5_+_mm_+_additional_+_clearance
*CAT: n
*SEM: twoRel[rel=2.5_+_mm_+_additional_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2.5_+_mm_+_additional_+_clearance
*CAT: n
*SEM: twoRel[rel=2.5_+_mm_+_additional_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2.5_+_mm_+_additional_+_clearance
*CAT: n
*SEM: orRel[rel=2.5_+_mm_+_additional_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_safety_+_wire
*CAT: n
*SEM: unaryRel[rel=least_+_one_+_safety_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_safety_+_wire
*CAT: n
*SEM: twoRel[rel=least_+_one_+_safety_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_safety_+_wire
*CAT: n
*SEM: twoRel[rel=least_+_one_+_safety_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_safety_+_wire
*CAT: n
*SEM: orRel[rel=least_+_one_+_safety_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure
*CAT: n
*SEM: unaryRel[rel=structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure
*CAT: n
*SEM: twoRel[rel=structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure
*CAT: n
*SEM: twoRel[rel=structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure
*CAT: n
*SEM: orRel[rel=structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_types_+_of_+_en6049
*CAT: n
*SEM: unaryRel[rel=other_+_types_+_of_+_en6049]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_types_+_of_+_en6049
*CAT: n
*SEM: twoRel[rel=other_+_types_+_of_+_en6049]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_types_+_of_+_en6049
*CAT: n
*SEM: twoRel[rel=other_+_types_+_of_+_en6049]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_types_+_of_+_en6049
*CAT: n
*SEM: orRel[rel=other_+_types_+_of_+_en6049]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_side_+_of_+_a_+_ramp
*CAT: n
*SEM: unaryRel[rel=on_+_side_+_of_+_a_+_ramp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_side_+_of_+_a_+_ramp
*CAT: n
*SEM: twoRel[rel=on_+_side_+_of_+_a_+_ramp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_side_+_of_+_a_+_ramp
*CAT: n
*SEM: twoRel[rel=on_+_side_+_of_+_a_+_ramp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_side_+_of_+_a_+_ramp
*CAT: n
*SEM: orRel[rel=on_+_side_+_of_+_a_+_ramp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: silicone_+_rubber
*CAT: n
*SEM: unaryRel[rel=silicone_+_rubber]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: silicone_+_rubber
*CAT: n
*SEM: twoRel[rel=silicone_+_rubber]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: silicone_+_rubber
*CAT: n
*SEM: twoRel[rel=silicone_+_rubber]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: silicone_+_rubber
*CAT: n
*SEM: orRel[rel=silicone_+_rubber]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: visibility
*CAT: n
*SEM: unaryRel[rel=visibility]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: visibility
*CAT: n
*SEM: twoRel[rel=visibility]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: visibility
*CAT: n
*SEM: twoRel[rel=visibility]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: visibility
*CAT: n
*SEM: orRel[rel=visibility]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 152_-_comma_-_4mm
*CAT: n
*SEM: unaryRel[rel=152_-_comma_-_4mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 152_-_comma_-_4mm
*CAT: n
*SEM: twoRel[rel=152_-_comma_-_4mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 152_-_comma_-_4mm
*CAT: n
*SEM: twoRel[rel=152_-_comma_-_4mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 152_-_comma_-_4mm
*CAT: n
*SEM: orRel[rel=152_-_comma_-_4mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_smallerThan_-_
*CAT: n
*SEM: unaryRel[rel=_-_smallerThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_smallerThan_-_
*CAT: n
*SEM: twoRel[rel=_-_smallerThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_smallerThan_-_
*CAT: n
*SEM: twoRel[rel=_-_smallerThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_smallerThan_-_
*CAT: n
*SEM: orRel[rel=_-_smallerThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_tee-_+_junction
*CAT: n
*SEM: unaryRel[rel=single_+_tee-_+_junction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_tee-_+_junction
*CAT: n
*SEM: twoRel[rel=single_+_tee-_+_junction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_tee-_+_junction
*CAT: n
*SEM: twoRel[rel=single_+_tee-_+_junction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_tee-_+_junction
*CAT: n
*SEM: orRel[rel=single_+_tee-_+_junction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_plane
*CAT: n
*SEM: unaryRel[rel=same_+_plane]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_plane
*CAT: n
*SEM: twoRel[rel=same_+_plane]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_plane
*CAT: n
*SEM: twoRel[rel=same_+_plane]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_plane
*CAT: n
*SEM: orRel[rel=same_+_plane]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_areas
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_areas
*CAT: n
*SEM: twoRel[rel=hydraulic_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_areas
*CAT: n
*SEM: twoRel[rel=hydraulic_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_areas
*CAT: n
*SEM: orRel[rel=hydraulic_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+_10mm
*CAT: n
*SEM: unaryRel[rel=d_+__-_smallerThan_-__+_10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+_10mm
*CAT: n
*SEM: twoRel[rel=d_+__-_smallerThan_-__+_10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+_10mm
*CAT: n
*SEM: twoRel[rel=d_+__-_smallerThan_-__+_10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+_10mm
*CAT: n
*SEM: orRel[rel=d_+__-_smallerThan_-__+_10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_10mm_+_after_+_loss_+_of_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=d_-_greaterThan_-__-_equalto_-__+_10mm_+_after_+_loss_+_of_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_10mm_+_after_+_loss_+_of_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=d_-_greaterThan_-__-_equalto_-__+_10mm_+_after_+_loss_+_of_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_10mm_+_after_+_loss_+_of_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=d_-_greaterThan_-__-_equalto_-__+_10mm_+_after_+_loss_+_of_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_10mm_+_after_+_loss_+_of_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=d_-_greaterThan_-__-_equalto_-__+_10mm_+_after_+_loss_+_of_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer
*CAT: n
*SEM: unaryRel[rel=spacer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer
*CAT: n
*SEM: twoRel[rel=spacer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer
*CAT: n
*SEM: twoRel[rel=spacer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer
*CAT: n
*SEM: orRel[rel=spacer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_26
*CAT: n
*SEM: unaryRel[rel=gauge_+_26]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_26
*CAT: n
*SEM: twoRel[rel=gauge_+_26]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_26
*CAT: n
*SEM: twoRel[rel=gauge_+_26]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_26
*CAT: n
*SEM: orRel[rel=gauge_+_26]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: faulty_+_connection
*CAT: n
*SEM: unaryRel[rel=faulty_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: faulty_+_connection
*CAT: n
*SEM: twoRel[rel=faulty_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: faulty_+_connection
*CAT: n
*SEM: twoRel[rel=faulty_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: faulty_+_connection
*CAT: n
*SEM: orRel[rel=faulty_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_link
*CAT: n
*SEM: unaryRel[rel=bonding_+_link]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_link
*CAT: n
*SEM: twoRel[rel=bonding_+_link]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_link
*CAT: n
*SEM: twoRel[rel=bonding_+_link]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_link
*CAT: n
*SEM: orRel[rel=bonding_+_link]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossing-route
*CAT: n
*SEM: unaryRel[rel=crossing-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossing-route
*CAT: n
*SEM: twoRel[rel=crossing-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossing-route
*CAT: n
*SEM: twoRel[rel=crossing-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossing-route
*CAT: n
*SEM: orRel[rel=crossing-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: heat
*CAT: n
*SEM: unaryRel[rel=heat]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: heat
*CAT: n
*SEM: twoRel[rel=heat]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: heat
*CAT: n
*SEM: twoRel[rel=heat]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: heat
*CAT: n
*SEM: orRel[rel=heat]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_zone_+_specific_+_parameters_+_into_+_account
*CAT: n
*SEM: unaryRel[rel=taking_+_zone_+_specific_+_parameters_+_into_+_account]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_zone_+_specific_+_parameters_+_into_+_account
*CAT: n
*SEM: twoRel[rel=taking_+_zone_+_specific_+_parameters_+_into_+_account]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_zone_+_specific_+_parameters_+_into_+_account
*CAT: n
*SEM: twoRel[rel=taking_+_zone_+_specific_+_parameters_+_into_+_account]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_zone_+_specific_+_parameters_+_into_+_account
*CAT: n
*SEM: orRel[rel=taking_+_zone_+_specific_+_parameters_+_into_+_account]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: of_+_closed_+_conduits_+__-_opensb_-_braided
*CAT: n
*SEM: unaryRel[rel=of_+_closed_+_conduits_+__-_opensb_-_braided]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: of_+_closed_+_conduits_+__-_opensb_-_braided
*CAT: n
*SEM: twoRel[rel=of_+_closed_+_conduits_+__-_opensb_-_braided]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: of_+_closed_+_conduits_+__-_opensb_-_braided
*CAT: n
*SEM: twoRel[rel=of_+_closed_+_conduits_+__-_opensb_-_braided]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: of_+_closed_+_conduits_+__-_opensb_-_braided
*CAT: n
*SEM: orRel[rel=of_+_closed_+_conduits_+__-_opensb_-_braided]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_spacer
*CAT: n
*SEM: unaryRel[rel=plastic_+_spacer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_spacer
*CAT: n
*SEM: twoRel[rel=plastic_+_spacer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_spacer
*CAT: n
*SEM: twoRel[rel=plastic_+_spacer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_spacer
*CAT: n
*SEM: orRel[rel=plastic_+_spacer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coaxial_+_wire
*CAT: n
*SEM: unaryRel[rel=coaxial_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coaxial_+_wire
*CAT: n
*SEM: twoRel[rel=coaxial_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coaxial_+_wire
*CAT: n
*SEM: twoRel[rel=coaxial_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coaxial_+_wire
*CAT: n
*SEM: orRel[rel=coaxial_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0422_+_tr_+_terminal_+_lug
*CAT: n
*SEM: unaryRel[rel=asne0422_+_tr_+_terminal_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0422_+_tr_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=asne0422_+_tr_+_terminal_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0422_+_tr_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=asne0422_+_tr_+_terminal_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0422_+_tr_+_terminal_+_lug
*CAT: n
*SEM: orRel[rel=asne0422_+_tr_+_terminal_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chafing
*CAT: n
*SEM: unaryRel[rel=chafing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chafing
*CAT: n
*SEM: twoRel[rel=chafing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chafing
*CAT: n
*SEM: twoRel[rel=chafing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chafing
*CAT: n
*SEM: orRel[rel=chafing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_rail_+_extremity_+_when_+_the_+_rail
*CAT: n
*SEM: unaryRel[rel=one_+_rail_+_extremity_+_when_+_the_+_rail]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_rail_+_extremity_+_when_+_the_+_rail
*CAT: n
*SEM: twoRel[rel=one_+_rail_+_extremity_+_when_+_the_+_rail]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_rail_+_extremity_+_when_+_the_+_rail
*CAT: n
*SEM: twoRel[rel=one_+_rail_+_extremity_+_when_+_the_+_rail]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_rail_+_extremity_+_when_+_the_+_rail
*CAT: n
*SEM: orRel[rel=one_+_rail_+_extremity_+_when_+_the_+_rail]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: greater_+_then_+_the_+_width
*CAT: n
*SEM: unaryRel[rel=greater_+_then_+_the_+_width]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: greater_+_then_+_the_+_width
*CAT: n
*SEM: twoRel[rel=greater_+_then_+_the_+_width]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: greater_+_then_+_the_+_width
*CAT: n
*SEM: twoRel[rel=greater_+_then_+_the_+_width]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: greater_+_then_+_the_+_width
*CAT: n
*SEM: orRel[rel=greater_+_then_+_the_+_width]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3660
*CAT: n
*SEM: unaryRel[rel=en3660]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3660
*CAT: n
*SEM: twoRel[rel=en3660]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3660
*CAT: n
*SEM: twoRel[rel=en3660]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3660
*CAT: n
*SEM: orRel[rel=en3660]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hanress_+_passing
*CAT: n
*SEM: unaryRel[rel=hanress_+_passing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hanress_+_passing
*CAT: n
*SEM: twoRel[rel=hanress_+_passing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hanress_+_passing
*CAT: n
*SEM: twoRel[rel=hanress_+_passing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hanress_+_passing
*CAT: n
*SEM: orRel[rel=hanress_+_passing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: absolutely_+_unavoidable_+_a_+_centreline_+_to
*CAT: n
*SEM: unaryRel[rel=absolutely_+_unavoidable_+_a_+_centreline_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: absolutely_+_unavoidable_+_a_+_centreline_+_to
*CAT: n
*SEM: twoRel[rel=absolutely_+_unavoidable_+_a_+_centreline_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: absolutely_+_unavoidable_+_a_+_centreline_+_to
*CAT: n
*SEM: twoRel[rel=absolutely_+_unavoidable_+_a_+_centreline_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: absolutely_+_unavoidable_+_a_+_centreline_+_to
*CAT: n
*SEM: orRel[rel=absolutely_+_unavoidable_+_a_+_centreline_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_terminal_+_lug
*CAT: n
*SEM: unaryRel[rel=copper_+_terminal_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=copper_+_terminal_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=copper_+_terminal_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_terminal_+_lug
*CAT: n
*SEM: orRel[rel=copper_+_terminal_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bending_+_branches_+_of_+_pipes
*CAT: n
*SEM: unaryRel[rel=bending_+_branches_+_of_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bending_+_branches_+_of_+_pipes
*CAT: n
*SEM: twoRel[rel=bending_+_branches_+_of_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bending_+_branches_+_of_+_pipes
*CAT: n
*SEM: twoRel[rel=bending_+_branches_+_of_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bending_+_branches_+_of_+_pipes
*CAT: n
*SEM: orRel[rel=bending_+_branches_+_of_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vs
*CAT: n
*SEM: unaryRel[rel=vs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vs
*CAT: n
*SEM: twoRel[rel=vs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vs
*CAT: n
*SEM: twoRel[rel=vs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vs
*CAT: n
*SEM: orRel[rel=vs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_contacts
*CAT: n
*SEM: unaryRel[rel=pin_+_contacts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_contacts
*CAT: n
*SEM: twoRel[rel=pin_+_contacts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_contacts
*CAT: n
*SEM: twoRel[rel=pin_+_contacts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_contacts
*CAT: n
*SEM: orRel[rel=pin_+_contacts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_part
*CAT: n
*SEM: unaryRel[rel=fixed_+_part]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_part
*CAT: n
*SEM: twoRel[rel=fixed_+_part]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_part
*CAT: n
*SEM: twoRel[rel=fixed_+_part]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_part
*CAT: n
*SEM: orRel[rel=fixed_+_part]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight
*CAT: n
*SEM: unaryRel[rel=weight]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight
*CAT: n
*SEM: twoRel[rel=weight]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight
*CAT: n
*SEM: twoRel[rel=weight]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight
*CAT: n
*SEM: orRel[rel=weight]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_planes
*CAT: n
*SEM: unaryRel[rel=different_+_planes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_planes
*CAT: n
*SEM: twoRel[rel=different_+_planes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_planes
*CAT: n
*SEM: twoRel[rel=different_+_planes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_planes
*CAT: n
*SEM: orRel[rel=different_+_planes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_removal
*CAT: n
*SEM: unaryRel[rel=equipment_+_removal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_removal
*CAT: n
*SEM: twoRel[rel=equipment_+_removal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_removal
*CAT: n
*SEM: twoRel[rel=equipment_+_removal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_removal
*CAT: n
*SEM: orRel[rel=equipment_+_removal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_position
*CAT: n
*SEM: unaryRel[rel=vertical_+_position]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_position
*CAT: n
*SEM: twoRel[rel=vertical_+_position]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_position
*CAT: n
*SEM: twoRel[rel=vertical_+_position]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_position
*CAT: n
*SEM: orRel[rel=vertical_+_position]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurezied_+_areas
*CAT: n
*SEM: unaryRel[rel=unpressurezied_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurezied_+_areas
*CAT: n
*SEM: twoRel[rel=unpressurezied_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurezied_+_areas
*CAT: n
*SEM: twoRel[rel=unpressurezied_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurezied_+_areas
*CAT: n
*SEM: orRel[rel=unpressurezied_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size_+_04_+_to_+_32_+_pipes
*CAT: n
*SEM: unaryRel[rel=size_+_04_+_to_+_32_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size_+_04_+_to_+_32_+_pipes
*CAT: n
*SEM: twoRel[rel=size_+_04_+_to_+_32_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size_+_04_+_to_+_32_+_pipes
*CAT: n
*SEM: twoRel[rel=size_+_04_+_to_+_32_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size_+_04_+_to_+_32_+_pipes
*CAT: n
*SEM: orRel[rel=size_+_04_+_to_+_32_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25_+_mm
*CAT: n
*SEM: unaryRel[rel=25_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25_+_mm
*CAT: n
*SEM: twoRel[rel=25_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25_+_mm
*CAT: n
*SEM: twoRel[rel=25_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25_+_mm
*CAT: n
*SEM: orRel[rel=25_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: third_+_priority_+_not_+_recommended
*CAT: n
*SEM: unaryRel[rel=third_+_priority_+_not_+_recommended]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: third_+_priority_+_not_+_recommended
*CAT: n
*SEM: twoRel[rel=third_+_priority_+_not_+_recommended]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: third_+_priority_+_not_+_recommended
*CAT: n
*SEM: twoRel[rel=third_+_priority_+_not_+_recommended]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: third_+_priority_+_not_+_recommended
*CAT: n
*SEM: orRel[rel=third_+_priority_+_not_+_recommended]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936603_+_shrincable_+_cap
*CAT: n
*SEM: unaryRel[rel=nsa_+_936603_+_shrincable_+_cap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936603_+_shrincable_+_cap
*CAT: n
*SEM: twoRel[rel=nsa_+_936603_+_shrincable_+_cap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936603_+_shrincable_+_cap
*CAT: n
*SEM: twoRel[rel=nsa_+_936603_+_shrincable_+_cap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936603_+_shrincable_+_cap
*CAT: n
*SEM: orRel[rel=nsa_+_936603_+_shrincable_+_cap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: b_+_and
*CAT: n
*SEM: unaryRel[rel=b_+_and]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: b_+_and
*CAT: n
*SEM: twoRel[rel=b_+_and]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: b_+_and
*CAT: n
*SEM: twoRel[rel=b_+_and]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: b_+_and
*CAT: n
*SEM: orRel[rel=b_+_and]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: free_+_pass
*CAT: n
*SEM: unaryRel[rel=free_+_pass]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: free_+_pass
*CAT: n
*SEM: twoRel[rel=free_+_pass]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: free_+_pass
*CAT: n
*SEM: twoRel[rel=free_+_pass]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: free_+_pass
*CAT: n
*SEM: orRel[rel=free_+_pass]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shell_+_electrical_+_continuity
*CAT: n
*SEM: unaryRel[rel=shell_+_electrical_+_continuity]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shell_+_electrical_+_continuity
*CAT: n
*SEM: twoRel[rel=shell_+_electrical_+_continuity]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shell_+_electrical_+_continuity
*CAT: n
*SEM: twoRel[rel=shell_+_electrical_+_continuity]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shell_+_electrical_+_continuity
*CAT: n
*SEM: orRel[rel=shell_+_electrical_+_continuity]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin
*CAT: n
*SEM: unaryRel[rel=fin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin
*CAT: n
*SEM: twoRel[rel=fin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin
*CAT: n
*SEM: twoRel[rel=fin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin
*CAT: n
*SEM: orRel[rel=fin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: “multi-hole”_+_type_+_clamp_+_block_+_solution
*CAT: n
*SEM: unaryRel[rel=“multi-hole”_+_type_+_clamp_+_block_+_solution]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: “multi-hole”_+_type_+_clamp_+_block_+_solution
*CAT: n
*SEM: twoRel[rel=“multi-hole”_+_type_+_clamp_+_block_+_solution]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: “multi-hole”_+_type_+_clamp_+_block_+_solution
*CAT: n
*SEM: twoRel[rel=“multi-hole”_+_type_+_clamp_+_block_+_solution]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: “multi-hole”_+_type_+_clamp_+_block_+_solution
*CAT: n
*SEM: orRel[rel=“multi-hole”_+_type_+_clamp_+_block_+_solution]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer_+_to
*CAT: n
*SEM: unaryRel[rel=spacer_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer_+_to
*CAT: n
*SEM: twoRel[rel=spacer_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer_+_to
*CAT: n
*SEM: twoRel[rel=spacer_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer_+_to
*CAT: n
*SEM: orRel[rel=spacer_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: entire_+_pipe
*CAT: n
*SEM: unaryRel[rel=entire_+_pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: entire_+_pipe
*CAT: n
*SEM: twoRel[rel=entire_+_pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: entire_+_pipe
*CAT: n
*SEM: twoRel[rel=entire_+_pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: entire_+_pipe
*CAT: n
*SEM: orRel[rel=entire_+_pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: silicon
*CAT: n
*SEM: unaryRel[rel=silicon]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: silicon
*CAT: n
*SEM: twoRel[rel=silicon]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: silicon
*CAT: n
*SEM: twoRel[rel=silicon]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: silicon
*CAT: n
*SEM: orRel[rel=silicon]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance
*CAT: n
*SEM: unaryRel[rel=distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance
*CAT: n
*SEM: twoRel[rel=distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance
*CAT: n
*SEM: twoRel[rel=distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance
*CAT: n
*SEM: orRel[rel=distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc_+_600_+_connector_+_at_+_outlets_+_of_+_contacts
*CAT: n
*SEM: unaryRel[rel=arinc_+_600_+_connector_+_at_+_outlets_+_of_+_contacts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc_+_600_+_connector_+_at_+_outlets_+_of_+_contacts
*CAT: n
*SEM: twoRel[rel=arinc_+_600_+_connector_+_at_+_outlets_+_of_+_contacts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc_+_600_+_connector_+_at_+_outlets_+_of_+_contacts
*CAT: n
*SEM: twoRel[rel=arinc_+_600_+_connector_+_at_+_outlets_+_of_+_contacts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc_+_600_+_connector_+_at_+_outlets_+_of_+_contacts
*CAT: n
*SEM: orRel[rel=arinc_+_600_+_connector_+_at_+_outlets_+_of_+_contacts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 9
*CAT: n
*SEM: unaryRel[rel=9]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 9
*CAT: n
*SEM: twoRel[rel=9]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 9
*CAT: n
*SEM: twoRel[rel=9]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 9
*CAT: n
*SEM: orRel[rel=9]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_is_+_exceeding_+_80kg
*CAT: n
*SEM: unaryRel[rel=harness_+_is_+_exceeding_+_80kg]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_is_+_exceeding_+_80kg
*CAT: n
*SEM: twoRel[rel=harness_+_is_+_exceeding_+_80kg]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_is_+_exceeding_+_80kg
*CAT: n
*SEM: twoRel[rel=harness_+_is_+_exceeding_+_80kg]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_is_+_exceeding_+_80kg
*CAT: n
*SEM: orRel[rel=harness_+_is_+_exceeding_+_80kg]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_structure
*CAT: n
*SEM: unaryRel[rel=primary_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_structure
*CAT: n
*SEM: twoRel[rel=primary_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_structure
*CAT: n
*SEM: twoRel[rel=primary_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_structure
*CAT: n
*SEM: orRel[rel=primary_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance
*CAT: n
*SEM: unaryRel[rel=distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance
*CAT: n
*SEM: twoRel[rel=distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance
*CAT: n
*SEM: twoRel[rel=distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance
*CAT: n
*SEM: orRel[rel=distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundles
*CAT: n
*SEM: unaryRel[rel=bundles]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundles
*CAT: n
*SEM: twoRel[rel=bundles]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundles
*CAT: n
*SEM: twoRel[rel=bundles]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundles
*CAT: n
*SEM: orRel[rel=bundles]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_identification
*CAT: n
*SEM: unaryRel[rel=an_+_identification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_identification
*CAT: n
*SEM: twoRel[rel=an_+_identification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_identification
*CAT: n
*SEM: twoRel[rel=an_+_identification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_identification
*CAT: n
*SEM: orRel[rel=an_+_identification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_diametrical
*CAT: n
*SEM: unaryRel[rel=two_+_diametrical]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_diametrical
*CAT: n
*SEM: twoRel[rel=two_+_diametrical]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_diametrical
*CAT: n
*SEM: twoRel[rel=two_+_diametrical]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_diametrical
*CAT: n
*SEM: orRel[rel=two_+_diametrical]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa855115
*CAT: n
*SEM: unaryRel[rel=nsa855115]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa855115
*CAT: n
*SEM: twoRel[rel=nsa855115]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa855115
*CAT: n
*SEM: twoRel[rel=nsa855115]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa855115
*CAT: n
*SEM: orRel[rel=nsa855115]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protected_+_bundle_+_only_+_when
*CAT: n
*SEM: unaryRel[rel=protected_+_bundle_+_only_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protected_+_bundle_+_only_+_when
*CAT: n
*SEM: twoRel[rel=protected_+_bundle_+_only_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protected_+_bundle_+_only_+_when
*CAT: n
*SEM: twoRel[rel=protected_+_bundle_+_only_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protected_+_bundle_+_only_+_when
*CAT: n
*SEM: orRel[rel=protected_+_bundle_+_only_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve
*CAT: n
*SEM: unaryRel[rel=nsa_+_937201_+_identification_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve
*CAT: n
*SEM: orRel[rel=nsa_+_937201_+_identification_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_vu
*CAT: n
*SEM: unaryRel[rel=inside_+_vu]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_vu
*CAT: n
*SEM: twoRel[rel=inside_+_vu]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_vu
*CAT: n
*SEM: twoRel[rel=inside_+_vu]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_vu
*CAT: n
*SEM: orRel[rel=inside_+_vu]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: compatible
*CAT: n
*SEM: unaryRel[rel=compatible]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: compatible
*CAT: n
*SEM: twoRel[rel=compatible]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: compatible
*CAT: n
*SEM: twoRel[rel=compatible]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: compatible
*CAT: n
*SEM: orRel[rel=compatible]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5151d5-035_+__-_ampersand_-__+_abs5151d6-035_+_pipes
*CAT: n
*SEM: unaryRel[rel=abs5151d5-035_+__-_ampersand_-__+_abs5151d6-035_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5151d5-035_+__-_ampersand_-__+_abs5151d6-035_+_pipes
*CAT: n
*SEM: twoRel[rel=abs5151d5-035_+__-_ampersand_-__+_abs5151d6-035_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5151d5-035_+__-_ampersand_-__+_abs5151d6-035_+_pipes
*CAT: n
*SEM: twoRel[rel=abs5151d5-035_+__-_ampersand_-__+_abs5151d6-035_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5151d5-035_+__-_ampersand_-__+_abs5151d6-035_+_pipes
*CAT: n
*SEM: orRel[rel=abs5151d5-035_+__-_ampersand_-__+_abs5151d6-035_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_a_+_maximum_+_straight_+_distance
*CAT: n
*SEM: unaryRel[rel=account_+_a_+_maximum_+_straight_+_distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_a_+_maximum_+_straight_+_distance
*CAT: n
*SEM: twoRel[rel=account_+_a_+_maximum_+_straight_+_distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_a_+_maximum_+_straight_+_distance
*CAT: n
*SEM: twoRel[rel=account_+_a_+_maximum_+_straight_+_distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_a_+_maximum_+_straight_+_distance
*CAT: n
*SEM: orRel[rel=account_+_a_+_maximum_+_straight_+_distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stress_+_free
*CAT: n
*SEM: unaryRel[rel=stress_+_free]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stress_+_free
*CAT: n
*SEM: twoRel[rel=stress_+_free]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stress_+_free
*CAT: n
*SEM: twoRel[rel=stress_+_free]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stress_+_free
*CAT: n
*SEM: orRel[rel=stress_+_free]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: environmental_+_constrain
*CAT: n
*SEM: unaryRel[rel=environmental_+_constrain]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: environmental_+_constrain
*CAT: n
*SEM: twoRel[rel=environmental_+_constrain]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: environmental_+_constrain
*CAT: n
*SEM: twoRel[rel=environmental_+_constrain]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: environmental_+_constrain
*CAT: n
*SEM: orRel[rel=environmental_+_constrain]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_abs1339]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339
*CAT: n
*SEM: twoRel[rel=p-clamp_+_abs1339]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339
*CAT: n
*SEM: twoRel[rel=p-clamp_+_abs1339]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339
*CAT: n
*SEM: orRel[rel=p-clamp_+_abs1339]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_requiredor_+_class_+_rs
*CAT: n
*SEM: unaryRel[rel=not_+_requiredor_+_class_+_rs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_requiredor_+_class_+_rs
*CAT: n
*SEM: twoRel[rel=not_+_requiredor_+_class_+_rs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_requiredor_+_class_+_rs
*CAT: n
*SEM: twoRel[rel=not_+_requiredor_+_class_+_rs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_requiredor_+_class_+_rs
*CAT: n
*SEM: orRel[rel=not_+_requiredor_+_class_+_rs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1475-01_+_label_+_along_+_the_+_hanress_+_every_+_1.2m_+_maximum_+_pitch_+_in_+_straight_+_line_+_harness_+_close
*CAT: n
*SEM: unaryRel[rel=abs_+_1475-01_+_label_+_along_+_the_+_hanress_+_every_+_1.2m_+_maximum_+_pitch_+_in_+_straight_+_line_+_harness_+_close]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1475-01_+_label_+_along_+_the_+_hanress_+_every_+_1.2m_+_maximum_+_pitch_+_in_+_straight_+_line_+_harness_+_close
*CAT: n
*SEM: twoRel[rel=abs_+_1475-01_+_label_+_along_+_the_+_hanress_+_every_+_1.2m_+_maximum_+_pitch_+_in_+_straight_+_line_+_harness_+_close]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1475-01_+_label_+_along_+_the_+_hanress_+_every_+_1.2m_+_maximum_+_pitch_+_in_+_straight_+_line_+_harness_+_close
*CAT: n
*SEM: twoRel[rel=abs_+_1475-01_+_label_+_along_+_the_+_hanress_+_every_+_1.2m_+_maximum_+_pitch_+_in_+_straight_+_line_+_harness_+_close]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1475-01_+_label_+_along_+_the_+_hanress_+_every_+_1.2m_+_maximum_+_pitch_+_in_+_straight_+_line_+_harness_+_close
*CAT: n
*SEM: orRel[rel=abs_+_1475-01_+_label_+_along_+_the_+_hanress_+_every_+_1.2m_+_maximum_+_pitch_+_in_+_straight_+_line_+_harness_+_close]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings
*CAT: n
*SEM: unaryRel[rel=routings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings
*CAT: n
*SEM: twoRel[rel=routings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings
*CAT: n
*SEM: twoRel[rel=routings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings
*CAT: n
*SEM: orRel[rel=routings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_to_+_structure
*CAT: n
*SEM: unaryRel[rel=distance_+_to_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_to_+_structure
*CAT: n
*SEM: twoRel[rel=distance_+_to_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_to_+_structure
*CAT: n
*SEM: twoRel[rel=distance_+_to_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_to_+_structure
*CAT: n
*SEM: orRel[rel=distance_+_to_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_brackets
*CAT: n
*SEM: unaryRel[rel=bonding_+_brackets]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_brackets
*CAT: n
*SEM: twoRel[rel=bonding_+_brackets]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_brackets
*CAT: n
*SEM: twoRel[rel=bonding_+_brackets]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_brackets
*CAT: n
*SEM: orRel[rel=bonding_+_brackets]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1095
*CAT: n
*SEM: unaryRel[rel=abs_+_1095]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1095
*CAT: n
*SEM: twoRel[rel=abs_+_1095]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1095
*CAT: n
*SEM: twoRel[rel=abs_+_1095]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1095
*CAT: n
*SEM: orRel[rel=abs_+_1095]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: toguide_+_bundle
*CAT: n
*SEM: unaryRel[rel=toguide_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: toguide_+_bundle
*CAT: n
*SEM: twoRel[rel=toguide_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: toguide_+_bundle
*CAT: n
*SEM: twoRel[rel=toguide_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: toguide_+_bundle
*CAT: n
*SEM: orRel[rel=toguide_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ground_+_connections
*CAT: n
*SEM: unaryRel[rel=ground_+_connections]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ground_+_connections
*CAT: n
*SEM: twoRel[rel=ground_+_connections]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ground_+_connections
*CAT: n
*SEM: twoRel[rel=ground_+_connections]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ground_+_connections
*CAT: n
*SEM: orRel[rel=ground_+_connections]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: secured_+_routing_+_case_+_a
*CAT: n
*SEM: unaryRel[rel=secured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: secured_+_routing_+_case_+_a
*CAT: n
*SEM: twoRel[rel=secured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: secured_+_routing_+_case_+_a
*CAT: n
*SEM: twoRel[rel=secured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: secured_+_routing_+_case_+_a
*CAT: n
*SEM: orRel[rel=secured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516bd_+_beside_+_the_+_main_+_routing
*CAT: n
*SEM: unaryRel[rel=nsa_+_5516bd_+_beside_+_the_+_main_+_routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516bd_+_beside_+_the_+_main_+_routing
*CAT: n
*SEM: twoRel[rel=nsa_+_5516bd_+_beside_+_the_+_main_+_routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516bd_+_beside_+_the_+_main_+_routing
*CAT: n
*SEM: twoRel[rel=nsa_+_5516bd_+_beside_+_the_+_main_+_routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516bd_+_beside_+_the_+_main_+_routing
*CAT: n
*SEM: orRel[rel=nsa_+_5516bd_+_beside_+_the_+_main_+_routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_vu
*CAT: n
*SEM: unaryRel[rel=large_+_vu]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_vu
*CAT: n
*SEM: twoRel[rel=large_+_vu]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_vu
*CAT: n
*SEM: twoRel[rel=large_+_vu]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_vu
*CAT: n
*SEM: orRel[rel=large_+_vu]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: z_+_axis
*CAT: n
*SEM: unaryRel[rel=z_+_axis]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: z_+_axis
*CAT: n
*SEM: twoRel[rel=z_+_axis]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: z_+_axis
*CAT: n
*SEM: twoRel[rel=z_+_axis]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: z_+_axis
*CAT: n
*SEM: orRel[rel=z_+_axis]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluid_+_leackage_+_zones
*CAT: n
*SEM: unaryRel[rel=flammable_+_fluid_+_leackage_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluid_+_leackage_+_zones
*CAT: n
*SEM: twoRel[rel=flammable_+_fluid_+_leackage_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluid_+_leackage_+_zones
*CAT: n
*SEM: twoRel[rel=flammable_+_fluid_+_leackage_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluid_+_leackage_+_zones
*CAT: n
*SEM: orRel[rel=flammable_+_fluid_+_leackage_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_bracket
*CAT: n
*SEM: unaryRel[rel=new_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_bracket
*CAT: n
*SEM: twoRel[rel=new_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_bracket
*CAT: n
*SEM: twoRel[rel=new_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_bracket
*CAT: n
*SEM: orRel[rel=new_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_d
*CAT: n
*SEM: unaryRel[rel=col_obj1_d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_d
*CAT: n
*SEM: twoRel[rel=col_obj1_d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_d
*CAT: n
*SEM: twoRel[rel=col_obj1_d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_d
*CAT: n
*SEM: orRel[rel=col_obj1_d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interrupted_+_closed_+_conduit
*CAT: n
*SEM: unaryRel[rel=interrupted_+_closed_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interrupted_+_closed_+_conduit
*CAT: n
*SEM: twoRel[rel=interrupted_+_closed_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interrupted_+_closed_+_conduit
*CAT: n
*SEM: twoRel[rel=interrupted_+_closed_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interrupted_+_closed_+_conduit
*CAT: n
*SEM: orRel[rel=interrupted_+_closed_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs
*CAT: n
*SEM: unaryRel[rel=efcs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs
*CAT: n
*SEM: twoRel[rel=efcs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs
*CAT: n
*SEM: twoRel[rel=efcs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs
*CAT: n
*SEM: orRel[rel=efcs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 62200
*CAT: n
*SEM: unaryRel[rel=62200]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 62200
*CAT: n
*SEM: twoRel[rel=62200]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 62200
*CAT: n
*SEM: twoRel[rel=62200]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 62200
*CAT: n
*SEM: orRel[rel=62200]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_resistant_+_bundle
*CAT: n
*SEM: unaryRel[rel=fire_+_resistant_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_resistant_+_bundle
*CAT: n
*SEM: twoRel[rel=fire_+_resistant_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_resistant_+_bundle
*CAT: n
*SEM: twoRel[rel=fire_+_resistant_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_resistant_+_bundle
*CAT: n
*SEM: orRel[rel=fire_+_resistant_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: complete_+_hardware_+_installation_+_procedure
*CAT: n
*SEM: unaryRel[rel=complete_+_hardware_+_installation_+_procedure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: complete_+_hardware_+_installation_+_procedure
*CAT: n
*SEM: twoRel[rel=complete_+_hardware_+_installation_+_procedure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: complete_+_hardware_+_installation_+_procedure
*CAT: n
*SEM: twoRel[rel=complete_+_hardware_+_installation_+_procedure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: complete_+_hardware_+_installation_+_procedure
*CAT: n
*SEM: orRel[rel=complete_+_hardware_+_installation_+_procedure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loads_+_due_+_to
*CAT: n
*SEM: unaryRel[rel=loads_+_due_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loads_+_due_+_to
*CAT: n
*SEM: twoRel[rel=loads_+_due_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loads_+_due_+_to
*CAT: n
*SEM: twoRel[rel=loads_+_due_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loads_+_due_+_to
*CAT: n
*SEM: orRel[rel=loads_+_due_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_of_+_15_+_mm_+__-_opensb_-_except_+_electrics
*CAT: n
*SEM: unaryRel[rel=minimum_+_of_+_15_+_mm_+__-_opensb_-_except_+_electrics]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_of_+_15_+_mm_+__-_opensb_-_except_+_electrics
*CAT: n
*SEM: twoRel[rel=minimum_+_of_+_15_+_mm_+__-_opensb_-_except_+_electrics]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_of_+_15_+_mm_+__-_opensb_-_except_+_electrics
*CAT: n
*SEM: twoRel[rel=minimum_+_of_+_15_+_mm_+__-_opensb_-_except_+_electrics]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_of_+_15_+_mm_+__-_opensb_-_except_+_electrics
*CAT: n
*SEM: orRel[rel=minimum_+_of_+_15_+_mm_+__-_opensb_-_except_+_electrics]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1353
*CAT: n
*SEM: unaryRel[rel=abs1353]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1353
*CAT: n
*SEM: twoRel[rel=abs1353]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1353
*CAT: n
*SEM: twoRel[rel=abs1353]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1353
*CAT: n
*SEM: orRel[rel=abs1353]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_picture
*CAT: n
*SEM: unaryRel[rel=this_+_picture]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_picture
*CAT: n
*SEM: twoRel[rel=this_+_picture]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_picture
*CAT: n
*SEM: twoRel[rel=this_+_picture]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_picture
*CAT: n
*SEM: orRel[rel=this_+_picture]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2.25_+_inches
*CAT: n
*SEM: unaryRel[rel=2.25_+_inches]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2.25_+_inches
*CAT: n
*SEM: twoRel[rel=2.25_+_inches]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2.25_+_inches
*CAT: n
*SEM: twoRel[rel=2.25_+_inches]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2.25_+_inches
*CAT: n
*SEM: orRel[rel=2.25_+_inches]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_25_+_mm_+__-_opensb_-_air-line_+_distance_+_10_+_mm_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=least_+_25_+_mm_+__-_opensb_-_air-line_+_distance_+_10_+_mm_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_25_+_mm_+__-_opensb_-_air-line_+_distance_+_10_+_mm_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=least_+_25_+_mm_+__-_opensb_-_air-line_+_distance_+_10_+_mm_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_25_+_mm_+__-_opensb_-_air-line_+_distance_+_10_+_mm_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=least_+_25_+_mm_+__-_opensb_-_air-line_+_distance_+_10_+_mm_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_25_+_mm_+__-_opensb_-_air-line_+_distance_+_10_+_mm_-_closesb_-_
*CAT: n
*SEM: orRel[rel=least_+_25_+_mm_+__-_opensb_-_air-line_+_distance_+_10_+_mm_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight_+_effect
*CAT: n
*SEM: unaryRel[rel=weight_+_effect]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight_+_effect
*CAT: n
*SEM: twoRel[rel=weight_+_effect]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight_+_effect
*CAT: n
*SEM: twoRel[rel=weight_+_effect]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight_+_effect
*CAT: n
*SEM: orRel[rel=weight_+_effect]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_coded_+_electrical_+_component
*CAT: n
*SEM: unaryRel[rel=non_+_coded_+_electrical_+_component]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_coded_+_electrical_+_component
*CAT: n
*SEM: twoRel[rel=non_+_coded_+_electrical_+_component]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_coded_+_electrical_+_component
*CAT: n
*SEM: twoRel[rel=non_+_coded_+_electrical_+_component]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_coded_+_electrical_+_component
*CAT: n
*SEM: orRel[rel=non_+_coded_+_electrical_+_component]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_lug
*CAT: n
*SEM: unaryRel[rel=terminal_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_lug
*CAT: n
*SEM: twoRel[rel=terminal_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_lug
*CAT: n
*SEM: twoRel[rel=terminal_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_lug
*CAT: n
*SEM: orRel[rel=terminal_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lanyard
*CAT: n
*SEM: unaryRel[rel=lanyard]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lanyard
*CAT: n
*SEM: twoRel[rel=lanyard]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lanyard
*CAT: n
*SEM: twoRel[rel=lanyard]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lanyard
*CAT: n
*SEM: orRel[rel=lanyard]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_934710_+_pressure_+_seal_+_can_+_be_+_installed_+_with_+_abs_+_0887_+_spare_+_conduit_+_the_+_spare_+_conduit
*CAT: n
*SEM: unaryRel[rel=nsa_+_934710_+_pressure_+_seal_+_can_+_be_+_installed_+_with_+_abs_+_0887_+_spare_+_conduit_+_the_+_spare_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_934710_+_pressure_+_seal_+_can_+_be_+_installed_+_with_+_abs_+_0887_+_spare_+_conduit_+_the_+_spare_+_conduit
*CAT: n
*SEM: twoRel[rel=nsa_+_934710_+_pressure_+_seal_+_can_+_be_+_installed_+_with_+_abs_+_0887_+_spare_+_conduit_+_the_+_spare_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_934710_+_pressure_+_seal_+_can_+_be_+_installed_+_with_+_abs_+_0887_+_spare_+_conduit_+_the_+_spare_+_conduit
*CAT: n
*SEM: twoRel[rel=nsa_+_934710_+_pressure_+_seal_+_can_+_be_+_installed_+_with_+_abs_+_0887_+_spare_+_conduit_+_the_+_spare_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_934710_+_pressure_+_seal_+_can_+_be_+_installed_+_with_+_abs_+_0887_+_spare_+_conduit_+_the_+_spare_+_conduit
*CAT: n
*SEM: orRel[rel=nsa_+_934710_+_pressure_+_seal_+_can_+_be_+_installed_+_with_+_abs_+_0887_+_spare_+_conduit_+_the_+_spare_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossed_+_connection_+_is_+_impossible
*CAT: n
*SEM: unaryRel[rel=crossed_+_connection_+_is_+_impossible]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossed_+_connection_+_is_+_impossible
*CAT: n
*SEM: twoRel[rel=crossed_+_connection_+_is_+_impossible]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossed_+_connection_+_is_+_impossible
*CAT: n
*SEM: twoRel[rel=crossed_+_connection_+_is_+_impossible]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossed_+_connection_+_is_+_impossible
*CAT: n
*SEM: orRel[rel=crossed_+_connection_+_is_+_impossible]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fastening_+_clamp
*CAT: n
*SEM: unaryRel[rel=fastening_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fastening_+_clamp
*CAT: n
*SEM: twoRel[rel=fastening_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fastening_+_clamp
*CAT: n
*SEM: twoRel[rel=fastening_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fastening_+_clamp
*CAT: n
*SEM: orRel[rel=fastening_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tracing
*CAT: n
*SEM: unaryRel[rel=tracing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tracing
*CAT: n
*SEM: twoRel[rel=tracing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tracing
*CAT: n
*SEM: twoRel[rel=tracing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tracing
*CAT: n
*SEM: orRel[rel=tracing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dummy_+_contacts
*CAT: n
*SEM: unaryRel[rel=dummy_+_contacts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dummy_+_contacts
*CAT: n
*SEM: twoRel[rel=dummy_+_contacts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dummy_+_contacts
*CAT: n
*SEM: twoRel[rel=dummy_+_contacts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dummy_+_contacts
*CAT: n
*SEM: orRel[rel=dummy_+_contacts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair
*CAT: n
*SEM: unaryRel[rel=repair]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair
*CAT: n
*SEM: twoRel[rel=repair]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair
*CAT: n
*SEM: twoRel[rel=repair]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair
*CAT: n
*SEM: orRel[rel=repair]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optimally_+_90_-_degrees_-_
*CAT: n
*SEM: unaryRel[rel=optimally_+_90_-_degrees_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optimally_+_90_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=optimally_+_90_-_degrees_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optimally_+_90_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=optimally_+_90_-_degrees_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optimally_+_90_-_degrees_-_
*CAT: n
*SEM: orRel[rel=optimally_+_90_-_degrees_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_8420-9_+_lacing_+_tape
*CAT: n
*SEM: unaryRel[rel=nsa_+_8420-9_+_lacing_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_8420-9_+_lacing_+_tape
*CAT: n
*SEM: twoRel[rel=nsa_+_8420-9_+_lacing_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_8420-9_+_lacing_+_tape
*CAT: n
*SEM: twoRel[rel=nsa_+_8420-9_+_lacing_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_8420-9_+_lacing_+_tape
*CAT: n
*SEM: orRel[rel=nsa_+_8420-9_+_lacing_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420-7
*CAT: n
*SEM: unaryRel[rel=nsa8420-7]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420-7
*CAT: n
*SEM: twoRel[rel=nsa8420-7]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420-7
*CAT: n
*SEM: twoRel[rel=nsa8420-7]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420-7
*CAT: n
*SEM: orRel[rel=nsa8420-7]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_part_+_of_+_connector_+_in_+_pressurized_+_areas
*CAT: n
*SEM: unaryRel[rel=removable_+_part_+_of_+_connector_+_in_+_pressurized_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_part_+_of_+_connector_+_in_+_pressurized_+_areas
*CAT: n
*SEM: twoRel[rel=removable_+_part_+_of_+_connector_+_in_+_pressurized_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_part_+_of_+_connector_+_in_+_pressurized_+_areas
*CAT: n
*SEM: twoRel[rel=removable_+_part_+_of_+_connector_+_in_+_pressurized_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_part_+_of_+_connector_+_in_+_pressurized_+_areas
*CAT: n
*SEM: orRel[rel=removable_+_part_+_of_+_connector_+_in_+_pressurized_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_gap
*CAT: n
*SEM: unaryRel[rel=normal_+_gap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_gap
*CAT: n
*SEM: twoRel[rel=normal_+_gap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_gap
*CAT: n
*SEM: twoRel[rel=normal_+_gap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_gap
*CAT: n
*SEM: orRel[rel=normal_+_gap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not
*CAT: n
*SEM: unaryRel[rel=not]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not
*CAT: n
*SEM: twoRel[rel=not]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not
*CAT: n
*SEM: twoRel[rel=not]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not
*CAT: n
*SEM: orRel[rel=not]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cross_+_connection
*CAT: n
*SEM: unaryRel[rel=cross_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cross_+_connection
*CAT: n
*SEM: twoRel[rel=cross_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cross_+_connection
*CAT: n
*SEM: twoRel[rel=cross_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cross_+_connection
*CAT: n
*SEM: orRel[rel=cross_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: a4-d_+_spacer
*CAT: n
*SEM: unaryRel[rel=a4-d_+_spacer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: a4-d_+_spacer
*CAT: n
*SEM: twoRel[rel=a4-d_+_spacer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: a4-d_+_spacer
*CAT: n
*SEM: twoRel[rel=a4-d_+_spacer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: a4-d_+_spacer
*CAT: n
*SEM: orRel[rel=a4-d_+_spacer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_design
*CAT: n
*SEM: unaryRel[rel=basic_+_design]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_design
*CAT: n
*SEM: twoRel[rel=basic_+_design]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_design
*CAT: n
*SEM: twoRel[rel=basic_+_design]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_design
*CAT: n
*SEM: orRel[rel=basic_+_design]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_application
*CAT: n
*SEM: unaryRel[rel=this_+_application]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_application
*CAT: n
*SEM: twoRel[rel=this_+_application]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_application
*CAT: n
*SEM: twoRel[rel=this_+_application]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_application
*CAT: n
*SEM: orRel[rel=this_+_application]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: activator
*CAT: n
*SEM: unaryRel[rel=activator]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: activator
*CAT: n
*SEM: twoRel[rel=activator]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: activator
*CAT: n
*SEM: twoRel[rel=activator]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: activator
*CAT: n
*SEM: orRel[rel=activator]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fflz-_+_zones
*CAT: n
*SEM: unaryRel[rel=fflz-_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fflz-_+_zones
*CAT: n
*SEM: twoRel[rel=fflz-_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fflz-_+_zones
*CAT: n
*SEM: twoRel[rel=fflz-_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fflz-_+_zones
*CAT: n
*SEM: orRel[rel=fflz-_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_to
*CAT: n
*SEM: unaryRel[rel=harness_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_to
*CAT: n
*SEM: twoRel[rel=harness_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_to
*CAT: n
*SEM: twoRel[rel=harness_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_to
*CAT: n
*SEM: orRel[rel=harness_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_grommet
*CAT: n
*SEM: unaryRel[rel=special_+_grommet]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_grommet
*CAT: n
*SEM: twoRel[rel=special_+_grommet]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_grommet
*CAT: n
*SEM: twoRel[rel=special_+_grommet]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_grommet
*CAT: n
*SEM: orRel[rel=special_+_grommet]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: marking_+_stxx
*CAT: n
*SEM: unaryRel[rel=marking_+_stxx]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: marking_+_stxx
*CAT: n
*SEM: twoRel[rel=marking_+_stxx]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: marking_+_stxx
*CAT: n
*SEM: twoRel[rel=marking_+_stxx]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: marking_+_stxx
*CAT: n
*SEM: orRel[rel=marking_+_stxx]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bends
*CAT: n
*SEM: unaryRel[rel=bends]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bends
*CAT: n
*SEM: twoRel[rel=bends]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bends
*CAT: n
*SEM: twoRel[rel=bends]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bends
*CAT: n
*SEM: orRel[rel=bends]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_hole_+_bulkhead_+_connections
*CAT: n
*SEM: unaryRel[rel=2_+_hole_+_bulkhead_+_connections]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_hole_+_bulkhead_+_connections
*CAT: n
*SEM: twoRel[rel=2_+_hole_+_bulkhead_+_connections]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_hole_+_bulkhead_+_connections
*CAT: n
*SEM: twoRel[rel=2_+_hole_+_bulkhead_+_connections]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_hole_+_bulkhead_+_connections
*CAT: n
*SEM: orRel[rel=2_+_hole_+_bulkhead_+_connections]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_end
*CAT: n
*SEM: unaryRel[rel=cable_+_end]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_end
*CAT: n
*SEM: twoRel[rel=cable_+_end]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_end
*CAT: n
*SEM: twoRel[rel=cable_+_end]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_end
*CAT: n
*SEM: orRel[rel=cable_+_end]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_fixed_+_bracket_+__-_opensb_-_a_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=non_+_conductive_+_fixed_+_bracket_+__-_opensb_-_a_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_fixed_+_bracket_+__-_opensb_-_a_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_fixed_+_bracket_+__-_opensb_-_a_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_fixed_+_bracket_+__-_opensb_-_a_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_fixed_+_bracket_+__-_opensb_-_a_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_fixed_+_bracket_+__-_opensb_-_a_-_closesb_-_
*CAT: n
*SEM: orRel[rel=non_+_conductive_+_fixed_+_bracket_+__-_opensb_-_a_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_of_+_equipment
*CAT: n
*SEM: unaryRel[rel=connector_+_of_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_of_+_equipment
*CAT: n
*SEM: twoRel[rel=connector_+_of_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_of_+_equipment
*CAT: n
*SEM: twoRel[rel=connector_+_of_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_of_+_equipment
*CAT: n
*SEM: orRel[rel=connector_+_of_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_bend_+_in_+_the_+_hose_+_routing_+_in_+_order
*CAT: n
*SEM: unaryRel[rel=at_+_least_+_one_+_bend_+_in_+_the_+_hose_+_routing_+_in_+_order]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_bend_+_in_+_the_+_hose_+_routing_+_in_+_order
*CAT: n
*SEM: twoRel[rel=at_+_least_+_one_+_bend_+_in_+_the_+_hose_+_routing_+_in_+_order]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_bend_+_in_+_the_+_hose_+_routing_+_in_+_order
*CAT: n
*SEM: twoRel[rel=at_+_least_+_one_+_bend_+_in_+_the_+_hose_+_routing_+_in_+_order]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_bend_+_in_+_the_+_hose_+_routing_+_in_+_order
*CAT: n
*SEM: orRel[rel=at_+_least_+_one_+_bend_+_in_+_the_+_hose_+_routing_+_in_+_order]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+__-_ampersand_-__+_fire_+_area
*CAT: n
*SEM: unaryRel[rel=hot_+__-_ampersand_-__+_fire_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+__-_ampersand_-__+_fire_+_area
*CAT: n
*SEM: twoRel[rel=hot_+__-_ampersand_-__+_fire_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+__-_ampersand_-__+_fire_+_area
*CAT: n
*SEM: twoRel[rel=hot_+__-_ampersand_-__+_fire_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+__-_ampersand_-__+_fire_+_area
*CAT: n
*SEM: orRel[rel=hot_+__-_ampersand_-__+_fire_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0616
*CAT: n
*SEM: unaryRel[rel=asne_+_0616]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0616
*CAT: n
*SEM: twoRel[rel=asne_+_0616]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0616
*CAT: n
*SEM: twoRel[rel=asne_+_0616]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0616
*CAT: n
*SEM: orRel[rel=asne_+_0616]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_data_+_bus
*CAT: n
*SEM: unaryRel[rel=afdx_+_data_+_bus]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_data_+_bus
*CAT: n
*SEM: twoRel[rel=afdx_+_data_+_bus]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_data_+_bus
*CAT: n
*SEM: twoRel[rel=afdx_+_data_+_bus]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_data_+_bus
*CAT: n
*SEM: orRel[rel=afdx_+_data_+_bus]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_electrical_+_network
*CAT: n
*SEM: unaryRel[rel=each_+_electrical_+_network]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_electrical_+_network
*CAT: n
*SEM: twoRel[rel=each_+_electrical_+_network]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_electrical_+_network
*CAT: n
*SEM: twoRel[rel=each_+_electrical_+_network]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_electrical_+_network
*CAT: n
*SEM: orRel[rel=each_+_electrical_+_network]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_route
*CAT: n
*SEM: unaryRel[rel=each_+_route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_route
*CAT: n
*SEM: twoRel[rel=each_+_route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_route
*CAT: n
*SEM: twoRel[rel=each_+_route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_route
*CAT: n
*SEM: orRel[rel=each_+_route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: components_+_long_+_enough_+_to
*CAT: n
*SEM: unaryRel[rel=components_+_long_+_enough_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: components_+_long_+_enough_+_to
*CAT: n
*SEM: twoRel[rel=components_+_long_+_enough_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: components_+_long_+_enough_+_to
*CAT: n
*SEM: twoRel[rel=components_+_long_+_enough_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: components_+_long_+_enough_+_to
*CAT: n
*SEM: orRel[rel=components_+_long_+_enough_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: axis
*CAT: n
*SEM: unaryRel[rel=axis]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: axis
*CAT: n
*SEM: twoRel[rel=axis]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: axis
*CAT: n
*SEM: twoRel[rel=axis]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: axis
*CAT: n
*SEM: orRel[rel=axis]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_clamp
*CAT: n
*SEM: unaryRel[rel=first_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_clamp
*CAT: n
*SEM: twoRel[rel=first_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_clamp
*CAT: n
*SEM: twoRel[rel=first_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_clamp
*CAT: n
*SEM: orRel[rel=first_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cost_+__-_ampersand_-__+_weight_+_saving
*CAT: n
*SEM: unaryRel[rel=cost_+__-_ampersand_-__+_weight_+_saving]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cost_+__-_ampersand_-__+_weight_+_saving
*CAT: n
*SEM: twoRel[rel=cost_+__-_ampersand_-__+_weight_+_saving]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cost_+__-_ampersand_-__+_weight_+_saving
*CAT: n
*SEM: twoRel[rel=cost_+__-_ampersand_-__+_weight_+_saving]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cost_+__-_ampersand_-__+_weight_+_saving
*CAT: n
*SEM: orRel[rel=cost_+__-_ampersand_-__+_weight_+_saving]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank_+_boundaries
*CAT: n
*SEM: unaryRel[rel=fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank_+_boundaries
*CAT: n
*SEM: twoRel[rel=fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank_+_boundaries
*CAT: n
*SEM: twoRel[rel=fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank_+_boundaries
*CAT: n
*SEM: orRel[rel=fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diode_+_modules
*CAT: n
*SEM: unaryRel[rel=diode_+_modules]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diode_+_modules
*CAT: n
*SEM: twoRel[rel=diode_+_modules]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diode_+_modules
*CAT: n
*SEM: twoRel[rel=diode_+_modules]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diode_+_modules
*CAT: n
*SEM: orRel[rel=diode_+_modules]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+__+_colonettes
*CAT: n
*SEM: unaryRel[rel=stand-off_+__+_colonettes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+__+_colonettes
*CAT: n
*SEM: twoRel[rel=stand-off_+__+_colonettes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+__+_colonettes
*CAT: n
*SEM: twoRel[rel=stand-off_+__+_colonettes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+__+_colonettes
*CAT: n
*SEM: orRel[rel=stand-off_+__+_colonettes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0861_+_fire_+_seal
*CAT: n
*SEM: unaryRel[rel=abs0861_+_fire_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0861_+_fire_+_seal
*CAT: n
*SEM: twoRel[rel=abs0861_+_fire_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0861_+_fire_+_seal
*CAT: n
*SEM: twoRel[rel=abs0861_+_fire_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0861_+_fire_+_seal
*CAT: n
*SEM: orRel[rel=abs0861_+_fire_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identical
*CAT: n
*SEM: unaryRel[rel=identical]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identical
*CAT: n
*SEM: twoRel[rel=identical]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identical
*CAT: n
*SEM: twoRel[rel=identical]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identical
*CAT: n
*SEM: orRel[rel=identical]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size_+__-_moreThan_-__+_20
*CAT: n
*SEM: unaryRel[rel=size_+__-_moreThan_-__+_20]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size_+__-_moreThan_-__+_20
*CAT: n
*SEM: twoRel[rel=size_+__-_moreThan_-__+_20]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size_+__-_moreThan_-__+_20
*CAT: n
*SEM: twoRel[rel=size_+__-_moreThan_-__+_20]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size_+__-_moreThan_-__+_20
*CAT: n
*SEM: orRel[rel=size_+__-_moreThan_-__+_20]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: atatched_+_figure
*CAT: n
*SEM: unaryRel[rel=atatched_+_figure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: atatched_+_figure
*CAT: n
*SEM: twoRel[rel=atatched_+_figure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: atatched_+_figure
*CAT: n
*SEM: twoRel[rel=atatched_+_figure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: atatched_+_figure
*CAT: n
*SEM: orRel[rel=atatched_+_figure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_short
*CAT: n
*SEM: unaryRel[rel=as_+_short]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_short
*CAT: n
*SEM: twoRel[rel=as_+_short]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_short
*CAT: n
*SEM: twoRel[rel=as_+_short]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_short
*CAT: n
*SEM: orRel[rel=as_+_short]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stainless_+_steel
*CAT: n
*SEM: unaryRel[rel=stainless_+_steel]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stainless_+_steel
*CAT: n
*SEM: twoRel[rel=stainless_+_steel]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stainless_+_steel
*CAT: n
*SEM: twoRel[rel=stainless_+_steel]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stainless_+_steel
*CAT: n
*SEM: orRel[rel=stainless_+_steel]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ones_+_which
*CAT: n
*SEM: unaryRel[rel=ones_+_which]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ones_+_which
*CAT: n
*SEM: twoRel[rel=ones_+_which]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ones_+_which
*CAT: n
*SEM: twoRel[rel=ones_+_which]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ones_+_which
*CAT: n
*SEM: orRel[rel=ones_+_which]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: the
*CAT: n
*SEM: unaryRel[rel=the]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: the
*CAT: n
*SEM: twoRel[rel=the]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: the
*CAT: n
*SEM: twoRel[rel=the]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: the
*CAT: n
*SEM: orRel[rel=the]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover_+_in_+_pressurized_+_areas
*CAT: n
*SEM: unaryRel[rel=spray_+_cover_+_in_+_pressurized_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover_+_in_+_pressurized_+_areas
*CAT: n
*SEM: twoRel[rel=spray_+_cover_+_in_+_pressurized_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover_+_in_+_pressurized_+_areas
*CAT: n
*SEM: twoRel[rel=spray_+_cover_+_in_+_pressurized_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover_+_in_+_pressurized_+_areas
*CAT: n
*SEM: orRel[rel=spray_+_cover_+_in_+_pressurized_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_temperature_+_is_+_t_-_greaterThan_-_150_-_degrees_-_c
*CAT: n
*SEM: unaryRel[rel=cable_+_temperature_+_is_+_t_-_greaterThan_-_150_-_degrees_-_c]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_temperature_+_is_+_t_-_greaterThan_-_150_-_degrees_-_c
*CAT: n
*SEM: twoRel[rel=cable_+_temperature_+_is_+_t_-_greaterThan_-_150_-_degrees_-_c]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_temperature_+_is_+_t_-_greaterThan_-_150_-_degrees_-_c
*CAT: n
*SEM: twoRel[rel=cable_+_temperature_+_is_+_t_-_greaterThan_-_150_-_degrees_-_c]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_temperature_+_is_+_t_-_greaterThan_-_150_-_degrees_-_c
*CAT: n
*SEM: orRel[rel=cable_+_temperature_+_is_+_t_-_greaterThan_-_150_-_degrees_-_c]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device
*CAT: n
*SEM: unaryRel[rel=attachment_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device
*CAT: n
*SEM: twoRel[rel=attachment_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device
*CAT: n
*SEM: twoRel[rel=attachment_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device
*CAT: n
*SEM: orRel[rel=attachment_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_sides_+_of_+_interface_+_plate_+_at_+_pressure_+_seals_+__-_opensb_-_vp_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=both_+_sides_+_of_+_interface_+_plate_+_at_+_pressure_+_seals_+__-_opensb_-_vp_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_sides_+_of_+_interface_+_plate_+_at_+_pressure_+_seals_+__-_opensb_-_vp_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=both_+_sides_+_of_+_interface_+_plate_+_at_+_pressure_+_seals_+__-_opensb_-_vp_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_sides_+_of_+_interface_+_plate_+_at_+_pressure_+_seals_+__-_opensb_-_vp_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=both_+_sides_+_of_+_interface_+_plate_+_at_+_pressure_+_seals_+__-_opensb_-_vp_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_sides_+_of_+_interface_+_plate_+_at_+_pressure_+_seals_+__-_opensb_-_vp_-_closesb_-_
*CAT: n
*SEM: orRel[rel=both_+_sides_+_of_+_interface_+_plate_+_at_+_pressure_+_seals_+__-_opensb_-_vp_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness_+_less_+_than_+_3
*CAT: n
*SEM: unaryRel[rel=surface_+_roughness_+_less_+_than_+_3]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness_+_less_+_than_+_3
*CAT: n
*SEM: twoRel[rel=surface_+_roughness_+_less_+_than_+_3]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness_+_less_+_than_+_3
*CAT: n
*SEM: twoRel[rel=surface_+_roughness_+_less_+_than_+_3]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness_+_less_+_than_+_3
*CAT: n
*SEM: orRel[rel=surface_+_roughness_+_less_+_than_+_3]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulated_+_bracket
*CAT: n
*SEM: unaryRel[rel=insulated_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulated_+_bracket
*CAT: n
*SEM: twoRel[rel=insulated_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulated_+_bracket
*CAT: n
*SEM: twoRel[rel=insulated_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulated_+_bracket
*CAT: n
*SEM: orRel[rel=insulated_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p15
*CAT: n
*SEM: unaryRel[rel=p15]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p15
*CAT: n
*SEM: twoRel[rel=p15]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p15
*CAT: n
*SEM: twoRel[rel=p15]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p15
*CAT: n
*SEM: orRel[rel=p15]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435
*CAT: n
*SEM: unaryRel[rel=asne_+_0435]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435
*CAT: n
*SEM: twoRel[rel=asne_+_0435]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435
*CAT: n
*SEM: twoRel[rel=asne_+_0435]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435
*CAT: n
*SEM: orRel[rel=asne_+_0435]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hinge_+_arms
*CAT: n
*SEM: unaryRel[rel=hinge_+_arms]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hinge_+_arms
*CAT: n
*SEM: twoRel[rel=hinge_+_arms]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hinge_+_arms
*CAT: n
*SEM: twoRel[rel=hinge_+_arms]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hinge_+_arms
*CAT: n
*SEM: orRel[rel=hinge_+_arms]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1358
*CAT: n
*SEM: unaryRel[rel=abs1358]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1358
*CAT: n
*SEM: twoRel[rel=abs1358]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1358
*CAT: n
*SEM: twoRel[rel=abs1358]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1358
*CAT: n
*SEM: orRel[rel=abs1358]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shell_+_conductivity
*CAT: n
*SEM: unaryRel[rel=shell_+_conductivity]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shell_+_conductivity
*CAT: n
*SEM: twoRel[rel=shell_+_conductivity]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shell_+_conductivity
*CAT: n
*SEM: twoRel[rel=shell_+_conductivity]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shell_+_conductivity
*CAT: n
*SEM: orRel[rel=shell_+_conductivity]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stowage_+_receptable
*CAT: n
*SEM: unaryRel[rel=stowage_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stowage_+_receptable
*CAT: n
*SEM: twoRel[rel=stowage_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stowage_+_receptable
*CAT: n
*SEM: twoRel[rel=stowage_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stowage_+_receptable
*CAT: n
*SEM: orRel[rel=stowage_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guiding_+_device
*CAT: n
*SEM: unaryRel[rel=guiding_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guiding_+_device
*CAT: n
*SEM: twoRel[rel=guiding_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guiding_+_device
*CAT: n
*SEM: twoRel[rel=guiding_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guiding_+_device
*CAT: n
*SEM: orRel[rel=guiding_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hose_+_amplitude_+_movements
*CAT: n
*SEM: unaryRel[rel=hose_+_amplitude_+_movements]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hose_+_amplitude_+_movements
*CAT: n
*SEM: twoRel[rel=hose_+_amplitude_+_movements]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hose_+_amplitude_+_movements
*CAT: n
*SEM: twoRel[rel=hose_+_amplitude_+_movements]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hose_+_amplitude_+_movements
*CAT: n
*SEM: orRel[rel=hose_+_amplitude_+_movements]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5107-b_+_black_+_tape_+_when
*CAT: n
*SEM: unaryRel[rel=nsa_+_5107-b_+_black_+_tape_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5107-b_+_black_+_tape_+_when
*CAT: n
*SEM: twoRel[rel=nsa_+_5107-b_+_black_+_tape_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5107-b_+_black_+_tape_+_when
*CAT: n
*SEM: twoRel[rel=nsa_+_5107-b_+_black_+_tape_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5107-b_+_black_+_tape_+_when
*CAT: n
*SEM: orRel[rel=nsa_+_5107-b_+_black_+_tape_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority
*CAT: n
*SEM: unaryRel[rel=priority]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority
*CAT: n
*SEM: twoRel[rel=priority]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority
*CAT: n
*SEM: twoRel[rel=priority]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority
*CAT: n
*SEM: orRel[rel=priority]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__-_equalto_-__+_13mm
*CAT: n
*SEM: unaryRel[rel=d_+__-_greaterThan_-__-_equalto_-__+_13mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__-_equalto_-__+_13mm
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__-_equalto_-__+_13mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__-_equalto_-__+_13mm
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__-_equalto_-__+_13mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__-_equalto_-__+_13mm
*CAT: n
*SEM: orRel[rel=d_+__-_greaterThan_-__-_equalto_-__+_13mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black
*CAT: n
*SEM: unaryRel[rel=black]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black
*CAT: n
*SEM: twoRel[rel=black]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black
*CAT: n
*SEM: twoRel[rel=black]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black
*CAT: n
*SEM: orRel[rel=black]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp
*CAT: n
*SEM: unaryRel[rel=clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp
*CAT: n
*SEM: twoRel[rel=clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp
*CAT: n
*SEM: twoRel[rel=clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp
*CAT: n
*SEM: orRel[rel=clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_position
*CAT: n
*SEM: unaryRel[rel=horizontal_+_position]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_position
*CAT: n
*SEM: twoRel[rel=horizontal_+_position]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_position
*CAT: n
*SEM: twoRel[rel=horizontal_+_position]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_position
*CAT: n
*SEM: orRel[rel=horizontal_+_position]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: possible_+_to_+_the_+_detector_+_housing
*CAT: n
*SEM: unaryRel[rel=possible_+_to_+_the_+_detector_+_housing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: possible_+_to_+_the_+_detector_+_housing
*CAT: n
*SEM: twoRel[rel=possible_+_to_+_the_+_detector_+_housing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: possible_+_to_+_the_+_detector_+_housing
*CAT: n
*SEM: twoRel[rel=possible_+_to_+_the_+_detector_+_housing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: possible_+_to_+_the_+_detector_+_housing
*CAT: n
*SEM: orRel[rel=possible_+_to_+_the_+_detector_+_housing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plug
*CAT: n
*SEM: unaryRel[rel=plug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plug
*CAT: n
*SEM: twoRel[rel=plug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plug
*CAT: n
*SEM: twoRel[rel=plug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plug
*CAT: n
*SEM: orRel[rel=plug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_circular_+_connectors_+_other_+_obstacles
*CAT: n
*SEM: unaryRel[rel=other_+_circular_+_connectors_+_other_+_obstacles]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_circular_+_connectors_+_other_+_obstacles
*CAT: n
*SEM: twoRel[rel=other_+_circular_+_connectors_+_other_+_obstacles]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_circular_+_connectors_+_other_+_obstacles
*CAT: n
*SEM: twoRel[rel=other_+_circular_+_connectors_+_other_+_obstacles]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_circular_+_connectors_+_other_+_obstacles
*CAT: n
*SEM: orRel[rel=other_+_circular_+_connectors_+_other_+_obstacles]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin_+_label_+_which
*CAT: n
*SEM: unaryRel[rel=fin_+_label_+_which]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin_+_label_+_which
*CAT: n
*SEM: twoRel[rel=fin_+_label_+_which]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin_+_label_+_which
*CAT: n
*SEM: twoRel[rel=fin_+_label_+_which]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin_+_label_+_which
*CAT: n
*SEM: orRel[rel=fin_+_label_+_which]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420-7_+_lacing_+_tape
*CAT: n
*SEM: unaryRel[rel=nsa8420-7_+_lacing_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420-7_+_lacing_+_tape
*CAT: n
*SEM: twoRel[rel=nsa8420-7_+_lacing_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420-7_+_lacing_+_tape
*CAT: n
*SEM: twoRel[rel=nsa8420-7_+_lacing_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420-7_+_lacing_+_tape
*CAT: n
*SEM: orRel[rel=nsa8420-7_+_lacing_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontally
*CAT: n
*SEM: unaryRel[rel=horizontally]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontally
*CAT: n
*SEM: twoRel[rel=horizontally]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontally
*CAT: n
*SEM: twoRel[rel=horizontally]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontally
*CAT: n
*SEM: orRel[rel=horizontally]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 41.9_+_mm
*CAT: n
*SEM: unaryRel[rel=41.9_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 41.9_+_mm
*CAT: n
*SEM: twoRel[rel=41.9_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 41.9_+_mm
*CAT: n
*SEM: twoRel[rel=41.9_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 41.9_+_mm
*CAT: n
*SEM: orRel[rel=41.9_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1353_+_emi_+_conduit
*CAT: n
*SEM: unaryRel[rel=abs_+_1353_+_emi_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1353_+_emi_+_conduit
*CAT: n
*SEM: twoRel[rel=abs_+_1353_+_emi_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1353_+_emi_+_conduit
*CAT: n
*SEM: twoRel[rel=abs_+_1353_+_emi_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1353_+_emi_+_conduit
*CAT: n
*SEM: orRel[rel=abs_+_1353_+_emi_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l_+__-_smallerThan_-__+__-_equalto_-_2_-_comma_-_5m
*CAT: n
*SEM: unaryRel[rel=l_+__-_smallerThan_-__+__-_equalto_-_2_-_comma_-_5m]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l_+__-_smallerThan_-__+__-_equalto_-_2_-_comma_-_5m
*CAT: n
*SEM: twoRel[rel=l_+__-_smallerThan_-__+__-_equalto_-_2_-_comma_-_5m]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l_+__-_smallerThan_-__+__-_equalto_-_2_-_comma_-_5m
*CAT: n
*SEM: twoRel[rel=l_+__-_smallerThan_-__+__-_equalto_-_2_-_comma_-_5m]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l_+__-_smallerThan_-__+__-_equalto_-_2_-_comma_-_5m
*CAT: n
*SEM: orRel[rel=l_+__-_smallerThan_-__+__-_equalto_-_2_-_comma_-_5m]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonded_+_conductive_+_bracket_+__-_opensb_-_b_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=bonded_+_conductive_+_bracket_+__-_opensb_-_b_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonded_+_conductive_+_bracket_+__-_opensb_-_b_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=bonded_+_conductive_+_bracket_+__-_opensb_-_b_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonded_+_conductive_+_bracket_+__-_opensb_-_b_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=bonded_+_conductive_+_bracket_+__-_opensb_-_b_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonded_+_conductive_+_bracket_+__-_opensb_-_b_-_closesb_-_
*CAT: n
*SEM: orRel[rel=bonded_+_conductive_+_bracket_+__-_opensb_-_b_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hanress_+_every_+_1.2m_+_maximum_+_pitch
*CAT: n
*SEM: unaryRel[rel=hanress_+_every_+_1.2m_+_maximum_+_pitch]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hanress_+_every_+_1.2m_+_maximum_+_pitch
*CAT: n
*SEM: twoRel[rel=hanress_+_every_+_1.2m_+_maximum_+_pitch]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hanress_+_every_+_1.2m_+_maximum_+_pitch
*CAT: n
*SEM: twoRel[rel=hanress_+_every_+_1.2m_+_maximum_+_pitch]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hanress_+_every_+_1.2m_+_maximum_+_pitch
*CAT: n
*SEM: orRel[rel=hanress_+_every_+_1.2m_+_maximum_+_pitch]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_of_+_450mm_+_in_+_wing
*CAT: n
*SEM: unaryRel[rel=maximum_+_pitch_+_of_+_450mm_+_in_+_wing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_of_+_450mm_+_in_+_wing
*CAT: n
*SEM: twoRel[rel=maximum_+_pitch_+_of_+_450mm_+_in_+_wing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_of_+_450mm_+_in_+_wing
*CAT: n
*SEM: twoRel[rel=maximum_+_pitch_+_of_+_450mm_+_in_+_wing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_of_+_450mm_+_in_+_wing
*CAT: n
*SEM: orRel[rel=maximum_+_pitch_+_of_+_450mm_+_in_+_wing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_19_+_mm_+_clearance_+__-_opensb_-_3_-_backslash_-_4_+_inches_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=at_+_least_+_19_+_mm_+_clearance_+__-_opensb_-_3_-_backslash_-_4_+_inches_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_19_+_mm_+_clearance_+__-_opensb_-_3_-_backslash_-_4_+_inches_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=at_+_least_+_19_+_mm_+_clearance_+__-_opensb_-_3_-_backslash_-_4_+_inches_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_19_+_mm_+_clearance_+__-_opensb_-_3_-_backslash_-_4_+_inches_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=at_+_least_+_19_+_mm_+_clearance_+__-_opensb_-_3_-_backslash_-_4_+_inches_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_19_+_mm_+_clearance_+__-_opensb_-_3_-_backslash_-_4_+_inches_-_closesb_-_
*CAT: n
*SEM: orRel[rel=at_+_least_+_19_+_mm_+_clearance_+__-_opensb_-_3_-_backslash_-_4_+_inches_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_fuselages_+_parts
*CAT: n
*SEM: unaryRel[rel=two_+_fuselages_+_parts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_fuselages_+_parts
*CAT: n
*SEM: twoRel[rel=two_+_fuselages_+_parts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_fuselages_+_parts
*CAT: n
*SEM: twoRel[rel=two_+_fuselages_+_parts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_fuselages_+_parts
*CAT: n
*SEM: orRel[rel=two_+_fuselages_+_parts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_point_+_level
*CAT: n
*SEM: unaryRel[rel=attachment_+_point_+_level]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_point_+_level
*CAT: n
*SEM: twoRel[rel=attachment_+_point_+_level]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_point_+_level
*CAT: n
*SEM: twoRel[rel=attachment_+_point_+_level]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_point_+_level
*CAT: n
*SEM: orRel[rel=attachment_+_point_+_level]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate
*CAT: n
*SEM: unaryRel[rel=mounting_+_plate]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate
*CAT: n
*SEM: twoRel[rel=mounting_+_plate]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate
*CAT: n
*SEM: twoRel[rel=mounting_+_plate]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate
*CAT: n
*SEM: orRel[rel=mounting_+_plate]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_accessibility
*CAT: n
*SEM: unaryRel[rel=label_+_accessibility]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_accessibility
*CAT: n
*SEM: twoRel[rel=label_+_accessibility]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_accessibility
*CAT: n
*SEM: twoRel[rel=label_+_accessibility]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_accessibility
*CAT: n
*SEM: orRel[rel=label_+_accessibility]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_style_+_which_+_are_+_listed_+_below_-_colon_-_
*CAT: n
*SEM: unaryRel[rel=interface_+_style_+_which_+_are_+_listed_+_below_-_colon_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_style_+_which_+_are_+_listed_+_below_-_colon_-_
*CAT: n
*SEM: twoRel[rel=interface_+_style_+_which_+_are_+_listed_+_below_-_colon_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_style_+_which_+_are_+_listed_+_below_-_colon_-_
*CAT: n
*SEM: twoRel[rel=interface_+_style_+_which_+_are_+_listed_+_below_-_colon_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_style_+_which_+_are_+_listed_+_below_-_colon_-_
*CAT: n
*SEM: orRel[rel=interface_+_style_+_which_+_are_+_listed_+_below_-_colon_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: orRel[rel=virtual_+_terminal_+_module_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pressurized_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=non_+_pressurized_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pressurized_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=non_+_pressurized_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pressurized_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=non_+_pressurized_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pressurized_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=non_+_pressurized_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locking
*CAT: n
*SEM: unaryRel[rel=locking]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locking
*CAT: n
*SEM: twoRel[rel=locking]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locking
*CAT: n
*SEM: twoRel[rel=locking]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locking
*CAT: n
*SEM: orRel[rel=locking]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek_+_ramp
*CAT: n
*SEM: unaryRel[rel=abs1576_+_peek_+_ramp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek_+_ramp
*CAT: n
*SEM: twoRel[rel=abs1576_+_peek_+_ramp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek_+_ramp
*CAT: n
*SEM: twoRel[rel=abs1576_+_peek_+_ramp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek_+_ramp
*CAT: n
*SEM: orRel[rel=abs1576_+_peek_+_ramp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see
*CAT: n
*SEM: unaryRel[rel=see]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see
*CAT: n
*SEM: twoRel[rel=see]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see
*CAT: n
*SEM: twoRel[rel=see]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see
*CAT: n
*SEM: orRel[rel=see]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: composite_+_structure
*CAT: n
*SEM: unaryRel[rel=composite_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: composite_+_structure
*CAT: n
*SEM: twoRel[rel=composite_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: composite_+_structure
*CAT: n
*SEM: twoRel[rel=composite_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: composite_+_structure
*CAT: n
*SEM: orRel[rel=composite_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: panel
*CAT: n
*SEM: unaryRel[rel=panel]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: panel
*CAT: n
*SEM: twoRel[rel=panel]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: panel
*CAT: n
*SEM: twoRel[rel=panel]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: panel
*CAT: n
*SEM: orRel[rel=panel]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: functional_+_item
*CAT: n
*SEM: unaryRel[rel=functional_+_item]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: functional_+_item
*CAT: n
*SEM: twoRel[rel=functional_+_item]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: functional_+_item
*CAT: n
*SEM: twoRel[rel=functional_+_item]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: functional_+_item
*CAT: n
*SEM: orRel[rel=functional_+_item]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle_+_on_+_bundle_+_level
*CAT: n
*SEM: unaryRel[rel=electrical_+_bundle_+_on_+_bundle_+_level]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle_+_on_+_bundle_+_level
*CAT: n
*SEM: twoRel[rel=electrical_+_bundle_+_on_+_bundle_+_level]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle_+_on_+_bundle_+_level
*CAT: n
*SEM: twoRel[rel=electrical_+_bundle_+_on_+_bundle_+_level]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle_+_on_+_bundle_+_level
*CAT: n
*SEM: orRel[rel=electrical_+_bundle_+_on_+_bundle_+_level]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an
*CAT: n
*SEM: unaryRel[rel=an]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an
*CAT: n
*SEM: twoRel[rel=an]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an
*CAT: n
*SEM: twoRel[rel=an]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an
*CAT: n
*SEM: orRel[rel=an]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_plate
*CAT: n
*SEM: unaryRel[rel=connector_+_plate]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_plate
*CAT: n
*SEM: twoRel[rel=connector_+_plate]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_plate
*CAT: n
*SEM: twoRel[rel=connector_+_plate]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_plate
*CAT: n
*SEM: orRel[rel=connector_+_plate]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vg_+_virtual_+_ground
*CAT: n
*SEM: unaryRel[rel=vg_+_virtual_+_ground]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vg_+_virtual_+_ground
*CAT: n
*SEM: twoRel[rel=vg_+_virtual_+_ground]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vg_+_virtual_+_ground
*CAT: n
*SEM: twoRel[rel=vg_+_virtual_+_ground]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vg_+_virtual_+_ground
*CAT: n
*SEM: orRel[rel=vg_+_virtual_+_ground]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_connector_+_of_+_element
*CAT: n
*SEM: unaryRel[rel=end_+_connector_+_of_+_element]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_connector_+_of_+_element
*CAT: n
*SEM: twoRel[rel=end_+_connector_+_of_+_element]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_connector_+_of_+_element
*CAT: n
*SEM: twoRel[rel=end_+_connector_+_of_+_element]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_connector_+_of_+_element
*CAT: n
*SEM: orRel[rel=end_+_connector_+_of_+_element]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=not_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=not_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=not_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_-_closesb_-_
*CAT: n
*SEM: orRel[rel=not_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_optimal_+_length
*CAT: n
*SEM: unaryRel[rel=an_+_optimal_+_length]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_optimal_+_length
*CAT: n
*SEM: twoRel[rel=an_+_optimal_+_length]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_optimal_+_length
*CAT: n
*SEM: twoRel[rel=an_+_optimal_+_length]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_optimal_+_length
*CAT: n
*SEM: orRel[rel=an_+_optimal_+_length]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hidden_+_zones_+_and
*CAT: n
*SEM: unaryRel[rel=hidden_+_zones_+_and]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hidden_+_zones_+_and
*CAT: n
*SEM: twoRel[rel=hidden_+_zones_+_and]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hidden_+_zones_+_and
*CAT: n
*SEM: twoRel[rel=hidden_+_zones_+_and]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hidden_+_zones_+_and
*CAT: n
*SEM: orRel[rel=hidden_+_zones_+_and]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamp
*CAT: n
*SEM: unaryRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamp
*CAT: n
*SEM: orRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: titanium_+_alloy_+_fittings
*CAT: n
*SEM: unaryRel[rel=titanium_+_alloy_+_fittings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: titanium_+_alloy_+_fittings
*CAT: n
*SEM: twoRel[rel=titanium_+_alloy_+_fittings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: titanium_+_alloy_+_fittings
*CAT: n
*SEM: twoRel[rel=titanium_+_alloy_+_fittings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: titanium_+_alloy_+_fittings
*CAT: n
*SEM: orRel[rel=titanium_+_alloy_+_fittings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: y+350
*CAT: n
*SEM: unaryRel[rel=y+350]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: y+350
*CAT: n
*SEM: twoRel[rel=y+350]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: y+350
*CAT: n
*SEM: twoRel[rel=y+350]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: y+350
*CAT: n
*SEM: orRel[rel=y+350]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cabin_+_equipments
*CAT: n
*SEM: unaryRel[rel=cabin_+_equipments]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cabin_+_equipments
*CAT: n
*SEM: twoRel[rel=cabin_+_equipments]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cabin_+_equipments
*CAT: n
*SEM: twoRel[rel=cabin_+_equipments]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cabin_+_equipments
*CAT: n
*SEM: orRel[rel=cabin_+_equipments]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction
*CAT: n
*SEM: unaryRel[rel=junction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction
*CAT: n
*SEM: twoRel[rel=junction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction
*CAT: n
*SEM: twoRel[rel=junction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction
*CAT: n
*SEM: orRel[rel=junction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_zones._+_not_+_underneath_+_of_+_removable_+_pipe_+_couplings
*CAT: n
*SEM: unaryRel[rel=hazardous_+_zones._+_not_+_underneath_+_of_+_removable_+_pipe_+_couplings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_zones._+_not_+_underneath_+_of_+_removable_+_pipe_+_couplings
*CAT: n
*SEM: twoRel[rel=hazardous_+_zones._+_not_+_underneath_+_of_+_removable_+_pipe_+_couplings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_zones._+_not_+_underneath_+_of_+_removable_+_pipe_+_couplings
*CAT: n
*SEM: twoRel[rel=hazardous_+_zones._+_not_+_underneath_+_of_+_removable_+_pipe_+_couplings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_zones._+_not_+_underneath_+_of_+_removable_+_pipe_+_couplings
*CAT: n
*SEM: orRel[rel=hazardous_+_zones._+_not_+_underneath_+_of_+_removable_+_pipe_+_couplings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature
*CAT: n
*SEM: unaryRel[rel=temperature]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature
*CAT: n
*SEM: twoRel[rel=temperature]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature
*CAT: n
*SEM: twoRel[rel=temperature]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature
*CAT: n
*SEM: orRel[rel=temperature]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_material
*CAT: n
*SEM: unaryRel[rel=cable_+_material]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_material
*CAT: n
*SEM: twoRel[rel=cable_+_material]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_material
*CAT: n
*SEM: twoRel[rel=cable_+_material]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_material
*CAT: n
*SEM: orRel[rel=cable_+_material]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: biggest_+_pipes_+_where_+_there
*CAT: n
*SEM: unaryRel[rel=biggest_+_pipes_+_where_+_there]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: biggest_+_pipes_+_where_+_there
*CAT: n
*SEM: twoRel[rel=biggest_+_pipes_+_where_+_there]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: biggest_+_pipes_+_where_+_there
*CAT: n
*SEM: twoRel[rel=biggest_+_pipes_+_where_+_there]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: biggest_+_pipes_+_where_+_there
*CAT: n
*SEM: orRel[rel=biggest_+_pipes_+_where_+_there]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connection
*CAT: n
*SEM: unaryRel[rel=connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connection
*CAT: n
*SEM: twoRel[rel=connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connection
*CAT: n
*SEM: twoRel[rel=connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connection
*CAT: n
*SEM: orRel[rel=connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cantilever_+_arm
*CAT: n
*SEM: unaryRel[rel=cantilever_+_arm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cantilever_+_arm
*CAT: n
*SEM: twoRel[rel=cantilever_+_arm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cantilever_+_arm
*CAT: n
*SEM: twoRel[rel=cantilever_+_arm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cantilever_+_arm
*CAT: n
*SEM: orRel[rel=cantilever_+_arm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie_+_size_+_4
*CAT: n
*SEM: unaryRel[rel=nsa_+_935401_+_cable_+_tie_+_size_+_4]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie_+_size_+_4
*CAT: n
*SEM: twoRel[rel=nsa_+_935401_+_cable_+_tie_+_size_+_4]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie_+_size_+_4
*CAT: n
*SEM: twoRel[rel=nsa_+_935401_+_cable_+_tie_+_size_+_4]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie_+_size_+_4
*CAT: n
*SEM: orRel[rel=nsa_+_935401_+_cable_+_tie_+_size_+_4]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bottom
*CAT: n
*SEM: unaryRel[rel=bottom]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bottom
*CAT: n
*SEM: twoRel[rel=bottom]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bottom
*CAT: n
*SEM: twoRel[rel=bottom]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bottom
*CAT: n
*SEM: orRel[rel=bottom]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: refer_+_to_+_the_+_attached_+_figure
*CAT: n
*SEM: unaryRel[rel=refer_+_to_+_the_+_attached_+_figure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: refer_+_to_+_the_+_attached_+_figure
*CAT: n
*SEM: twoRel[rel=refer_+_to_+_the_+_attached_+_figure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: refer_+_to_+_the_+_attached_+_figure
*CAT: n
*SEM: twoRel[rel=refer_+_to_+_the_+_attached_+_figure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: refer_+_to_+_the_+_attached_+_figure
*CAT: n
*SEM: orRel[rel=refer_+_to_+_the_+_attached_+_figure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: method
*CAT: n
*SEM: unaryRel[rel=method]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: method
*CAT: n
*SEM: twoRel[rel=method]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: method
*CAT: n
*SEM: twoRel[rel=method]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: method
*CAT: n
*SEM: orRel[rel=method]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=power_+_virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=power_+_virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=power_+_virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_
*CAT: n
*SEM: orRel[rel=power_+_virtual_+_terminal_+_block_+__-_opensb_-_vt_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_the_+_need_+_to
*CAT: n
*SEM: unaryRel[rel=account_+_the_+_need_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_the_+_need_+_to
*CAT: n
*SEM: twoRel[rel=account_+_the_+_need_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_the_+_need_+_to
*CAT: n
*SEM: twoRel[rel=account_+_the_+_need_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_the_+_need_+_to
*CAT: n
*SEM: orRel[rel=account_+_the_+_need_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pressurized_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_or_-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=non_+_pressurized_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_or_-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pressurized_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_or_-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=non_+_pressurized_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_or_-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pressurized_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_or_-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=non_+_pressurized_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_or_-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pressurized_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_or_-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=non_+_pressurized_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_or_-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double
*CAT: n
*SEM: unaryRel[rel=double]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double
*CAT: n
*SEM: twoRel[rel=double]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double
*CAT: n
*SEM: twoRel[rel=double]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double
*CAT: n
*SEM: orRel[rel=double]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_tape_+_asna5107
*CAT: n
*SEM: unaryRel[rel=black_+_tape_+_asna5107]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_tape_+_asna5107
*CAT: n
*SEM: twoRel[rel=black_+_tape_+_asna5107]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_tape_+_asna5107
*CAT: n
*SEM: twoRel[rel=black_+_tape_+_asna5107]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_tape_+_asna5107
*CAT: n
*SEM: orRel[rel=black_+_tape_+_asna5107]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_harness_+_extremity_+_all_+_along_+_the_+_harness_+_every_+_2_+_meter_+_in_+_zones_+_of_+_high_+_wiring_+_density
*CAT: n
*SEM: unaryRel[rel=each_+_harness_+_extremity_+_all_+_along_+_the_+_harness_+_every_+_2_+_meter_+_in_+_zones_+_of_+_high_+_wiring_+_density]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_harness_+_extremity_+_all_+_along_+_the_+_harness_+_every_+_2_+_meter_+_in_+_zones_+_of_+_high_+_wiring_+_density
*CAT: n
*SEM: twoRel[rel=each_+_harness_+_extremity_+_all_+_along_+_the_+_harness_+_every_+_2_+_meter_+_in_+_zones_+_of_+_high_+_wiring_+_density]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_harness_+_extremity_+_all_+_along_+_the_+_harness_+_every_+_2_+_meter_+_in_+_zones_+_of_+_high_+_wiring_+_density
*CAT: n
*SEM: twoRel[rel=each_+_harness_+_extremity_+_all_+_along_+_the_+_harness_+_every_+_2_+_meter_+_in_+_zones_+_of_+_high_+_wiring_+_density]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_harness_+_extremity_+_all_+_along_+_the_+_harness_+_every_+_2_+_meter_+_in_+_zones_+_of_+_high_+_wiring_+_density
*CAT: n
*SEM: orRel[rel=each_+_harness_+_extremity_+_all_+_along_+_the_+_harness_+_every_+_2_+_meter_+_in_+_zones_+_of_+_high_+_wiring_+_density]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_the_+_following_+_rules
*CAT: n
*SEM: unaryRel[rel=account_+_the_+_following_+_rules]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_the_+_following_+_rules
*CAT: n
*SEM: twoRel[rel=account_+_the_+_following_+_rules]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_the_+_following_+_rules
*CAT: n
*SEM: twoRel[rel=account_+_the_+_following_+_rules]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_the_+_following_+_rules
*CAT: n
*SEM: orRel[rel=account_+_the_+_following_+_rules]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: uv_+_laser
*CAT: n
*SEM: unaryRel[rel=uv_+_laser]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: uv_+_laser
*CAT: n
*SEM: twoRel[rel=uv_+_laser]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: uv_+_laser
*CAT: n
*SEM: twoRel[rel=uv_+_laser]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: uv_+_laser
*CAT: n
*SEM: orRel[rel=uv_+_laser]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_active_+_item_+_which
*CAT: n
*SEM: unaryRel[rel=electrical_+_active_+_item_+_which]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_active_+_item_+_which
*CAT: n
*SEM: twoRel[rel=electrical_+_active_+_item_+_which]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_active_+_item_+_which
*CAT: n
*SEM: twoRel[rel=electrical_+_active_+_item_+_which]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_active_+_item_+_which
*CAT: n
*SEM: orRel[rel=electrical_+_active_+_item_+_which]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_systems_+_e.g
*CAT: n
*SEM: unaryRel[rel=other_+_systems_+_e.g]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_systems_+_e.g
*CAT: n
*SEM: twoRel[rel=other_+_systems_+_e.g]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_systems_+_e.g
*CAT: n
*SEM: twoRel[rel=other_+_systems_+_e.g]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_systems_+_e.g
*CAT: n
*SEM: orRel[rel=other_+_systems_+_e.g]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diode
*CAT: n
*SEM: unaryRel[rel=diode]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diode
*CAT: n
*SEM: twoRel[rel=diode]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diode
*CAT: n
*SEM: twoRel[rel=diode]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diode
*CAT: n
*SEM: orRel[rel=diode]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 62200_+_when
*CAT: n
*SEM: unaryRel[rel=62200_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 62200_+_when
*CAT: n
*SEM: twoRel[rel=62200_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 62200_+_when
*CAT: n
*SEM: twoRel[rel=62200_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 62200_+_when
*CAT: n
*SEM: orRel[rel=62200_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_systems
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_systems]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_systems
*CAT: n
*SEM: twoRel[rel=hydraulic_+_systems]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_systems
*CAT: n
*SEM: twoRel[rel=hydraulic_+_systems]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_systems
*CAT: n
*SEM: orRel[rel=hydraulic_+_systems]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blackor
*CAT: n
*SEM: unaryRel[rel=blackor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blackor
*CAT: n
*SEM: twoRel[rel=blackor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blackor
*CAT: n
*SEM: twoRel[rel=blackor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blackor
*CAT: n
*SEM: orRel[rel=blackor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_larger
*CAT: n
*SEM: unaryRel[rel=installation_+_larger]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_larger
*CAT: n
*SEM: twoRel[rel=installation_+_larger]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_larger
*CAT: n
*SEM: twoRel[rel=installation_+_larger]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_larger
*CAT: n
*SEM: orRel[rel=installation_+_larger]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swaged_+_unions
*CAT: n
*SEM: unaryRel[rel=swaged_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swaged_+_unions
*CAT: n
*SEM: twoRel[rel=swaged_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swaged_+_unions
*CAT: n
*SEM: twoRel[rel=swaged_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swaged_+_unions
*CAT: n
*SEM: orRel[rel=swaged_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: regards
*CAT: n
*SEM: unaryRel[rel=regards]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: regards
*CAT: n
*SEM: twoRel[rel=regards]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: regards
*CAT: n
*SEM: twoRel[rel=regards]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: regards
*CAT: n
*SEM: orRel[rel=regards]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fqi-bundle
*CAT: n
*SEM: unaryRel[rel=fqi-bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fqi-bundle
*CAT: n
*SEM: twoRel[rel=fqi-bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fqi-bundle
*CAT: n
*SEM: twoRel[rel=fqi-bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fqi-bundle
*CAT: n
*SEM: orRel[rel=fqi-bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: unaryRel[rel=bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: twoRel[rel=bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: twoRel[rel=bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: orRel[rel=bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: always
*CAT: n
*SEM: unaryRel[rel=always]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: always
*CAT: n
*SEM: twoRel[rel=always]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: always
*CAT: n
*SEM: twoRel[rel=always]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: always
*CAT: n
*SEM: orRel[rel=always]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: however_+_elongated_+_clamp_+_blocks
*CAT: n
*SEM: unaryRel[rel=however_+_elongated_+_clamp_+_blocks]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: however_+_elongated_+_clamp_+_blocks
*CAT: n
*SEM: twoRel[rel=however_+_elongated_+_clamp_+_blocks]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: however_+_elongated_+_clamp_+_blocks
*CAT: n
*SEM: twoRel[rel=however_+_elongated_+_clamp_+_blocks]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: however_+_elongated_+_clamp_+_blocks
*CAT: n
*SEM: orRel[rel=however_+_elongated_+_clamp_+_blocks]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: c
*CAT: n
*SEM: unaryRel[rel=c]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: c
*CAT: n
*SEM: twoRel[rel=c]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: c
*CAT: n
*SEM: twoRel[rel=c]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: c
*CAT: n
*SEM: orRel[rel=c]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway_+_breakout
*CAT: n
*SEM: unaryRel[rel=raceway_+_breakout]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway_+_breakout
*CAT: n
*SEM: twoRel[rel=raceway_+_breakout]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway_+_breakout
*CAT: n
*SEM: twoRel[rel=raceway_+_breakout]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway_+_breakout
*CAT: n
*SEM: orRel[rel=raceway_+_breakout]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_connector_+_plate_+_belonging
*CAT: n
*SEM: unaryRel[rel=dedicated_+_connector_+_plate_+_belonging]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_connector_+_plate_+_belonging
*CAT: n
*SEM: twoRel[rel=dedicated_+_connector_+_plate_+_belonging]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_connector_+_plate_+_belonging
*CAT: n
*SEM: twoRel[rel=dedicated_+_connector_+_plate_+_belonging]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_connector_+_plate_+_belonging
*CAT: n
*SEM: orRel[rel=dedicated_+_connector_+_plate_+_belonging]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_strain_+__-_backslash_-__+_distortion_+__-_backslash_-__+_deflection_+_routing_+_geometry_+__-_backslash_-__+_chains_+_of_+_tolerance
*CAT: n
*SEM: unaryRel[rel=taking_+_into_+_account_+_strain_+__-_backslash_-__+_distortion_+__-_backslash_-__+_deflection_+_routing_+_geometry_+__-_backslash_-__+_chains_+_of_+_tolerance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_strain_+__-_backslash_-__+_distortion_+__-_backslash_-__+_deflection_+_routing_+_geometry_+__-_backslash_-__+_chains_+_of_+_tolerance
*CAT: n
*SEM: twoRel[rel=taking_+_into_+_account_+_strain_+__-_backslash_-__+_distortion_+__-_backslash_-__+_deflection_+_routing_+_geometry_+__-_backslash_-__+_chains_+_of_+_tolerance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_strain_+__-_backslash_-__+_distortion_+__-_backslash_-__+_deflection_+_routing_+_geometry_+__-_backslash_-__+_chains_+_of_+_tolerance
*CAT: n
*SEM: twoRel[rel=taking_+_into_+_account_+_strain_+__-_backslash_-__+_distortion_+__-_backslash_-__+_deflection_+_routing_+_geometry_+__-_backslash_-__+_chains_+_of_+_tolerance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_strain_+__-_backslash_-__+_distortion_+__-_backslash_-__+_deflection_+_routing_+_geometry_+__-_backslash_-__+_chains_+_of_+_tolerance
*CAT: n
*SEM: orRel[rel=taking_+_into_+_account_+_strain_+__-_backslash_-__+_distortion_+__-_backslash_-__+_deflection_+_routing_+_geometry_+__-_backslash_-__+_chains_+_of_+_tolerance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_closed_+_conduit
*CAT: n
*SEM: unaryRel[rel=inside_+_closed_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_closed_+_conduit
*CAT: n
*SEM: twoRel[rel=inside_+_closed_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_closed_+_conduit
*CAT: n
*SEM: twoRel[rel=inside_+_closed_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_closed_+_conduit
*CAT: n
*SEM: orRel[rel=inside_+_closed_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_part
*CAT: n
*SEM: unaryRel[rel=optional_+_part]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_part
*CAT: n
*SEM: twoRel[rel=optional_+_part]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_part
*CAT: n
*SEM: twoRel[rel=optional_+_part]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_part
*CAT: n
*SEM: orRel[rel=optional_+_part]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_electrical_+_bonding_+_symbol_+_when
*CAT: n
*SEM: unaryRel[rel=each_+_electrical_+_bonding_+_symbol_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_electrical_+_bonding_+_symbol_+_when
*CAT: n
*SEM: twoRel[rel=each_+_electrical_+_bonding_+_symbol_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_electrical_+_bonding_+_symbol_+_when
*CAT: n
*SEM: twoRel[rel=each_+_electrical_+_bonding_+_symbol_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_electrical_+_bonding_+_symbol_+_when
*CAT: n
*SEM: orRel[rel=each_+_electrical_+_bonding_+_symbol_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route
*CAT: n
*SEM: unaryRel[rel=route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route
*CAT: n
*SEM: twoRel[rel=route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route
*CAT: n
*SEM: twoRel[rel=route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route
*CAT: n
*SEM: orRel[rel=route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: missue
*CAT: n
*SEM: unaryRel[rel=missue]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: missue
*CAT: n
*SEM: twoRel[rel=missue]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: missue
*CAT: n
*SEM: twoRel[rel=missue]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: missue
*CAT: n
*SEM: orRel[rel=missue]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_the_+_aircraft_+_structureor_+_on
*CAT: n
*SEM: unaryRel[rel=to_+_the_+_aircraft_+_structureor_+_on]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_the_+_aircraft_+_structureor_+_on
*CAT: n
*SEM: twoRel[rel=to_+_the_+_aircraft_+_structureor_+_on]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_the_+_aircraft_+_structureor_+_on
*CAT: n
*SEM: twoRel[rel=to_+_the_+_aircraft_+_structureor_+_on]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_the_+_aircraft_+_structureor_+_on
*CAT: n
*SEM: orRel[rel=to_+_the_+_aircraft_+_structureor_+_on]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stirr_+_up
*CAT: n
*SEM: unaryRel[rel=stirr_+_up]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stirr_+_up
*CAT: n
*SEM: twoRel[rel=stirr_+_up]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stirr_+_up
*CAT: n
*SEM: twoRel[rel=stirr_+_up]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stirr_+_up
*CAT: n
*SEM: orRel[rel=stirr_+_up]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_profile
*CAT: n
*SEM: unaryRel[rel=same_+_profile]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_profile
*CAT: n
*SEM: twoRel[rel=same_+_profile]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_profile
*CAT: n
*SEM: twoRel[rel=same_+_profile]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_profile
*CAT: n
*SEM: orRel[rel=same_+_profile]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: technical_+_connector
*CAT: n
*SEM: unaryRel[rel=technical_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: technical_+_connector
*CAT: n
*SEM: twoRel[rel=technical_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: technical_+_connector
*CAT: n
*SEM: twoRel[rel=technical_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: technical_+_connector
*CAT: n
*SEM: orRel[rel=technical_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: apllication_+_of_+_attachment_+_device_+_at_+_the_+_level_+_of_+_the_+_bold_+_head
*CAT: n
*SEM: unaryRel[rel=apllication_+_of_+_attachment_+_device_+_at_+_the_+_level_+_of_+_the_+_bold_+_head]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: apllication_+_of_+_attachment_+_device_+_at_+_the_+_level_+_of_+_the_+_bold_+_head
*CAT: n
*SEM: twoRel[rel=apllication_+_of_+_attachment_+_device_+_at_+_the_+_level_+_of_+_the_+_bold_+_head]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: apllication_+_of_+_attachment_+_device_+_at_+_the_+_level_+_of_+_the_+_bold_+_head
*CAT: n
*SEM: twoRel[rel=apllication_+_of_+_attachment_+_device_+_at_+_the_+_level_+_of_+_the_+_bold_+_head]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: apllication_+_of_+_attachment_+_device_+_at_+_the_+_level_+_of_+_the_+_bold_+_head
*CAT: n
*SEM: orRel[rel=apllication_+_of_+_attachment_+_device_+_at_+_the_+_level_+_of_+_the_+_bold_+_head]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_frangible_+_paint_+_after_+_tightening
*CAT: n
*SEM: unaryRel[rel=red_+_frangible_+_paint_+_after_+_tightening]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_frangible_+_paint_+_after_+_tightening
*CAT: n
*SEM: twoRel[rel=red_+_frangible_+_paint_+_after_+_tightening]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_frangible_+_paint_+_after_+_tightening
*CAT: n
*SEM: twoRel[rel=red_+_frangible_+_paint_+_after_+_tightening]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_frangible_+_paint_+_after_+_tightening
*CAT: n
*SEM: orRel[rel=red_+_frangible_+_paint_+_after_+_tightening]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure
*CAT: n
*SEM: unaryRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure
*CAT: n
*SEM: twoRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure
*CAT: n
*SEM: twoRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure
*CAT: n
*SEM: orRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line_+_adaptors
*CAT: n
*SEM: unaryRel[rel=line_+_adaptors]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line_+_adaptors
*CAT: n
*SEM: twoRel[rel=line_+_adaptors]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line_+_adaptors
*CAT: n
*SEM: twoRel[rel=line_+_adaptors]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line_+_adaptors
*CAT: n
*SEM: orRel[rel=line_+_adaptors]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top_+_to
*CAT: n
*SEM: unaryRel[rel=top_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top_+_to
*CAT: n
*SEM: twoRel[rel=top_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top_+_to
*CAT: n
*SEM: twoRel[rel=top_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top_+_to
*CAT: n
*SEM: orRel[rel=top_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: moving_+_components_+_long_+_enough
*CAT: n
*SEM: unaryRel[rel=moving_+_components_+_long_+_enough]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: moving_+_components_+_long_+_enough
*CAT: n
*SEM: twoRel[rel=moving_+_components_+_long_+_enough]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: moving_+_components_+_long_+_enough
*CAT: n
*SEM: twoRel[rel=moving_+_components_+_long_+_enough]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: moving_+_components_+_long_+_enough
*CAT: n
*SEM: orRel[rel=moving_+_components_+_long_+_enough]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: failure
*CAT: n
*SEM: unaryRel[rel=failure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: failure
*CAT: n
*SEM: twoRel[rel=failure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: failure
*CAT: n
*SEM: twoRel[rel=failure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: failure
*CAT: n
*SEM: orRel[rel=failure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_of_+_2d
*CAT: n
*SEM: unaryRel[rel=bend_+_radius_+_of_+_2d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_of_+_2d
*CAT: n
*SEM: twoRel[rel=bend_+_radius_+_of_+_2d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_of_+_2d
*CAT: n
*SEM: twoRel[rel=bend_+_radius_+_of_+_2d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_of_+_2d
*CAT: n
*SEM: orRel[rel=bend_+_radius_+_of_+_2d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flat_+_no_+_relative_+_movement
*CAT: n
*SEM: unaryRel[rel=flat_+_no_+_relative_+_movement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flat_+_no_+_relative_+_movement
*CAT: n
*SEM: twoRel[rel=flat_+_no_+_relative_+_movement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flat_+_no_+_relative_+_movement
*CAT: n
*SEM: twoRel[rel=flat_+_no_+_relative_+_movement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flat_+_no_+_relative_+_movement
*CAT: n
*SEM: orRel[rel=flat_+_no_+_relative_+_movement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616
*CAT: n
*SEM: unaryRel[rel=asne0616]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616
*CAT: n
*SEM: twoRel[rel=asne0616]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616
*CAT: n
*SEM: twoRel[rel=asne0616]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616
*CAT: n
*SEM: orRel[rel=asne0616]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tool_+_access
*CAT: n
*SEM: unaryRel[rel=tool_+_access]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tool_+_access
*CAT: n
*SEM: twoRel[rel=tool_+_access]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tool_+_access
*CAT: n
*SEM: twoRel[rel=tool_+_access]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tool_+_access
*CAT: n
*SEM: orRel[rel=tool_+_access]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_insulation
*CAT: n
*SEM: unaryRel[rel=primary_+_insulation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_insulation
*CAT: n
*SEM: twoRel[rel=primary_+_insulation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_insulation
*CAT: n
*SEM: twoRel[rel=primary_+_insulation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_insulation
*CAT: n
*SEM: orRel[rel=primary_+_insulation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: min_+_d_+__-_greaterThan_-__+__-_equalto_-_5mm
*CAT: n
*SEM: unaryRel[rel=min_+_d_+__-_greaterThan_-__+__-_equalto_-_5mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: min_+_d_+__-_greaterThan_-__+__-_equalto_-_5mm
*CAT: n
*SEM: twoRel[rel=min_+_d_+__-_greaterThan_-__+__-_equalto_-_5mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: min_+_d_+__-_greaterThan_-__+__-_equalto_-_5mm
*CAT: n
*SEM: twoRel[rel=min_+_d_+__-_greaterThan_-__+__-_equalto_-_5mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: min_+_d_+__-_greaterThan_-__+__-_equalto_-_5mm
*CAT: n
*SEM: orRel[rel=min_+_d_+__-_greaterThan_-__+__-_equalto_-_5mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossed_+_connection
*CAT: n
*SEM: unaryRel[rel=crossed_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossed_+_connection
*CAT: n
*SEM: twoRel[rel=crossed_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossed_+_connection
*CAT: n
*SEM: twoRel[rel=crossed_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossed_+_connection
*CAT: n
*SEM: orRel[rel=crossed_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_diameter
*CAT: n
*SEM: unaryRel[rel=maximum_+_diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_diameter
*CAT: n
*SEM: twoRel[rel=maximum_+_diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_diameter
*CAT: n
*SEM: twoRel[rel=maximum_+_diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_diameter
*CAT: n
*SEM: orRel[rel=maximum_+_diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_grommet
*CAT: n
*SEM: unaryRel[rel=circular_+_grommet]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_grommet
*CAT: n
*SEM: twoRel[rel=circular_+_grommet]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_grommet
*CAT: n
*SEM: twoRel[rel=circular_+_grommet]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_grommet
*CAT: n
*SEM: orRel[rel=circular_+_grommet]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: strain_+_deflection
*CAT: n
*SEM: unaryRel[rel=strain_+_deflection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: strain_+_deflection
*CAT: n
*SEM: twoRel[rel=strain_+_deflection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: strain_+_deflection
*CAT: n
*SEM: twoRel[rel=strain_+_deflection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: strain_+_deflection
*CAT: n
*SEM: orRel[rel=strain_+_deflection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_center
*CAT: n
*SEM: unaryRel[rel=power_+_center]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_center
*CAT: n
*SEM: twoRel[rel=power_+_center]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_center
*CAT: n
*SEM: twoRel[rel=power_+_center]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_center
*CAT: n
*SEM: orRel[rel=power_+_center]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support
*CAT: n
*SEM: unaryRel[rel=support]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support
*CAT: n
*SEM: twoRel[rel=support]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support
*CAT: n
*SEM: twoRel[rel=support]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support
*CAT: n
*SEM: orRel[rel=support]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_below
*CAT: n
*SEM: unaryRel[rel=picture_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_below
*CAT: n
*SEM: twoRel[rel=picture_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_below
*CAT: n
*SEM: twoRel[rel=picture_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_below
*CAT: n
*SEM: orRel[rel=picture_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: which_+_are_+_liable
*CAT: n
*SEM: unaryRel[rel=which_+_are_+_liable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: which_+_are_+_liable
*CAT: n
*SEM: twoRel[rel=which_+_are_+_liable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: which_+_are_+_liable
*CAT: n
*SEM: twoRel[rel=which_+_are_+_liable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: which_+_are_+_liable
*CAT: n
*SEM: orRel[rel=which_+_are_+_liable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: leaky_+_line
*CAT: n
*SEM: unaryRel[rel=leaky_+_line]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: leaky_+_line
*CAT: n
*SEM: twoRel[rel=leaky_+_line]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: leaky_+_line
*CAT: n
*SEM: twoRel[rel=leaky_+_line]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: leaky_+_line
*CAT: n
*SEM: orRel[rel=leaky_+_line]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket
*CAT: n
*SEM: unaryRel[rel=socket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket
*CAT: n
*SEM: twoRel[rel=socket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket
*CAT: n
*SEM: twoRel[rel=socket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket
*CAT: n
*SEM: orRel[rel=socket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_component.
*CAT: n
*SEM: unaryRel[rel=any_+_component.]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_component.
*CAT: n
*SEM: twoRel[rel=any_+_component.]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_component.
*CAT: n
*SEM: twoRel[rel=any_+_component.]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_component.
*CAT: n
*SEM: orRel[rel=any_+_component.]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connections_+_on_+_pipes
*CAT: n
*SEM: unaryRel[rel=connections_+_on_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connections_+_on_+_pipes
*CAT: n
*SEM: twoRel[rel=connections_+_on_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connections_+_on_+_pipes
*CAT: n
*SEM: twoRel[rel=connections_+_on_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connections_+_on_+_pipes
*CAT: n
*SEM: orRel[rel=connections_+_on_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ends
*CAT: n
*SEM: unaryRel[rel=ends]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ends
*CAT: n
*SEM: twoRel[rel=ends]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ends
*CAT: n
*SEM: twoRel[rel=ends]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ends
*CAT: n
*SEM: orRel[rel=ends]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pvis
*CAT: n
*SEM: unaryRel[rel=pvis]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pvis
*CAT: n
*SEM: twoRel[rel=pvis]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pvis
*CAT: n
*SEM: twoRel[rel=pvis]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pvis
*CAT: n
*SEM: orRel[rel=pvis]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_bend.
*CAT: n
*SEM: unaryRel[rel=second_+_bend.]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_bend.
*CAT: n
*SEM: twoRel[rel=second_+_bend.]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_bend.
*CAT: n
*SEM: twoRel[rel=second_+_bend.]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_bend.
*CAT: n
*SEM: orRel[rel=second_+_bend.]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_37mm
*CAT: n
*SEM: unaryRel[rel=d_-_greaterThan_-__-_equalto_-__+_37mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_37mm
*CAT: n
*SEM: twoRel[rel=d_-_greaterThan_-__-_equalto_-__+_37mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_37mm
*CAT: n
*SEM: twoRel[rel=d_-_greaterThan_-__-_equalto_-__+_37mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_37mm
*CAT: n
*SEM: orRel[rel=d_-_greaterThan_-__-_equalto_-__+_37mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516bd
*CAT: n
*SEM: unaryRel[rel=nsa_+_5516bd]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516bd
*CAT: n
*SEM: twoRel[rel=nsa_+_5516bd]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516bd
*CAT: n
*SEM: twoRel[rel=nsa_+_5516bd]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516bd
*CAT: n
*SEM: orRel[rel=nsa_+_5516bd]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rd_+_system
*CAT: n
*SEM: unaryRel[rel=rd_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rd_+_system
*CAT: n
*SEM: twoRel[rel=rd_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rd_+_system
*CAT: n
*SEM: twoRel[rel=rd_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rd_+_system
*CAT: n
*SEM: orRel[rel=rd_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_level
*CAT: n
*SEM: unaryRel[rel=bundle_+_level]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_level
*CAT: n
*SEM: twoRel[rel=bundle_+_level]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_level
*CAT: n
*SEM: twoRel[rel=bundle_+_level]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_level
*CAT: n
*SEM: orRel[rel=bundle_+_level]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolt
*CAT: n
*SEM: unaryRel[rel=bolt]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolt
*CAT: n
*SEM: twoRel[rel=bolt]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolt
*CAT: n
*SEM: twoRel[rel=bolt]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolt
*CAT: n
*SEM: orRel[rel=bolt]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: largest_+_surface_+_first
*CAT: n
*SEM: unaryRel[rel=largest_+_surface_+_first]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: largest_+_surface_+_first
*CAT: n
*SEM: twoRel[rel=largest_+_surface_+_first]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: largest_+_surface_+_first
*CAT: n
*SEM: twoRel[rel=largest_+_surface_+_first]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: largest_+_surface_+_first
*CAT: n
*SEM: orRel[rel=largest_+_surface_+_first]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: place
*CAT: n
*SEM: unaryRel[rel=place]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: place
*CAT: n
*SEM: twoRel[rel=place]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: place
*CAT: n
*SEM: twoRel[rel=place]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: place
*CAT: n
*SEM: orRel[rel=place]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_available
*CAT: n
*SEM: unaryRel[rel=not_+_available]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_available
*CAT: n
*SEM: twoRel[rel=not_+_available]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_available
*CAT: n
*SEM: twoRel[rel=not_+_available]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_available
*CAT: n
*SEM: orRel[rel=not_+_available]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_where
*CAT: n
*SEM: unaryRel[rel=equipment_+_where]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_where
*CAT: n
*SEM: twoRel[rel=equipment_+_where]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_where
*CAT: n
*SEM: twoRel[rel=equipment_+_where]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_where
*CAT: n
*SEM: orRel[rel=equipment_+_where]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l
*CAT: n
*SEM: unaryRel[rel=length_+_l]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l
*CAT: n
*SEM: twoRel[rel=length_+_l]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l
*CAT: n
*SEM: twoRel[rel=length_+_l]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l
*CAT: n
*SEM: orRel[rel=length_+_l]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 35mm
*CAT: n
*SEM: unaryRel[rel=35mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 35mm
*CAT: n
*SEM: twoRel[rel=35mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 35mm
*CAT: n
*SEM: twoRel[rel=35mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 35mm
*CAT: n
*SEM: orRel[rel=35mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_loap
*CAT: n
*SEM: unaryRel[rel=account_+_loap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_loap
*CAT: n
*SEM: twoRel[rel=account_+_loap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_loap
*CAT: n
*SEM: twoRel[rel=account_+_loap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_loap
*CAT: n
*SEM: orRel[rel=account_+_loap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_connector
*CAT: n
*SEM: unaryRel[rel=efcs_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_connector
*CAT: n
*SEM: twoRel[rel=efcs_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_connector
*CAT: n
*SEM: twoRel[rel=efcs_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_connector
*CAT: n
*SEM: orRel[rel=efcs_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit
*CAT: n
*SEM: unaryRel[rel=nsa935805_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit
*CAT: n
*SEM: twoRel[rel=nsa935805_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit
*CAT: n
*SEM: twoRel[rel=nsa935805_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit
*CAT: n
*SEM: orRel[rel=nsa935805_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_mounting_+_plate
*CAT: n
*SEM: unaryRel[rel=interface_+_mounting_+_plate]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_mounting_+_plate
*CAT: n
*SEM: twoRel[rel=interface_+_mounting_+_plate]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_mounting_+_plate
*CAT: n
*SEM: twoRel[rel=interface_+_mounting_+_plate]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_mounting_+_plate
*CAT: n
*SEM: orRel[rel=interface_+_mounting_+_plate]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=two_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_clamp-block
*CAT: n
*SEM: twoRel[rel=two_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_clamp-block
*CAT: n
*SEM: twoRel[rel=two_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_clamp-block
*CAT: n
*SEM: orRel[rel=two_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: these
*CAT: n
*SEM: unaryRel[rel=these]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: these
*CAT: n
*SEM: twoRel[rel=these]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: these
*CAT: n
*SEM: twoRel[rel=these]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: these
*CAT: n
*SEM: orRel[rel=these]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_of_+_the_+_biggest_+_pipes_+_where_+_there_+_is_+_more_+_than_+_one_+_pipe
*CAT: n
*SEM: unaryRel[rel=least_+_one_+_of_+_the_+_biggest_+_pipes_+_where_+_there_+_is_+_more_+_than_+_one_+_pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_of_+_the_+_biggest_+_pipes_+_where_+_there_+_is_+_more_+_than_+_one_+_pipe
*CAT: n
*SEM: twoRel[rel=least_+_one_+_of_+_the_+_biggest_+_pipes_+_where_+_there_+_is_+_more_+_than_+_one_+_pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_of_+_the_+_biggest_+_pipes_+_where_+_there_+_is_+_more_+_than_+_one_+_pipe
*CAT: n
*SEM: twoRel[rel=least_+_one_+_of_+_the_+_biggest_+_pipes_+_where_+_there_+_is_+_more_+_than_+_one_+_pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_of_+_the_+_biggest_+_pipes_+_where_+_there_+_is_+_more_+_than_+_one_+_pipe
*CAT: n
*SEM: orRel[rel=least_+_one_+_of_+_the_+_biggest_+_pipes_+_where_+_there_+_is_+_more_+_than_+_one_+_pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_picture
*CAT: n
*SEM: unaryRel[rel=attached_+_picture]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_picture
*CAT: n
*SEM: twoRel[rel=attached_+_picture]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_picture
*CAT: n
*SEM: twoRel[rel=attached_+_picture]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_picture
*CAT: n
*SEM: orRel[rel=attached_+_picture]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration
*CAT: n
*SEM: unaryRel[rel=vibration]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration
*CAT: n
*SEM: twoRel[rel=vibration]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration
*CAT: n
*SEM: twoRel[rel=vibration]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration
*CAT: n
*SEM: orRel[rel=vibration]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_configuration_+_where_+_limited_+_space_+_does_+_not_+_permit_+_sufficient_+_clearance_+_between_+_hydraulic
*CAT: n
*SEM: unaryRel[rel=specific_+_configuration_+_where_+_limited_+_space_+_does_+_not_+_permit_+_sufficient_+_clearance_+_between_+_hydraulic]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_configuration_+_where_+_limited_+_space_+_does_+_not_+_permit_+_sufficient_+_clearance_+_between_+_hydraulic
*CAT: n
*SEM: twoRel[rel=specific_+_configuration_+_where_+_limited_+_space_+_does_+_not_+_permit_+_sufficient_+_clearance_+_between_+_hydraulic]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_configuration_+_where_+_limited_+_space_+_does_+_not_+_permit_+_sufficient_+_clearance_+_between_+_hydraulic
*CAT: n
*SEM: twoRel[rel=specific_+_configuration_+_where_+_limited_+_space_+_does_+_not_+_permit_+_sufficient_+_clearance_+_between_+_hydraulic]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_configuration_+_where_+_limited_+_space_+_does_+_not_+_permit_+_sufficient_+_clearance_+_between_+_hydraulic
*CAT: n
*SEM: orRel[rel=specific_+_configuration_+_where_+_limited_+_space_+_does_+_not_+_permit_+_sufficient_+_clearance_+_between_+_hydraulic]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fqi
*CAT: n
*SEM: unaryRel[rel=fqi]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fqi
*CAT: n
*SEM: twoRel[rel=fqi]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fqi
*CAT: n
*SEM: twoRel[rel=fqi]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fqi
*CAT: n
*SEM: orRel[rel=fqi]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_point_+_to_+_any_+_part
*CAT: n
*SEM: unaryRel[rel=attachment_+_point_+_to_+_any_+_part]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_point_+_to_+_any_+_part
*CAT: n
*SEM: twoRel[rel=attachment_+_point_+_to_+_any_+_part]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_point_+_to_+_any_+_part
*CAT: n
*SEM: twoRel[rel=attachment_+_point_+_to_+_any_+_part]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_point_+_to_+_any_+_part
*CAT: n
*SEM: orRel[rel=attachment_+_point_+_to_+_any_+_part]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relation_+_2n_+__-_greaterThan_-__+_5d2_+__-_smallerThan_-__+_2
*CAT: n
*SEM: unaryRel[rel=relation_+_2n_+__-_greaterThan_-__+_5d2_+__-_smallerThan_-__+_2]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relation_+_2n_+__-_greaterThan_-__+_5d2_+__-_smallerThan_-__+_2
*CAT: n
*SEM: twoRel[rel=relation_+_2n_+__-_greaterThan_-__+_5d2_+__-_smallerThan_-__+_2]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relation_+_2n_+__-_greaterThan_-__+_5d2_+__-_smallerThan_-__+_2
*CAT: n
*SEM: twoRel[rel=relation_+_2n_+__-_greaterThan_-__+_5d2_+__-_smallerThan_-__+_2]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relation_+_2n_+__-_greaterThan_-__+_5d2_+__-_smallerThan_-__+_2
*CAT: n
*SEM: orRel[rel=relation_+_2n_+__-_greaterThan_-__+_5d2_+__-_smallerThan_-__+_2]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block_+_to
*CAT: n
*SEM: unaryRel[rel=clamp-block_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block_+_to
*CAT: n
*SEM: twoRel[rel=clamp-block_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block_+_to
*CAT: n
*SEM: twoRel[rel=clamp-block_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block_+_to
*CAT: n
*SEM: orRel[rel=clamp-block_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: labels
*CAT: n
*SEM: unaryRel[rel=labels]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: labels
*CAT: n
*SEM: twoRel[rel=labels]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: labels
*CAT: n
*SEM: twoRel[rel=labels]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: labels
*CAT: n
*SEM: orRel[rel=labels]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_p-route
*CAT: n
*SEM: unaryRel[rel=non_+_pre_+_stressed_+_p-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_p-route
*CAT: n
*SEM: twoRel[rel=non_+_pre_+_stressed_+_p-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_p-route
*CAT: n
*SEM: twoRel[rel=non_+_pre_+_stressed_+_p-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_p-route
*CAT: n
*SEM: orRel[rel=non_+_pre_+_stressed_+_p-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: down_+_to_+_5_+_mm
*CAT: n
*SEM: unaryRel[rel=down_+_to_+_5_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: down_+_to_+_5_+_mm
*CAT: n
*SEM: twoRel[rel=down_+_to_+_5_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: down_+_to_+_5_+_mm
*CAT: n
*SEM: twoRel[rel=down_+_to_+_5_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: down_+_to_+_5_+_mm
*CAT: n
*SEM: orRel[rel=down_+_to_+_5_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2m
*CAT: n
*SEM: unaryRel[rel=2m]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2m
*CAT: n
*SEM: twoRel[rel=2m]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2m
*CAT: n
*SEM: twoRel[rel=2m]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2m
*CAT: n
*SEM: orRel[rel=2m]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_above
*CAT: n
*SEM: unaryRel[rel=picture_+_above]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_above
*CAT: n
*SEM: twoRel[rel=picture_+_above]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_above
*CAT: n
*SEM: twoRel[rel=picture_+_above]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_above
*CAT: n
*SEM: orRel[rel=picture_+_above]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_remobale
*CAT: n
*SEM: unaryRel[rel=non_+_remobale]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_remobale
*CAT: n
*SEM: twoRel[rel=non_+_remobale]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_remobale
*CAT: n
*SEM: twoRel[rel=non_+_remobale]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_remobale
*CAT: n
*SEM: orRel[rel=non_+_remobale]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter
*CAT: n
*SEM: unaryRel[rel=diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter
*CAT: n
*SEM: twoRel[rel=diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter
*CAT: n
*SEM: twoRel[rel=diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter
*CAT: n
*SEM: orRel[rel=diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: boxes
*CAT: n
*SEM: unaryRel[rel=boxes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: boxes
*CAT: n
*SEM: twoRel[rel=boxes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: boxes
*CAT: n
*SEM: twoRel[rel=boxes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: boxes
*CAT: n
*SEM: orRel[rel=boxes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permission
*CAT: n
*SEM: unaryRel[rel=permission]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permission
*CAT: n
*SEM: twoRel[rel=permission]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permission
*CAT: n
*SEM: twoRel[rel=permission]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permission
*CAT: n
*SEM: orRel[rel=permission]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l_-_equalto_-_50mm_+_+-_+_5mm
*CAT: n
*SEM: unaryRel[rel=l_-_equalto_-_50mm_+_+-_+_5mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l_-_equalto_-_50mm_+_+-_+_5mm
*CAT: n
*SEM: twoRel[rel=l_-_equalto_-_50mm_+_+-_+_5mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l_-_equalto_-_50mm_+_+-_+_5mm
*CAT: n
*SEM: twoRel[rel=l_-_equalto_-_50mm_+_+-_+_5mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l_-_equalto_-_50mm_+_+-_+_5mm
*CAT: n
*SEM: orRel[rel=l_-_equalto_-_50mm_+_+-_+_5mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 15.875mm
*CAT: n
*SEM: unaryRel[rel=15.875mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 15.875mm
*CAT: n
*SEM: twoRel[rel=15.875mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 15.875mm
*CAT: n
*SEM: twoRel[rel=15.875mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 15.875mm
*CAT: n
*SEM: orRel[rel=15.875mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0176_+_protective_+_cap
*CAT: n
*SEM: unaryRel[rel=asne0176_+_protective_+_cap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0176_+_protective_+_cap
*CAT: n
*SEM: twoRel[rel=asne0176_+_protective_+_cap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0176_+_protective_+_cap
*CAT: n
*SEM: twoRel[rel=asne0176_+_protective_+_cap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0176_+_protective_+_cap
*CAT: n
*SEM: orRel[rel=asne0176_+_protective_+_cap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: controlled_+_relative_+_movement_+_a_+_device
*CAT: n
*SEM: unaryRel[rel=controlled_+_relative_+_movement_+_a_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: controlled_+_relative_+_movement_+_a_+_device
*CAT: n
*SEM: twoRel[rel=controlled_+_relative_+_movement_+_a_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: controlled_+_relative_+_movement_+_a_+_device
*CAT: n
*SEM: twoRel[rel=controlled_+_relative_+_movement_+_a_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: controlled_+_relative_+_movement_+_a_+_device
*CAT: n
*SEM: orRel[rel=controlled_+_relative_+_movement_+_a_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_ratio_+_r_-_backslash_-_d
*CAT: n
*SEM: unaryRel[rel=diameter_+_ratio_+_r_-_backslash_-_d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_ratio_+_r_-_backslash_-_d
*CAT: n
*SEM: twoRel[rel=diameter_+_ratio_+_r_-_backslash_-_d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_ratio_+_r_-_backslash_-_d
*CAT: n
*SEM: twoRel[rel=diameter_+_ratio_+_r_-_backslash_-_d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_ratio_+_r_-_backslash_-_d
*CAT: n
*SEM: orRel[rel=diameter_+_ratio_+_r_-_backslash_-_d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes
*CAT: n
*SEM: unaryRel[rel=pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes
*CAT: n
*SEM: twoRel[rel=pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes
*CAT: n
*SEM: twoRel[rel=pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes
*CAT: n
*SEM: orRel[rel=pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coax_+_n_+__-_greaterThan_-__+__-_equalto_-_1
*CAT: n
*SEM: unaryRel[rel=coax_+_n_+__-_greaterThan_-__+__-_equalto_-_1]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coax_+_n_+__-_greaterThan_-__+__-_equalto_-_1
*CAT: n
*SEM: twoRel[rel=coax_+_n_+__-_greaterThan_-__+__-_equalto_-_1]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coax_+_n_+__-_greaterThan_-__+__-_equalto_-_1
*CAT: n
*SEM: twoRel[rel=coax_+_n_+__-_greaterThan_-__+__-_equalto_-_1]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coax_+_n_+__-_greaterThan_-__+__-_equalto_-_1
*CAT: n
*SEM: orRel[rel=coax_+_n_+__-_greaterThan_-__+__-_equalto_-_1]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_d_+__-_equalto_-_
*CAT: n
*SEM: unaryRel[rel=distance_+_d_+__-_equalto_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_d_+__-_equalto_-_
*CAT: n
*SEM: twoRel[rel=distance_+_d_+__-_equalto_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_d_+__-_equalto_-_
*CAT: n
*SEM: twoRel[rel=distance_+_d_+__-_equalto_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_d_+__-_equalto_-_
*CAT: n
*SEM: orRel[rel=distance_+_d_+__-_equalto_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_bend
*CAT: n
*SEM: unaryRel[rel=first_+_bend]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_bend
*CAT: n
*SEM: twoRel[rel=first_+_bend]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_bend
*CAT: n
*SEM: twoRel[rel=first_+_bend]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_bend
*CAT: n
*SEM: orRel[rel=first_+_bend]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_cost
*CAT: n
*SEM: unaryRel[rel=account_+_cost]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_cost
*CAT: n
*SEM: twoRel[rel=account_+_cost]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_cost
*CAT: n
*SEM: twoRel[rel=account_+_cost]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_cost
*CAT: n
*SEM: orRel[rel=account_+_cost]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_hazardous_+_area
*CAT: n
*SEM: unaryRel[rel=non_+_hazardous_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_hazardous_+_area
*CAT: n
*SEM: twoRel[rel=non_+_hazardous_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_hazardous_+_area
*CAT: n
*SEM: twoRel[rel=non_+_hazardous_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_hazardous_+_area
*CAT: n
*SEM: orRel[rel=non_+_hazardous_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: visible_+_when_+_the_+_equipment
*CAT: n
*SEM: unaryRel[rel=visible_+_when_+_the_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: visible_+_when_+_the_+_equipment
*CAT: n
*SEM: twoRel[rel=visible_+_when_+_the_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: visible_+_when_+_the_+_equipment
*CAT: n
*SEM: twoRel[rel=visible_+_when_+_the_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: visible_+_when_+_the_+_equipment
*CAT: n
*SEM: orRel[rel=visible_+_when_+_the_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route
*CAT: n
*SEM: unaryRel[rel=r-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route
*CAT: n
*SEM: twoRel[rel=r-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route
*CAT: n
*SEM: twoRel[rel=r-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route
*CAT: n
*SEM: orRel[rel=r-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vt
*CAT: n
*SEM: unaryRel[rel=vt]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vt
*CAT: n
*SEM: twoRel[rel=vt]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vt
*CAT: n
*SEM: twoRel[rel=vt]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vt
*CAT: n
*SEM: orRel[rel=vt]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_awg16
*CAT: n
*SEM: unaryRel[rel=e.g._+_awg16]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_awg16
*CAT: n
*SEM: twoRel[rel=e.g._+_awg16]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_awg16
*CAT: n
*SEM: twoRel[rel=e.g._+_awg16]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_awg16
*CAT: n
*SEM: orRel[rel=e.g._+_awg16]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equal
*CAT: n
*SEM: unaryRel[rel=equal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equal
*CAT: n
*SEM: twoRel[rel=equal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equal
*CAT: n
*SEM: twoRel[rel=equal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equal
*CAT: n
*SEM: orRel[rel=equal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: peek
*CAT: n
*SEM: unaryRel[rel=peek]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: peek
*CAT: n
*SEM: twoRel[rel=peek]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: peek
*CAT: n
*SEM: twoRel[rel=peek]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: peek
*CAT: n
*SEM: orRel[rel=peek]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_colour_+_code
*CAT: n
*SEM: unaryRel[rel=same_+_colour_+_code]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_colour_+_code
*CAT: n
*SEM: twoRel[rel=same_+_colour_+_code]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_colour_+_code
*CAT: n
*SEM: twoRel[rel=same_+_colour_+_code]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_colour_+_code
*CAT: n
*SEM: orRel[rel=same_+_colour_+_code]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_conduit
*CAT: n
*SEM: unaryRel[rel=abs_+_0887_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_conduit
*CAT: n
*SEM: twoRel[rel=abs_+_0887_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_conduit
*CAT: n
*SEM: twoRel[rel=abs_+_0887_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_conduit
*CAT: n
*SEM: orRel[rel=abs_+_0887_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_not_+_electrically_+_connected
*CAT: n
*SEM: unaryRel[rel=bundle_+_not_+_electrically_+_connected]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_not_+_electrically_+_connected
*CAT: n
*SEM: twoRel[rel=bundle_+_not_+_electrically_+_connected]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_not_+_electrically_+_connected
*CAT: n
*SEM: twoRel[rel=bundle_+_not_+_electrically_+_connected]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_not_+_electrically_+_connected
*CAT: n
*SEM: orRel[rel=bundle_+_not_+_electrically_+_connected]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drained_+_hole
*CAT: n
*SEM: unaryRel[rel=drained_+_hole]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drained_+_hole
*CAT: n
*SEM: twoRel[rel=drained_+_hole]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drained_+_hole
*CAT: n
*SEM: twoRel[rel=drained_+_hole]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drained_+_hole
*CAT: n
*SEM: orRel[rel=drained_+_hole]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_metallic_+_material
*CAT: n
*SEM: unaryRel[rel=non_+_metallic_+_material]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_metallic_+_material
*CAT: n
*SEM: twoRel[rel=non_+_metallic_+_material]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_metallic_+_material
*CAT: n
*SEM: twoRel[rel=non_+_metallic_+_material]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_metallic_+_material
*CAT: n
*SEM: orRel[rel=non_+_metallic_+_material]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_which
*CAT: n
*SEM: unaryRel[rel=routings_+_which]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_which
*CAT: n
*SEM: twoRel[rel=routings_+_which]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_which
*CAT: n
*SEM: twoRel[rel=routings_+_which]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_which
*CAT: n
*SEM: orRel[rel=routings_+_which]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1095_+_insulating_+_bracket
*CAT: n
*SEM: unaryRel[rel=abs_+_1095_+_insulating_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1095_+_insulating_+_bracket
*CAT: n
*SEM: twoRel[rel=abs_+_1095_+_insulating_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1095_+_insulating_+_bracket
*CAT: n
*SEM: twoRel[rel=abs_+_1095_+_insulating_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1095_+_insulating_+_bracket
*CAT: n
*SEM: orRel[rel=abs_+_1095_+_insulating_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: antenna
*CAT: n
*SEM: unaryRel[rel=antenna]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: antenna
*CAT: n
*SEM: twoRel[rel=antenna]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: antenna
*CAT: n
*SEM: twoRel[rel=antenna]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: antenna
*CAT: n
*SEM: orRel[rel=antenna]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sliding_+_between_+_the_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=sliding_+_between_+_the_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sliding_+_between_+_the_+_clamp-block
*CAT: n
*SEM: twoRel[rel=sliding_+_between_+_the_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sliding_+_between_+_the_+_clamp-block
*CAT: n
*SEM: twoRel[rel=sliding_+_between_+_the_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sliding_+_between_+_the_+_clamp-block
*CAT: n
*SEM: orRel[rel=sliding_+_between_+_the_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modification_+_kid
*CAT: n
*SEM: unaryRel[rel=modification_+_kid]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modification_+_kid
*CAT: n
*SEM: twoRel[rel=modification_+_kid]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modification_+_kid
*CAT: n
*SEM: twoRel[rel=modification_+_kid]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modification_+_kid
*CAT: n
*SEM: orRel[rel=modification_+_kid]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongated_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=elongated_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongated_+_clamp-block
*CAT: n
*SEM: twoRel[rel=elongated_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongated_+_clamp-block
*CAT: n
*SEM: twoRel[rel=elongated_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongated_+_clamp-block
*CAT: n
*SEM: orRel[rel=elongated_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: min_+_d_+__-_greaterThan_-__+__-_equalto_-_3mm
*CAT: n
*SEM: unaryRel[rel=min_+_d_+__-_greaterThan_-__+__-_equalto_-_3mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: min_+_d_+__-_greaterThan_-__+__-_equalto_-_3mm
*CAT: n
*SEM: twoRel[rel=min_+_d_+__-_greaterThan_-__+__-_equalto_-_3mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: min_+_d_+__-_greaterThan_-__+__-_equalto_-_3mm
*CAT: n
*SEM: twoRel[rel=min_+_d_+__-_greaterThan_-__+__-_equalto_-_3mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: min_+_d_+__-_greaterThan_-__+__-_equalto_-_3mm
*CAT: n
*SEM: orRel[rel=min_+_d_+__-_greaterThan_-__+__-_equalto_-_3mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_harness
*CAT: n
*SEM: unaryRel[rel=least_+_one_+_harness]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_harness
*CAT: n
*SEM: twoRel[rel=least_+_one_+_harness]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_harness
*CAT: n
*SEM: twoRel[rel=least_+_one_+_harness]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_harness
*CAT: n
*SEM: orRel[rel=least_+_one_+_harness]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-__+_10mm
*CAT: n
*SEM: unaryRel[rel=d_+__-_greaterThan_-__+__-_equalto_-__+_10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-__+_10mm
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-__+_10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-__+_10mm
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-__+_10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-__+_10mm
*CAT: n
*SEM: orRel[rel=d_+__-_greaterThan_-__+__-_equalto_-__+_10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-ata36_+_hot_+_pipes
*CAT: n
*SEM: unaryRel[rel=non-ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-ata36_+_hot_+_pipes
*CAT: n
*SEM: twoRel[rel=non-ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-ata36_+_hot_+_pipes
*CAT: n
*SEM: twoRel[rel=non-ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-ata36_+_hot_+_pipes
*CAT: n
*SEM: orRel[rel=non-ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_areas
*CAT: n
*SEM: unaryRel[rel=interface_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_areas
*CAT: n
*SEM: twoRel[rel=interface_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_areas
*CAT: n
*SEM: twoRel[rel=interface_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_areas
*CAT: n
*SEM: orRel[rel=interface_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_g-route
*CAT: n
*SEM: unaryRel[rel=pre_+_stressed_+_g-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_g-route
*CAT: n
*SEM: twoRel[rel=pre_+_stressed_+_g-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_g-route
*CAT: n
*SEM: twoRel[rel=pre_+_stressed_+_g-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_g-route
*CAT: n
*SEM: orRel[rel=pre_+_stressed_+_g-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_on_+_the_+_plug
*CAT: n
*SEM: unaryRel[rel=socket_+_on_+_the_+_plug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_on_+_the_+_plug
*CAT: n
*SEM: twoRel[rel=socket_+_on_+_the_+_plug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_on_+_the_+_plug
*CAT: n
*SEM: twoRel[rel=socket_+_on_+_the_+_plug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_on_+_the_+_plug
*CAT: n
*SEM: orRel[rel=socket_+_on_+_the_+_plug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_bundle
*CAT: n
*SEM: unaryRel[rel=horizontal_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_bundle
*CAT: n
*SEM: twoRel[rel=horizontal_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_bundle
*CAT: n
*SEM: twoRel[rel=horizontal_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_bundle
*CAT: n
*SEM: orRel[rel=horizontal_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 48mm
*CAT: n
*SEM: unaryRel[rel=48mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 48mm
*CAT: n
*SEM: twoRel[rel=48mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 48mm
*CAT: n
*SEM: twoRel[rel=48mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 48mm
*CAT: n
*SEM: orRel[rel=48mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: general
*CAT: n
*SEM: unaryRel[rel=general]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: general
*CAT: n
*SEM: twoRel[rel=general]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: general
*CAT: n
*SEM: twoRel[rel=general]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: general
*CAT: n
*SEM: orRel[rel=general]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 60mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=60mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 60mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=60mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 60mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=60mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 60mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=60mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_that_+_contact
*CAT: n
*SEM: unaryRel[rel=account_+_that_+_contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_that_+_contact
*CAT: n
*SEM: twoRel[rel=account_+_that_+_contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_that_+_contact
*CAT: n
*SEM: twoRel[rel=account_+_that_+_contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_that_+_contact
*CAT: n
*SEM: orRel[rel=account_+_that_+_contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_active_+_item
*CAT: n
*SEM: unaryRel[rel=electrical_+_active_+_item]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_active_+_item
*CAT: n
*SEM: twoRel[rel=electrical_+_active_+_item]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_active_+_item
*CAT: n
*SEM: twoRel[rel=electrical_+_active_+_item]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_active_+_item
*CAT: n
*SEM: orRel[rel=electrical_+_active_+_item]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurized_+_area
*CAT: n
*SEM: unaryRel[rel=unpressurized_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurized_+_area
*CAT: n
*SEM: twoRel[rel=unpressurized_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurized_+_area
*CAT: n
*SEM: twoRel[rel=unpressurized_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurized_+_area
*CAT: n
*SEM: orRel[rel=unpressurized_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0916
*CAT: n
*SEM: unaryRel[rel=abs_+_0916]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0916
*CAT: n
*SEM: twoRel[rel=abs_+_0916]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0916
*CAT: n
*SEM: twoRel[rel=abs_+_0916]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0916
*CAT: n
*SEM: orRel[rel=abs_+_0916]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit
*CAT: n
*SEM: unaryRel[rel=circuit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit
*CAT: n
*SEM: twoRel[rel=circuit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit
*CAT: n
*SEM: twoRel[rel=circuit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit
*CAT: n
*SEM: orRel[rel=circuit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_end_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=each_+_end_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_end_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=each_+_end_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_end_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=each_+_end_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_end_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=each_+_end_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_back_+_shellsor
*CAT: n
*SEM: unaryRel[rel=connector_+_back_+_shellsor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_back_+_shellsor
*CAT: n
*SEM: twoRel[rel=connector_+_back_+_shellsor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_back_+_shellsor
*CAT: n
*SEM: twoRel[rel=connector_+_back_+_shellsor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_back_+_shellsor
*CAT: n
*SEM: orRel[rel=connector_+_back_+_shellsor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: that
*CAT: n
*SEM: unaryRel[rel=that]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: that
*CAT: n
*SEM: twoRel[rel=that]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: that
*CAT: n
*SEM: twoRel[rel=that]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: that
*CAT: n
*SEM: orRel[rel=that]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: design_+_principles
*CAT: n
*SEM: unaryRel[rel=design_+_principles]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: design_+_principles
*CAT: n
*SEM: twoRel[rel=design_+_principles]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: design_+_principles
*CAT: n
*SEM: twoRel[rel=design_+_principles]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: design_+_principles
*CAT: n
*SEM: orRel[rel=design_+_principles]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distortion_+_areas
*CAT: n
*SEM: unaryRel[rel=distortion_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distortion_+_areas
*CAT: n
*SEM: twoRel[rel=distortion_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distortion_+_areas
*CAT: n
*SEM: twoRel[rel=distortion_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distortion_+_areas
*CAT: n
*SEM: orRel[rel=distortion_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_of_+_long_+_flexible_+_hoses_+_however
*CAT: n
*SEM: unaryRel[rel=support_+_of_+_long_+_flexible_+_hoses_+_however]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_of_+_long_+_flexible_+_hoses_+_however
*CAT: n
*SEM: twoRel[rel=support_+_of_+_long_+_flexible_+_hoses_+_however]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_of_+_long_+_flexible_+_hoses_+_however
*CAT: n
*SEM: twoRel[rel=support_+_of_+_long_+_flexible_+_hoses_+_however]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_of_+_long_+_flexible_+_hoses_+_however
*CAT: n
*SEM: orRel[rel=support_+_of_+_long_+_flexible_+_hoses_+_however]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lf
*CAT: n
*SEM: unaryRel[rel=lf]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lf
*CAT: n
*SEM: twoRel[rel=lf]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lf
*CAT: n
*SEM: twoRel[rel=lf]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lf
*CAT: n
*SEM: orRel[rel=lf]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_mechanical_+_stress_+_on_+_the_+_connection_+_point
*CAT: n
*SEM: unaryRel[rel=avoid_+_mechanical_+_stress_+_on_+_the_+_connection_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_mechanical_+_stress_+_on_+_the_+_connection_+_point
*CAT: n
*SEM: twoRel[rel=avoid_+_mechanical_+_stress_+_on_+_the_+_connection_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_mechanical_+_stress_+_on_+_the_+_connection_+_point
*CAT: n
*SEM: twoRel[rel=avoid_+_mechanical_+_stress_+_on_+_the_+_connection_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_mechanical_+_stress_+_on_+_the_+_connection_+_point
*CAT: n
*SEM: orRel[rel=avoid_+_mechanical_+_stress_+_on_+_the_+_connection_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_diametrical_+_opposed_+_screw_+_in_+_pressurized_+_area
*CAT: n
*SEM: unaryRel[rel=two_+_diametrical_+_opposed_+_screw_+_in_+_pressurized_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_diametrical_+_opposed_+_screw_+_in_+_pressurized_+_area
*CAT: n
*SEM: twoRel[rel=two_+_diametrical_+_opposed_+_screw_+_in_+_pressurized_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_diametrical_+_opposed_+_screw_+_in_+_pressurized_+_area
*CAT: n
*SEM: twoRel[rel=two_+_diametrical_+_opposed_+_screw_+_in_+_pressurized_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_diametrical_+_opposed_+_screw_+_in_+_pressurized_+_area
*CAT: n
*SEM: orRel[rel=two_+_diametrical_+_opposed_+_screw_+_in_+_pressurized_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: possible_+_to
*CAT: n
*SEM: unaryRel[rel=possible_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: possible_+_to
*CAT: n
*SEM: twoRel[rel=possible_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: possible_+_to
*CAT: n
*SEM: twoRel[rel=possible_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: possible_+_to
*CAT: n
*SEM: orRel[rel=possible_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_identification_+_label
*CAT: n
*SEM: unaryRel[rel=asne_+_0248_+_identification_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_identification_+_label
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_identification_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_identification_+_label
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_identification_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_identification_+_label
*CAT: n
*SEM: orRel[rel=asne_+_0248_+_identification_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5004-xxxx_+_pipes
*CAT: n
*SEM: unaryRel[rel=abs5004-xxxx_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5004-xxxx_+_pipes
*CAT: n
*SEM: twoRel[rel=abs5004-xxxx_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5004-xxxx_+_pipes
*CAT: n
*SEM: twoRel[rel=abs5004-xxxx_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5004-xxxx_+_pipes
*CAT: n
*SEM: orRel[rel=abs5004-xxxx_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_sides
*CAT: n
*SEM: unaryRel[rel=both_+_sides]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_sides
*CAT: n
*SEM: twoRel[rel=both_+_sides]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_sides
*CAT: n
*SEM: twoRel[rel=both_+_sides]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_sides
*CAT: n
*SEM: orRel[rel=both_+_sides]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_fuel_+_tanks
*CAT: n
*SEM: unaryRel[rel=in_+_fuel_+_tanks]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_fuel_+_tanks
*CAT: n
*SEM: twoRel[rel=in_+_fuel_+_tanks]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_fuel_+_tanks
*CAT: n
*SEM: twoRel[rel=in_+_fuel_+_tanks]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_fuel_+_tanks
*CAT: n
*SEM: orRel[rel=in_+_fuel_+_tanks]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_contacts_+_side
*CAT: n
*SEM: unaryRel[rel=connector_+_contacts_+_side]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_contacts_+_side
*CAT: n
*SEM: twoRel[rel=connector_+_contacts_+_side]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_contacts_+_side
*CAT: n
*SEM: twoRel[rel=connector_+_contacts_+_side]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_contacts_+_side
*CAT: n
*SEM: orRel[rel=connector_+_contacts_+_side]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_b
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_b
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_b
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_b
*CAT: n
*SEM: orRel[rel=p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_+_conduits
*CAT: n
*SEM: unaryRel[rel=closed_+_conduits]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_+_conduits
*CAT: n
*SEM: twoRel[rel=closed_+_conduits]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_+_conduits
*CAT: n
*SEM: twoRel[rel=closed_+_conduits]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_+_conduits
*CAT: n
*SEM: orRel[rel=closed_+_conduits]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_protectionor_+_the_+_structure_+_is_+_fitted
*CAT: n
*SEM: unaryRel[rel=electrical_+_protectionor_+_the_+_structure_+_is_+_fitted]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_protectionor_+_the_+_structure_+_is_+_fitted
*CAT: n
*SEM: twoRel[rel=electrical_+_protectionor_+_the_+_structure_+_is_+_fitted]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_protectionor_+_the_+_structure_+_is_+_fitted
*CAT: n
*SEM: twoRel[rel=electrical_+_protectionor_+_the_+_structure_+_is_+_fitted]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_protectionor_+_the_+_structure_+_is_+_fitted
*CAT: n
*SEM: orRel[rel=electrical_+_protectionor_+_the_+_structure_+_is_+_fitted]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_of_+_arinc_+_600_+_connector_+_in_+_the_+_axis_+_of_+_the_+_of_+_the_+_cavity
*CAT: n
*SEM: unaryRel[rel=front_+_of_+_arinc_+_600_+_connector_+_in_+_the_+_axis_+_of_+_the_+_of_+_the_+_cavity]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_of_+_arinc_+_600_+_connector_+_in_+_the_+_axis_+_of_+_the_+_of_+_the_+_cavity
*CAT: n
*SEM: twoRel[rel=front_+_of_+_arinc_+_600_+_connector_+_in_+_the_+_axis_+_of_+_the_+_of_+_the_+_cavity]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_of_+_arinc_+_600_+_connector_+_in_+_the_+_axis_+_of_+_the_+_of_+_the_+_cavity
*CAT: n
*SEM: twoRel[rel=front_+_of_+_arinc_+_600_+_connector_+_in_+_the_+_axis_+_of_+_the_+_of_+_the_+_cavity]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_of_+_arinc_+_600_+_connector_+_in_+_the_+_axis_+_of_+_the_+_of_+_the_+_cavity
*CAT: n
*SEM: orRel[rel=front_+_of_+_arinc_+_600_+_connector_+_in_+_the_+_axis_+_of_+_the_+_of_+_the_+_cavity]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_additional_+_terminal_+_lug_+_this
*CAT: n
*SEM: unaryRel[rel=one_+_additional_+_terminal_+_lug_+_this]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_additional_+_terminal_+_lug_+_this
*CAT: n
*SEM: twoRel[rel=one_+_additional_+_terminal_+_lug_+_this]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_additional_+_terminal_+_lug_+_this
*CAT: n
*SEM: twoRel[rel=one_+_additional_+_terminal_+_lug_+_this]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_additional_+_terminal_+_lug_+_this
*CAT: n
*SEM: orRel[rel=one_+_additional_+_terminal_+_lug_+_this]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_m-route
*CAT: n
*SEM: unaryRel[rel=non_+_pre_+_stressed_+_m-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_m-route
*CAT: n
*SEM: twoRel[rel=non_+_pre_+_stressed_+_m-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_m-route
*CAT: n
*SEM: twoRel[rel=non_+_pre_+_stressed_+_m-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_m-route
*CAT: n
*SEM: orRel[rel=non_+_pre_+_stressed_+_m-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gases
*CAT: n
*SEM: unaryRel[rel=gases]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gases
*CAT: n
*SEM: twoRel[rel=gases]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gases
*CAT: n
*SEM: twoRel[rel=gases]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gases
*CAT: n
*SEM: orRel[rel=gases]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_fixpoints
*CAT: n
*SEM: unaryRel[rel=two_+_fixpoints]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_fixpoints
*CAT: n
*SEM: twoRel[rel=two_+_fixpoints]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_fixpoints
*CAT: n
*SEM: twoRel[rel=two_+_fixpoints]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_fixpoints
*CAT: n
*SEM: orRel[rel=two_+_fixpoints]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: un_+_series_+_thread
*CAT: n
*SEM: unaryRel[rel=un_+_series_+_thread]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: un_+_series_+_thread
*CAT: n
*SEM: twoRel[rel=un_+_series_+_thread]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: un_+_series_+_thread
*CAT: n
*SEM: twoRel[rel=un_+_series_+_thread]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: un_+_series_+_thread
*CAT: n
*SEM: orRel[rel=un_+_series_+_thread]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: orientation_+_see
*CAT: n
*SEM: unaryRel[rel=orientation_+_see]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: orientation_+_see
*CAT: n
*SEM: twoRel[rel=orientation_+_see]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: orientation_+_see
*CAT: n
*SEM: twoRel[rel=orientation_+_see]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: orientation_+_see
*CAT: n
*SEM: orRel[rel=orientation_+_see]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_spacer
*CAT: n
*SEM: unaryRel[rel=no_+_spacer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_spacer
*CAT: n
*SEM: twoRel[rel=no_+_spacer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_spacer
*CAT: n
*SEM: twoRel[rel=no_+_spacer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_spacer
*CAT: n
*SEM: orRel[rel=no_+_spacer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: technical_+_connector_+_plates_+_20_-_percent_-_
*CAT: n
*SEM: unaryRel[rel=technical_+_connector_+_plates_+_20_-_percent_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: technical_+_connector_+_plates_+_20_-_percent_-_
*CAT: n
*SEM: twoRel[rel=technical_+_connector_+_plates_+_20_-_percent_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: technical_+_connector_+_plates_+_20_-_percent_-_
*CAT: n
*SEM: twoRel[rel=technical_+_connector_+_plates_+_20_-_percent_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: technical_+_connector_+_plates_+_20_-_percent_-_
*CAT: n
*SEM: orRel[rel=technical_+_connector_+_plates_+_20_-_percent_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection
*CAT: n
*SEM: unaryRel[rel=protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection
*CAT: n
*SEM: twoRel[rel=protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection
*CAT: n
*SEM: twoRel[rel=protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection
*CAT: n
*SEM: orRel[rel=protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_tied_+_together_+_in_+_fuel_+_tanks
*CAT: n
*SEM: unaryRel[rel=be_+_tied_+_together_+_in_+_fuel_+_tanks]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_tied_+_together_+_in_+_fuel_+_tanks
*CAT: n
*SEM: twoRel[rel=be_+_tied_+_together_+_in_+_fuel_+_tanks]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_tied_+_together_+_in_+_fuel_+_tanks
*CAT: n
*SEM: twoRel[rel=be_+_tied_+_together_+_in_+_fuel_+_tanks]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_tied_+_together_+_in_+_fuel_+_tanks
*CAT: n
*SEM: orRel[rel=be_+_tied_+_together_+_in_+_fuel_+_tanks]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_arinc_+_receptable
*CAT: n
*SEM: unaryRel[rel=unused_+_arinc_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_arinc_+_receptable
*CAT: n
*SEM: twoRel[rel=unused_+_arinc_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_arinc_+_receptable
*CAT: n
*SEM: twoRel[rel=unused_+_arinc_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_arinc_+_receptable
*CAT: n
*SEM: orRel[rel=unused_+_arinc_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire
*CAT: n
*SEM: unaryRel[rel=wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire
*CAT: n
*SEM: twoRel[rel=wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire
*CAT: n
*SEM: twoRel[rel=wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire
*CAT: n
*SEM: orRel[rel=wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_micrometer
*CAT: n
*SEM: unaryRel[rel=2_+_micrometer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_micrometer
*CAT: n
*SEM: twoRel[rel=2_+_micrometer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_micrometer
*CAT: n
*SEM: twoRel[rel=2_+_micrometer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_micrometer
*CAT: n
*SEM: orRel[rel=2_+_micrometer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: water_+_hammer
*CAT: n
*SEM: unaryRel[rel=water_+_hammer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: water_+_hammer
*CAT: n
*SEM: twoRel[rel=water_+_hammer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: water_+_hammer
*CAT: n
*SEM: twoRel[rel=water_+_hammer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: water_+_hammer
*CAT: n
*SEM: orRel[rel=water_+_hammer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_-_backslash_-_d_+__-_greaterThan_-_2
*CAT: n
*SEM: unaryRel[rel=r_-_backslash_-_d_+__-_greaterThan_-_2]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_-_backslash_-_d_+__-_greaterThan_-_2
*CAT: n
*SEM: twoRel[rel=r_-_backslash_-_d_+__-_greaterThan_-_2]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_-_backslash_-_d_+__-_greaterThan_-_2
*CAT: n
*SEM: twoRel[rel=r_-_backslash_-_d_+__-_greaterThan_-_2]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_-_backslash_-_d_+__-_greaterThan_-_2
*CAT: n
*SEM: orRel[rel=r_-_backslash_-_d_+__-_greaterThan_-_2]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_head_+_to
*CAT: n
*SEM: unaryRel[rel=cable_+_tie_+_head_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_head_+_to
*CAT: n
*SEM: twoRel[rel=cable_+_tie_+_head_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_head_+_to
*CAT: n
*SEM: twoRel[rel=cable_+_tie_+_head_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_head_+_to
*CAT: n
*SEM: orRel[rel=cable_+_tie_+_head_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: backshell_+_abs1358
*CAT: n
*SEM: unaryRel[rel=backshell_+_abs1358]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: backshell_+_abs1358
*CAT: n
*SEM: twoRel[rel=backshell_+_abs1358]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: backshell_+_abs1358
*CAT: n
*SEM: twoRel[rel=backshell_+_abs1358]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: backshell_+_abs1358
*CAT: n
*SEM: orRel[rel=backshell_+_abs1358]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: visual_+_inspection
*CAT: n
*SEM: unaryRel[rel=visual_+_inspection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: visual_+_inspection
*CAT: n
*SEM: twoRel[rel=visual_+_inspection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: visual_+_inspection
*CAT: n
*SEM: twoRel[rel=visual_+_inspection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: visual_+_inspection
*CAT: n
*SEM: orRel[rel=visual_+_inspection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_loads
*CAT: n
*SEM: unaryRel[rel=mechanical_+_loads]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_loads
*CAT: n
*SEM: twoRel[rel=mechanical_+_loads]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_loads
*CAT: n
*SEM: twoRel[rel=mechanical_+_loads]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_loads
*CAT: n
*SEM: orRel[rel=mechanical_+_loads]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ocntinuity_+_connection
*CAT: n
*SEM: unaryRel[rel=ocntinuity_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ocntinuity_+_connection
*CAT: n
*SEM: twoRel[rel=ocntinuity_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ocntinuity_+_connection
*CAT: n
*SEM: twoRel[rel=ocntinuity_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ocntinuity_+_connection
*CAT: n
*SEM: orRel[rel=ocntinuity_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic
*CAT: n
*SEM: unaryRel[rel=graphic]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic
*CAT: n
*SEM: twoRel[rel=graphic]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic
*CAT: n
*SEM: twoRel[rel=graphic]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic
*CAT: n
*SEM: orRel[rel=graphic]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top
*CAT: n
*SEM: unaryRel[rel=top]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top
*CAT: n
*SEM: twoRel[rel=top]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top
*CAT: n
*SEM: twoRel[rel=top]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top
*CAT: n
*SEM: orRel[rel=top]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relation_+_to
*CAT: n
*SEM: unaryRel[rel=relation_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relation_+_to
*CAT: n
*SEM: twoRel[rel=relation_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relation_+_to
*CAT: n
*SEM: twoRel[rel=relation_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relation_+_to
*CAT: n
*SEM: orRel[rel=relation_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_one_+_elbow_+_fitting
*CAT: n
*SEM: unaryRel[rel=maximum_+_one_+_elbow_+_fitting]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_one_+_elbow_+_fitting
*CAT: n
*SEM: twoRel[rel=maximum_+_one_+_elbow_+_fitting]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_one_+_elbow_+_fitting
*CAT: n
*SEM: twoRel[rel=maximum_+_one_+_elbow_+_fitting]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_one_+_elbow_+_fitting
*CAT: n
*SEM: orRel[rel=maximum_+_one_+_elbow_+_fitting]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_colour
*CAT: n
*SEM: unaryRel[rel=pink_+_colour]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_colour
*CAT: n
*SEM: twoRel[rel=pink_+_colour]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_colour
*CAT: n
*SEM: twoRel[rel=pink_+_colour]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_colour
*CAT: n
*SEM: orRel[rel=pink_+_colour]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin_+_identification
*CAT: n
*SEM: unaryRel[rel=fin_+_identification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin_+_identification
*CAT: n
*SEM: twoRel[rel=fin_+_identification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin_+_identification
*CAT: n
*SEM: twoRel[rel=fin_+_identification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin_+_identification
*CAT: n
*SEM: orRel[rel=fin_+_identification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion_+_when
*CAT: n
*SEM: unaryRel[rel=torsion_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion_+_when
*CAT: n
*SEM: twoRel[rel=torsion_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion_+_when
*CAT: n
*SEM: twoRel[rel=torsion_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion_+_when
*CAT: n
*SEM: orRel[rel=torsion_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removal
*CAT: n
*SEM: unaryRel[rel=removal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removal
*CAT: n
*SEM: twoRel[rel=removal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removal
*CAT: n
*SEM: twoRel[rel=removal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removal
*CAT: n
*SEM: orRel[rel=removal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: display
*CAT: n
*SEM: unaryRel[rel=display]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: display
*CAT: n
*SEM: twoRel[rel=display]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: display
*CAT: n
*SEM: twoRel[rel=display]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: display
*CAT: n
*SEM: orRel[rel=display]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_distance
*CAT: n
*SEM: unaryRel[rel=maximum_+_distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_distance
*CAT: n
*SEM: twoRel[rel=maximum_+_distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_distance
*CAT: n
*SEM: twoRel[rel=maximum_+_distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_distance
*CAT: n
*SEM: orRel[rel=maximum_+_distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: range_+__-_colon_-__+_0_-_smallerThan_-__+_phi_+__-_smallerThan_-_120_-_degrees_-_
*CAT: n
*SEM: unaryRel[rel=range_+__-_colon_-__+_0_-_smallerThan_-__+_phi_+__-_smallerThan_-_120_-_degrees_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: range_+__-_colon_-__+_0_-_smallerThan_-__+_phi_+__-_smallerThan_-_120_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=range_+__-_colon_-__+_0_-_smallerThan_-__+_phi_+__-_smallerThan_-_120_-_degrees_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: range_+__-_colon_-__+_0_-_smallerThan_-__+_phi_+__-_smallerThan_-_120_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=range_+__-_colon_-__+_0_-_smallerThan_-__+_phi_+__-_smallerThan_-_120_-_degrees_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: range_+__-_colon_-__+_0_-_smallerThan_-__+_phi_+__-_smallerThan_-_120_-_degrees_-_
*CAT: n
*SEM: orRel[rel=range_+__-_colon_-__+_0_-_smallerThan_-__+_phi_+__-_smallerThan_-_120_-_degrees_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pneumatic_+_system
*CAT: n
*SEM: unaryRel[rel=pneumatic_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pneumatic_+_system
*CAT: n
*SEM: twoRel[rel=pneumatic_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pneumatic_+_system
*CAT: n
*SEM: twoRel[rel=pneumatic_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pneumatic_+_system
*CAT: n
*SEM: orRel[rel=pneumatic_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_clearance
*CAT: n
*SEM: unaryRel[rel=basic_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_clearance
*CAT: n
*SEM: twoRel[rel=basic_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_clearance
*CAT: n
*SEM: twoRel[rel=basic_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_clearance
*CAT: n
*SEM: orRel[rel=basic_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense
*CAT: n
*SEM: unaryRel[rel=sense]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense
*CAT: n
*SEM: twoRel[rel=sense]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense
*CAT: n
*SEM: twoRel[rel=sense]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense
*CAT: n
*SEM: orRel[rel=sense]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__-_equalto_-_300_+_mm_+_away
*CAT: n
*SEM: unaryRel[rel=d_+__-_smallerThan_-__-_equalto_-_300_+_mm_+_away]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__-_equalto_-_300_+_mm_+_away
*CAT: n
*SEM: twoRel[rel=d_+__-_smallerThan_-__-_equalto_-_300_+_mm_+_away]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__-_equalto_-_300_+_mm_+_away
*CAT: n
*SEM: twoRel[rel=d_+__-_smallerThan_-__-_equalto_-_300_+_mm_+_away]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__-_equalto_-_300_+_mm_+_away
*CAT: n
*SEM: orRel[rel=d_+__-_smallerThan_-__-_equalto_-_300_+_mm_+_away]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_m
*CAT: n
*SEM: unaryRel[rel=e.g._+_m]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_m
*CAT: n
*SEM: twoRel[rel=e.g._+_m]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_m
*CAT: n
*SEM: twoRel[rel=e.g._+_m]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_m
*CAT: n
*SEM: orRel[rel=e.g._+_m]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coding_+_keyway
*CAT: n
*SEM: unaryRel[rel=coding_+_keyway]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coding_+_keyway
*CAT: n
*SEM: twoRel[rel=coding_+_keyway]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coding_+_keyway
*CAT: n
*SEM: twoRel[rel=coding_+_keyway]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coding_+_keyway
*CAT: n
*SEM: orRel[rel=coding_+_keyway]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: value
*CAT: n
*SEM: unaryRel[rel=value]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: value
*CAT: n
*SEM: twoRel[rel=value]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: value
*CAT: n
*SEM: twoRel[rel=value]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: value
*CAT: n
*SEM: orRel[rel=value]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauges_+_03_+_to_+_0000
*CAT: n
*SEM: unaryRel[rel=gauges_+_03_+_to_+_0000]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauges_+_03_+_to_+_0000
*CAT: n
*SEM: twoRel[rel=gauges_+_03_+_to_+_0000]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauges_+_03_+_to_+_0000
*CAT: n
*SEM: twoRel[rel=gauges_+_03_+_to_+_0000]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauges_+_03_+_to_+_0000
*CAT: n
*SEM: orRel[rel=gauges_+_03_+_to_+_0000]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible
*CAT: n
*SEM: unaryRel[rel=flexible]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible
*CAT: n
*SEM: twoRel[rel=flexible]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible
*CAT: n
*SEM: twoRel[rel=flexible]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible
*CAT: n
*SEM: orRel[rel=flexible]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_diametrical
*CAT: n
*SEM: unaryRel[rel=four_+_diametrical]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_diametrical
*CAT: n
*SEM: twoRel[rel=four_+_diametrical]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_diametrical
*CAT: n
*SEM: twoRel[rel=four_+_diametrical]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_diametrical
*CAT: n
*SEM: orRel[rel=four_+_diametrical]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_component
*CAT: n
*SEM: unaryRel[rel=any_+_component]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_component
*CAT: n
*SEM: twoRel[rel=any_+_component]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_component
*CAT: n
*SEM: twoRel[rel=any_+_component]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_component
*CAT: n
*SEM: orRel[rel=any_+_component]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.750_+_to_+_5.0_+_inch
*CAT: n
*SEM: unaryRel[rel=0.750_+_to_+_5.0_+_inch]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.750_+_to_+_5.0_+_inch
*CAT: n
*SEM: twoRel[rel=0.750_+_to_+_5.0_+_inch]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.750_+_to_+_5.0_+_inch
*CAT: n
*SEM: twoRel[rel=0.750_+_to_+_5.0_+_inch]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.750_+_to_+_5.0_+_inch
*CAT: n
*SEM: orRel[rel=0.750_+_to_+_5.0_+_inch]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90_-_degrees_-__+_bends
*CAT: n
*SEM: unaryRel[rel=90_-_degrees_-__+_bends]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90_-_degrees_-__+_bends
*CAT: n
*SEM: twoRel[rel=90_-_degrees_-__+_bends]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90_-_degrees_-__+_bends
*CAT: n
*SEM: twoRel[rel=90_-_degrees_-__+_bends]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90_-_degrees_-__+_bends
*CAT: n
*SEM: orRel[rel=90_-_degrees_-__+_bends]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: long_+_straight_+_pipes
*CAT: n
*SEM: unaryRel[rel=long_+_straight_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: long_+_straight_+_pipes
*CAT: n
*SEM: twoRel[rel=long_+_straight_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: long_+_straight_+_pipes
*CAT: n
*SEM: twoRel[rel=long_+_straight_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: long_+_straight_+_pipes
*CAT: n
*SEM: orRel[rel=long_+_straight_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tension_+_forces
*CAT: n
*SEM: unaryRel[rel=tension_+_forces]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tension_+_forces
*CAT: n
*SEM: twoRel[rel=tension_+_forces]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tension_+_forces
*CAT: n
*SEM: twoRel[rel=tension_+_forces]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tension_+_forces
*CAT: n
*SEM: orRel[rel=tension_+_forces]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_bracket_+_design
*CAT: n
*SEM: unaryRel[rel=new_+_bracket_+_design]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_bracket_+_design
*CAT: n
*SEM: twoRel[rel=new_+_bracket_+_design]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_bracket_+_design
*CAT: n
*SEM: twoRel[rel=new_+_bracket_+_design]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_bracket_+_design
*CAT: n
*SEM: orRel[rel=new_+_bracket_+_design]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: split_+_pins
*CAT: n
*SEM: unaryRel[rel=split_+_pins]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: split_+_pins
*CAT: n
*SEM: twoRel[rel=split_+_pins]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: split_+_pins
*CAT: n
*SEM: twoRel[rel=split_+_pins]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: split_+_pins
*CAT: n
*SEM: orRel[rel=split_+_pins]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: people_+_comfort_+_during_+_the_+_operation._+_particular_+_caution
*CAT: n
*SEM: unaryRel[rel=people_+_comfort_+_during_+_the_+_operation._+_particular_+_caution]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: people_+_comfort_+_during_+_the_+_operation._+_particular_+_caution
*CAT: n
*SEM: twoRel[rel=people_+_comfort_+_during_+_the_+_operation._+_particular_+_caution]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: people_+_comfort_+_during_+_the_+_operation._+_particular_+_caution
*CAT: n
*SEM: twoRel[rel=people_+_comfort_+_during_+_the_+_operation._+_particular_+_caution]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: people_+_comfort_+_during_+_the_+_operation._+_particular_+_caution
*CAT: n
*SEM: orRel[rel=people_+_comfort_+_during_+_the_+_operation._+_particular_+_caution]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_ones
*CAT: n
*SEM: unaryRel[rel=hot_+_ones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_ones
*CAT: n
*SEM: twoRel[rel=hot_+_ones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_ones
*CAT: n
*SEM: twoRel[rel=hot_+_ones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_ones
*CAT: n
*SEM: orRel[rel=hot_+_ones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: f-dp-29-7.2.2-0007-0001-a_+__+_sisd_par_1280
*CAT: n
*SEM: unaryRel[rel=f-dp-29-7.2.2-0007-0001-a_+__+_sisd_par_1280]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: f-dp-29-7.2.2-0007-0001-a_+__+_sisd_par_1280
*CAT: n
*SEM: twoRel[rel=f-dp-29-7.2.2-0007-0001-a_+__+_sisd_par_1280]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: f-dp-29-7.2.2-0007-0001-a_+__+_sisd_par_1280
*CAT: n
*SEM: twoRel[rel=f-dp-29-7.2.2-0007-0001-a_+__+_sisd_par_1280]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: f-dp-29-7.2.2-0007-0001-a_+__+_sisd_par_1280
*CAT: n
*SEM: orRel[rel=f-dp-29-7.2.2-0007-0001-a_+__+_sisd_par_1280]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_length_+_of_+_2m
*CAT: n
*SEM: unaryRel[rel=maximum_+_length_+_of_+_2m]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_length_+_of_+_2m
*CAT: n
*SEM: twoRel[rel=maximum_+_length_+_of_+_2m]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_length_+_of_+_2m
*CAT: n
*SEM: twoRel[rel=maximum_+_length_+_of_+_2m]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_length_+_of_+_2m
*CAT: n
*SEM: orRel[rel=maximum_+_length_+_of_+_2m]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_sides._+_or
*CAT: n
*SEM: unaryRel[rel=both_+_sides._+_or]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_sides._+_or
*CAT: n
*SEM: twoRel[rel=both_+_sides._+_or]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_sides._+_or
*CAT: n
*SEM: twoRel[rel=both_+_sides._+_or]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_sides._+_or
*CAT: n
*SEM: orRel[rel=both_+_sides._+_or]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_possible_+_position
*CAT: n
*SEM: unaryRel[rel=any_+_possible_+_position]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_possible_+_position
*CAT: n
*SEM: twoRel[rel=any_+_possible_+_position]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_possible_+_position
*CAT: n
*SEM: twoRel[rel=any_+_possible_+_position]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_possible_+_position
*CAT: n
*SEM: orRel[rel=any_+_possible_+_position]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5107-b_+_black_+_tape
*CAT: n
*SEM: unaryRel[rel=nsa_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5107-b_+_black_+_tape
*CAT: n
*SEM: twoRel[rel=nsa_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5107-b_+_black_+_tape
*CAT: n
*SEM: twoRel[rel=nsa_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5107-b_+_black_+_tape
*CAT: n
*SEM: orRel[rel=nsa_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: principles
*CAT: n
*SEM: unaryRel[rel=principles]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: principles
*CAT: n
*SEM: twoRel[rel=principles]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: principles
*CAT: n
*SEM: twoRel[rel=principles]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: principles
*CAT: n
*SEM: orRel[rel=principles]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nuts
*CAT: n
*SEM: unaryRel[rel=nuts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nuts
*CAT: n
*SEM: twoRel[rel=nuts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nuts
*CAT: n
*SEM: twoRel[rel=nuts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nuts
*CAT: n
*SEM: orRel[rel=nuts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: caring_+_fluids
*CAT: n
*SEM: unaryRel[rel=caring_+_fluids]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: caring_+_fluids
*CAT: n
*SEM: twoRel[rel=caring_+_fluids]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: caring_+_fluids
*CAT: n
*SEM: twoRel[rel=caring_+_fluids]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: caring_+_fluids
*CAT: n
*SEM: orRel[rel=caring_+_fluids]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_positions
*CAT: n
*SEM: unaryRel[rel=other_+_positions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_positions
*CAT: n
*SEM: twoRel[rel=other_+_positions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_positions
*CAT: n
*SEM: twoRel[rel=other_+_positions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_positions
*CAT: n
*SEM: orRel[rel=other_+_positions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_instrument
*CAT: n
*SEM: unaryRel[rel=each_+_instrument]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_instrument
*CAT: n
*SEM: twoRel[rel=each_+_instrument]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_instrument
*CAT: n
*SEM: twoRel[rel=each_+_instrument]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_instrument
*CAT: n
*SEM: orRel[rel=each_+_instrument]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one
*CAT: n
*SEM: unaryRel[rel=one]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one
*CAT: n
*SEM: twoRel[rel=one]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one
*CAT: n
*SEM: twoRel[rel=one]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one
*CAT: n
*SEM: orRel[rel=one]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: galleys
*CAT: n
*SEM: unaryRel[rel=galleys]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: galleys
*CAT: n
*SEM: twoRel[rel=galleys]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: galleys
*CAT: n
*SEM: twoRel[rel=galleys]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: galleys
*CAT: n
*SEM: orRel[rel=galleys]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin_+_label_+_which_+_has
*CAT: n
*SEM: unaryRel[rel=fin_+_label_+_which_+_has]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin_+_label_+_which_+_has
*CAT: n
*SEM: twoRel[rel=fin_+_label_+_which_+_has]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin_+_label_+_which_+_has
*CAT: n
*SEM: twoRel[rel=fin_+_label_+_which_+_has]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin_+_label_+_which_+_has
*CAT: n
*SEM: orRel[rel=fin_+_label_+_which_+_has]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_adjacent_+_item
*CAT: n
*SEM: unaryRel[rel=any_+_other_+_adjacent_+_item]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_adjacent_+_item
*CAT: n
*SEM: twoRel[rel=any_+_other_+_adjacent_+_item]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_adjacent_+_item
*CAT: n
*SEM: twoRel[rel=any_+_other_+_adjacent_+_item]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_adjacent_+_item
*CAT: n
*SEM: orRel[rel=any_+_other_+_adjacent_+_item]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bumpers
*CAT: n
*SEM: unaryRel[rel=bumpers]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bumpers
*CAT: n
*SEM: twoRel[rel=bumpers]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bumpers
*CAT: n
*SEM: twoRel[rel=bumpers]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bumpers
*CAT: n
*SEM: orRel[rel=bumpers]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1423_+_stand-off_+__-_backslash_-__+_colonette
*CAT: n
*SEM: unaryRel[rel=abs1423_+_stand-off_+__-_backslash_-__+_colonette]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1423_+_stand-off_+__-_backslash_-__+_colonette
*CAT: n
*SEM: twoRel[rel=abs1423_+_stand-off_+__-_backslash_-__+_colonette]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1423_+_stand-off_+__-_backslash_-__+_colonette
*CAT: n
*SEM: twoRel[rel=abs1423_+_stand-off_+__-_backslash_-__+_colonette]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1423_+_stand-off_+__-_backslash_-__+_colonette
*CAT: n
*SEM: orRel[rel=abs1423_+_stand-off_+__-_backslash_-__+_colonette]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_conduit
*CAT: n
*SEM: unaryRel[rel=spare_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_conduit
*CAT: n
*SEM: twoRel[rel=spare_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_conduit
*CAT: n
*SEM: twoRel[rel=spare_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_conduit
*CAT: n
*SEM: orRel[rel=spare_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_equipment
*CAT: n
*SEM: unaryRel[rel=inside_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_equipment
*CAT: n
*SEM: twoRel[rel=inside_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_equipment
*CAT: n
*SEM: twoRel[rel=inside_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_equipment
*CAT: n
*SEM: orRel[rel=inside_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_bundle
*CAT: n
*SEM: unaryRel[rel=equipment_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_bundle
*CAT: n
*SEM: twoRel[rel=equipment_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_bundle
*CAT: n
*SEM: twoRel[rel=equipment_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_bundle
*CAT: n
*SEM: orRel[rel=equipment_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_diameter
*CAT: n
*SEM: unaryRel[rel=pipe_+_diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_diameter
*CAT: n
*SEM: twoRel[rel=pipe_+_diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_diameter
*CAT: n
*SEM: twoRel[rel=pipe_+_diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_diameter
*CAT: n
*SEM: orRel[rel=pipe_+_diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+__-_equalto_-_2or_+_0d
*CAT: n
*SEM: unaryRel[rel=r_+__-_equalto_-_2or_+_0d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+__-_equalto_-_2or_+_0d
*CAT: n
*SEM: twoRel[rel=r_+__-_equalto_-_2or_+_0d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+__-_equalto_-_2or_+_0d
*CAT: n
*SEM: twoRel[rel=r_+__-_equalto_-_2or_+_0d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+__-_equalto_-_2or_+_0d
*CAT: n
*SEM: orRel[rel=r_+__-_equalto_-_2or_+_0d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_d_+__-_smallerThan_-__+__-_equalto_-__+_20mm
*CAT: n
*SEM: unaryRel[rel=least_+_d_+__-_smallerThan_-__+__-_equalto_-__+_20mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_d_+__-_smallerThan_-__+__-_equalto_-__+_20mm
*CAT: n
*SEM: twoRel[rel=least_+_d_+__-_smallerThan_-__+__-_equalto_-__+_20mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_d_+__-_smallerThan_-__+__-_equalto_-__+_20mm
*CAT: n
*SEM: twoRel[rel=least_+_d_+__-_smallerThan_-__+__-_equalto_-__+_20mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_d_+__-_smallerThan_-__+__-_equalto_-__+_20mm
*CAT: n
*SEM: orRel[rel=least_+_d_+__-_smallerThan_-__+__-_equalto_-__+_20mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516
*CAT: n
*SEM: unaryRel[rel=nsa5516]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516
*CAT: n
*SEM: twoRel[rel=nsa5516]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516
*CAT: n
*SEM: twoRel[rel=nsa5516]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516
*CAT: n
*SEM: orRel[rel=nsa5516]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi_+_core_+_wire
*CAT: n
*SEM: unaryRel[rel=multi_+_core_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi_+_core_+_wire
*CAT: n
*SEM: twoRel[rel=multi_+_core_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi_+_core_+_wire
*CAT: n
*SEM: twoRel[rel=multi_+_core_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi_+_core_+_wire
*CAT: n
*SEM: orRel[rel=multi_+_core_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lock_+_wire
*CAT: n
*SEM: unaryRel[rel=lock_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lock_+_wire
*CAT: n
*SEM: twoRel[rel=lock_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lock_+_wire
*CAT: n
*SEM: twoRel[rel=lock_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lock_+_wire
*CAT: n
*SEM: orRel[rel=lock_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 580mm
*CAT: n
*SEM: unaryRel[rel=580mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 580mm
*CAT: n
*SEM: twoRel[rel=580mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 580mm
*CAT: n
*SEM: twoRel[rel=580mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 580mm
*CAT: n
*SEM: orRel[rel=580mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank_+_wall
*CAT: n
*SEM: unaryRel[rel=fuel_+_tank_+_wall]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank_+_wall
*CAT: n
*SEM: twoRel[rel=fuel_+_tank_+_wall]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank_+_wall
*CAT: n
*SEM: twoRel[rel=fuel_+_tank_+_wall]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank_+_wall
*CAT: n
*SEM: orRel[rel=fuel_+_tank_+_wall]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation
*CAT: n
*SEM: unaryRel[rel=insulation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation
*CAT: n
*SEM: twoRel[rel=insulation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation
*CAT: n
*SEM: twoRel[rel=insulation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation
*CAT: n
*SEM: orRel[rel=insulation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0916_+_shrink
*CAT: n
*SEM: unaryRel[rel=abs_+_0916_+_shrink]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0916_+_shrink
*CAT: n
*SEM: twoRel[rel=abs_+_0916_+_shrink]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0916_+_shrink
*CAT: n
*SEM: twoRel[rel=abs_+_0916_+_shrink]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0916_+_shrink
*CAT: n
*SEM: orRel[rel=abs_+_0916_+_shrink]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurised_+_zones
*CAT: n
*SEM: unaryRel[rel=pressurised_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurised_+_zones
*CAT: n
*SEM: twoRel[rel=pressurised_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurised_+_zones
*CAT: n
*SEM: twoRel[rel=pressurised_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurised_+_zones
*CAT: n
*SEM: orRel[rel=pressurised_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: my_+_opinion_+_i
*CAT: n
*SEM: unaryRel[rel=my_+_opinion_+_i]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: my_+_opinion_+_i
*CAT: n
*SEM: twoRel[rel=my_+_opinion_+_i]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: my_+_opinion_+_i
*CAT: n
*SEM: twoRel[rel=my_+_opinion_+_i]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: my_+_opinion_+_i
*CAT: n
*SEM: orRel[rel=my_+_opinion_+_i]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_bracket
*CAT: n
*SEM: unaryRel[rel=each_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_bracket
*CAT: n
*SEM: twoRel[rel=each_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_bracket
*CAT: n
*SEM: twoRel[rel=each_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_bracket
*CAT: n
*SEM: orRel[rel=each_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grey_+_colour
*CAT: n
*SEM: unaryRel[rel=grey_+_colour]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grey_+_colour
*CAT: n
*SEM: twoRel[rel=grey_+_colour]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grey_+_colour
*CAT: n
*SEM: twoRel[rel=grey_+_colour]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grey_+_colour
*CAT: n
*SEM: orRel[rel=grey_+_colour]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_electrical_+_protection
*CAT: n
*SEM: unaryRel[rel=an_+_electrical_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_electrical_+_protection
*CAT: n
*SEM: twoRel[rel=an_+_electrical_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_electrical_+_protection
*CAT: n
*SEM: twoRel[rel=an_+_electrical_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_electrical_+_protection
*CAT: n
*SEM: orRel[rel=an_+_electrical_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_of_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=definition_+_of_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_of_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=definition_+_of_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_of_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=definition_+_of_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_of_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=definition_+_of_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twice
*CAT: n
*SEM: unaryRel[rel=twice]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twice
*CAT: n
*SEM: twoRel[rel=twice]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twice
*CAT: n
*SEM: twoRel[rel=twice]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twice
*CAT: n
*SEM: orRel[rel=twice]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ratio_+_r
*CAT: n
*SEM: unaryRel[rel=ratio_+_r]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ratio_+_r
*CAT: n
*SEM: twoRel[rel=ratio_+_r]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ratio_+_r
*CAT: n
*SEM: twoRel[rel=ratio_+_r]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ratio_+_r
*CAT: n
*SEM: orRel[rel=ratio_+_r]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_dimensions
*CAT: n
*SEM: unaryRel[rel=connector_+_dimensions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_dimensions
*CAT: n
*SEM: twoRel[rel=connector_+_dimensions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_dimensions
*CAT: n
*SEM: twoRel[rel=connector_+_dimensions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_dimensions
*CAT: n
*SEM: orRel[rel=connector_+_dimensions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cause_+_no_+_leakage
*CAT: n
*SEM: unaryRel[rel=cause_+_no_+_leakage]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cause_+_no_+_leakage
*CAT: n
*SEM: twoRel[rel=cause_+_no_+_leakage]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cause_+_no_+_leakage
*CAT: n
*SEM: twoRel[rel=cause_+_no_+_leakage]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cause_+_no_+_leakage
*CAT: n
*SEM: orRel[rel=cause_+_no_+_leakage]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maintaining_+_a_+_straight_+_pipes_+_section_+_between_+_two_+_bends
*CAT: n
*SEM: unaryRel[rel=maintaining_+_a_+_straight_+_pipes_+_section_+_between_+_two_+_bends]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maintaining_+_a_+_straight_+_pipes_+_section_+_between_+_two_+_bends
*CAT: n
*SEM: twoRel[rel=maintaining_+_a_+_straight_+_pipes_+_section_+_between_+_two_+_bends]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maintaining_+_a_+_straight_+_pipes_+_section_+_between_+_two_+_bends
*CAT: n
*SEM: twoRel[rel=maintaining_+_a_+_straight_+_pipes_+_section_+_between_+_two_+_bends]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maintaining_+_a_+_straight_+_pipes_+_section_+_between_+_two_+_bends
*CAT: n
*SEM: orRel[rel=maintaining_+_a_+_straight_+_pipes_+_section_+_between_+_two_+_bends]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction_+_zones_+_between_+_the_+_pipes_+_coming
*CAT: n
*SEM: unaryRel[rel=junction_+_zones_+_between_+_the_+_pipes_+_coming]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction_+_zones_+_between_+_the_+_pipes_+_coming
*CAT: n
*SEM: twoRel[rel=junction_+_zones_+_between_+_the_+_pipes_+_coming]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction_+_zones_+_between_+_the_+_pipes_+_coming
*CAT: n
*SEM: twoRel[rel=junction_+_zones_+_between_+_the_+_pipes_+_coming]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction_+_zones_+_between_+_the_+_pipes_+_coming
*CAT: n
*SEM: orRel[rel=junction_+_zones_+_between_+_the_+_pipes_+_coming]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chafing_+_sheath
*CAT: n
*SEM: unaryRel[rel=chafing_+_sheath]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chafing_+_sheath
*CAT: n
*SEM: twoRel[rel=chafing_+_sheath]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chafing_+_sheath
*CAT: n
*SEM: twoRel[rel=chafing_+_sheath]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chafing_+_sheath
*CAT: n
*SEM: orRel[rel=chafing_+_sheath]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_impression-stamped_+_identification_+_band
*CAT: n
*SEM: unaryRel[rel=an_+_impression-stamped_+_identification_+_band]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_impression-stamped_+_identification_+_band
*CAT: n
*SEM: twoRel[rel=an_+_impression-stamped_+_identification_+_band]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_impression-stamped_+_identification_+_band
*CAT: n
*SEM: twoRel[rel=an_+_impression-stamped_+_identification_+_band]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_impression-stamped_+_identification_+_band
*CAT: n
*SEM: orRel[rel=an_+_impression-stamped_+_identification_+_band]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_detection
*CAT: n
*SEM: unaryRel[rel=fire_+_detection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_detection
*CAT: n
*SEM: twoRel[rel=fire_+_detection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_detection
*CAT: n
*SEM: twoRel[rel=fire_+_detection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_detection
*CAT: n
*SEM: orRel[rel=fire_+_detection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion
*CAT: n
*SEM: unaryRel[rel=torsion]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion
*CAT: n
*SEM: twoRel[rel=torsion]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion
*CAT: n
*SEM: twoRel[rel=torsion]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion
*CAT: n
*SEM: orRel[rel=torsion]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses_+_routings
*CAT: n
*SEM: unaryRel[rel=flexible_+_hoses_+_routings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses_+_routings
*CAT: n
*SEM: twoRel[rel=flexible_+_hoses_+_routings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses_+_routings
*CAT: n
*SEM: twoRel[rel=flexible_+_hoses_+_routings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses_+_routings
*CAT: n
*SEM: orRel[rel=flexible_+_hoses_+_routings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_item
*CAT: n
*SEM: unaryRel[rel=other_+_item]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_item
*CAT: n
*SEM: twoRel[rel=other_+_item]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_item
*CAT: n
*SEM: twoRel[rel=other_+_item]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_item
*CAT: n
*SEM: orRel[rel=other_+_item]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=red_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=red_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=red_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=red_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gaseous_+_oxygen
*CAT: n
*SEM: unaryRel[rel=gaseous_+_oxygen]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gaseous_+_oxygen
*CAT: n
*SEM: twoRel[rel=gaseous_+_oxygen]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gaseous_+_oxygen
*CAT: n
*SEM: twoRel[rel=gaseous_+_oxygen]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gaseous_+_oxygen
*CAT: n
*SEM: orRel[rel=gaseous_+_oxygen]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 15_+_mm
*CAT: n
*SEM: unaryRel[rel=15_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 15_+_mm
*CAT: n
*SEM: twoRel[rel=15_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 15_+_mm
*CAT: n
*SEM: twoRel[rel=15_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 15_+_mm
*CAT: n
*SEM: orRel[rel=15_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__-_equalto_-__+_350mm
*CAT: n
*SEM: unaryRel[rel=d_+__-_smallerThan_-__-_equalto_-__+_350mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__-_equalto_-__+_350mm
*CAT: n
*SEM: twoRel[rel=d_+__-_smallerThan_-__-_equalto_-__+_350mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__-_equalto_-__+_350mm
*CAT: n
*SEM: twoRel[rel=d_+__-_smallerThan_-__-_equalto_-__+_350mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__-_equalto_-__+_350mm
*CAT: n
*SEM: orRel[rel=d_+__-_smallerThan_-__-_equalto_-__+_350mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+_definintion
*CAT: n
*SEM: unaryRel[rel=geometry_+_definintion]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+_definintion
*CAT: n
*SEM: twoRel[rel=geometry_+_definintion]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+_definintion
*CAT: n
*SEM: twoRel[rel=geometry_+_definintion]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+_definintion
*CAT: n
*SEM: orRel[rel=geometry_+_definintion]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tooling_+_clearances
*CAT: n
*SEM: unaryRel[rel=tooling_+_clearances]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tooling_+_clearances
*CAT: n
*SEM: twoRel[rel=tooling_+_clearances]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tooling_+_clearances
*CAT: n
*SEM: twoRel[rel=tooling_+_clearances]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tooling_+_clearances
*CAT: n
*SEM: orRel[rel=tooling_+_clearances]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection_+_means
*CAT: n
*SEM: unaryRel[rel=protection_+_means]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection_+_means
*CAT: n
*SEM: twoRel[rel=protection_+_means]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection_+_means
*CAT: n
*SEM: twoRel[rel=protection_+_means]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection_+_means
*CAT: n
*SEM: orRel[rel=protection_+_means]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_spare_+_conduit_+_the_+_spare_+_conduit
*CAT: n
*SEM: unaryRel[rel=abs_+_0887_+_spare_+_conduit_+_the_+_spare_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_spare_+_conduit_+_the_+_spare_+_conduit
*CAT: n
*SEM: twoRel[rel=abs_+_0887_+_spare_+_conduit_+_the_+_spare_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_spare_+_conduit_+_the_+_spare_+_conduit
*CAT: n
*SEM: twoRel[rel=abs_+_0887_+_spare_+_conduit_+_the_+_spare_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_spare_+_conduit_+_the_+_spare_+_conduit
*CAT: n
*SEM: orRel[rel=abs_+_0887_+_spare_+_conduit_+_the_+_spare_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v_+_routes
*CAT: n
*SEM: unaryRel[rel=v_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v_+_routes
*CAT: n
*SEM: twoRel[rel=v_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v_+_routes
*CAT: n
*SEM: twoRel[rel=v_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v_+_routes
*CAT: n
*SEM: orRel[rel=v_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: every_+_pipe
*CAT: n
*SEM: unaryRel[rel=every_+_pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: every_+_pipe
*CAT: n
*SEM: twoRel[rel=every_+_pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: every_+_pipe
*CAT: n
*SEM: twoRel[rel=every_+_pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: every_+_pipe
*CAT: n
*SEM: orRel[rel=every_+_pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: voltage
*CAT: n
*SEM: unaryRel[rel=voltage]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: voltage
*CAT: n
*SEM: twoRel[rel=voltage]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: voltage
*CAT: n
*SEM: twoRel[rel=voltage]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: voltage
*CAT: n
*SEM: orRel[rel=voltage]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_installation
*CAT: n
*SEM: unaryRel[rel=g-route_+_installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_installation
*CAT: n
*SEM: twoRel[rel=g-route_+_installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_installation
*CAT: n
*SEM: twoRel[rel=g-route_+_installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_installation
*CAT: n
*SEM: orRel[rel=g-route_+_installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_locking_+_of_+_connector
*CAT: n
*SEM: unaryRel[rel=pin_+_locking_+_of_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_locking_+_of_+_connector
*CAT: n
*SEM: twoRel[rel=pin_+_locking_+_of_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_locking_+_of_+_connector
*CAT: n
*SEM: twoRel[rel=pin_+_locking_+_of_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_locking_+_of_+_connector
*CAT: n
*SEM: orRel[rel=pin_+_locking_+_of_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0916_+_shrink_+_sleeve
*CAT: n
*SEM: unaryRel[rel=abs0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0916_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=abs0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0916_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=abs0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0916_+_shrink_+_sleeve
*CAT: n
*SEM: orRel[rel=abs0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_routings
*CAT: n
*SEM: unaryRel[rel=electrical_+_routings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_routings
*CAT: n
*SEM: twoRel[rel=electrical_+_routings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_routings
*CAT: n
*SEM: twoRel[rel=electrical_+_routings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_routings
*CAT: n
*SEM: orRel[rel=electrical_+_routings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 935504
*CAT: n
*SEM: unaryRel[rel=935504]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 935504
*CAT: n
*SEM: twoRel[rel=935504]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 935504
*CAT: n
*SEM: twoRel[rel=935504]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 935504
*CAT: n
*SEM: orRel[rel=935504]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blue_+_background_+_label_+_abs_+_0724
*CAT: n
*SEM: unaryRel[rel=blue_+_background_+_label_+_abs_+_0724]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blue_+_background_+_label_+_abs_+_0724
*CAT: n
*SEM: twoRel[rel=blue_+_background_+_label_+_abs_+_0724]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blue_+_background_+_label_+_abs_+_0724
*CAT: n
*SEM: twoRel[rel=blue_+_background_+_label_+_abs_+_0724]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blue_+_background_+_label_+_abs_+_0724
*CAT: n
*SEM: orRel[rel=blue_+_background_+_label_+_abs_+_0724]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: left
*CAT: n
*SEM: unaryRel[rel=left]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: left
*CAT: n
*SEM: twoRel[rel=left]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: left
*CAT: n
*SEM: twoRel[rel=left]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: left
*CAT: n
*SEM: orRel[rel=left]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding
*CAT: n
*SEM: unaryRel[rel=bonding]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding
*CAT: n
*SEM: twoRel[rel=bonding]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding
*CAT: n
*SEM: twoRel[rel=bonding]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding
*CAT: n
*SEM: orRel[rel=bonding]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fully_+_separable_+_flying_+_tee-_+_unions
*CAT: n
*SEM: unaryRel[rel=fully_+_separable_+_flying_+_tee-_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fully_+_separable_+_flying_+_tee-_+_unions
*CAT: n
*SEM: twoRel[rel=fully_+_separable_+_flying_+_tee-_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fully_+_separable_+_flying_+_tee-_+_unions
*CAT: n
*SEM: twoRel[rel=fully_+_separable_+_flying_+_tee-_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fully_+_separable_+_flying_+_tee-_+_unions
*CAT: n
*SEM: orRel[rel=fully_+_separable_+_flying_+_tee-_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2106_+_low_+_pressure_+_lines
*CAT: n
*SEM: unaryRel[rel=abs2106_+_low_+_pressure_+_lines]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2106_+_low_+_pressure_+_lines
*CAT: n
*SEM: twoRel[rel=abs2106_+_low_+_pressure_+_lines]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2106_+_low_+_pressure_+_lines
*CAT: n
*SEM: twoRel[rel=abs2106_+_low_+_pressure_+_lines]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2106_+_low_+_pressure_+_lines
*CAT: n
*SEM: orRel[rel=abs2106_+_low_+_pressure_+_lines]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: centered_+_at_+_the_+_metallic_+_rigid_+_conduit_+_outlet
*CAT: n
*SEM: unaryRel[rel=centered_+_at_+_the_+_metallic_+_rigid_+_conduit_+_outlet]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: centered_+_at_+_the_+_metallic_+_rigid_+_conduit_+_outlet
*CAT: n
*SEM: twoRel[rel=centered_+_at_+_the_+_metallic_+_rigid_+_conduit_+_outlet]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: centered_+_at_+_the_+_metallic_+_rigid_+_conduit_+_outlet
*CAT: n
*SEM: twoRel[rel=centered_+_at_+_the_+_metallic_+_rigid_+_conduit_+_outlet]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: centered_+_at_+_the_+_metallic_+_rigid_+_conduit_+_outlet
*CAT: n
*SEM: orRel[rel=centered_+_at_+_the_+_metallic_+_rigid_+_conduit_+_outlet]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_junction
*CAT: n
*SEM: unaryRel[rel=single_+_junction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_junction
*CAT: n
*SEM: twoRel[rel=single_+_junction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_junction
*CAT: n
*SEM: twoRel[rel=single_+_junction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_junction
*CAT: n
*SEM: orRel[rel=single_+_junction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4._+_label
*CAT: n
*SEM: unaryRel[rel=4._+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4._+_label
*CAT: n
*SEM: twoRel[rel=4._+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4._+_label
*CAT: n
*SEM: twoRel[rel=4._+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4._+_label
*CAT: n
*SEM: orRel[rel=4._+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker_+_monitoring
*CAT: n
*SEM: unaryRel[rel=circuit_+_breaker_+_monitoring]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker_+_monitoring
*CAT: n
*SEM: twoRel[rel=circuit_+_breaker_+_monitoring]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker_+_monitoring
*CAT: n
*SEM: twoRel[rel=circuit_+_breaker_+_monitoring]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker_+_monitoring
*CAT: n
*SEM: orRel[rel=circuit_+_breaker_+_monitoring]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_blanket
*CAT: n
*SEM: unaryRel[rel=removable_+_blanket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_blanket
*CAT: n
*SEM: twoRel[rel=removable_+_blanket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_blanket
*CAT: n
*SEM: twoRel[rel=removable_+_blanket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_blanket
*CAT: n
*SEM: orRel[rel=removable_+_blanket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket_+_the_+_clearance_+_between_+_the_+_conductive_+_clamp
*CAT: n
*SEM: unaryRel[rel=non-conductive_+_bracket_+_the_+_clearance_+_between_+_the_+_conductive_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket_+_the_+_clearance_+_between_+_the_+_conductive_+_clamp
*CAT: n
*SEM: twoRel[rel=non-conductive_+_bracket_+_the_+_clearance_+_between_+_the_+_conductive_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket_+_the_+_clearance_+_between_+_the_+_conductive_+_clamp
*CAT: n
*SEM: twoRel[rel=non-conductive_+_bracket_+_the_+_clearance_+_between_+_the_+_conductive_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket_+_the_+_clearance_+_between_+_the_+_conductive_+_clamp
*CAT: n
*SEM: orRel[rel=non-conductive_+_bracket_+_the_+_clearance_+_between_+_the_+_conductive_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_areas_+_class_+_e_+__-_opensb_-_sealed_-_closesb_-__+_version
*CAT: n
*SEM: unaryRel[rel=interface_+_areas_+_class_+_e_+__-_opensb_-_sealed_-_closesb_-__+_version]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_areas_+_class_+_e_+__-_opensb_-_sealed_-_closesb_-__+_version
*CAT: n
*SEM: twoRel[rel=interface_+_areas_+_class_+_e_+__-_opensb_-_sealed_-_closesb_-__+_version]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_areas_+_class_+_e_+__-_opensb_-_sealed_-_closesb_-__+_version
*CAT: n
*SEM: twoRel[rel=interface_+_areas_+_class_+_e_+__-_opensb_-_sealed_-_closesb_-__+_version]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_areas_+_class_+_e_+__-_opensb_-_sealed_-_closesb_-__+_version
*CAT: n
*SEM: orRel[rel=interface_+_areas_+_class_+_e_+__-_opensb_-_sealed_-_closesb_-__+_version]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: of_+_4.8mm
*CAT: n
*SEM: unaryRel[rel=of_+_4.8mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: of_+_4.8mm
*CAT: n
*SEM: twoRel[rel=of_+_4.8mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: of_+_4.8mm
*CAT: n
*SEM: twoRel[rel=of_+_4.8mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: of_+_4.8mm
*CAT: n
*SEM: orRel[rel=of_+_4.8mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: exits
*CAT: n
*SEM: unaryRel[rel=exits]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: exits
*CAT: n
*SEM: twoRel[rel=exits]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: exits
*CAT: n
*SEM: twoRel[rel=exits]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: exits
*CAT: n
*SEM: orRel[rel=exits]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: unaryRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: twoRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: twoRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: orRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_adjajent_+_clamp
*CAT: n
*SEM: unaryRel[rel=two_+_adjajent_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_adjajent_+_clamp
*CAT: n
*SEM: twoRel[rel=two_+_adjajent_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_adjajent_+_clamp
*CAT: n
*SEM: twoRel[rel=two_+_adjajent_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_adjajent_+_clamp
*CAT: n
*SEM: orRel[rel=two_+_adjajent_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermocouple_+_cables_+_gauge_+_differences_+_d_-_greaterThan_-_3
*CAT: n
*SEM: unaryRel[rel=thermocouple_+_cables_+_gauge_+_differences_+_d_-_greaterThan_-_3]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermocouple_+_cables_+_gauge_+_differences_+_d_-_greaterThan_-_3
*CAT: n
*SEM: twoRel[rel=thermocouple_+_cables_+_gauge_+_differences_+_d_-_greaterThan_-_3]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermocouple_+_cables_+_gauge_+_differences_+_d_-_greaterThan_-_3
*CAT: n
*SEM: twoRel[rel=thermocouple_+_cables_+_gauge_+_differences_+_d_-_greaterThan_-_3]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermocouple_+_cables_+_gauge_+_differences_+_d_-_greaterThan_-_3
*CAT: n
*SEM: orRel[rel=thermocouple_+_cables_+_gauge_+_differences_+_d_-_greaterThan_-_3]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expected_+_build_+_tolerances
*CAT: n
*SEM: unaryRel[rel=expected_+_build_+_tolerances]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expected_+_build_+_tolerances
*CAT: n
*SEM: twoRel[rel=expected_+_build_+_tolerances]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expected_+_build_+_tolerances
*CAT: n
*SEM: twoRel[rel=expected_+_build_+_tolerances]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expected_+_build_+_tolerances
*CAT: n
*SEM: orRel[rel=expected_+_build_+_tolerances]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure
*CAT: n
*SEM: unaryRel[rel=figure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure
*CAT: n
*SEM: twoRel[rel=figure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure
*CAT: n
*SEM: twoRel[rel=figure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure
*CAT: n
*SEM: orRel[rel=figure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+_to
*CAT: n
*SEM: unaryRel[rel=10mm_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+_to
*CAT: n
*SEM: twoRel[rel=10mm_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+_to
*CAT: n
*SEM: twoRel[rel=10mm_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+_to
*CAT: n
*SEM: orRel[rel=10mm_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unsued_+_bases
*CAT: n
*SEM: unaryRel[rel=unsued_+_bases]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unsued_+_bases
*CAT: n
*SEM: twoRel[rel=unsued_+_bases]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unsued_+_bases
*CAT: n
*SEM: twoRel[rel=unsued_+_bases]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unsued_+_bases
*CAT: n
*SEM: orRel[rel=unsued_+_bases]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ''
*CAT: n
*SEM: unaryRel[rel='']
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ''
*CAT: n
*SEM: twoRel[rel='']
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ''
*CAT: n
*SEM: twoRel[rel='']
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ''
*CAT: n
*SEM: orRel[rel='']
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: larger_+_bend_+_radius_+_than_+_the_+_required_+_minimum_+_during_+_the_+_complete_+_hardware_+_installation_+_procedure._+_the_+_hoses
*CAT: n
*SEM: unaryRel[rel=larger_+_bend_+_radius_+_than_+_the_+_required_+_minimum_+_during_+_the_+_complete_+_hardware_+_installation_+_procedure._+_the_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: larger_+_bend_+_radius_+_than_+_the_+_required_+_minimum_+_during_+_the_+_complete_+_hardware_+_installation_+_procedure._+_the_+_hoses
*CAT: n
*SEM: twoRel[rel=larger_+_bend_+_radius_+_than_+_the_+_required_+_minimum_+_during_+_the_+_complete_+_hardware_+_installation_+_procedure._+_the_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: larger_+_bend_+_radius_+_than_+_the_+_required_+_minimum_+_during_+_the_+_complete_+_hardware_+_installation_+_procedure._+_the_+_hoses
*CAT: n
*SEM: twoRel[rel=larger_+_bend_+_radius_+_than_+_the_+_required_+_minimum_+_during_+_the_+_complete_+_hardware_+_installation_+_procedure._+_the_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: larger_+_bend_+_radius_+_than_+_the_+_required_+_minimum_+_during_+_the_+_complete_+_hardware_+_installation_+_procedure._+_the_+_hoses
*CAT: n
*SEM: orRel[rel=larger_+_bend_+_radius_+_than_+_the_+_required_+_minimum_+_during_+_the_+_complete_+_hardware_+_installation_+_procedure._+_the_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_note
*CAT: n
*SEM: unaryRel[rel=flag_+_note]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_note
*CAT: n
*SEM: twoRel[rel=flag_+_note]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_note
*CAT: n
*SEM: twoRel[rel=flag_+_note]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_note
*CAT: n
*SEM: orRel[rel=flag_+_note]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90_-_degrees_-_
*CAT: n
*SEM: unaryRel[rel=90_-_degrees_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=90_-_degrees_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=90_-_degrees_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90_-_degrees_-_
*CAT: n
*SEM: orRel[rel=90_-_degrees_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: section
*CAT: n
*SEM: unaryRel[rel=section]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: section
*CAT: n
*SEM: twoRel[rel=section]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: section
*CAT: n
*SEM: twoRel[rel=section]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: section
*CAT: n
*SEM: orRel[rel=section]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate_+_not_+_exceeding_+_80_-_percent_-__+_at_+_aircraft_+_delivery
*CAT: n
*SEM: unaryRel[rel=fillingrate_+_not_+_exceeding_+_80_-_percent_-__+_at_+_aircraft_+_delivery]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate_+_not_+_exceeding_+_80_-_percent_-__+_at_+_aircraft_+_delivery
*CAT: n
*SEM: twoRel[rel=fillingrate_+_not_+_exceeding_+_80_-_percent_-__+_at_+_aircraft_+_delivery]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate_+_not_+_exceeding_+_80_-_percent_-__+_at_+_aircraft_+_delivery
*CAT: n
*SEM: twoRel[rel=fillingrate_+_not_+_exceeding_+_80_-_percent_-__+_at_+_aircraft_+_delivery]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate_+_not_+_exceeding_+_80_-_percent_-__+_at_+_aircraft_+_delivery
*CAT: n
*SEM: orRel[rel=fillingrate_+_not_+_exceeding_+_80_-_percent_-__+_at_+_aircraft_+_delivery]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_level_+_of_+_insulation
*CAT: n
*SEM: unaryRel[rel=two_+_level_+_of_+_insulation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_level_+_of_+_insulation
*CAT: n
*SEM: twoRel[rel=two_+_level_+_of_+_insulation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_level_+_of_+_insulation
*CAT: n
*SEM: twoRel[rel=two_+_level_+_of_+_insulation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_level_+_of_+_insulation
*CAT: n
*SEM: orRel[rel=two_+_level_+_of_+_insulation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_housing
*CAT: n
*SEM: unaryRel[rel=to_+_housing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_housing
*CAT: n
*SEM: twoRel[rel=to_+_housing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_housing
*CAT: n
*SEM: twoRel[rel=to_+_housing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_housing
*CAT: n
*SEM: orRel[rel=to_+_housing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: type
*CAT: n
*SEM: unaryRel[rel=type]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: type
*CAT: n
*SEM: twoRel[rel=type]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: type
*CAT: n
*SEM: twoRel[rel=type]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: type
*CAT: n
*SEM: orRel[rel=type]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=bleed_+_air_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=bleed_+_air_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=bleed_+_air_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_-_closesb_-_
*CAT: n
*SEM: orRel[rel=bleed_+_air_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: items
*CAT: n
*SEM: unaryRel[rel=items]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: items
*CAT: n
*SEM: twoRel[rel=items]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: items
*CAT: n
*SEM: twoRel[rel=items]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: items
*CAT: n
*SEM: orRel[rel=items]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_in_+_a_+_way_+_that_+_they_+_stay_+_in_+_position
*CAT: n
*SEM: unaryRel[rel=structure_+_in_+_a_+_way_+_that_+_they_+_stay_+_in_+_position]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_in_+_a_+_way_+_that_+_they_+_stay_+_in_+_position
*CAT: n
*SEM: twoRel[rel=structure_+_in_+_a_+_way_+_that_+_they_+_stay_+_in_+_position]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_in_+_a_+_way_+_that_+_they_+_stay_+_in_+_position
*CAT: n
*SEM: twoRel[rel=structure_+_in_+_a_+_way_+_that_+_they_+_stay_+_in_+_position]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_in_+_a_+_way_+_that_+_they_+_stay_+_in_+_position
*CAT: n
*SEM: orRel[rel=structure_+_in_+_a_+_way_+_that_+_they_+_stay_+_in_+_position]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve_+_asna3759va6
*CAT: n
*SEM: unaryRel[rel=sleeve_+_asna3759va6]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve_+_asna3759va6
*CAT: n
*SEM: twoRel[rel=sleeve_+_asna3759va6]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve_+_asna3759va6
*CAT: n
*SEM: twoRel[rel=sleeve_+_asna3759va6]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve_+_asna3759va6
*CAT: n
*SEM: orRel[rel=sleeve_+_asna3759va6]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_areas_+__-_opensb_-_
*CAT: n
*SEM: unaryRel[rel=specific_+_areas_+__-_opensb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_areas_+__-_opensb_-_
*CAT: n
*SEM: twoRel[rel=specific_+_areas_+__-_opensb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_areas_+__-_opensb_-_
*CAT: n
*SEM: twoRel[rel=specific_+_areas_+__-_opensb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_areas_+__-_opensb_-_
*CAT: n
*SEM: orRel[rel=specific_+_areas_+__-_opensb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_head
*CAT: n
*SEM: unaryRel[rel=cable_+_tie_+_head]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_head
*CAT: n
*SEM: twoRel[rel=cable_+_tie_+_head]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_head
*CAT: n
*SEM: twoRel[rel=cable_+_tie_+_head]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_head
*CAT: n
*SEM: orRel[rel=cable_+_tie_+_head]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identified_+_zones
*CAT: n
*SEM: unaryRel[rel=identified_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identified_+_zones
*CAT: n
*SEM: twoRel[rel=identified_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identified_+_zones
*CAT: n
*SEM: twoRel[rel=identified_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identified_+_zones
*CAT: n
*SEM: orRel[rel=identified_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_supply
*CAT: n
*SEM: unaryRel[rel=power_+_supply]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_supply
*CAT: n
*SEM: twoRel[rel=power_+_supply]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_supply
*CAT: n
*SEM: twoRel[rel=power_+_supply]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_supply
*CAT: n
*SEM: orRel[rel=power_+_supply]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket_+_the_+_clearance
*CAT: n
*SEM: unaryRel[rel=non-conductive_+_bracket_+_the_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket_+_the_+_clearance
*CAT: n
*SEM: twoRel[rel=non-conductive_+_bracket_+_the_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket_+_the_+_clearance
*CAT: n
*SEM: twoRel[rel=non-conductive_+_bracket_+_the_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket_+_the_+_clearance
*CAT: n
*SEM: orRel[rel=non-conductive_+_bracket_+_the_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_label
*CAT: n
*SEM: unaryRel[rel=no_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_label
*CAT: n
*SEM: twoRel[rel=no_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_label
*CAT: n
*SEM: twoRel[rel=no_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_label
*CAT: n
*SEM: orRel[rel=no_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_printed_+_in_+_black_+_on_+_yellow_+_background_+_containing_+__-_invcomma_-_spare_+_conduit_-_invcomma_-_
*CAT: n
*SEM: unaryRel[rel=asne_+_0248_+_printed_+_in_+_black_+_on_+_yellow_+_background_+_containing_+__-_invcomma_-_spare_+_conduit_-_invcomma_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_printed_+_in_+_black_+_on_+_yellow_+_background_+_containing_+__-_invcomma_-_spare_+_conduit_-_invcomma_-_
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_printed_+_in_+_black_+_on_+_yellow_+_background_+_containing_+__-_invcomma_-_spare_+_conduit_-_invcomma_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_printed_+_in_+_black_+_on_+_yellow_+_background_+_containing_+__-_invcomma_-_spare_+_conduit_-_invcomma_-_
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_printed_+_in_+_black_+_on_+_yellow_+_background_+_containing_+__-_invcomma_-_spare_+_conduit_-_invcomma_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_printed_+_in_+_black_+_on_+_yellow_+_background_+_containing_+__-_invcomma_-_spare_+_conduit_-_invcomma_-_
*CAT: n
*SEM: orRel[rel=asne_+_0248_+_printed_+_in_+_black_+_on_+_yellow_+_background_+_containing_+__-_invcomma_-_spare_+_conduit_-_invcomma_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3646_+_connector
*CAT: n
*SEM: unaryRel[rel=3646_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3646_+_connector
*CAT: n
*SEM: twoRel[rel=3646_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3646_+_connector
*CAT: n
*SEM: twoRel[rel=3646_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3646_+_connector
*CAT: n
*SEM: orRel[rel=3646_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contact_+_in_+_connector
*CAT: n
*SEM: unaryRel[rel=socket_+_contact_+_in_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contact_+_in_+_connector
*CAT: n
*SEM: twoRel[rel=socket_+_contact_+_in_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contact_+_in_+_connector
*CAT: n
*SEM: twoRel[rel=socket_+_contact_+_in_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contact_+_in_+_connector
*CAT: n
*SEM: orRel[rel=socket_+_contact_+_in_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch
*CAT: n
*SEM: unaryRel[rel=sketch]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch
*CAT: n
*SEM: twoRel[rel=sketch]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch
*CAT: n
*SEM: twoRel[rel=sketch]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch
*CAT: n
*SEM: orRel[rel=sketch]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: unaryRel[rel=top_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: twoRel[rel=top_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: twoRel[rel=top_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: orRel[rel=top_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_three_+_terminal_+_lug
*CAT: n
*SEM: unaryRel[rel=maximum_+_three_+_terminal_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_three_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=maximum_+_three_+_terminal_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_three_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=maximum_+_three_+_terminal_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_three_+_terminal_+_lug
*CAT: n
*SEM: orRel[rel=maximum_+_three_+_terminal_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_sleeve
*CAT: n
*SEM: unaryRel[rel=identification_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_sleeve
*CAT: n
*SEM: twoRel[rel=identification_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_sleeve
*CAT: n
*SEM: twoRel[rel=identification_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_sleeve
*CAT: n
*SEM: orRel[rel=identification_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component_-_backslash_-_item_-_backslash_-_object_+_of_+_the_+_bleed_+_air_+_system_+_at_+_all_+_times
*CAT: n
*SEM: unaryRel[rel=component_-_backslash_-_item_-_backslash_-_object_+_of_+_the_+_bleed_+_air_+_system_+_at_+_all_+_times]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component_-_backslash_-_item_-_backslash_-_object_+_of_+_the_+_bleed_+_air_+_system_+_at_+_all_+_times
*CAT: n
*SEM: twoRel[rel=component_-_backslash_-_item_-_backslash_-_object_+_of_+_the_+_bleed_+_air_+_system_+_at_+_all_+_times]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component_-_backslash_-_item_-_backslash_-_object_+_of_+_the_+_bleed_+_air_+_system_+_at_+_all_+_times
*CAT: n
*SEM: twoRel[rel=component_-_backslash_-_item_-_backslash_-_object_+_of_+_the_+_bleed_+_air_+_system_+_at_+_all_+_times]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component_-_backslash_-_item_-_backslash_-_object_+_of_+_the_+_bleed_+_air_+_system_+_at_+_all_+_times
*CAT: n
*SEM: orRel[rel=component_-_backslash_-_item_-_backslash_-_object_+_of_+_the_+_bleed_+_air_+_system_+_at_+_all_+_times]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: these_+_cases
*CAT: n
*SEM: unaryRel[rel=these_+_cases]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: these_+_cases
*CAT: n
*SEM: twoRel[rel=these_+_cases]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: these_+_cases
*CAT: n
*SEM: twoRel[rel=these_+_cases]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: these_+_cases
*CAT: n
*SEM: orRel[rel=these_+_cases]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_cable
*CAT: n
*SEM: unaryRel[rel=electrical_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_cable
*CAT: n
*SEM: twoRel[rel=electrical_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_cable
*CAT: n
*SEM: twoRel[rel=electrical_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_cable
*CAT: n
*SEM: orRel[rel=electrical_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: range
*CAT: n
*SEM: unaryRel[rel=range]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: range
*CAT: n
*SEM: twoRel[rel=range]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: range
*CAT: n
*SEM: twoRel[rel=range]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: range
*CAT: n
*SEM: orRel[rel=range]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: please_+_refer_+_to_+_the_+_attached_+_figure
*CAT: n
*SEM: unaryRel[rel=please_+_refer_+_to_+_the_+_attached_+_figure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: please_+_refer_+_to_+_the_+_attached_+_figure
*CAT: n
*SEM: twoRel[rel=please_+_refer_+_to_+_the_+_attached_+_figure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: please_+_refer_+_to_+_the_+_attached_+_figure
*CAT: n
*SEM: twoRel[rel=please_+_refer_+_to_+_the_+_attached_+_figure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: please_+_refer_+_to_+_the_+_attached_+_figure
*CAT: n
*SEM: orRel[rel=please_+_refer_+_to_+_the_+_attached_+_figure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_label
*CAT: n
*SEM: unaryRel[rel=asne_+_0248_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_label
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_label
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_label
*CAT: n
*SEM: orRel[rel=asne_+_0248_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loss
*CAT: n
*SEM: unaryRel[rel=loss]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loss
*CAT: n
*SEM: twoRel[rel=loss]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loss
*CAT: n
*SEM: twoRel[rel=loss]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loss
*CAT: n
*SEM: orRel[rel=loss]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawn_+_bracket
*CAT: n
*SEM: unaryRel[rel=drawn_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawn_+_bracket
*CAT: n
*SEM: twoRel[rel=drawn_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawn_+_bracket
*CAT: n
*SEM: twoRel[rel=drawn_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawn_+_bracket
*CAT: n
*SEM: orRel[rel=drawn_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mh_+_system_+__-_opensb_-_passenger_+_entertainment_+_video_-_closesb_-_or_+_mk_+_system_+__-_opensb_-_pes_-_colon_-__+_passenger_+_entertainment_+_music_-_closesb_-_or_+_mm_+_system_+__-_opensb_-_pvis_-_colon_-__+_passernger_+_information_+_video_+_system_-_closesb_-_or_+_rd_+_system_+__-_opensb_-_telephone_-_closesb_-__+_rf_+_system_+__-_opensb_-_cpms_+_cabin
*CAT: n
*SEM: unaryRel[rel=mh_+_system_+__-_opensb_-_passenger_+_entertainment_+_video_-_closesb_-_or_+_mk_+_system_+__-_opensb_-_pes_-_colon_-__+_passenger_+_entertainment_+_music_-_closesb_-_or_+_mm_+_system_+__-_opensb_-_pvis_-_colon_-__+_passernger_+_information_+_video_+_system_-_closesb_-_or_+_rd_+_system_+__-_opensb_-_telephone_-_closesb_-__+_rf_+_system_+__-_opensb_-_cpms_+_cabin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mh_+_system_+__-_opensb_-_passenger_+_entertainment_+_video_-_closesb_-_or_+_mk_+_system_+__-_opensb_-_pes_-_colon_-__+_passenger_+_entertainment_+_music_-_closesb_-_or_+_mm_+_system_+__-_opensb_-_pvis_-_colon_-__+_passernger_+_information_+_video_+_system_-_closesb_-_or_+_rd_+_system_+__-_opensb_-_telephone_-_closesb_-__+_rf_+_system_+__-_opensb_-_cpms_+_cabin
*CAT: n
*SEM: twoRel[rel=mh_+_system_+__-_opensb_-_passenger_+_entertainment_+_video_-_closesb_-_or_+_mk_+_system_+__-_opensb_-_pes_-_colon_-__+_passenger_+_entertainment_+_music_-_closesb_-_or_+_mm_+_system_+__-_opensb_-_pvis_-_colon_-__+_passernger_+_information_+_video_+_system_-_closesb_-_or_+_rd_+_system_+__-_opensb_-_telephone_-_closesb_-__+_rf_+_system_+__-_opensb_-_cpms_+_cabin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mh_+_system_+__-_opensb_-_passenger_+_entertainment_+_video_-_closesb_-_or_+_mk_+_system_+__-_opensb_-_pes_-_colon_-__+_passenger_+_entertainment_+_music_-_closesb_-_or_+_mm_+_system_+__-_opensb_-_pvis_-_colon_-__+_passernger_+_information_+_video_+_system_-_closesb_-_or_+_rd_+_system_+__-_opensb_-_telephone_-_closesb_-__+_rf_+_system_+__-_opensb_-_cpms_+_cabin
*CAT: n
*SEM: twoRel[rel=mh_+_system_+__-_opensb_-_passenger_+_entertainment_+_video_-_closesb_-_or_+_mk_+_system_+__-_opensb_-_pes_-_colon_-__+_passenger_+_entertainment_+_music_-_closesb_-_or_+_mm_+_system_+__-_opensb_-_pvis_-_colon_-__+_passernger_+_information_+_video_+_system_-_closesb_-_or_+_rd_+_system_+__-_opensb_-_telephone_-_closesb_-__+_rf_+_system_+__-_opensb_-_cpms_+_cabin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mh_+_system_+__-_opensb_-_passenger_+_entertainment_+_video_-_closesb_-_or_+_mk_+_system_+__-_opensb_-_pes_-_colon_-__+_passenger_+_entertainment_+_music_-_closesb_-_or_+_mm_+_system_+__-_opensb_-_pvis_-_colon_-__+_passernger_+_information_+_video_+_system_-_closesb_-_or_+_rd_+_system_+__-_opensb_-_telephone_-_closesb_-__+_rf_+_system_+__-_opensb_-_cpms_+_cabin
*CAT: n
*SEM: orRel[rel=mh_+_system_+__-_opensb_-_passenger_+_entertainment_+_video_-_closesb_-_or_+_mk_+_system_+__-_opensb_-_pes_-_colon_-__+_passenger_+_entertainment_+_music_-_closesb_-_or_+_mm_+_system_+__-_opensb_-_pvis_-_colon_-__+_passernger_+_information_+_video_+_system_-_closesb_-_or_+_rd_+_system_+__-_opensb_-_telephone_-_closesb_-__+_rf_+_system_+__-_opensb_-_cpms_+_cabin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_areas
*CAT: n
*SEM: unaryRel[rel=temperature_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_areas
*CAT: n
*SEM: twoRel[rel=temperature_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_areas
*CAT: n
*SEM: twoRel[rel=temperature_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_areas
*CAT: n
*SEM: orRel[rel=temperature_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_area_+_class_+_aor
*CAT: n
*SEM: unaryRel[rel=swamp_+_area_+_class_+_aor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_area_+_class_+_aor
*CAT: n
*SEM: twoRel[rel=swamp_+_area_+_class_+_aor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_area_+_class_+_aor
*CAT: n
*SEM: twoRel[rel=swamp_+_area_+_class_+_aor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_area_+_class_+_aor
*CAT: n
*SEM: orRel[rel=swamp_+_area_+_class_+_aor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_4_+_solution
*CAT: n
*SEM: unaryRel[rel=priority_+_4_+_solution]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_4_+_solution
*CAT: n
*SEM: twoRel[rel=priority_+_4_+_solution]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_4_+_solution
*CAT: n
*SEM: twoRel[rel=priority_+_4_+_solution]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_4_+_solution
*CAT: n
*SEM: orRel[rel=priority_+_4_+_solution]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5s
*CAT: n
*SEM: unaryRel[rel=5s]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5s
*CAT: n
*SEM: twoRel[rel=5s]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5s
*CAT: n
*SEM: twoRel[rel=5s]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5s
*CAT: n
*SEM: orRel[rel=5s]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve_+_nsa937201
*CAT: n
*SEM: unaryRel[rel=sleeve_+_nsa937201]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve_+_nsa937201
*CAT: n
*SEM: twoRel[rel=sleeve_+_nsa937201]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve_+_nsa937201
*CAT: n
*SEM: twoRel[rel=sleeve_+_nsa937201]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve_+_nsa937201
*CAT: n
*SEM: orRel[rel=sleeve_+_nsa937201]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: unaryRel[rel=rigid_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: twoRel[rel=rigid_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: twoRel[rel=rigid_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: orRel[rel=rigid_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_labels
*CAT: n
*SEM: unaryRel[rel=adhesive_+_labels]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_labels
*CAT: n
*SEM: twoRel[rel=adhesive_+_labels]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_labels
*CAT: n
*SEM: twoRel[rel=adhesive_+_labels]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_labels
*CAT: n
*SEM: orRel[rel=adhesive_+_labels]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connection_+__+_sagging
*CAT: n
*SEM: unaryRel[rel=connection_+__+_sagging]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connection_+__+_sagging
*CAT: n
*SEM: twoRel[rel=connection_+__+_sagging]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connection_+__+_sagging
*CAT: n
*SEM: twoRel[rel=connection_+__+_sagging]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connection_+__+_sagging
*CAT: n
*SEM: orRel[rel=connection_+__+_sagging]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_both_+_sides_+_of_+_interface
*CAT: n
*SEM: unaryRel[rel=on_+_both_+_sides_+_of_+_interface]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_both_+_sides_+_of_+_interface
*CAT: n
*SEM: twoRel[rel=on_+_both_+_sides_+_of_+_interface]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_both_+_sides_+_of_+_interface
*CAT: n
*SEM: twoRel[rel=on_+_both_+_sides_+_of_+_interface]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_both_+_sides_+_of_+_interface
*CAT: n
*SEM: orRel[rel=on_+_both_+_sides_+_of_+_interface]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_rod_+_using_+_abs_+_1095_+_insulating_+_bracket_+_fixed
*CAT: n
*SEM: unaryRel[rel=circular_+_rod_+_using_+_abs_+_1095_+_insulating_+_bracket_+_fixed]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_rod_+_using_+_abs_+_1095_+_insulating_+_bracket_+_fixed
*CAT: n
*SEM: twoRel[rel=circular_+_rod_+_using_+_abs_+_1095_+_insulating_+_bracket_+_fixed]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_rod_+_using_+_abs_+_1095_+_insulating_+_bracket_+_fixed
*CAT: n
*SEM: twoRel[rel=circular_+_rod_+_using_+_abs_+_1095_+_insulating_+_bracket_+_fixed]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_rod_+_using_+_abs_+_1095_+_insulating_+_bracket_+_fixed
*CAT: n
*SEM: orRel[rel=circular_+_rod_+_using_+_abs_+_1095_+_insulating_+_bracket_+_fixed]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_areas_+__-_opensb_-_e.g._+_fan_+_area_-_closesb_-_._+_cushion_+_material_-_colon_-__+_silicone_+_rubber
*CAT: n
*SEM: unaryRel[rel=temperature_+_areas_+__-_opensb_-_e.g._+_fan_+_area_-_closesb_-_._+_cushion_+_material_-_colon_-__+_silicone_+_rubber]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_areas_+__-_opensb_-_e.g._+_fan_+_area_-_closesb_-_._+_cushion_+_material_-_colon_-__+_silicone_+_rubber
*CAT: n
*SEM: twoRel[rel=temperature_+_areas_+__-_opensb_-_e.g._+_fan_+_area_-_closesb_-_._+_cushion_+_material_-_colon_-__+_silicone_+_rubber]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_areas_+__-_opensb_-_e.g._+_fan_+_area_-_closesb_-_._+_cushion_+_material_-_colon_-__+_silicone_+_rubber
*CAT: n
*SEM: twoRel[rel=temperature_+_areas_+__-_opensb_-_e.g._+_fan_+_area_-_closesb_-_._+_cushion_+_material_-_colon_-__+_silicone_+_rubber]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_areas_+__-_opensb_-_e.g._+_fan_+_area_-_closesb_-_._+_cushion_+_material_-_colon_-__+_silicone_+_rubber
*CAT: n
*SEM: orRel[rel=temperature_+_areas_+__-_opensb_-_e.g._+_fan_+_area_-_closesb_-_._+_cushion_+_material_-_colon_-__+_silicone_+_rubber]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modification
*CAT: n
*SEM: unaryRel[rel=modification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modification
*CAT: n
*SEM: twoRel[rel=modification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modification
*CAT: n
*SEM: twoRel[rel=modification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modification
*CAT: n
*SEM: orRel[rel=modification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passenger_+_management_+_system
*CAT: n
*SEM: unaryRel[rel=passenger_+_management_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passenger_+_management_+_system
*CAT: n
*SEM: twoRel[rel=passenger_+_management_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passenger_+_management_+_system
*CAT: n
*SEM: twoRel[rel=passenger_+_management_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passenger_+_management_+_system
*CAT: n
*SEM: orRel[rel=passenger_+_management_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_m-route
*CAT: n
*SEM: unaryRel[rel=pre_+_stressed_+_m-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_m-route
*CAT: n
*SEM: twoRel[rel=pre_+_stressed_+_m-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_m-route
*CAT: n
*SEM: twoRel[rel=pre_+_stressed_+_m-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_m-route
*CAT: n
*SEM: orRel[rel=pre_+_stressed_+_m-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4_+_inches
*CAT: n
*SEM: unaryRel[rel=4_+_inches]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4_+_inches
*CAT: n
*SEM: twoRel[rel=4_+_inches]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4_+_inches
*CAT: n
*SEM: twoRel[rel=4_+_inches]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4_+_inches
*CAT: n
*SEM: orRel[rel=4_+_inches]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_kits
*CAT: n
*SEM: unaryRel[rel=four_+_kits]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_kits
*CAT: n
*SEM: twoRel[rel=four_+_kits]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_kits
*CAT: n
*SEM: twoRel[rel=four_+_kits]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_kits
*CAT: n
*SEM: orRel[rel=four_+_kits]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna_+_5107-b_+_black_+_tape
*CAT: n
*SEM: unaryRel[rel=asna_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna_+_5107-b_+_black_+_tape
*CAT: n
*SEM: twoRel[rel=asna_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna_+_5107-b_+_black_+_tape
*CAT: n
*SEM: twoRel[rel=asna_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna_+_5107-b_+_black_+_tape
*CAT: n
*SEM: orRel[rel=asna_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_of_+_the_+_pipes_+_in_+_the_+_attached_+_pair
*CAT: n
*SEM: unaryRel[rel=one_+_of_+_the_+_pipes_+_in_+_the_+_attached_+_pair]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_of_+_the_+_pipes_+_in_+_the_+_attached_+_pair
*CAT: n
*SEM: twoRel[rel=one_+_of_+_the_+_pipes_+_in_+_the_+_attached_+_pair]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_of_+_the_+_pipes_+_in_+_the_+_attached_+_pair
*CAT: n
*SEM: twoRel[rel=one_+_of_+_the_+_pipes_+_in_+_the_+_attached_+_pair]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_of_+_the_+_pipes_+_in_+_the_+_attached_+_pair
*CAT: n
*SEM: orRel[rel=one_+_of_+_the_+_pipes_+_in_+_the_+_attached_+_pair]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: direction
*CAT: n
*SEM: unaryRel[rel=direction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: direction
*CAT: n
*SEM: twoRel[rel=direction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: direction
*CAT: n
*SEM: twoRel[rel=direction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: direction
*CAT: n
*SEM: orRel[rel=direction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0504
*CAT: n
*SEM: unaryRel[rel=abs_+_0504]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0504
*CAT: n
*SEM: twoRel[rel=abs_+_0504]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0504
*CAT: n
*SEM: twoRel[rel=abs_+_0504]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0504
*CAT: n
*SEM: orRel[rel=abs_+_0504]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_attachment_-_backslash_-_fixation_+_point
*CAT: n
*SEM: unaryRel[rel=g-route_+_attachment_-_backslash_-_fixation_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_attachment_-_backslash_-_fixation_+_point
*CAT: n
*SEM: twoRel[rel=g-route_+_attachment_-_backslash_-_fixation_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_attachment_-_backslash_-_fixation_+_point
*CAT: n
*SEM: twoRel[rel=g-route_+_attachment_-_backslash_-_fixation_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_attachment_-_backslash_-_fixation_+_point
*CAT: n
*SEM: orRel[rel=g-route_+_attachment_-_backslash_-_fixation_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: derivation
*CAT: n
*SEM: unaryRel[rel=derivation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: derivation
*CAT: n
*SEM: twoRel[rel=derivation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: derivation
*CAT: n
*SEM: twoRel[rel=derivation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: derivation
*CAT: n
*SEM: orRel[rel=derivation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pa6.6
*CAT: n
*SEM: unaryRel[rel=pa6.6]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pa6.6
*CAT: n
*SEM: twoRel[rel=pa6.6]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pa6.6
*CAT: n
*SEM: twoRel[rel=pa6.6]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pa6.6
*CAT: n
*SEM: orRel[rel=pa6.6]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1020_+_grommet
*CAT: n
*SEM: unaryRel[rel=abs_+_1020_+_grommet]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1020_+_grommet
*CAT: n
*SEM: twoRel[rel=abs_+_1020_+_grommet]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1020_+_grommet
*CAT: n
*SEM: twoRel[rel=abs_+_1020_+_grommet]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1020_+_grommet
*CAT: n
*SEM: orRel[rel=abs_+_1020_+_grommet]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_aluminium_+_pipes_+_unions
*CAT: n
*SEM: unaryRel[rel=two_+_aluminium_+_pipes_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_aluminium_+_pipes_+_unions
*CAT: n
*SEM: twoRel[rel=two_+_aluminium_+_pipes_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_aluminium_+_pipes_+_unions
*CAT: n
*SEM: twoRel[rel=two_+_aluminium_+_pipes_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_aluminium_+_pipes_+_unions
*CAT: n
*SEM: orRel[rel=two_+_aluminium_+_pipes_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cantilever_+_arm_+_to
*CAT: n
*SEM: unaryRel[rel=cantilever_+_arm_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cantilever_+_arm_+_to
*CAT: n
*SEM: twoRel[rel=cantilever_+_arm_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cantilever_+_arm_+_to
*CAT: n
*SEM: twoRel[rel=cantilever_+_arm_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cantilever_+_arm_+_to
*CAT: n
*SEM: orRel[rel=cantilever_+_arm_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness
*CAT: n
*SEM: unaryRel[rel=surface_+_roughness]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness
*CAT: n
*SEM: twoRel[rel=surface_+_roughness]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness
*CAT: n
*SEM: twoRel[rel=surface_+_roughness]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness
*CAT: n
*SEM: orRel[rel=surface_+_roughness]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 152mm
*CAT: n
*SEM: unaryRel[rel=152mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 152mm
*CAT: n
*SEM: twoRel[rel=152mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 152mm
*CAT: n
*SEM: twoRel[rel=152mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 152mm
*CAT: n
*SEM: orRel[rel=152mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connecting_+_flexible_+_hose_+_to
*CAT: n
*SEM: unaryRel[rel=connecting_+_flexible_+_hose_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connecting_+_flexible_+_hose_+_to
*CAT: n
*SEM: twoRel[rel=connecting_+_flexible_+_hose_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connecting_+_flexible_+_hose_+_to
*CAT: n
*SEM: twoRel[rel=connecting_+_flexible_+_hose_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connecting_+_flexible_+_hose_+_to
*CAT: n
*SEM: orRel[rel=connecting_+_flexible_+_hose_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_color
*CAT: n
*SEM: unaryRel[rel=different_+_color]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_color
*CAT: n
*SEM: twoRel[rel=different_+_color]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_color
*CAT: n
*SEM: twoRel[rel=different_+_color]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_color
*CAT: n
*SEM: orRel[rel=different_+_color]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1.44_+_inches
*CAT: n
*SEM: unaryRel[rel=1.44_+_inches]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1.44_+_inches
*CAT: n
*SEM: twoRel[rel=1.44_+_inches]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1.44_+_inches
*CAT: n
*SEM: twoRel[rel=1.44_+_inches]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1.44_+_inches
*CAT: n
*SEM: orRel[rel=1.44_+_inches]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: and_+_electr._+_protection_+_on_+_the_+_pipe
*CAT: n
*SEM: unaryRel[rel=and_+_electr._+_protection_+_on_+_the_+_pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: and_+_electr._+_protection_+_on_+_the_+_pipe
*CAT: n
*SEM: twoRel[rel=and_+_electr._+_protection_+_on_+_the_+_pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: and_+_electr._+_protection_+_on_+_the_+_pipe
*CAT: n
*SEM: twoRel[rel=and_+_electr._+_protection_+_on_+_the_+_pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: and_+_electr._+_protection_+_on_+_the_+_pipe
*CAT: n
*SEM: orRel[rel=and_+_electr._+_protection_+_on_+_the_+_pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_cone_+_angle
*CAT: n
*SEM: unaryRel[rel=maximum_+_cone_+_angle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_cone_+_angle
*CAT: n
*SEM: twoRel[rel=maximum_+_cone_+_angle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_cone_+_angle
*CAT: n
*SEM: twoRel[rel=maximum_+_cone_+_angle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_cone_+_angle
*CAT: n
*SEM: orRel[rel=maximum_+_cone_+_angle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundles.or
*CAT: n
*SEM: unaryRel[rel=bundles.or]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundles.or
*CAT: n
*SEM: twoRel[rel=bundles.or]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundles.or
*CAT: n
*SEM: twoRel[rel=bundles.or]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundles.or
*CAT: n
*SEM: orRel[rel=bundles.or]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceways
*CAT: n
*SEM: unaryRel[rel=raceways]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceways
*CAT: n
*SEM: twoRel[rel=raceways]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceways
*CAT: n
*SEM: twoRel[rel=raceways]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceways
*CAT: n
*SEM: orRel[rel=raceways]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: way_+_that_+_they_+_will_+_not_+_receive_+_loads_+_due
*CAT: n
*SEM: unaryRel[rel=way_+_that_+_they_+_will_+_not_+_receive_+_loads_+_due]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: way_+_that_+_they_+_will_+_not_+_receive_+_loads_+_due
*CAT: n
*SEM: twoRel[rel=way_+_that_+_they_+_will_+_not_+_receive_+_loads_+_due]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: way_+_that_+_they_+_will_+_not_+_receive_+_loads_+_due
*CAT: n
*SEM: twoRel[rel=way_+_that_+_they_+_will_+_not_+_receive_+_loads_+_due]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: way_+_that_+_they_+_will_+_not_+_receive_+_loads_+_due
*CAT: n
*SEM: orRel[rel=way_+_that_+_they_+_will_+_not_+_receive_+_loads_+_due]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp_+_as
*CAT: n
*SEM: unaryRel[rel=clamp_+_as]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp_+_as
*CAT: n
*SEM: twoRel[rel=clamp_+_as]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp_+_as
*CAT: n
*SEM: twoRel[rel=clamp_+_as]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp_+_as
*CAT: n
*SEM: orRel[rel=clamp_+_as]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_equipment
*CAT: n
*SEM: unaryRel[rel=any_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_equipment
*CAT: n
*SEM: twoRel[rel=any_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_equipment
*CAT: n
*SEM: twoRel[rel=any_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_equipment
*CAT: n
*SEM: orRel[rel=any_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-__+_optical_+_cable_+_''
*CAT: n
*SEM: unaryRel[rel=_-_invcomma_-__+_optical_+_cable_+_'']
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-__+_optical_+_cable_+_''
*CAT: n
*SEM: twoRel[rel=_-_invcomma_-__+_optical_+_cable_+_'']
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-__+_optical_+_cable_+_''
*CAT: n
*SEM: twoRel[rel=_-_invcomma_-__+_optical_+_cable_+_'']
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-__+_optical_+_cable_+_''
*CAT: n
*SEM: orRel[rel=_-_invcomma_-__+_optical_+_cable_+_'']
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blue_+_background_+_abs_+_0724_+_label_+_on_+_structure_+_printed_+_in_+_blackor
*CAT: n
*SEM: unaryRel[rel=blue_+_background_+_abs_+_0724_+_label_+_on_+_structure_+_printed_+_in_+_blackor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blue_+_background_+_abs_+_0724_+_label_+_on_+_structure_+_printed_+_in_+_blackor
*CAT: n
*SEM: twoRel[rel=blue_+_background_+_abs_+_0724_+_label_+_on_+_structure_+_printed_+_in_+_blackor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blue_+_background_+_abs_+_0724_+_label_+_on_+_structure_+_printed_+_in_+_blackor
*CAT: n
*SEM: twoRel[rel=blue_+_background_+_abs_+_0724_+_label_+_on_+_structure_+_printed_+_in_+_blackor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blue_+_background_+_abs_+_0724_+_label_+_on_+_structure_+_printed_+_in_+_blackor
*CAT: n
*SEM: orRel[rel=blue_+_background_+_abs_+_0724_+_label_+_on_+_structure_+_printed_+_in_+_blackor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_one_+_side
*CAT: n
*SEM: unaryRel[rel=on_+_one_+_side]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_one_+_side
*CAT: n
*SEM: twoRel[rel=on_+_one_+_side]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_one_+_side
*CAT: n
*SEM: twoRel[rel=on_+_one_+_side]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_one_+_side
*CAT: n
*SEM: orRel[rel=on_+_one_+_side]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dimensions
*CAT: n
*SEM: unaryRel[rel=dimensions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dimensions
*CAT: n
*SEM: twoRel[rel=dimensions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dimensions
*CAT: n
*SEM: twoRel[rel=dimensions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dimensions
*CAT: n
*SEM: orRel[rel=dimensions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2-hole_+_bulkhead_+_unions
*CAT: n
*SEM: unaryRel[rel=2-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2-hole_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=2-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2-hole_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=2-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2-hole_+_bulkhead_+_unions
*CAT: n
*SEM: orRel[rel=2-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0073_+_pressure
*CAT: n
*SEM: unaryRel[rel=asne0073_+_pressure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0073_+_pressure
*CAT: n
*SEM: twoRel[rel=asne0073_+_pressure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0073_+_pressure
*CAT: n
*SEM: twoRel[rel=asne0073_+_pressure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0073_+_pressure
*CAT: n
*SEM: orRel[rel=asne0073_+_pressure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maintenance_+_operations
*CAT: n
*SEM: unaryRel[rel=maintenance_+_operations]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maintenance_+_operations
*CAT: n
*SEM: twoRel[rel=maintenance_+_operations]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maintenance_+_operations
*CAT: n
*SEM: twoRel[rel=maintenance_+_operations]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maintenance_+_operations
*CAT: n
*SEM: orRel[rel=maintenance_+_operations]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1
*CAT: n
*SEM: unaryRel[rel=1]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1
*CAT: n
*SEM: twoRel[rel=1]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1
*CAT: n
*SEM: twoRel[rel=1]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1
*CAT: n
*SEM: orRel[rel=1]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: union
*CAT: n
*SEM: unaryRel[rel=union]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: union
*CAT: n
*SEM: twoRel[rel=union]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: union
*CAT: n
*SEM: twoRel[rel=union]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: union
*CAT: n
*SEM: orRel[rel=union]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_bf_+_type_+_cable
*CAT: n
*SEM: unaryRel[rel=flexible_+_bf_+_type_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_bf_+_type_+_cable
*CAT: n
*SEM: twoRel[rel=flexible_+_bf_+_type_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_bf_+_type_+_cable
*CAT: n
*SEM: twoRel[rel=flexible_+_bf_+_type_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_bf_+_type_+_cable
*CAT: n
*SEM: orRel[rel=flexible_+_bf_+_type_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_sketch
*CAT: n
*SEM: unaryRel[rel=network_+_sketch]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_sketch
*CAT: n
*SEM: twoRel[rel=network_+_sketch]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_sketch
*CAT: n
*SEM: twoRel[rel=network_+_sketch]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_sketch
*CAT: n
*SEM: orRel[rel=network_+_sketch]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_clamp-block
*CAT: n
*SEM: twoRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_clamp-block
*CAT: n
*SEM: twoRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_clamp-block
*CAT: n
*SEM: orRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_operation._+_they
*CAT: n
*SEM: unaryRel[rel=equipment_+_operation._+_they]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_operation._+_they
*CAT: n
*SEM: twoRel[rel=equipment_+_operation._+_they]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_operation._+_they
*CAT: n
*SEM: twoRel[rel=equipment_+_operation._+_they]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_operation._+_they
*CAT: n
*SEM: orRel[rel=equipment_+_operation._+_they]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_rectangular_+_connector
*CAT: n
*SEM: unaryRel[rel=unused_+_rectangular_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_rectangular_+_connector
*CAT: n
*SEM: twoRel[rel=unused_+_rectangular_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_rectangular_+_connector
*CAT: n
*SEM: twoRel[rel=unused_+_rectangular_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_rectangular_+_connector
*CAT: n
*SEM: orRel[rel=unused_+_rectangular_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontally_+_in_+_relation
*CAT: n
*SEM: unaryRel[rel=horizontally_+_in_+_relation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontally_+_in_+_relation
*CAT: n
*SEM: twoRel[rel=horizontally_+_in_+_relation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontally_+_in_+_relation
*CAT: n
*SEM: twoRel[rel=horizontally_+_in_+_relation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontally_+_in_+_relation
*CAT: n
*SEM: orRel[rel=horizontally_+_in_+_relation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937210_+_heat
*CAT: n
*SEM: unaryRel[rel=nsa937210_+_heat]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937210_+_heat
*CAT: n
*SEM: twoRel[rel=nsa937210_+_heat]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937210_+_heat
*CAT: n
*SEM: twoRel[rel=nsa937210_+_heat]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937210_+_heat
*CAT: n
*SEM: orRel[rel=nsa937210_+_heat]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_fuselage
*CAT: n
*SEM: unaryRel[rel=max_+_80_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_fuselage]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_fuselage
*CAT: n
*SEM: twoRel[rel=max_+_80_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_fuselage]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_fuselage
*CAT: n
*SEM: twoRel[rel=max_+_80_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_fuselage]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_fuselage
*CAT: n
*SEM: orRel[rel=max_+_80_-_percent_-__+_fillrate_+_including_+_20_-_percent_-__+_capacity_+_of_+_growth_+_in_+_fuselage]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: subject_+_to_+_water_+_hammer
*CAT: n
*SEM: unaryRel[rel=subject_+_to_+_water_+_hammer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: subject_+_to_+_water_+_hammer
*CAT: n
*SEM: twoRel[rel=subject_+_to_+_water_+_hammer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: subject_+_to_+_water_+_hammer
*CAT: n
*SEM: twoRel[rel=subject_+_to_+_water_+_hammer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: subject_+_to_+_water_+_hammer
*CAT: n
*SEM: orRel[rel=subject_+_to_+_water_+_hammer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_zone
*CAT: n
*SEM: unaryRel[rel=pressurized_+_zone]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_zone
*CAT: n
*SEM: twoRel[rel=pressurized_+_zone]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_zone
*CAT: n
*SEM: twoRel[rel=pressurized_+_zone]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_zone
*CAT: n
*SEM: orRel[rel=pressurized_+_zone]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic
*CAT: n
*SEM: unaryRel[rel=plastic]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic
*CAT: n
*SEM: twoRel[rel=plastic]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic
*CAT: n
*SEM: twoRel[rel=plastic]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic
*CAT: n
*SEM: orRel[rel=plastic]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: para-aramid
*CAT: n
*SEM: unaryRel[rel=para-aramid]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: para-aramid
*CAT: n
*SEM: twoRel[rel=para-aramid]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: para-aramid
*CAT: n
*SEM: twoRel[rel=para-aramid]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: para-aramid
*CAT: n
*SEM: orRel[rel=para-aramid]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2083_+_combi_+_bracket
*CAT: n
*SEM: unaryRel[rel=abs2083_+_combi_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2083_+_combi_+_bracket
*CAT: n
*SEM: twoRel[rel=abs2083_+_combi_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2083_+_combi_+_bracket
*CAT: n
*SEM: twoRel[rel=abs2083_+_combi_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2083_+_combi_+_bracket
*CAT: n
*SEM: orRel[rel=abs2083_+_combi_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bottom_+_right_+_corner
*CAT: n
*SEM: unaryRel[rel=bottom_+_right_+_corner]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bottom_+_right_+_corner
*CAT: n
*SEM: twoRel[rel=bottom_+_right_+_corner]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bottom_+_right_+_corner
*CAT: n
*SEM: twoRel[rel=bottom_+_right_+_corner]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bottom_+_right_+_corner
*CAT: n
*SEM: orRel[rel=bottom_+_right_+_corner]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_to
*CAT: n
*SEM: unaryRel[rel=harness_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_to
*CAT: n
*SEM: twoRel[rel=harness_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_to
*CAT: n
*SEM: twoRel[rel=harness_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_to
*CAT: n
*SEM: orRel[rel=harness_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646-11_+_stowage_+_receptable
*CAT: n
*SEM: unaryRel[rel=en_+_3646-11_+_stowage_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646-11_+_stowage_+_receptable
*CAT: n
*SEM: twoRel[rel=en_+_3646-11_+_stowage_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646-11_+_stowage_+_receptable
*CAT: n
*SEM: twoRel[rel=en_+_3646-11_+_stowage_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646-11_+_stowage_+_receptable
*CAT: n
*SEM: orRel[rel=en_+_3646-11_+_stowage_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movements
*CAT: n
*SEM: unaryRel[rel=movements]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movements
*CAT: n
*SEM: twoRel[rel=movements]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movements
*CAT: n
*SEM: twoRel[rel=movements]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movements
*CAT: n
*SEM: orRel[rel=movements]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block_+_when_+_clearance
*CAT: n
*SEM: unaryRel[rel=clamp-block_+_when_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block_+_when_+_clearance
*CAT: n
*SEM: twoRel[rel=clamp-block_+_when_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block_+_when_+_clearance
*CAT: n
*SEM: twoRel[rel=clamp-block_+_when_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block_+_when_+_clearance
*CAT: n
*SEM: orRel[rel=clamp-block_+_when_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_types
*CAT: n
*SEM: unaryRel[rel=other_+_types]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_types
*CAT: n
*SEM: twoRel[rel=other_+_types]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_types
*CAT: n
*SEM: twoRel[rel=other_+_types]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_types
*CAT: n
*SEM: orRel[rel=other_+_types]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_clamp
*CAT: n
*SEM: unaryRel[rel=two_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_clamp
*CAT: n
*SEM: twoRel[rel=two_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_clamp
*CAT: n
*SEM: twoRel[rel=two_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_clamp
*CAT: n
*SEM: orRel[rel=two_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamps
*CAT: n
*SEM: unaryRel[rel=saddle_+_clamps]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamps
*CAT: n
*SEM: twoRel[rel=saddle_+_clamps]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamps
*CAT: n
*SEM: twoRel[rel=saddle_+_clamps]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamps
*CAT: n
*SEM: orRel[rel=saddle_+_clamps]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_pipe_+_couplings
*CAT: n
*SEM: unaryRel[rel=removable_+_pipe_+_couplings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_pipe_+_couplings
*CAT: n
*SEM: twoRel[rel=removable_+_pipe_+_couplings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_pipe_+_couplings
*CAT: n
*SEM: twoRel[rel=removable_+_pipe_+_couplings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_pipe_+_couplings
*CAT: n
*SEM: orRel[rel=removable_+_pipe_+_couplings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: associated_+_pipes
*CAT: n
*SEM: unaryRel[rel=associated_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: associated_+_pipes
*CAT: n
*SEM: twoRel[rel=associated_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: associated_+_pipes
*CAT: n
*SEM: twoRel[rel=associated_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: associated_+_pipes
*CAT: n
*SEM: orRel[rel=associated_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_immersion_+_zones
*CAT: n
*SEM: unaryRel[rel=fuel_+_immersion_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_immersion_+_zones
*CAT: n
*SEM: twoRel[rel=fuel_+_immersion_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_immersion_+_zones
*CAT: n
*SEM: twoRel[rel=fuel_+_immersion_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_immersion_+_zones
*CAT: n
*SEM: orRel[rel=fuel_+_immersion_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_when
*CAT: n
*SEM: unaryRel[rel=mechanical_+_protection_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_when
*CAT: n
*SEM: twoRel[rel=mechanical_+_protection_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_when
*CAT: n
*SEM: twoRel[rel=mechanical_+_protection_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_when
*CAT: n
*SEM: orRel[rel=mechanical_+_protection_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_removable_+_end
*CAT: n
*SEM: unaryRel[rel=least_+_one_+_removable_+_end]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_removable_+_end
*CAT: n
*SEM: twoRel[rel=least_+_one_+_removable_+_end]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_removable_+_end
*CAT: n
*SEM: twoRel[rel=least_+_one_+_removable_+_end]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_removable_+_end
*CAT: n
*SEM: orRel[rel=least_+_one_+_removable_+_end]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device_+_to
*CAT: n
*SEM: unaryRel[rel=attachment_+_device_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device_+_to
*CAT: n
*SEM: twoRel[rel=attachment_+_device_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device_+_to
*CAT: n
*SEM: twoRel[rel=attachment_+_device_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device_+_to
*CAT: n
*SEM: orRel[rel=attachment_+_device_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0513_+_backshell_+_nsa5516or_+_abs1339
*CAT: n
*SEM: unaryRel[rel=abs0513_+_backshell_+_nsa5516or_+_abs1339]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0513_+_backshell_+_nsa5516or_+_abs1339
*CAT: n
*SEM: twoRel[rel=abs0513_+_backshell_+_nsa5516or_+_abs1339]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0513_+_backshell_+_nsa5516or_+_abs1339
*CAT: n
*SEM: twoRel[rel=abs0513_+_backshell_+_nsa5516or_+_abs1339]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0513_+_backshell_+_nsa5516or_+_abs1339
*CAT: n
*SEM: orRel[rel=abs0513_+_backshell_+_nsa5516or_+_abs1339]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top
*CAT: n
*SEM: unaryRel[rel=top]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top
*CAT: n
*SEM: twoRel[rel=top]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top
*CAT: n
*SEM: twoRel[rel=top]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top
*CAT: n
*SEM: orRel[rel=top]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frames
*CAT: n
*SEM: unaryRel[rel=frames]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frames
*CAT: n
*SEM: twoRel[rel=frames]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frames
*CAT: n
*SEM: twoRel[rel=frames]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frames
*CAT: n
*SEM: orRel[rel=frames]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_6_+_mm
*CAT: n
*SEM: unaryRel[rel=least_+_6_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_6_+_mm
*CAT: n
*SEM: twoRel[rel=least_+_6_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_6_+_mm
*CAT: n
*SEM: twoRel[rel=least_+_6_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_6_+_mm
*CAT: n
*SEM: orRel[rel=least_+_6_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: boot_+_top
*CAT: n
*SEM: unaryRel[rel=boot_+_top]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: boot_+_top
*CAT: n
*SEM: twoRel[rel=boot_+_top]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: boot_+_top
*CAT: n
*SEM: twoRel[rel=boot_+_top]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: boot_+_top
*CAT: n
*SEM: orRel[rel=boot_+_top]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_f
*CAT: n
*SEM: unaryRel[rel=col_obj1_f]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_f
*CAT: n
*SEM: twoRel[rel=col_obj1_f]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_f
*CAT: n
*SEM: twoRel[rel=col_obj1_f]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_f
*CAT: n
*SEM: orRel[rel=col_obj1_f]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: min_+_d_-_greaterThan_-__-_equalto_-_2mm
*CAT: n
*SEM: unaryRel[rel=min_+_d_-_greaterThan_-__-_equalto_-_2mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: min_+_d_-_greaterThan_-__-_equalto_-_2mm
*CAT: n
*SEM: twoRel[rel=min_+_d_-_greaterThan_-__-_equalto_-_2mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: min_+_d_-_greaterThan_-__-_equalto_-_2mm
*CAT: n
*SEM: twoRel[rel=min_+_d_-_greaterThan_-__-_equalto_-_2mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: min_+_d_-_greaterThan_-__-_equalto_-_2mm
*CAT: n
*SEM: orRel[rel=min_+_d_-_greaterThan_-__-_equalto_-_2mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2121_+_high_+_pressure_+_lines
*CAT: n
*SEM: unaryRel[rel=abs2121_+_high_+_pressure_+_lines]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2121_+_high_+_pressure_+_lines
*CAT: n
*SEM: twoRel[rel=abs2121_+_high_+_pressure_+_lines]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2121_+_high_+_pressure_+_lines
*CAT: n
*SEM: twoRel[rel=abs2121_+_high_+_pressure_+_lines]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2121_+_high_+_pressure_+_lines
*CAT: n
*SEM: orRel[rel=abs2121_+_high_+_pressure_+_lines]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolt_+_to
*CAT: n
*SEM: unaryRel[rel=bolt_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolt_+_to
*CAT: n
*SEM: twoRel[rel=bolt_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolt_+_to
*CAT: n
*SEM: twoRel[rel=bolt_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolt_+_to
*CAT: n
*SEM: orRel[rel=bolt_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: â€œu_+_shapeâ€
*CAT: n
*SEM: unaryRel[rel=â€œu_+_shapeâ€]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: â€œu_+_shapeâ€
*CAT: n
*SEM: twoRel[rel=â€œu_+_shapeâ€]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: â€œu_+_shapeâ€
*CAT: n
*SEM: twoRel[rel=â€œu_+_shapeâ€]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: â€œu_+_shapeâ€
*CAT: n
*SEM: orRel[rel=â€œu_+_shapeâ€]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1088_+_bobbin
*CAT: n
*SEM: unaryRel[rel=abs1088_+_bobbin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1088_+_bobbin
*CAT: n
*SEM: twoRel[rel=abs1088_+_bobbin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1088_+_bobbin
*CAT: n
*SEM: twoRel[rel=abs1088_+_bobbin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1088_+_bobbin
*CAT: n
*SEM: orRel[rel=abs1088_+_bobbin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: system_+_responsible
*CAT: n
*SEM: unaryRel[rel=system_+_responsible]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: system_+_responsible
*CAT: n
*SEM: twoRel[rel=system_+_responsible]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: system_+_responsible
*CAT: n
*SEM: twoRel[rel=system_+_responsible]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: system_+_responsible
*CAT: n
*SEM: orRel[rel=system_+_responsible]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_12
*CAT: n
*SEM: unaryRel[rel=to_+_12]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_12
*CAT: n
*SEM: twoRel[rel=to_+_12]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_12
*CAT: n
*SEM: twoRel[rel=to_+_12]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_12
*CAT: n
*SEM: orRel[rel=to_+_12]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: main_+_routings
*CAT: n
*SEM: unaryRel[rel=main_+_routings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: main_+_routings
*CAT: n
*SEM: twoRel[rel=main_+_routings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: main_+_routings
*CAT: n
*SEM: twoRel[rel=main_+_routings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: main_+_routings
*CAT: n
*SEM: orRel[rel=main_+_routings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: several_+_wires_+_containing_+_at_+_least_+_one_+_safety_+_wire._+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_or_-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=several_+_wires_+_containing_+_at_+_least_+_one_+_safety_+_wire._+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_or_-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: several_+_wires_+_containing_+_at_+_least_+_one_+_safety_+_wire._+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_or_-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=several_+_wires_+_containing_+_at_+_least_+_one_+_safety_+_wire._+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_or_-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: several_+_wires_+_containing_+_at_+_least_+_one_+_safety_+_wire._+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_or_-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=several_+_wires_+_containing_+_at_+_least_+_one_+_safety_+_wire._+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_or_-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: several_+_wires_+_containing_+_at_+_least_+_one_+_safety_+_wire._+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_or_-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=several_+_wires_+_containing_+_at_+_least_+_one_+_safety_+_wire._+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_or_-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_+_to_+_both_+_sides
*CAT: n
*SEM: unaryRel[rel=25mm_+_to_+_both_+_sides]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_+_to_+_both_+_sides
*CAT: n
*SEM: twoRel[rel=25mm_+_to_+_both_+_sides]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_+_to_+_both_+_sides
*CAT: n
*SEM: twoRel[rel=25mm_+_to_+_both_+_sides]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_+_to_+_both_+_sides
*CAT: n
*SEM: orRel[rel=25mm_+_to_+_both_+_sides]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter
*CAT: n
*SEM: unaryRel[rel=diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter
*CAT: n
*SEM: twoRel[rel=diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter
*CAT: n
*SEM: twoRel[rel=diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter
*CAT: n
*SEM: orRel[rel=diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_label
*CAT: n
*SEM: unaryRel[rel=identification_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_label
*CAT: n
*SEM: twoRel[rel=identification_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_label
*CAT: n
*SEM: twoRel[rel=identification_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_label
*CAT: n
*SEM: orRel[rel=identification_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 74
*CAT: n
*SEM: unaryRel[rel=74]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 74
*CAT: n
*SEM: twoRel[rel=74]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 74
*CAT: n
*SEM: twoRel[rel=74]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 74
*CAT: n
*SEM: orRel[rel=74]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: convergent
*CAT: n
*SEM: unaryRel[rel=convergent]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: convergent
*CAT: n
*SEM: twoRel[rel=convergent]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: convergent
*CAT: n
*SEM: twoRel[rel=convergent]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: convergent
*CAT: n
*SEM: orRel[rel=convergent]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-__+_single_+_hole_+_''_+_type_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=_-_invcomma_-__+_single_+_hole_+_''_+_type_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-__+_single_+_hole_+_''_+_type_+_clamp-block
*CAT: n
*SEM: twoRel[rel=_-_invcomma_-__+_single_+_hole_+_''_+_type_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-__+_single_+_hole_+_''_+_type_+_clamp-block
*CAT: n
*SEM: twoRel[rel=_-_invcomma_-__+_single_+_hole_+_''_+_type_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-__+_single_+_hole_+_''_+_type_+_clamp-block
*CAT: n
*SEM: orRel[rel=_-_invcomma_-__+_single_+_hole_+_''_+_type_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_areasor_+_underneath
*CAT: n
*SEM: unaryRel[rel=hazardous_+_areasor_+_underneath]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_areasor_+_underneath
*CAT: n
*SEM: twoRel[rel=hazardous_+_areasor_+_underneath]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_areasor_+_underneath
*CAT: n
*SEM: twoRel[rel=hazardous_+_areasor_+_underneath]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_areasor_+_underneath
*CAT: n
*SEM: orRel[rel=hazardous_+_areasor_+_underneath]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935510_+_protective_+_bobbin
*CAT: n
*SEM: unaryRel[rel=nsa_+_935510_+_protective_+_bobbin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935510_+_protective_+_bobbin
*CAT: n
*SEM: twoRel[rel=nsa_+_935510_+_protective_+_bobbin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935510_+_protective_+_bobbin
*CAT: n
*SEM: twoRel[rel=nsa_+_935510_+_protective_+_bobbin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935510_+_protective_+_bobbin
*CAT: n
*SEM: orRel[rel=nsa_+_935510_+_protective_+_bobbin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: visible
*CAT: n
*SEM: unaryRel[rel=visible]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: visible
*CAT: n
*SEM: twoRel[rel=visible]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: visible
*CAT: n
*SEM: twoRel[rel=visible]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: visible
*CAT: n
*SEM: orRel[rel=visible]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: soldered_+_connection
*CAT: n
*SEM: unaryRel[rel=soldered_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: soldered_+_connection
*CAT: n
*SEM: twoRel[rel=soldered_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: soldered_+_connection
*CAT: n
*SEM: twoRel[rel=soldered_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: soldered_+_connection
*CAT: n
*SEM: orRel[rel=soldered_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s_+_routes
*CAT: n
*SEM: unaryRel[rel=s_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s_+_routes
*CAT: n
*SEM: twoRel[rel=s_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s_+_routes
*CAT: n
*SEM: twoRel[rel=s_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s_+_routes
*CAT: n
*SEM: orRel[rel=s_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rg20_+_code
*CAT: n
*SEM: unaryRel[rel=rg20_+_code]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rg20_+_code
*CAT: n
*SEM: twoRel[rel=rg20_+_code]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rg20_+_code
*CAT: n
*SEM: twoRel[rel=rg20_+_code]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rg20_+_code
*CAT: n
*SEM: orRel[rel=rg20_+_code]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=dedicated_+_virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=dedicated_+_virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=dedicated_+_virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_
*CAT: n
*SEM: orRel[rel=dedicated_+_virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_cross_+_connection
*CAT: n
*SEM: unaryRel[rel=prevent_+_cross_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_cross_+_connection
*CAT: n
*SEM: twoRel[rel=prevent_+_cross_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_cross_+_connection
*CAT: n
*SEM: twoRel[rel=prevent_+_cross_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_cross_+_connection
*CAT: n
*SEM: orRel[rel=prevent_+_cross_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead_+_connections
*CAT: n
*SEM: unaryRel[rel=bulkhead_+_connections]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead_+_connections
*CAT: n
*SEM: twoRel[rel=bulkhead_+_connections]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead_+_connections
*CAT: n
*SEM: twoRel[rel=bulkhead_+_connections]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead_+_connections
*CAT: n
*SEM: orRel[rel=bulkhead_+_connections]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings
*CAT: n
*SEM: unaryRel[rel=pipe_+_routings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings
*CAT: n
*SEM: twoRel[rel=pipe_+_routings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings
*CAT: n
*SEM: twoRel[rel=pipe_+_routings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings
*CAT: n
*SEM: orRel[rel=pipe_+_routings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_antenna_+_removal
*CAT: n
*SEM: unaryRel[rel=allow_+_antenna_+_removal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_antenna_+_removal
*CAT: n
*SEM: twoRel[rel=allow_+_antenna_+_removal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_antenna_+_removal
*CAT: n
*SEM: twoRel[rel=allow_+_antenna_+_removal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_antenna_+_removal
*CAT: n
*SEM: orRel[rel=allow_+_antenna_+_removal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plugs
*CAT: n
*SEM: unaryRel[rel=plugs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plugs
*CAT: n
*SEM: twoRel[rel=plugs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plugs
*CAT: n
*SEM: twoRel[rel=plugs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plugs
*CAT: n
*SEM: orRel[rel=plugs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection
*CAT: n
*SEM: unaryRel[rel=mechanical_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection
*CAT: n
*SEM: twoRel[rel=mechanical_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection
*CAT: n
*SEM: twoRel[rel=mechanical_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection
*CAT: n
*SEM: orRel[rel=mechanical_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_color
*CAT: n
*SEM: unaryRel[rel=pink_+_color]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_color
*CAT: n
*SEM: twoRel[rel=pink_+_color]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_color
*CAT: n
*SEM: twoRel[rel=pink_+_color]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_color
*CAT: n
*SEM: orRel[rel=pink_+_color]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1571_+_pressure_+_seal
*CAT: n
*SEM: unaryRel[rel=abs_+_1571_+_pressure_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1571_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=abs_+_1571_+_pressure_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1571_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=abs_+_1571_+_pressure_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1571_+_pressure_+_seal
*CAT: n
*SEM: orRel[rel=abs_+_1571_+_pressure_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_characteristics_+_concerning_+_the_+_used_+_material
*CAT: n
*SEM: unaryRel[rel=zone_+_characteristics_+_concerning_+_the_+_used_+_material]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_characteristics_+_concerning_+_the_+_used_+_material
*CAT: n
*SEM: twoRel[rel=zone_+_characteristics_+_concerning_+_the_+_used_+_material]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_characteristics_+_concerning_+_the_+_used_+_material
*CAT: n
*SEM: twoRel[rel=zone_+_characteristics_+_concerning_+_the_+_used_+_material]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_characteristics_+_concerning_+_the_+_used_+_material
*CAT: n
*SEM: orRel[rel=zone_+_characteristics_+_concerning_+_the_+_used_+_material]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 35mm_+_each_+_end
*CAT: n
*SEM: unaryRel[rel=35mm_+_each_+_end]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 35mm_+_each_+_end
*CAT: n
*SEM: twoRel[rel=35mm_+_each_+_end]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 35mm_+_each_+_end
*CAT: n
*SEM: twoRel[rel=35mm_+_each_+_end]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 35mm_+_each_+_end
*CAT: n
*SEM: orRel[rel=35mm_+_each_+_end]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_zones_+_class_+_se
*CAT: n
*SEM: unaryRel[rel=hot_+_zones_+_class_+_se]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_zones_+_class_+_se
*CAT: n
*SEM: twoRel[rel=hot_+_zones_+_class_+_se]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_zones_+_class_+_se
*CAT: n
*SEM: twoRel[rel=hot_+_zones_+_class_+_se]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_zones_+_class_+_se
*CAT: n
*SEM: orRel[rel=hot_+_zones_+_class_+_se]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_area
*CAT: n
*SEM: unaryRel[rel=pressurized_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_area
*CAT: n
*SEM: twoRel[rel=pressurized_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_area
*CAT: n
*SEM: twoRel[rel=pressurized_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_area
*CAT: n
*SEM: orRel[rel=pressurized_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 269
*CAT: n
*SEM: unaryRel[rel=269]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 269
*CAT: n
*SEM: twoRel[rel=269]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 269
*CAT: n
*SEM: twoRel[rel=269]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 269
*CAT: n
*SEM: orRel[rel=269]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance
*CAT: n
*SEM: unaryRel[rel=clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance
*CAT: n
*SEM: twoRel[rel=clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance
*CAT: n
*SEM: twoRel[rel=clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance
*CAT: n
*SEM: orRel[rel=clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tolerance
*CAT: n
*SEM: unaryRel[rel=tolerance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tolerance
*CAT: n
*SEM: twoRel[rel=tolerance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tolerance
*CAT: n
*SEM: twoRel[rel=tolerance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tolerance
*CAT: n
*SEM: orRel[rel=tolerance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system_+_at_+_all_+_times
*CAT: n
*SEM: unaryRel[rel=bleed_+_air_+_system_+_at_+_all_+_times]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system_+_at_+_all_+_times
*CAT: n
*SEM: twoRel[rel=bleed_+_air_+_system_+_at_+_all_+_times]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system_+_at_+_all_+_times
*CAT: n
*SEM: twoRel[rel=bleed_+_air_+_system_+_at_+_all_+_times]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system_+_at_+_all_+_times
*CAT: n
*SEM: orRel[rel=bleed_+_air_+_system_+_at_+_all_+_times]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjacent_+_structure
*CAT: n
*SEM: unaryRel[rel=adjacent_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjacent_+_structure
*CAT: n
*SEM: twoRel[rel=adjacent_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjacent_+_structure
*CAT: n
*SEM: twoRel[rel=adjacent_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjacent_+_structure
*CAT: n
*SEM: orRel[rel=adjacent_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sagging
*CAT: n
*SEM: unaryRel[rel=sagging]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sagging
*CAT: n
*SEM: twoRel[rel=sagging]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sagging
*CAT: n
*SEM: twoRel[rel=sagging]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sagging
*CAT: n
*SEM: orRel[rel=sagging]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_b_+_e.g._+_nsa_+_5516_+_cbf
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_type_+_b_+_e.g._+_nsa_+_5516_+_cbf]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_b_+_e.g._+_nsa_+_5516_+_cbf
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_b_+_e.g._+_nsa_+_5516_+_cbf]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_b_+_e.g._+_nsa_+_5516_+_cbf
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_b_+_e.g._+_nsa_+_5516_+_cbf]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_b_+_e.g._+_nsa_+_5516_+_cbf
*CAT: n
*SEM: orRel[rel=p-clamp_+_type_+_b_+_e.g._+_nsa_+_5516_+_cbf]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_torsion
*CAT: n
*SEM: unaryRel[rel=no_+_torsion]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_torsion
*CAT: n
*SEM: twoRel[rel=no_+_torsion]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_torsion
*CAT: n
*SEM: twoRel[rel=no_+_torsion]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_torsion
*CAT: n
*SEM: orRel[rel=no_+_torsion]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: floor_+_panel
*CAT: n
*SEM: unaryRel[rel=floor_+_panel]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: floor_+_panel
*CAT: n
*SEM: twoRel[rel=floor_+_panel]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: floor_+_panel
*CAT: n
*SEM: twoRel[rel=floor_+_panel]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: floor_+_panel
*CAT: n
*SEM: orRel[rel=floor_+_panel]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_fear_+_of_+_chaffing
*CAT: n
*SEM: unaryRel[rel=e.g._+_fear_+_of_+_chaffing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_fear_+_of_+_chaffing
*CAT: n
*SEM: twoRel[rel=e.g._+_fear_+_of_+_chaffing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_fear_+_of_+_chaffing
*CAT: n
*SEM: twoRel[rel=e.g._+_fear_+_of_+_chaffing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_fear_+_of_+_chaffing
*CAT: n
*SEM: orRel[rel=e.g._+_fear_+_of_+_chaffing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_bent_+_radius
*CAT: n
*SEM: unaryRel[rel=small_+_bent_+_radius]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_bent_+_radius
*CAT: n
*SEM: twoRel[rel=small_+_bent_+_radius]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_bent_+_radius
*CAT: n
*SEM: twoRel[rel=small_+_bent_+_radius]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_bent_+_radius
*CAT: n
*SEM: orRel[rel=small_+_bent_+_radius]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guiding_+_device_+_when_+_movement
*CAT: n
*SEM: unaryRel[rel=guiding_+_device_+_when_+_movement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guiding_+_device_+_when_+_movement
*CAT: n
*SEM: twoRel[rel=guiding_+_device_+_when_+_movement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guiding_+_device_+_when_+_movement
*CAT: n
*SEM: twoRel[rel=guiding_+_device_+_when_+_movement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guiding_+_device_+_when_+_movement
*CAT: n
*SEM: orRel[rel=guiding_+_device_+_when_+_movement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: butterfly_+_configuration
*CAT: n
*SEM: unaryRel[rel=butterfly_+_configuration]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: butterfly_+_configuration
*CAT: n
*SEM: twoRel[rel=butterfly_+_configuration]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: butterfly_+_configuration
*CAT: n
*SEM: twoRel[rel=butterfly_+_configuration]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: butterfly_+_configuration
*CAT: n
*SEM: orRel[rel=butterfly_+_configuration]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_wire_+_of_+_gauge_+_20
*CAT: n
*SEM: unaryRel[rel=1_+_wire_+_of_+_gauge_+_20]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_wire_+_of_+_gauge_+_20
*CAT: n
*SEM: twoRel[rel=1_+_wire_+_of_+_gauge_+_20]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_wire_+_of_+_gauge_+_20
*CAT: n
*SEM: twoRel[rel=1_+_wire_+_of_+_gauge_+_20]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_wire_+_of_+_gauge_+_20
*CAT: n
*SEM: orRel[rel=1_+_wire_+_of_+_gauge_+_20]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_identification_+_marking_+_on_+_each_+_end_+_of_+_every_+_pipe
*CAT: n
*SEM: unaryRel[rel=an_+_identification_+_marking_+_on_+_each_+_end_+_of_+_every_+_pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_identification_+_marking_+_on_+_each_+_end_+_of_+_every_+_pipe
*CAT: n
*SEM: twoRel[rel=an_+_identification_+_marking_+_on_+_each_+_end_+_of_+_every_+_pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_identification_+_marking_+_on_+_each_+_end_+_of_+_every_+_pipe
*CAT: n
*SEM: twoRel[rel=an_+_identification_+_marking_+_on_+_each_+_end_+_of_+_every_+_pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_identification_+_marking_+_on_+_each_+_end_+_of_+_every_+_pipe
*CAT: n
*SEM: orRel[rel=an_+_identification_+_marking_+_on_+_each_+_end_+_of_+_every_+_pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_934710_+_pressure_+_seal
*CAT: n
*SEM: unaryRel[rel=nsa_+_934710_+_pressure_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_934710_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=nsa_+_934710_+_pressure_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_934710_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=nsa_+_934710_+_pressure_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_934710_+_pressure_+_seal
*CAT: n
*SEM: orRel[rel=nsa_+_934710_+_pressure_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3646_+_class_+_rs
*CAT: n
*SEM: unaryRel[rel=3646_+_class_+_rs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3646_+_class_+_rs
*CAT: n
*SEM: twoRel[rel=3646_+_class_+_rs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3646_+_class_+_rs
*CAT: n
*SEM: twoRel[rel=3646_+_class_+_rs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3646_+_class_+_rs
*CAT: n
*SEM: orRel[rel=3646_+_class_+_rs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: x_+_direction
*CAT: n
*SEM: unaryRel[rel=x_+_direction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: x_+_direction
*CAT: n
*SEM: twoRel[rel=x_+_direction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: x_+_direction
*CAT: n
*SEM: twoRel[rel=x_+_direction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: x_+_direction
*CAT: n
*SEM: orRel[rel=x_+_direction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_over_+_length_+_in_+_defined_+_area
*CAT: n
*SEM: unaryRel[rel=repair_+_over_+_length_+_in_+_defined_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_over_+_length_+_in_+_defined_+_area
*CAT: n
*SEM: twoRel[rel=repair_+_over_+_length_+_in_+_defined_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_over_+_length_+_in_+_defined_+_area
*CAT: n
*SEM: twoRel[rel=repair_+_over_+_length_+_in_+_defined_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_over_+_length_+_in_+_defined_+_area
*CAT: n
*SEM: orRel[rel=repair_+_over_+_length_+_in_+_defined_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: assist_+_in_+_the_+_creation_+_of_+_the_+_union_+_between_+_the_+_two_+_sections
*CAT: n
*SEM: unaryRel[rel=assist_+_in_+_the_+_creation_+_of_+_the_+_union_+_between_+_the_+_two_+_sections]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: assist_+_in_+_the_+_creation_+_of_+_the_+_union_+_between_+_the_+_two_+_sections
*CAT: n
*SEM: twoRel[rel=assist_+_in_+_the_+_creation_+_of_+_the_+_union_+_between_+_the_+_two_+_sections]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: assist_+_in_+_the_+_creation_+_of_+_the_+_union_+_between_+_the_+_two_+_sections
*CAT: n
*SEM: twoRel[rel=assist_+_in_+_the_+_creation_+_of_+_the_+_union_+_between_+_the_+_two_+_sections]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: assist_+_in_+_the_+_creation_+_of_+_the_+_union_+_between_+_the_+_two_+_sections
*CAT: n
*SEM: orRel[rel=assist_+_in_+_the_+_creation_+_of_+_the_+_union_+_between_+_the_+_two_+_sections]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses_+_to
*CAT: n
*SEM: unaryRel[rel=flexible_+_hoses_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses_+_to
*CAT: n
*SEM: twoRel[rel=flexible_+_hoses_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses_+_to
*CAT: n
*SEM: twoRel[rel=flexible_+_hoses_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses_+_to
*CAT: n
*SEM: orRel[rel=flexible_+_hoses_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_long
*CAT: n
*SEM: unaryRel[rel=as_+_long]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_long
*CAT: n
*SEM: twoRel[rel=as_+_long]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_long
*CAT: n
*SEM: twoRel[rel=as_+_long]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_long
*CAT: n
*SEM: orRel[rel=as_+_long]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_of_+_derivation
*CAT: n
*SEM: unaryRel[rel=position_+_of_+_derivation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_of_+_derivation
*CAT: n
*SEM: twoRel[rel=position_+_of_+_derivation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_of_+_derivation
*CAT: n
*SEM: twoRel[rel=position_+_of_+_derivation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_of_+_derivation
*CAT: n
*SEM: orRel[rel=position_+_of_+_derivation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: datum
*CAT: n
*SEM: unaryRel[rel=datum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: datum
*CAT: n
*SEM: twoRel[rel=datum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: datum
*CAT: n
*SEM: twoRel[rel=datum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: datum
*CAT: n
*SEM: orRel[rel=datum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_section_+_interfaces
*CAT: n
*SEM: unaryRel[rel=aircraft_+_section_+_interfaces]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_section_+_interfaces
*CAT: n
*SEM: twoRel[rel=aircraft_+_section_+_interfaces]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_section_+_interfaces
*CAT: n
*SEM: twoRel[rel=aircraft_+_section_+_interfaces]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_section_+_interfaces
*CAT: n
*SEM: orRel[rel=aircraft_+_section_+_interfaces]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_11_+_times_+_outer
*CAT: n
*SEM: unaryRel[rel=bend_+_11_+_times_+_outer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_11_+_times_+_outer
*CAT: n
*SEM: twoRel[rel=bend_+_11_+_times_+_outer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_11_+_times_+_outer
*CAT: n
*SEM: twoRel[rel=bend_+_11_+_times_+_outer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_11_+_times_+_outer
*CAT: n
*SEM: orRel[rel=bend_+_11_+_times_+_outer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: piping
*CAT: n
*SEM: unaryRel[rel=piping]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: piping
*CAT: n
*SEM: twoRel[rel=piping]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: piping
*CAT: n
*SEM: twoRel[rel=piping]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: piping
*CAT: n
*SEM: orRel[rel=piping]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detailed
*CAT: n
*SEM: unaryRel[rel=detailed]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detailed
*CAT: n
*SEM: twoRel[rel=detailed]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detailed
*CAT: n
*SEM: twoRel[rel=detailed]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detailed
*CAT: n
*SEM: orRel[rel=detailed]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5.0_+_inch._+_the
*CAT: n
*SEM: unaryRel[rel=5.0_+_inch._+_the]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5.0_+_inch._+_the
*CAT: n
*SEM: twoRel[rel=5.0_+_inch._+_the]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5.0_+_inch._+_the
*CAT: n
*SEM: twoRel[rel=5.0_+_inch._+_the]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5.0_+_inch._+_the
*CAT: n
*SEM: orRel[rel=5.0_+_inch._+_the]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_coupling
*CAT: n
*SEM: unaryRel[rel=flexible_+_coupling]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_coupling
*CAT: n
*SEM: twoRel[rel=flexible_+_coupling]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_coupling
*CAT: n
*SEM: twoRel[rel=flexible_+_coupling]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_coupling
*CAT: n
*SEM: orRel[rel=flexible_+_coupling]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pullback_+_area
*CAT: n
*SEM: unaryRel[rel=pullback_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pullback_+_area
*CAT: n
*SEM: twoRel[rel=pullback_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pullback_+_area
*CAT: n
*SEM: twoRel[rel=pullback_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pullback_+_area
*CAT: n
*SEM: orRel[rel=pullback_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 42v
*CAT: n
*SEM: unaryRel[rel=42v]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 42v
*CAT: n
*SEM: twoRel[rel=42v]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 42v
*CAT: n
*SEM: twoRel[rel=42v]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 42v
*CAT: n
*SEM: orRel[rel=42v]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: access
*CAT: n
*SEM: unaryRel[rel=access]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: access
*CAT: n
*SEM: twoRel[rel=access]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: access
*CAT: n
*SEM: twoRel[rel=access]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: access
*CAT: n
*SEM: orRel[rel=access]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: firgure_+_below
*CAT: n
*SEM: unaryRel[rel=firgure_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: firgure_+_below
*CAT: n
*SEM: twoRel[rel=firgure_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: firgure_+_below
*CAT: n
*SEM: twoRel[rel=firgure_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: firgure_+_below
*CAT: n
*SEM: orRel[rel=firgure_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_zone_+_to
*CAT: n
*SEM: unaryRel[rel=fuel_+_zone_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_zone_+_to
*CAT: n
*SEM: twoRel[rel=fuel_+_zone_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_zone_+_to
*CAT: n
*SEM: twoRel[rel=fuel_+_zone_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_zone_+_to
*CAT: n
*SEM: orRel[rel=fuel_+_zone_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zones_+_the_+_bundle
*CAT: n
*SEM: unaryRel[rel=zones_+_the_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zones_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=zones_+_the_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zones_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=zones_+_the_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zones_+_the_+_bundle
*CAT: n
*SEM: orRel[rel=zones_+_the_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lacing_+_tape
*CAT: n
*SEM: unaryRel[rel=lacing_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lacing_+_tape
*CAT: n
*SEM: twoRel[rel=lacing_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lacing_+_tape
*CAT: n
*SEM: twoRel[rel=lacing_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lacing_+_tape
*CAT: n
*SEM: orRel[rel=lacing_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_-_comma_-_2_+_micron
*CAT: n
*SEM: unaryRel[rel=3_-_comma_-_2_+_micron]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_-_comma_-_2_+_micron
*CAT: n
*SEM: twoRel[rel=3_-_comma_-_2_+_micron]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_-_comma_-_2_+_micron
*CAT: n
*SEM: twoRel[rel=3_-_comma_-_2_+_micron]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_-_comma_-_2_+_micron
*CAT: n
*SEM: orRel[rel=3_-_comma_-_2_+_micron]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_inside_+_of_+_connector_+_back_+_shellsor_+_in_+_dynamic_+_bundles_+__-_opensb_-_type_+_a
*CAT: n
*SEM: unaryRel[rel=or_+_inside_+_of_+_connector_+_back_+_shellsor_+_in_+_dynamic_+_bundles_+__-_opensb_-_type_+_a]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_inside_+_of_+_connector_+_back_+_shellsor_+_in_+_dynamic_+_bundles_+__-_opensb_-_type_+_a
*CAT: n
*SEM: twoRel[rel=or_+_inside_+_of_+_connector_+_back_+_shellsor_+_in_+_dynamic_+_bundles_+__-_opensb_-_type_+_a]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_inside_+_of_+_connector_+_back_+_shellsor_+_in_+_dynamic_+_bundles_+__-_opensb_-_type_+_a
*CAT: n
*SEM: twoRel[rel=or_+_inside_+_of_+_connector_+_back_+_shellsor_+_in_+_dynamic_+_bundles_+__-_opensb_-_type_+_a]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_inside_+_of_+_connector_+_back_+_shellsor_+_in_+_dynamic_+_bundles_+__-_opensb_-_type_+_a
*CAT: n
*SEM: orRel[rel=or_+_inside_+_of_+_connector_+_back_+_shellsor_+_in_+_dynamic_+_bundles_+__-_opensb_-_type_+_a]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: indicate_+_the_+_protection_+_needed_+_on_+_each_+_electrical_+_bonding_+_symbol
*CAT: n
*SEM: unaryRel[rel=indicate_+_the_+_protection_+_needed_+_on_+_each_+_electrical_+_bonding_+_symbol]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: indicate_+_the_+_protection_+_needed_+_on_+_each_+_electrical_+_bonding_+_symbol
*CAT: n
*SEM: twoRel[rel=indicate_+_the_+_protection_+_needed_+_on_+_each_+_electrical_+_bonding_+_symbol]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: indicate_+_the_+_protection_+_needed_+_on_+_each_+_electrical_+_bonding_+_symbol
*CAT: n
*SEM: twoRel[rel=indicate_+_the_+_protection_+_needed_+_on_+_each_+_electrical_+_bonding_+_symbol]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: indicate_+_the_+_protection_+_needed_+_on_+_each_+_electrical_+_bonding_+_symbol
*CAT: n
*SEM: orRel[rel=indicate_+_the_+_protection_+_needed_+_on_+_each_+_electrical_+_bonding_+_symbol]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_for_+_arinc
*CAT: n
*SEM: unaryRel[rel=connector_+_for_+_arinc]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_for_+_arinc
*CAT: n
*SEM: twoRel[rel=connector_+_for_+_arinc]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_for_+_arinc
*CAT: n
*SEM: twoRel[rel=connector_+_for_+_arinc]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_for_+_arinc
*CAT: n
*SEM: orRel[rel=connector_+_for_+_arinc]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distances
*CAT: n
*SEM: unaryRel[rel=distances]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distances
*CAT: n
*SEM: twoRel[rel=distances]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distances
*CAT: n
*SEM: twoRel[rel=distances]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distances
*CAT: n
*SEM: orRel[rel=distances]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hoses
*CAT: n
*SEM: unaryRel[rel=hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hoses
*CAT: n
*SEM: twoRel[rel=hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hoses
*CAT: n
*SEM: twoRel[rel=hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hoses
*CAT: n
*SEM: orRel[rel=hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: phase_+_b
*CAT: n
*SEM: unaryRel[rel=phase_+_b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: phase_+_b
*CAT: n
*SEM: twoRel[rel=phase_+_b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: phase_+_b
*CAT: n
*SEM: twoRel[rel=phase_+_b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: phase_+_b
*CAT: n
*SEM: orRel[rel=phase_+_b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: marking
*CAT: n
*SEM: unaryRel[rel=marking]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: marking
*CAT: n
*SEM: twoRel[rel=marking]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: marking
*CAT: n
*SEM: twoRel[rel=marking]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: marking
*CAT: n
*SEM: orRel[rel=marking]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5151d5-035
*CAT: n
*SEM: unaryRel[rel=abs5151d5-035]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5151d5-035
*CAT: n
*SEM: twoRel[rel=abs5151d5-035]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5151d5-035
*CAT: n
*SEM: twoRel[rel=abs5151d5-035]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5151d5-035
*CAT: n
*SEM: orRel[rel=abs5151d5-035]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific
*CAT: n
*SEM: unaryRel[rel=specific]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific
*CAT: n
*SEM: twoRel[rel=specific]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific
*CAT: n
*SEM: twoRel[rel=specific]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific
*CAT: n
*SEM: orRel[rel=specific]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_characters
*CAT: n
*SEM: unaryRel[rel=identification_+_characters]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_characters
*CAT: n
*SEM: twoRel[rel=identification_+_characters]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_characters
*CAT: n
*SEM: twoRel[rel=identification_+_characters]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_characters
*CAT: n
*SEM: orRel[rel=identification_+_characters]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_direction_-_colon_-__+_method_+_shown_+_in_+_case_+_2_+_of_+_figure_+_below
*CAT: n
*SEM: unaryRel[rel=same_+_direction_-_colon_-__+_method_+_shown_+_in_+_case_+_2_+_of_+_figure_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_direction_-_colon_-__+_method_+_shown_+_in_+_case_+_2_+_of_+_figure_+_below
*CAT: n
*SEM: twoRel[rel=same_+_direction_-_colon_-__+_method_+_shown_+_in_+_case_+_2_+_of_+_figure_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_direction_-_colon_-__+_method_+_shown_+_in_+_case_+_2_+_of_+_figure_+_below
*CAT: n
*SEM: twoRel[rel=same_+_direction_-_colon_-__+_method_+_shown_+_in_+_case_+_2_+_of_+_figure_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_direction_-_colon_-__+_method_+_shown_+_in_+_case_+_2_+_of_+_figure_+_below
*CAT: n
*SEM: orRel[rel=same_+_direction_-_colon_-__+_method_+_shown_+_in_+_case_+_2_+_of_+_figure_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_fixation_+_of_+_mobile_+_supports_+_on
*CAT: n
*SEM: unaryRel[rel=mechanical_+_fixation_+_of_+_mobile_+_supports_+_on]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_fixation_+_of_+_mobile_+_supports_+_on
*CAT: n
*SEM: twoRel[rel=mechanical_+_fixation_+_of_+_mobile_+_supports_+_on]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_fixation_+_of_+_mobile_+_supports_+_on
*CAT: n
*SEM: twoRel[rel=mechanical_+_fixation_+_of_+_mobile_+_supports_+_on]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_fixation_+_of_+_mobile_+_supports_+_on
*CAT: n
*SEM: orRel[rel=mechanical_+_fixation_+_of_+_mobile_+_supports_+_on]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_down_+_to_+_0.5_+_inch_+_diameter
*CAT: n
*SEM: unaryRel[rel=pipes_+_down_+_to_+_0.5_+_inch_+_diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_down_+_to_+_0.5_+_inch_+_diameter
*CAT: n
*SEM: twoRel[rel=pipes_+_down_+_to_+_0.5_+_inch_+_diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_down_+_to_+_0.5_+_inch_+_diameter
*CAT: n
*SEM: twoRel[rel=pipes_+_down_+_to_+_0.5_+_inch_+_diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_down_+_to_+_0.5_+_inch_+_diameter
*CAT: n
*SEM: orRel[rel=pipes_+_down_+_to_+_0.5_+_inch_+_diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hatracks
*CAT: n
*SEM: unaryRel[rel=hatracks]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hatracks
*CAT: n
*SEM: twoRel[rel=hatracks]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hatracks
*CAT: n
*SEM: twoRel[rel=hatracks]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hatracks
*CAT: n
*SEM: orRel[rel=hatracks]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_items
*CAT: n
*SEM: unaryRel[rel=electrical_+_items]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_items
*CAT: n
*SEM: twoRel[rel=electrical_+_items]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_items
*CAT: n
*SEM: twoRel[rel=electrical_+_items]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_items
*CAT: n
*SEM: orRel[rel=electrical_+_items]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: people_+_comfort
*CAT: n
*SEM: unaryRel[rel=people_+_comfort]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: people_+_comfort
*CAT: n
*SEM: twoRel[rel=people_+_comfort]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: people_+_comfort
*CAT: n
*SEM: twoRel[rel=people_+_comfort]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: people_+_comfort
*CAT: n
*SEM: orRel[rel=people_+_comfort]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_side._+_design
*CAT: n
*SEM: unaryRel[rel=pressurized_+_side._+_design]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_side._+_design
*CAT: n
*SEM: twoRel[rel=pressurized_+_side._+_design]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_side._+_design
*CAT: n
*SEM: twoRel[rel=pressurized_+_side._+_design]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_side._+_design
*CAT: n
*SEM: orRel[rel=pressurized_+_side._+_design]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_and
*CAT: n
*SEM: unaryRel[rel=v-support_+_and]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_and
*CAT: n
*SEM: twoRel[rel=v-support_+_and]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_and
*CAT: n
*SEM: twoRel[rel=v-support_+_and]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_and
*CAT: n
*SEM: orRel[rel=v-support_+_and]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: even_+_when_+_the_+_terminal_+_lug_+_orientation
*CAT: n
*SEM: unaryRel[rel=even_+_when_+_the_+_terminal_+_lug_+_orientation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: even_+_when_+_the_+_terminal_+_lug_+_orientation
*CAT: n
*SEM: twoRel[rel=even_+_when_+_the_+_terminal_+_lug_+_orientation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: even_+_when_+_the_+_terminal_+_lug_+_orientation
*CAT: n
*SEM: twoRel[rel=even_+_when_+_the_+_terminal_+_lug_+_orientation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: even_+_when_+_the_+_terminal_+_lug_+_orientation
*CAT: n
*SEM: orRel[rel=even_+_when_+_the_+_terminal_+_lug_+_orientation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hoses_+_in_+_supports_+_is_+_not_+_possible
*CAT: n
*SEM: unaryRel[rel=hoses_+_in_+_supports_+_is_+_not_+_possible]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hoses_+_in_+_supports_+_is_+_not_+_possible
*CAT: n
*SEM: twoRel[rel=hoses_+_in_+_supports_+_is_+_not_+_possible]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hoses_+_in_+_supports_+_is_+_not_+_possible
*CAT: n
*SEM: twoRel[rel=hoses_+_in_+_supports_+_is_+_not_+_possible]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hoses_+_in_+_supports_+_is_+_not_+_possible
*CAT: n
*SEM: orRel[rel=hoses_+_in_+_supports_+_is_+_not_+_possible]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness
*CAT: n
*SEM: unaryRel[rel=surface_+_roughness]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness
*CAT: n
*SEM: twoRel[rel=surface_+_roughness]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness
*CAT: n
*SEM: twoRel[rel=surface_+_roughness]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness
*CAT: n
*SEM: orRel[rel=surface_+_roughness]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: marking_+_stxx_-_opensb_-__+_e.g._+_st_+_6_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=marking_+_stxx_-_opensb_-__+_e.g._+_st_+_6_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: marking_+_stxx_-_opensb_-__+_e.g._+_st_+_6_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=marking_+_stxx_-_opensb_-__+_e.g._+_st_+_6_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: marking_+_stxx_-_opensb_-__+_e.g._+_st_+_6_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=marking_+_stxx_-_opensb_-__+_e.g._+_st_+_6_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: marking_+_stxx_-_opensb_-__+_e.g._+_st_+_6_-_closesb_-_
*CAT: n
*SEM: orRel[rel=marking_+_stxx_-_opensb_-__+_e.g._+_st_+_6_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_swaged_+_unions
*CAT: n
*SEM: unaryRel[rel=normal_+_swaged_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_swaged_+_unions
*CAT: n
*SEM: twoRel[rel=normal_+_swaged_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_swaged_+_unions
*CAT: n
*SEM: twoRel[rel=normal_+_swaged_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_swaged_+_unions
*CAT: n
*SEM: orRel[rel=normal_+_swaged_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_bundle
*CAT: n
*SEM: unaryRel[rel=more_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_bundle
*CAT: n
*SEM: twoRel[rel=more_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_bundle
*CAT: n
*SEM: twoRel[rel=more_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_bundle
*CAT: n
*SEM: orRel[rel=more_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_skin
*CAT: n
*SEM: unaryRel[rel=aircraft_+_skin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_skin
*CAT: n
*SEM: twoRel[rel=aircraft_+_skin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_skin
*CAT: n
*SEM: twoRel[rel=aircraft_+_skin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_skin
*CAT: n
*SEM: orRel[rel=aircraft_+_skin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm_+__-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-_10mm
*CAT: n
*SEM: unaryRel[rel=20mm_+__-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-_10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm_+__-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-_10mm
*CAT: n
*SEM: twoRel[rel=20mm_+__-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-_10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm_+__-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-_10mm
*CAT: n
*SEM: twoRel[rel=20mm_+__-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-_10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm_+__-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-_10mm
*CAT: n
*SEM: orRel[rel=20mm_+__-_greaterThan_-__-_equalto_-__+_d_+__-_greaterThan_-_10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuits
*CAT: n
*SEM: unaryRel[rel=circuits]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuits
*CAT: n
*SEM: twoRel[rel=circuits]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuits
*CAT: n
*SEM: twoRel[rel=circuits]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuits
*CAT: n
*SEM: orRel[rel=circuits]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1571_+_pressure
*CAT: n
*SEM: unaryRel[rel=abs1571_+_pressure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1571_+_pressure
*CAT: n
*SEM: twoRel[rel=abs1571_+_pressure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1571_+_pressure
*CAT: n
*SEM: twoRel[rel=abs1571_+_pressure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1571_+_pressure
*CAT: n
*SEM: orRel[rel=abs1571_+_pressure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e_+_routes
*CAT: n
*SEM: unaryRel[rel=e_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e_+_routes
*CAT: n
*SEM: twoRel[rel=e_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e_+_routes
*CAT: n
*SEM: twoRel[rel=e_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e_+_routes
*CAT: n
*SEM: orRel[rel=e_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_cable
*CAT: n
*SEM: unaryRel[rel=mechanical_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_cable
*CAT: n
*SEM: twoRel[rel=mechanical_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_cable
*CAT: n
*SEM: twoRel[rel=mechanical_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_cable
*CAT: n
*SEM: orRel[rel=mechanical_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_cut_+_outs
*CAT: n
*SEM: unaryRel[rel=dedicated_+_cut_+_outs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_cut_+_outs
*CAT: n
*SEM: twoRel[rel=dedicated_+_cut_+_outs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_cut_+_outs
*CAT: n
*SEM: twoRel[rel=dedicated_+_cut_+_outs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_cut_+_outs
*CAT: n
*SEM: orRel[rel=dedicated_+_cut_+_outs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_damage
*CAT: n
*SEM: unaryRel[rel=prevent_+_damage]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_damage
*CAT: n
*SEM: twoRel[rel=prevent_+_damage]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_damage
*CAT: n
*SEM: twoRel[rel=prevent_+_damage]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_damage
*CAT: n
*SEM: orRel[rel=prevent_+_damage]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_thread_+_unions
*CAT: n
*SEM: unaryRel[rel=double_+_thread_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_thread_+_unions
*CAT: n
*SEM: twoRel[rel=double_+_thread_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_thread_+_unions
*CAT: n
*SEM: twoRel[rel=double_+_thread_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_thread_+_unions
*CAT: n
*SEM: orRel[rel=double_+_thread_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: “sisd_par_1344_+__+_f-dp-29-7.2.4-0012-0001-a”
*CAT: n
*SEM: unaryRel[rel=“sisd_par_1344_+__+_f-dp-29-7.2.4-0012-0001-a”]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: “sisd_par_1344_+__+_f-dp-29-7.2.4-0012-0001-a”
*CAT: n
*SEM: twoRel[rel=“sisd_par_1344_+__+_f-dp-29-7.2.4-0012-0001-a”]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: “sisd_par_1344_+__+_f-dp-29-7.2.4-0012-0001-a”
*CAT: n
*SEM: twoRel[rel=“sisd_par_1344_+__+_f-dp-29-7.2.4-0012-0001-a”]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: “sisd_par_1344_+__+_f-dp-29-7.2.4-0012-0001-a”
*CAT: n
*SEM: orRel[rel=“sisd_par_1344_+__+_f-dp-29-7.2.4-0012-0001-a”]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_additional_+_terminal_+_lug
*CAT: n
*SEM: unaryRel[rel=one_+_additional_+_terminal_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_additional_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=one_+_additional_+_terminal_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_additional_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=one_+_additional_+_terminal_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_additional_+_terminal_+_lug
*CAT: n
*SEM: orRel[rel=one_+_additional_+_terminal_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_attachment
*CAT: n
*SEM: unaryRel[rel=bundle_+_attachment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_attachment
*CAT: n
*SEM: twoRel[rel=bundle_+_attachment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_attachment
*CAT: n
*SEM: twoRel[rel=bundle_+_attachment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_attachment
*CAT: n
*SEM: orRel[rel=bundle_+_attachment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cargo_+_floor
*CAT: n
*SEM: unaryRel[rel=cargo_+_floor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cargo_+_floor
*CAT: n
*SEM: twoRel[rel=cargo_+_floor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cargo_+_floor
*CAT: n
*SEM: twoRel[rel=cargo_+_floor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cargo_+_floor
*CAT: n
*SEM: orRel[rel=cargo_+_floor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_damage
*CAT: n
*SEM: unaryRel[rel=bundle_+_damage]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_damage
*CAT: n
*SEM: twoRel[rel=bundle_+_damage]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_damage
*CAT: n
*SEM: twoRel[rel=bundle_+_damage]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_damage
*CAT: n
*SEM: orRel[rel=bundle_+_damage]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_main_+_routing
*CAT: n
*SEM: unaryRel[rel=other_+_main_+_routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_main_+_routing
*CAT: n
*SEM: twoRel[rel=other_+_main_+_routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_main_+_routing
*CAT: n
*SEM: twoRel[rel=other_+_main_+_routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_main_+_routing
*CAT: n
*SEM: orRel[rel=other_+_main_+_routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 500_+_mm_+_regardless
*CAT: n
*SEM: unaryRel[rel=500_+_mm_+_regardless]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 500_+_mm_+_regardless
*CAT: n
*SEM: twoRel[rel=500_+_mm_+_regardless]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 500_+_mm_+_regardless
*CAT: n
*SEM: twoRel[rel=500_+_mm_+_regardless]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 500_+_mm_+_regardless
*CAT: n
*SEM: orRel[rel=500_+_mm_+_regardless]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adequately
*CAT: n
*SEM: unaryRel[rel=adequately]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adequately
*CAT: n
*SEM: twoRel[rel=adequately]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adequately
*CAT: n
*SEM: twoRel[rel=adequately]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adequately
*CAT: n
*SEM: orRel[rel=adequately]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolts
*CAT: n
*SEM: unaryRel[rel=bolts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolts
*CAT: n
*SEM: twoRel[rel=bolts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolts
*CAT: n
*SEM: twoRel[rel=bolts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolts
*CAT: n
*SEM: orRel[rel=bolts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_bracket
*CAT: n
*SEM: unaryRel[rel=standard_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_bracket
*CAT: n
*SEM: twoRel[rel=standard_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_bracket
*CAT: n
*SEM: twoRel[rel=standard_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_bracket
*CAT: n
*SEM: orRel[rel=standard_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve
*CAT: n
*SEM: unaryRel[rel=nsa_+_937201_+_identification_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve
*CAT: n
*SEM: orRel[rel=nsa_+_937201_+_identification_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: smal_+_gauge_+_wire
*CAT: n
*SEM: unaryRel[rel=smal_+_gauge_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: smal_+_gauge_+_wire
*CAT: n
*SEM: twoRel[rel=smal_+_gauge_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: smal_+_gauge_+_wire
*CAT: n
*SEM: twoRel[rel=smal_+_gauge_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: smal_+_gauge_+_wire
*CAT: n
*SEM: orRel[rel=smal_+_gauge_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relays
*CAT: n
*SEM: unaryRel[rel=relays]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relays
*CAT: n
*SEM: twoRel[rel=relays]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relays
*CAT: n
*SEM: twoRel[rel=relays]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relays
*CAT: n
*SEM: orRel[rel=relays]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_straight_+_length
*CAT: n
*SEM: unaryRel[rel=minimum_+_straight_+_length]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_straight_+_length
*CAT: n
*SEM: twoRel[rel=minimum_+_straight_+_length]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_straight_+_length
*CAT: n
*SEM: twoRel[rel=minimum_+_straight_+_length]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_straight_+_length
*CAT: n
*SEM: orRel[rel=minimum_+_straight_+_length]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_clearance_+_definition
*CAT: n
*SEM: unaryRel[rel=basic_+_clearance_+_definition]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_clearance_+_definition
*CAT: n
*SEM: twoRel[rel=basic_+_clearance_+_definition]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_clearance_+_definition
*CAT: n
*SEM: twoRel[rel=basic_+_clearance_+_definition]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_clearance_+_definition
*CAT: n
*SEM: orRel[rel=basic_+_clearance_+_definition]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_accessibility
*CAT: n
*SEM: unaryRel[rel=sufficient_+_accessibility]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_accessibility
*CAT: n
*SEM: twoRel[rel=sufficient_+_accessibility]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_accessibility
*CAT: n
*SEM: twoRel[rel=sufficient_+_accessibility]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_accessibility
*CAT: n
*SEM: orRel[rel=sufficient_+_accessibility]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 12
*CAT: n
*SEM: unaryRel[rel=12]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 12
*CAT: n
*SEM: twoRel[rel=12]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 12
*CAT: n
*SEM: twoRel[rel=12]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 12
*CAT: n
*SEM: orRel[rel=12]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_receptable
*CAT: n
*SEM: unaryRel[rel=fixed_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_receptable
*CAT: n
*SEM: twoRel[rel=fixed_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_receptable
*CAT: n
*SEM: twoRel[rel=fixed_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_receptable
*CAT: n
*SEM: orRel[rel=fixed_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawing
*CAT: n
*SEM: unaryRel[rel=drawing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawing
*CAT: n
*SEM: twoRel[rel=drawing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawing
*CAT: n
*SEM: twoRel[rel=drawing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawing
*CAT: n
*SEM: orRel[rel=drawing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraided_+_bundle
*CAT: n
*SEM: unaryRel[rel=overbraided_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraided_+_bundle
*CAT: n
*SEM: twoRel[rel=overbraided_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraided_+_bundle
*CAT: n
*SEM: twoRel[rel=overbraided_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraided_+_bundle
*CAT: n
*SEM: orRel[rel=overbraided_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration_+_zones_+_class_+_rs_+_is_+_mandatory
*CAT: n
*SEM: unaryRel[rel=vibration_+_zones_+_class_+_rs_+_is_+_mandatory]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration_+_zones_+_class_+_rs_+_is_+_mandatory
*CAT: n
*SEM: twoRel[rel=vibration_+_zones_+_class_+_rs_+_is_+_mandatory]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration_+_zones_+_class_+_rs_+_is_+_mandatory
*CAT: n
*SEM: twoRel[rel=vibration_+_zones_+_class_+_rs_+_is_+_mandatory]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration_+_zones_+_class_+_rs_+_is_+_mandatory
*CAT: n
*SEM: orRel[rel=vibration_+_zones_+_class_+_rs_+_is_+_mandatory]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: applicable_+_torque
*CAT: n
*SEM: unaryRel[rel=applicable_+_torque]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: applicable_+_torque
*CAT: n
*SEM: twoRel[rel=applicable_+_torque]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: applicable_+_torque
*CAT: n
*SEM: twoRel[rel=applicable_+_torque]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: applicable_+_torque
*CAT: n
*SEM: orRel[rel=applicable_+_torque]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adaptation_+_on_+_dedicated_+_support
*CAT: n
*SEM: unaryRel[rel=adaptation_+_on_+_dedicated_+_support]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adaptation_+_on_+_dedicated_+_support
*CAT: n
*SEM: twoRel[rel=adaptation_+_on_+_dedicated_+_support]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adaptation_+_on_+_dedicated_+_support
*CAT: n
*SEM: twoRel[rel=adaptation_+_on_+_dedicated_+_support]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adaptation_+_on_+_dedicated_+_support
*CAT: n
*SEM: orRel[rel=adaptation_+_on_+_dedicated_+_support]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch_+_below
*CAT: n
*SEM: unaryRel[rel=sketch_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch_+_below
*CAT: n
*SEM: twoRel[rel=sketch_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch_+_below
*CAT: n
*SEM: twoRel[rel=sketch_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch_+_below
*CAT: n
*SEM: orRel[rel=sketch_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_multiway_+_connector
*CAT: n
*SEM: unaryRel[rel=optical_+_multiway_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_multiway_+_connector
*CAT: n
*SEM: twoRel[rel=optical_+_multiway_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_multiway_+_connector
*CAT: n
*SEM: twoRel[rel=optical_+_multiway_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_multiway_+_connector
*CAT: n
*SEM: orRel[rel=optical_+_multiway_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0774
*CAT: n
*SEM: unaryRel[rel=abs0774]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0774
*CAT: n
*SEM: twoRel[rel=abs0774]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0774
*CAT: n
*SEM: twoRel[rel=abs0774]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0774
*CAT: n
*SEM: orRel[rel=abs0774]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: preferred_+_solution
*CAT: n
*SEM: unaryRel[rel=preferred_+_solution]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: preferred_+_solution
*CAT: n
*SEM: twoRel[rel=preferred_+_solution]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: preferred_+_solution
*CAT: n
*SEM: twoRel[rel=preferred_+_solution]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: preferred_+_solution
*CAT: n
*SEM: orRel[rel=preferred_+_solution]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_10mm
*CAT: n
*SEM: unaryRel[rel=20mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_10mm
*CAT: n
*SEM: twoRel[rel=20mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_10mm
*CAT: n
*SEM: twoRel[rel=20mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_10mm
*CAT: n
*SEM: orRel[rel=20mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: etc
*CAT: n
*SEM: unaryRel[rel=etc]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: etc
*CAT: n
*SEM: twoRel[rel=etc]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: etc
*CAT: n
*SEM: twoRel[rel=etc]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: etc
*CAT: n
*SEM: orRel[rel=etc]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 250mm
*CAT: n
*SEM: unaryRel[rel=250mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 250mm
*CAT: n
*SEM: twoRel[rel=250mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 250mm
*CAT: n
*SEM: twoRel[rel=250mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 250mm
*CAT: n
*SEM: orRel[rel=250mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: order
*CAT: n
*SEM: unaryRel[rel=order]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: order
*CAT: n
*SEM: twoRel[rel=order]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: order
*CAT: n
*SEM: twoRel[rel=order]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: order
*CAT: n
*SEM: orRel[rel=order]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tank_+_boundaries
*CAT: n
*SEM: unaryRel[rel=tank_+_boundaries]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tank_+_boundaries
*CAT: n
*SEM: twoRel[rel=tank_+_boundaries]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tank_+_boundaries
*CAT: n
*SEM: twoRel[rel=tank_+_boundaries]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tank_+_boundaries
*CAT: n
*SEM: orRel[rel=tank_+_boundaries]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_s-route
*CAT: n
*SEM: unaryRel[rel=non_+_pre_+_stressed_+_s-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_s-route
*CAT: n
*SEM: twoRel[rel=non_+_pre_+_stressed_+_s-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_s-route
*CAT: n
*SEM: twoRel[rel=non_+_pre_+_stressed_+_s-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_s-route
*CAT: n
*SEM: orRel[rel=non_+_pre_+_stressed_+_s-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length
*CAT: n
*SEM: unaryRel[rel=length]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length
*CAT: n
*SEM: twoRel[rel=length]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length
*CAT: n
*SEM: twoRel[rel=length]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length
*CAT: n
*SEM: orRel[rel=length]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal
*CAT: n
*SEM: unaryRel[rel=terminal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal
*CAT: n
*SEM: twoRel[rel=terminal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal
*CAT: n
*SEM: twoRel[rel=terminal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal
*CAT: n
*SEM: orRel[rel=terminal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap
*CAT: n
*SEM: unaryRel[rel=loap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap
*CAT: n
*SEM: twoRel[rel=loap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap
*CAT: n
*SEM: twoRel[rel=loap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap
*CAT: n
*SEM: orRel[rel=loap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense-line
*CAT: n
*SEM: unaryRel[rel=sense-line]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense-line
*CAT: n
*SEM: twoRel[rel=sense-line]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense-line
*CAT: n
*SEM: twoRel[rel=sense-line]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense-line
*CAT: n
*SEM: orRel[rel=sense-line]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_bracket
*CAT: n
*SEM: unaryRel[rel=sufficient_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_bracket
*CAT: n
*SEM: twoRel[rel=sufficient_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_bracket
*CAT: n
*SEM: twoRel[rel=sufficient_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_bracket
*CAT: n
*SEM: orRel[rel=sufficient_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: constant_+_clearance
*CAT: n
*SEM: unaryRel[rel=constant_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: constant_+_clearance
*CAT: n
*SEM: twoRel[rel=constant_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: constant_+_clearance
*CAT: n
*SEM: twoRel[rel=constant_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: constant_+_clearance
*CAT: n
*SEM: orRel[rel=constant_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 100_-_degrees_-_c
*CAT: n
*SEM: unaryRel[rel=100_-_degrees_-_c]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 100_-_degrees_-_c
*CAT: n
*SEM: twoRel[rel=100_-_degrees_-_c]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 100_-_degrees_-_c
*CAT: n
*SEM: twoRel[rel=100_-_degrees_-_c]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 100_-_degrees_-_c
*CAT: n
*SEM: orRel[rel=100_-_degrees_-_c]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_structure_+_as_+_well
*CAT: n
*SEM: unaryRel[rel=structure_+_structure_+_as_+_well]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_structure_+_as_+_well
*CAT: n
*SEM: twoRel[rel=structure_+_structure_+_as_+_well]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_structure_+_as_+_well
*CAT: n
*SEM: twoRel[rel=structure_+_structure_+_as_+_well]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_structure_+_as_+_well
*CAT: n
*SEM: orRel[rel=structure_+_structure_+_as_+_well]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each
*CAT: n
*SEM: unaryRel[rel=each]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each
*CAT: n
*SEM: twoRel[rel=each]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each
*CAT: n
*SEM: twoRel[rel=each]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each
*CAT: n
*SEM: orRel[rel=each]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_fire_+_resistant_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: unaryRel[rel=non_+_fire_+_resistant_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_fire_+_resistant_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: twoRel[rel=non_+_fire_+_resistant_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_fire_+_resistant_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: twoRel[rel=non_+_fire_+_resistant_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_fire_+_resistant_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: orRel[rel=non_+_fire_+_resistant_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_in_+_vertical_+_direction
*CAT: n
*SEM: unaryRel[rel=cut_+_of_+_wire_+_in_+_vertical_+_direction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_in_+_vertical_+_direction
*CAT: n
*SEM: twoRel[rel=cut_+_of_+_wire_+_in_+_vertical_+_direction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_in_+_vertical_+_direction
*CAT: n
*SEM: twoRel[rel=cut_+_of_+_wire_+_in_+_vertical_+_direction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_in_+_vertical_+_direction
*CAT: n
*SEM: orRel[rel=cut_+_of_+_wire_+_in_+_vertical_+_direction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937901_+_virtual_+_modul_+_rail_+_module_+_1
*CAT: n
*SEM: unaryRel[rel=nsa937901_+_virtual_+_modul_+_rail_+_module_+_1]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937901_+_virtual_+_modul_+_rail_+_module_+_1
*CAT: n
*SEM: twoRel[rel=nsa937901_+_virtual_+_modul_+_rail_+_module_+_1]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937901_+_virtual_+_modul_+_rail_+_module_+_1
*CAT: n
*SEM: twoRel[rel=nsa937901_+_virtual_+_modul_+_rail_+_module_+_1]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937901_+_virtual_+_modul_+_rail_+_module_+_1
*CAT: n
*SEM: orRel[rel=nsa937901_+_virtual_+_modul_+_rail_+_module_+_1]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: togehter
*CAT: n
*SEM: unaryRel[rel=togehter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: togehter
*CAT: n
*SEM: twoRel[rel=togehter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: togehter
*CAT: n
*SEM: twoRel[rel=togehter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: togehter
*CAT: n
*SEM: orRel[rel=togehter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: xm
*CAT: n
*SEM: unaryRel[rel=xm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: xm
*CAT: n
*SEM: twoRel[rel=xm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: xm
*CAT: n
*SEM: twoRel[rel=xm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: xm
*CAT: n
*SEM: orRel[rel=xm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_tubes
*CAT: n
*SEM: unaryRel[rel=support_+_tubes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_tubes
*CAT: n
*SEM: twoRel[rel=support_+_tubes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_tubes
*CAT: n
*SEM: twoRel[rel=support_+_tubes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_tubes
*CAT: n
*SEM: orRel[rel=support_+_tubes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hidden_+_zones
*CAT: n
*SEM: unaryRel[rel=hidden_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hidden_+_zones
*CAT: n
*SEM: twoRel[rel=hidden_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hidden_+_zones
*CAT: n
*SEM: twoRel[rel=hidden_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hidden_+_zones
*CAT: n
*SEM: orRel[rel=hidden_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: number
*CAT: n
*SEM: unaryRel[rel=number]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: number
*CAT: n
*SEM: twoRel[rel=number]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: number
*CAT: n
*SEM: twoRel[rel=number]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: number
*CAT: n
*SEM: orRel[rel=number]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_each_+_single_+_bundle
*CAT: n
*SEM: unaryRel[rel=harness_+_each_+_single_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_each_+_single_+_bundle
*CAT: n
*SEM: twoRel[rel=harness_+_each_+_single_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_each_+_single_+_bundle
*CAT: n
*SEM: twoRel[rel=harness_+_each_+_single_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_each_+_single_+_bundle
*CAT: n
*SEM: orRel[rel=harness_+_each_+_single_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell_+_size
*CAT: n
*SEM: unaryRel[rel=back_+_shell_+_size]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell_+_size
*CAT: n
*SEM: twoRel[rel=back_+_shell_+_size]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell_+_size
*CAT: n
*SEM: twoRel[rel=back_+_shell_+_size]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell_+_size
*CAT: n
*SEM: orRel[rel=back_+_shell_+_size]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: segregation
*CAT: n
*SEM: unaryRel[rel=segregation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: segregation
*CAT: n
*SEM: twoRel[rel=segregation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: segregation
*CAT: n
*SEM: twoRel[rel=segregation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: segregation
*CAT: n
*SEM: orRel[rel=segregation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_e.g._+_nsa_+_5516bd
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_e.g._+_nsa_+_5516bd]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_e.g._+_nsa_+_5516bd
*CAT: n
*SEM: twoRel[rel=p-clamp_+_e.g._+_nsa_+_5516bd]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_e.g._+_nsa_+_5516bd
*CAT: n
*SEM: twoRel[rel=p-clamp_+_e.g._+_nsa_+_5516bd]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_e.g._+_nsa_+_5516bd
*CAT: n
*SEM: orRel[rel=p-clamp_+_e.g._+_nsa_+_5516bd]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_zone_+_connection._+__-_opensb_-_1000psi_-_closesb_-_or_+_abs2121_+_high_+_pressure_+_lines
*CAT: n
*SEM: unaryRel[rel=fuel_+_zone_+_connection._+__-_opensb_-_1000psi_-_closesb_-_or_+_abs2121_+_high_+_pressure_+_lines]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_zone_+_connection._+__-_opensb_-_1000psi_-_closesb_-_or_+_abs2121_+_high_+_pressure_+_lines
*CAT: n
*SEM: twoRel[rel=fuel_+_zone_+_connection._+__-_opensb_-_1000psi_-_closesb_-_or_+_abs2121_+_high_+_pressure_+_lines]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_zone_+_connection._+__-_opensb_-_1000psi_-_closesb_-_or_+_abs2121_+_high_+_pressure_+_lines
*CAT: n
*SEM: twoRel[rel=fuel_+_zone_+_connection._+__-_opensb_-_1000psi_-_closesb_-_or_+_abs2121_+_high_+_pressure_+_lines]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_zone_+_connection._+__-_opensb_-_1000psi_-_closesb_-_or_+_abs2121_+_high_+_pressure_+_lines
*CAT: n
*SEM: orRel[rel=fuel_+_zone_+_connection._+__-_opensb_-_1000psi_-_closesb_-_or_+_abs2121_+_high_+_pressure_+_lines]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asb1423_+_abs1424
*CAT: n
*SEM: unaryRel[rel=asb1423_+_abs1424]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asb1423_+_abs1424
*CAT: n
*SEM: twoRel[rel=asb1423_+_abs1424]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asb1423_+_abs1424
*CAT: n
*SEM: twoRel[rel=asb1423_+_abs1424]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asb1423_+_abs1424
*CAT: n
*SEM: orRel[rel=asb1423_+_abs1424]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp_+_when_+_p_+_clamps
*CAT: n
*SEM: unaryRel[rel=clamp_+_when_+_p_+_clamps]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp_+_when_+_p_+_clamps
*CAT: n
*SEM: twoRel[rel=clamp_+_when_+_p_+_clamps]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp_+_when_+_p_+_clamps
*CAT: n
*SEM: twoRel[rel=clamp_+_when_+_p_+_clamps]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp_+_when_+_p_+_clamps
*CAT: n
*SEM: orRel[rel=clamp_+_when_+_p_+_clamps]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 07-05-046
*CAT: n
*SEM: unaryRel[rel=07-05-046]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 07-05-046
*CAT: n
*SEM: twoRel[rel=07-05-046]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 07-05-046
*CAT: n
*SEM: twoRel[rel=07-05-046]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 07-05-046
*CAT: n
*SEM: orRel[rel=07-05-046]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_chain
*CAT: n
*SEM: unaryRel[rel=small_+_chain]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_chain
*CAT: n
*SEM: twoRel[rel=small_+_chain]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_chain
*CAT: n
*SEM: twoRel[rel=small_+_chain]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_chain
*CAT: n
*SEM: orRel[rel=small_+_chain]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: development_+_aircraft
*CAT: n
*SEM: unaryRel[rel=development_+_aircraft]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: development_+_aircraft
*CAT: n
*SEM: twoRel[rel=development_+_aircraft]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: development_+_aircraft
*CAT: n
*SEM: twoRel[rel=development_+_aircraft]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: development_+_aircraft
*CAT: n
*SEM: orRel[rel=development_+_aircraft]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee-_+_unions
*CAT: n
*SEM: unaryRel[rel=tee-_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee-_+_unions
*CAT: n
*SEM: twoRel[rel=tee-_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee-_+_unions
*CAT: n
*SEM: twoRel[rel=tee-_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee-_+_unions
*CAT: n
*SEM: orRel[rel=tee-_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below
*CAT: n
*SEM: unaryRel[rel=figure_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below
*CAT: n
*SEM: twoRel[rel=figure_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below
*CAT: n
*SEM: twoRel[rel=figure_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below
*CAT: n
*SEM: orRel[rel=figure_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-__+_25mm
*CAT: n
*SEM: unaryRel[rel=d_+__-_greaterThan_-__+__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-__+_25mm
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-__+_25mm
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-__+_25mm
*CAT: n
*SEM: orRel[rel=d_+__-_greaterThan_-__+__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna5107-b_+_black_+_tapeor_+_protective_+_bobbin_+_nsa5539
*CAT: n
*SEM: unaryRel[rel=asna5107-b_+_black_+_tapeor_+_protective_+_bobbin_+_nsa5539]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna5107-b_+_black_+_tapeor_+_protective_+_bobbin_+_nsa5539
*CAT: n
*SEM: twoRel[rel=asna5107-b_+_black_+_tapeor_+_protective_+_bobbin_+_nsa5539]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna5107-b_+_black_+_tapeor_+_protective_+_bobbin_+_nsa5539
*CAT: n
*SEM: twoRel[rel=asna5107-b_+_black_+_tapeor_+_protective_+_bobbin_+_nsa5539]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna5107-b_+_black_+_tapeor_+_protective_+_bobbin_+_nsa5539
*CAT: n
*SEM: orRel[rel=asna5107-b_+_black_+_tapeor_+_protective_+_bobbin_+_nsa5539]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0_+__-_smallerThan_-__+_phi
*CAT: n
*SEM: unaryRel[rel=0_+__-_smallerThan_-__+_phi]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0_+__-_smallerThan_-__+_phi
*CAT: n
*SEM: twoRel[rel=0_+__-_smallerThan_-__+_phi]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0_+__-_smallerThan_-__+_phi
*CAT: n
*SEM: twoRel[rel=0_+__-_smallerThan_-__+_phi]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0_+__-_smallerThan_-__+_phi
*CAT: n
*SEM: orRel[rel=0_+__-_smallerThan_-__+_phi]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_orientation
*CAT: n
*SEM: unaryRel[rel=horizontal_+_orientation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_orientation
*CAT: n
*SEM: twoRel[rel=horizontal_+_orientation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_orientation
*CAT: n
*SEM: twoRel[rel=horizontal_+_orientation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_orientation
*CAT: n
*SEM: orRel[rel=horizontal_+_orientation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjacent_+_raceway
*CAT: n
*SEM: unaryRel[rel=adjacent_+_raceway]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjacent_+_raceway
*CAT: n
*SEM: twoRel[rel=adjacent_+_raceway]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjacent_+_raceway
*CAT: n
*SEM: twoRel[rel=adjacent_+_raceway]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjacent_+_raceway
*CAT: n
*SEM: orRel[rel=adjacent_+_raceway]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_harness_+_self-locking_+_device
*CAT: n
*SEM: unaryRel[rel=shielded_+_harness_+_self-locking_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_harness_+_self-locking_+_device
*CAT: n
*SEM: twoRel[rel=shielded_+_harness_+_self-locking_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_harness_+_self-locking_+_device
*CAT: n
*SEM: twoRel[rel=shielded_+_harness_+_self-locking_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_harness_+_self-locking_+_device
*CAT: n
*SEM: orRel[rel=shielded_+_harness_+_self-locking_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_relative_+_movement
*CAT: n
*SEM: unaryRel[rel=different_+_relative_+_movement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_relative_+_movement
*CAT: n
*SEM: twoRel[rel=different_+_relative_+_movement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_relative_+_movement
*CAT: n
*SEM: twoRel[rel=different_+_relative_+_movement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_relative_+_movement
*CAT: n
*SEM: orRel[rel=different_+_relative_+_movement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielding_+_continuity_+_connection
*CAT: n
*SEM: unaryRel[rel=shielding_+_continuity_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielding_+_continuity_+_connection
*CAT: n
*SEM: twoRel[rel=shielding_+_continuity_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielding_+_continuity_+_connection
*CAT: n
*SEM: twoRel[rel=shielding_+_continuity_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielding_+_continuity_+_connection
*CAT: n
*SEM: orRel[rel=shielding_+_continuity_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ans2125
*CAT: n
*SEM: unaryRel[rel=ans2125]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ans2125
*CAT: n
*SEM: twoRel[rel=ans2125]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ans2125
*CAT: n
*SEM: twoRel[rel=ans2125]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ans2125
*CAT: n
*SEM: orRel[rel=ans2125]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie
*CAT: n
*SEM: unaryRel[rel=nsa_+_935401_+_cable_+_tie]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie
*CAT: n
*SEM: twoRel[rel=nsa_+_935401_+_cable_+_tie]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie
*CAT: n
*SEM: twoRel[rel=nsa_+_935401_+_cable_+_tie]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie
*CAT: n
*SEM: orRel[rel=nsa_+_935401_+_cable_+_tie]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_design_-_closesb_-__+_on_+_both_+_sides
*CAT: n
*SEM: unaryRel[rel=new_+_design_-_closesb_-__+_on_+_both_+_sides]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_design_-_closesb_-__+_on_+_both_+_sides
*CAT: n
*SEM: twoRel[rel=new_+_design_-_closesb_-__+_on_+_both_+_sides]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_design_-_closesb_-__+_on_+_both_+_sides
*CAT: n
*SEM: twoRel[rel=new_+_design_-_closesb_-__+_on_+_both_+_sides]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_design_-_closesb_-__+_on_+_both_+_sides
*CAT: n
*SEM: orRel[rel=new_+_design_-_closesb_-__+_on_+_both_+_sides]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: b
*CAT: n
*SEM: unaryRel[rel=b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: b
*CAT: n
*SEM: twoRel[rel=b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: b
*CAT: n
*SEM: twoRel[rel=b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: b
*CAT: n
*SEM: orRel[rel=b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_hole_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=on_+_hole_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_hole_+_clamp-block
*CAT: n
*SEM: twoRel[rel=on_+_hole_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_hole_+_clamp-block
*CAT: n
*SEM: twoRel[rel=on_+_hole_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_hole_+_clamp-block
*CAT: n
*SEM: orRel[rel=on_+_hole_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: test_+_optinaonal
*CAT: n
*SEM: unaryRel[rel=test_+_optinaonal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: test_+_optinaonal
*CAT: n
*SEM: twoRel[rel=test_+_optinaonal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: test_+_optinaonal
*CAT: n
*SEM: twoRel[rel=test_+_optinaonal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: test_+_optinaonal
*CAT: n
*SEM: orRel[rel=test_+_optinaonal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: homogeneous_+_way
*CAT: n
*SEM: unaryRel[rel=homogeneous_+_way]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: homogeneous_+_way
*CAT: n
*SEM: twoRel[rel=homogeneous_+_way]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: homogeneous_+_way
*CAT: n
*SEM: twoRel[rel=homogeneous_+_way]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: homogeneous_+_way
*CAT: n
*SEM: orRel[rel=homogeneous_+_way]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: umbrella_+_in_+_hazardous_+_area_+_other_+_areas_+_were_+_dripping_+_fluids_+_have
*CAT: n
*SEM: unaryRel[rel=umbrella_+_in_+_hazardous_+_area_+_other_+_areas_+_were_+_dripping_+_fluids_+_have]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: umbrella_+_in_+_hazardous_+_area_+_other_+_areas_+_were_+_dripping_+_fluids_+_have
*CAT: n
*SEM: twoRel[rel=umbrella_+_in_+_hazardous_+_area_+_other_+_areas_+_were_+_dripping_+_fluids_+_have]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: umbrella_+_in_+_hazardous_+_area_+_other_+_areas_+_were_+_dripping_+_fluids_+_have
*CAT: n
*SEM: twoRel[rel=umbrella_+_in_+_hazardous_+_area_+_other_+_areas_+_were_+_dripping_+_fluids_+_have]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: umbrella_+_in_+_hazardous_+_area_+_other_+_areas_+_were_+_dripping_+_fluids_+_have
*CAT: n
*SEM: orRel[rel=umbrella_+_in_+_hazardous_+_area_+_other_+_areas_+_were_+_dripping_+_fluids_+_have]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-_
*CAT: n
*SEM: unaryRel[rel=d_+__-_smallerThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-_
*CAT: n
*SEM: twoRel[rel=d_+__-_smallerThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-_
*CAT: n
*SEM: twoRel[rel=d_+__-_smallerThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-_
*CAT: n
*SEM: orRel[rel=d_+__-_smallerThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_successive_+_bends
*CAT: n
*SEM: unaryRel[rel=two_+_successive_+_bends]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_successive_+_bends
*CAT: n
*SEM: twoRel[rel=two_+_successive_+_bends]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_successive_+_bends
*CAT: n
*SEM: twoRel[rel=two_+_successive_+_bends]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_successive_+_bends
*CAT: n
*SEM: orRel[rel=two_+_successive_+_bends]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: the_+_pipes_+_which_+_are_+_not_+_affected
*CAT: n
*SEM: unaryRel[rel=the_+_pipes_+_which_+_are_+_not_+_affected]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: the_+_pipes_+_which_+_are_+_not_+_affected
*CAT: n
*SEM: twoRel[rel=the_+_pipes_+_which_+_are_+_not_+_affected]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: the_+_pipes_+_which_+_are_+_not_+_affected
*CAT: n
*SEM: twoRel[rel=the_+_pipes_+_which_+_are_+_not_+_affected]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: the_+_pipes_+_which_+_are_+_not_+_affected
*CAT: n
*SEM: orRel[rel=the_+_pipes_+_which_+_are_+_not_+_affected]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-e01
*CAT: n
*SEM: unaryRel[rel=abs1576-e01]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-e01
*CAT: n
*SEM: twoRel[rel=abs1576-e01]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-e01
*CAT: n
*SEM: twoRel[rel=abs1576-e01]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-e01
*CAT: n
*SEM: orRel[rel=abs1576-e01]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: remove_+_the_+_pressure_+_seal._+_refer
*CAT: n
*SEM: unaryRel[rel=remove_+_the_+_pressure_+_seal._+_refer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: remove_+_the_+_pressure_+_seal._+_refer
*CAT: n
*SEM: twoRel[rel=remove_+_the_+_pressure_+_seal._+_refer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: remove_+_the_+_pressure_+_seal._+_refer
*CAT: n
*SEM: twoRel[rel=remove_+_the_+_pressure_+_seal._+_refer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: remove_+_the_+_pressure_+_seal._+_refer
*CAT: n
*SEM: orRel[rel=remove_+_the_+_pressure_+_seal._+_refer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_to_+_the_+_nsa_+_9504_+_boot_+_diameter
*CAT: n
*SEM: unaryRel[rel=different_+_to_+_the_+_nsa_+_9504_+_boot_+_diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_to_+_the_+_nsa_+_9504_+_boot_+_diameter
*CAT: n
*SEM: twoRel[rel=different_+_to_+_the_+_nsa_+_9504_+_boot_+_diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_to_+_the_+_nsa_+_9504_+_boot_+_diameter
*CAT: n
*SEM: twoRel[rel=different_+_to_+_the_+_nsa_+_9504_+_boot_+_diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_to_+_the_+_nsa_+_9504_+_boot_+_diameter
*CAT: n
*SEM: orRel[rel=different_+_to_+_the_+_nsa_+_9504_+_boot_+_diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parallel_+_splice
*CAT: n
*SEM: unaryRel[rel=parallel_+_splice]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parallel_+_splice
*CAT: n
*SEM: twoRel[rel=parallel_+_splice]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parallel_+_splice
*CAT: n
*SEM: twoRel[rel=parallel_+_splice]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parallel_+_splice
*CAT: n
*SEM: orRel[rel=parallel_+_splice]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_connections
*CAT: n
*SEM: unaryRel[rel=no_+_connections]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_connections
*CAT: n
*SEM: twoRel[rel=no_+_connections]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_connections
*CAT: n
*SEM: twoRel[rel=no_+_connections]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_connections
*CAT: n
*SEM: orRel[rel=no_+_connections]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_table_+_according
*CAT: n
*SEM: unaryRel[rel=attached_+_table_+_according]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_table_+_according
*CAT: n
*SEM: twoRel[rel=attached_+_table_+_according]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_table_+_according
*CAT: n
*SEM: twoRel[rel=attached_+_table_+_according]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_table_+_according
*CAT: n
*SEM: orRel[rel=attached_+_table_+_according]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case
*CAT: n
*SEM: unaryRel[rel=case]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case
*CAT: n
*SEM: twoRel[rel=case]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case
*CAT: n
*SEM: twoRel[rel=case]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case
*CAT: n
*SEM: orRel[rel=case]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_than_+_2_+_wires_+_crimped
*CAT: n
*SEM: unaryRel[rel=more_+_than_+_2_+_wires_+_crimped]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_than_+_2_+_wires_+_crimped
*CAT: n
*SEM: twoRel[rel=more_+_than_+_2_+_wires_+_crimped]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_than_+_2_+_wires_+_crimped
*CAT: n
*SEM: twoRel[rel=more_+_than_+_2_+_wires_+_crimped]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_than_+_2_+_wires_+_crimped
*CAT: n
*SEM: orRel[rel=more_+_than_+_2_+_wires_+_crimped]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rest
*CAT: n
*SEM: unaryRel[rel=rest]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rest
*CAT: n
*SEM: twoRel[rel=rest]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rest
*CAT: n
*SEM: twoRel[rel=rest]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rest
*CAT: n
*SEM: orRel[rel=rest]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: edge
*CAT: n
*SEM: unaryRel[rel=edge]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: edge
*CAT: n
*SEM: twoRel[rel=edge]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: edge
*CAT: n
*SEM: twoRel[rel=edge]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: edge
*CAT: n
*SEM: orRel[rel=edge]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: times
*CAT: n
*SEM: unaryRel[rel=times]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: times
*CAT: n
*SEM: twoRel[rel=times]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: times
*CAT: n
*SEM: twoRel[rel=times]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: times
*CAT: n
*SEM: orRel[rel=times]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrics
*CAT: n
*SEM: unaryRel[rel=electrics]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrics
*CAT: n
*SEM: twoRel[rel=electrics]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrics
*CAT: n
*SEM: twoRel[rel=electrics]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrics
*CAT: n
*SEM: orRel[rel=electrics]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system_+_in_+_x-dp-29-7.2.2-0002-0001-a
*CAT: n
*SEM: unaryRel[rel=bleed_+_air_+_system_+_in_+_x-dp-29-7.2.2-0002-0001-a]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system_+_in_+_x-dp-29-7.2.2-0002-0001-a
*CAT: n
*SEM: twoRel[rel=bleed_+_air_+_system_+_in_+_x-dp-29-7.2.2-0002-0001-a]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system_+_in_+_x-dp-29-7.2.2-0002-0001-a
*CAT: n
*SEM: twoRel[rel=bleed_+_air_+_system_+_in_+_x-dp-29-7.2.2-0002-0001-a]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system_+_in_+_x-dp-29-7.2.2-0002-0001-a
*CAT: n
*SEM: orRel[rel=bleed_+_air_+_system_+_in_+_x-dp-29-7.2.2-0002-0001-a]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ceiling_+_area
*CAT: n
*SEM: unaryRel[rel=ceiling_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ceiling_+_area
*CAT: n
*SEM: twoRel[rel=ceiling_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ceiling_+_area
*CAT: n
*SEM: twoRel[rel=ceiling_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ceiling_+_area
*CAT: n
*SEM: orRel[rel=ceiling_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_segregation_+_segregation_+_of_+_efcs
*CAT: n
*SEM: unaryRel[rel=network_+_segregation_+_segregation_+_of_+_efcs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_segregation_+_segregation_+_of_+_efcs
*CAT: n
*SEM: twoRel[rel=network_+_segregation_+_segregation_+_of_+_efcs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_segregation_+_segregation_+_of_+_efcs
*CAT: n
*SEM: twoRel[rel=network_+_segregation_+_segregation_+_of_+_efcs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_segregation_+_segregation_+_of_+_efcs
*CAT: n
*SEM: orRel[rel=network_+_segregation_+_segregation_+_of_+_efcs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0616_+_sealing_+_plug
*CAT: n
*SEM: unaryRel[rel=asne_+_0616_+_sealing_+_plug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0616_+_sealing_+_plug
*CAT: n
*SEM: twoRel[rel=asne_+_0616_+_sealing_+_plug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0616_+_sealing_+_plug
*CAT: n
*SEM: twoRel[rel=asne_+_0616_+_sealing_+_plug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0616_+_sealing_+_plug
*CAT: n
*SEM: orRel[rel=asne_+_0616_+_sealing_+_plug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_tape_+_ptfe
*CAT: n
*SEM: unaryRel[rel=adhesive_+_tape_+_ptfe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_tape_+_ptfe
*CAT: n
*SEM: twoRel[rel=adhesive_+_tape_+_ptfe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_tape_+_ptfe
*CAT: n
*SEM: twoRel[rel=adhesive_+_tape_+_ptfe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_tape_+_ptfe
*CAT: n
*SEM: orRel[rel=adhesive_+_tape_+_ptfe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-route
*CAT: n
*SEM: unaryRel[rel=v-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-route
*CAT: n
*SEM: twoRel[rel=v-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-route
*CAT: n
*SEM: twoRel[rel=v-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-route
*CAT: n
*SEM: orRel[rel=v-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_ns935401_+_cable_+_tie_+_would_+_not_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=single_+_ns935401_+_cable_+_tie_+_would_+_not_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_ns935401_+_cable_+_tie_+_would_+_not_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=single_+_ns935401_+_cable_+_tie_+_would_+_not_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_ns935401_+_cable_+_tie_+_would_+_not_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=single_+_ns935401_+_cable_+_tie_+_would_+_not_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_ns935401_+_cable_+_tie_+_would_+_not_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=single_+_ns935401_+_cable_+_tie_+_would_+_not_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module
*CAT: n
*SEM: unaryRel[rel=virtual_+_terminal_+_module]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_module]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_module]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module
*CAT: n
*SEM: orRel[rel=virtual_+_terminal_+_module]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_1_+_solution
*CAT: n
*SEM: unaryRel[rel=priority_+_1_+_solution]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_1_+_solution
*CAT: n
*SEM: twoRel[rel=priority_+_1_+_solution]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_1_+_solution
*CAT: n
*SEM: twoRel[rel=priority_+_1_+_solution]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_1_+_solution
*CAT: n
*SEM: orRel[rel=priority_+_1_+_solution]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_of_+_heat_+_shrink_+_sleeve_+_onto_+_the_+_wire_+_insulation_+_prior
*CAT: n
*SEM: unaryRel[rel=installation_+_of_+_heat_+_shrink_+_sleeve_+_onto_+_the_+_wire_+_insulation_+_prior]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_of_+_heat_+_shrink_+_sleeve_+_onto_+_the_+_wire_+_insulation_+_prior
*CAT: n
*SEM: twoRel[rel=installation_+_of_+_heat_+_shrink_+_sleeve_+_onto_+_the_+_wire_+_insulation_+_prior]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_of_+_heat_+_shrink_+_sleeve_+_onto_+_the_+_wire_+_insulation_+_prior
*CAT: n
*SEM: twoRel[rel=installation_+_of_+_heat_+_shrink_+_sleeve_+_onto_+_the_+_wire_+_insulation_+_prior]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_of_+_heat_+_shrink_+_sleeve_+_onto_+_the_+_wire_+_insulation_+_prior
*CAT: n
*SEM: orRel[rel=installation_+_of_+_heat_+_shrink_+_sleeve_+_onto_+_the_+_wire_+_insulation_+_prior]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grommet_+_at_+_a_+_90_-_degrees_-__+_angle
*CAT: n
*SEM: unaryRel[rel=grommet_+_at_+_a_+_90_-_degrees_-__+_angle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grommet_+_at_+_a_+_90_-_degrees_-__+_angle
*CAT: n
*SEM: twoRel[rel=grommet_+_at_+_a_+_90_-_degrees_-__+_angle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grommet_+_at_+_a_+_90_-_degrees_-__+_angle
*CAT: n
*SEM: twoRel[rel=grommet_+_at_+_a_+_90_-_degrees_-__+_angle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grommet_+_at_+_a_+_90_-_degrees_-__+_angle
*CAT: n
*SEM: orRel[rel=grommet_+_at_+_a_+_90_-_degrees_-__+_angle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: material
*CAT: n
*SEM: unaryRel[rel=material]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: material
*CAT: n
*SEM: twoRel[rel=material]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: material
*CAT: n
*SEM: twoRel[rel=material]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: material
*CAT: n
*SEM: orRel[rel=material]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contact
*CAT: n
*SEM: unaryRel[rel=socket_+_contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contact
*CAT: n
*SEM: twoRel[rel=socket_+_contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contact
*CAT: n
*SEM: twoRel[rel=socket_+_contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contact
*CAT: n
*SEM: orRel[rel=socket_+_contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stowage_+_receptable
*CAT: n
*SEM: unaryRel[rel=stowage_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stowage_+_receptable
*CAT: n
*SEM: twoRel[rel=stowage_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stowage_+_receptable
*CAT: n
*SEM: twoRel[rel=stowage_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stowage_+_receptable
*CAT: n
*SEM: orRel[rel=stowage_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ends_+_of_+_tubing
*CAT: n
*SEM: unaryRel[rel=ends_+_of_+_tubing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ends_+_of_+_tubing
*CAT: n
*SEM: twoRel[rel=ends_+_of_+_tubing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ends_+_of_+_tubing
*CAT: n
*SEM: twoRel[rel=ends_+_of_+_tubing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ends_+_of_+_tubing
*CAT: n
*SEM: orRel[rel=ends_+_of_+_tubing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=sense_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=sense_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=sense_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=sense_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_version_+_when
*CAT: n
*SEM: unaryRel[rel=plastic_+_version_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_version_+_when
*CAT: n
*SEM: twoRel[rel=plastic_+_version_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_version_+_when
*CAT: n
*SEM: twoRel[rel=plastic_+_version_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_version_+_when
*CAT: n
*SEM: orRel[rel=plastic_+_version_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stress
*CAT: n
*SEM: unaryRel[rel=stress]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stress
*CAT: n
*SEM: twoRel[rel=stress]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stress
*CAT: n
*SEM: twoRel[rel=stress]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stress
*CAT: n
*SEM: orRel[rel=stress]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: systems
*CAT: n
*SEM: unaryRel[rel=systems]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: systems
*CAT: n
*SEM: twoRel[rel=systems]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: systems
*CAT: n
*SEM: twoRel[rel=systems]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: systems
*CAT: n
*SEM: orRel[rel=systems]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp
*CAT: n
*SEM: unaryRel[rel=cfrp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp
*CAT: n
*SEM: twoRel[rel=cfrp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp
*CAT: n
*SEM: twoRel[rel=cfrp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp
*CAT: n
*SEM: orRel[rel=cfrp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_+__-_percent_-__+_fillrate
*CAT: n
*SEM: unaryRel[rel=max_+_80_+__-_percent_-__+_fillrate]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_+__-_percent_-__+_fillrate
*CAT: n
*SEM: twoRel[rel=max_+_80_+__-_percent_-__+_fillrate]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_+__-_percent_-__+_fillrate
*CAT: n
*SEM: twoRel[rel=max_+_80_+__-_percent_-__+_fillrate]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_+__-_percent_-__+_fillrate
*CAT: n
*SEM: orRel[rel=max_+_80_+__-_percent_-__+_fillrate]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_10_+_to_+_0000_+_45_-_degrees_-_
*CAT: n
*SEM: unaryRel[rel=gauge_+_10_+_to_+_0000_+_45_-_degrees_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_10_+_to_+_0000_+_45_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=gauge_+_10_+_to_+_0000_+_45_-_degrees_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_10_+_to_+_0000_+_45_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=gauge_+_10_+_to_+_0000_+_45_-_degrees_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_10_+_to_+_0000_+_45_-_degrees_-_
*CAT: n
*SEM: orRel[rel=gauge_+_10_+_to_+_0000_+_45_-_degrees_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_routing_+_characteristics
*CAT: n
*SEM: unaryRel[rel=bundle_+_routing_+_characteristics]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_routing_+_characteristics
*CAT: n
*SEM: twoRel[rel=bundle_+_routing_+_characteristics]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_routing_+_characteristics
*CAT: n
*SEM: twoRel[rel=bundle_+_routing_+_characteristics]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_routing_+_characteristics
*CAT: n
*SEM: orRel[rel=bundle_+_routing_+_characteristics]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asn53203
*CAT: n
*SEM: unaryRel[rel=asn53203]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asn53203
*CAT: n
*SEM: twoRel[rel=asn53203]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asn53203
*CAT: n
*SEM: twoRel[rel=asn53203]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asn53203
*CAT: n
*SEM: orRel[rel=asn53203]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cuttings
*CAT: n
*SEM: unaryRel[rel=cuttings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cuttings
*CAT: n
*SEM: twoRel[rel=cuttings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cuttings
*CAT: n
*SEM: twoRel[rel=cuttings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cuttings
*CAT: n
*SEM: orRel[rel=cuttings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10
*CAT: n
*SEM: unaryRel[rel=10]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10
*CAT: n
*SEM: twoRel[rel=10]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10
*CAT: n
*SEM: twoRel[rel=10]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10
*CAT: n
*SEM: orRel[rel=10]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansion_+_zones
*CAT: n
*SEM: unaryRel[rel=expansion_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansion_+_zones
*CAT: n
*SEM: twoRel[rel=expansion_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansion_+_zones
*CAT: n
*SEM: twoRel[rel=expansion_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansion_+_zones
*CAT: n
*SEM: orRel[rel=expansion_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: safety_+_wires
*CAT: n
*SEM: unaryRel[rel=safety_+_wires]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: safety_+_wires
*CAT: n
*SEM: twoRel[rel=safety_+_wires]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: safety_+_wires
*CAT: n
*SEM: twoRel[rel=safety_+_wires]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: safety_+_wires
*CAT: n
*SEM: orRel[rel=safety_+_wires]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10_-_degrees_-_
*CAT: n
*SEM: unaryRel[rel=10_-_degrees_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=10_-_degrees_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=10_-_degrees_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10_-_degrees_-_
*CAT: n
*SEM: orRel[rel=10_-_degrees_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2500_+_mm
*CAT: n
*SEM: unaryRel[rel=2500_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2500_+_mm
*CAT: n
*SEM: twoRel[rel=2500_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2500_+_mm
*CAT: n
*SEM: twoRel[rel=2500_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2500_+_mm
*CAT: n
*SEM: orRel[rel=2500_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_tubes_+_straight_+_parts
*CAT: n
*SEM: unaryRel[rel=support_+_tubes_+_straight_+_parts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_tubes_+_straight_+_parts
*CAT: n
*SEM: twoRel[rel=support_+_tubes_+_straight_+_parts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_tubes_+_straight_+_parts
*CAT: n
*SEM: twoRel[rel=support_+_tubes_+_straight_+_parts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_tubes_+_straight_+_parts
*CAT: n
*SEM: orRel[rel=support_+_tubes_+_straight_+_parts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5107-b_+_black_+_tape_+_to
*CAT: n
*SEM: unaryRel[rel=nsa_+_5107-b_+_black_+_tape_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5107-b_+_black_+_tape_+_to
*CAT: n
*SEM: twoRel[rel=nsa_+_5107-b_+_black_+_tape_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5107-b_+_black_+_tape_+_to
*CAT: n
*SEM: twoRel[rel=nsa_+_5107-b_+_black_+_tape_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5107-b_+_black_+_tape_+_to
*CAT: n
*SEM: orRel[rel=nsa_+_5107-b_+_black_+_tape_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp_+_part
*CAT: n
*SEM: unaryRel[rel=cfrp_+_part]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp_+_part
*CAT: n
*SEM: twoRel[rel=cfrp_+_part]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp_+_part
*CAT: n
*SEM: twoRel[rel=cfrp_+_part]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp_+_part
*CAT: n
*SEM: orRel[rel=cfrp_+_part]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coaxial_+_cable
*CAT: n
*SEM: unaryRel[rel=coaxial_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coaxial_+_cable
*CAT: n
*SEM: twoRel[rel=coaxial_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coaxial_+_cable
*CAT: n
*SEM: twoRel[rel=coaxial_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coaxial_+_cable
*CAT: n
*SEM: orRel[rel=coaxial_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_of_+_abs_+_0887_+_conduit
*CAT: n
*SEM: unaryRel[rel=end_+_of_+_abs_+_0887_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_of_+_abs_+_0887_+_conduit
*CAT: n
*SEM: twoRel[rel=end_+_of_+_abs_+_0887_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_of_+_abs_+_0887_+_conduit
*CAT: n
*SEM: twoRel[rel=end_+_of_+_abs_+_0887_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_of_+_abs_+_0887_+_conduit
*CAT: n
*SEM: orRel[rel=end_+_of_+_abs_+_0887_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_way
*CAT: n
*SEM: unaryRel[rel=same_+_way]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_way
*CAT: n
*SEM: twoRel[rel=same_+_way]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_way
*CAT: n
*SEM: twoRel[rel=same_+_way]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_way
*CAT: n
*SEM: orRel[rel=same_+_way]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+_routes
*CAT: n
*SEM: unaryRel[rel=r_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+_routes
*CAT: n
*SEM: twoRel[rel=r_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+_routes
*CAT: n
*SEM: twoRel[rel=r_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+_routes
*CAT: n
*SEM: orRel[rel=r_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_then_+_30_-_degrees_-_
*CAT: n
*SEM: unaryRel[rel=more_+_then_+_30_-_degrees_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_then_+_30_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=more_+_then_+_30_-_degrees_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_then_+_30_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=more_+_then_+_30_-_degrees_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_then_+_30_-_degrees_-_
*CAT: n
*SEM: orRel[rel=more_+_then_+_30_-_degrees_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: next_+_to_+_the_+_equipment
*CAT: n
*SEM: unaryRel[rel=next_+_to_+_the_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: next_+_to_+_the_+_equipment
*CAT: n
*SEM: twoRel[rel=next_+_to_+_the_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: next_+_to_+_the_+_equipment
*CAT: n
*SEM: twoRel[rel=next_+_to_+_the_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: next_+_to_+_the_+_equipment
*CAT: n
*SEM: orRel[rel=next_+_to_+_the_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-_three-hole_-_invcomma_-__+_bulkhead_+_unions
*CAT: n
*SEM: unaryRel[rel=_-_invcomma_-_three-hole_-_invcomma_-__+_bulkhead_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-_three-hole_-_invcomma_-__+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=_-_invcomma_-_three-hole_-_invcomma_-__+_bulkhead_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-_three-hole_-_invcomma_-__+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=_-_invcomma_-_three-hole_-_invcomma_-__+_bulkhead_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_invcomma_-_three-hole_-_invcomma_-__+_bulkhead_+_unions
*CAT: n
*SEM: orRel[rel=_-_invcomma_-_three-hole_-_invcomma_-__+_bulkhead_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: space_+_gain
*CAT: n
*SEM: unaryRel[rel=space_+_gain]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: space_+_gain
*CAT: n
*SEM: twoRel[rel=space_+_gain]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: space_+_gain
*CAT: n
*SEM: twoRel[rel=space_+_gain]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: space_+_gain
*CAT: n
*SEM: orRel[rel=space_+_gain]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_cable_+_at_+_maximum_+_d_-_smallerThan_-__-_equalto_-_150mm
*CAT: n
*SEM: unaryRel[rel=twisted_+_cable_+_at_+_maximum_+_d_-_smallerThan_-__-_equalto_-_150mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_cable_+_at_+_maximum_+_d_-_smallerThan_-__-_equalto_-_150mm
*CAT: n
*SEM: twoRel[rel=twisted_+_cable_+_at_+_maximum_+_d_-_smallerThan_-__-_equalto_-_150mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_cable_+_at_+_maximum_+_d_-_smallerThan_-__-_equalto_-_150mm
*CAT: n
*SEM: twoRel[rel=twisted_+_cable_+_at_+_maximum_+_d_-_smallerThan_-__-_equalto_-_150mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_cable_+_at_+_maximum_+_d_-_smallerThan_-__-_equalto_-_150mm
*CAT: n
*SEM: orRel[rel=twisted_+_cable_+_at_+_maximum_+_d_-_smallerThan_-__-_equalto_-_150mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modelling
*CAT: n
*SEM: unaryRel[rel=modelling]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modelling
*CAT: n
*SEM: twoRel[rel=modelling]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modelling
*CAT: n
*SEM: twoRel[rel=modelling]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modelling
*CAT: n
*SEM: orRel[rel=modelling]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_when_+_awg
*CAT: n
*SEM: unaryRel[rel=minimum_+_when_+_awg]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_when_+_awg
*CAT: n
*SEM: twoRel[rel=minimum_+_when_+_awg]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_when_+_awg
*CAT: n
*SEM: twoRel[rel=minimum_+_when_+_awg]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_when_+_awg
*CAT: n
*SEM: orRel[rel=minimum_+_when_+_awg]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: readable_+_when_+_the_+_equipment
*CAT: n
*SEM: unaryRel[rel=readable_+_when_+_the_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: readable_+_when_+_the_+_equipment
*CAT: n
*SEM: twoRel[rel=readable_+_when_+_the_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: readable_+_when_+_the_+_equipment
*CAT: n
*SEM: twoRel[rel=readable_+_when_+_the_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: readable_+_when_+_the_+_equipment
*CAT: n
*SEM: orRel[rel=readable_+_when_+_the_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_structure_+_not_+_less_+_than_+_20_+_mm_+_unless_+_otherwise_+_specified
*CAT: n
*SEM: unaryRel[rel=fixed_+_structure_+_structure_+_not_+_less_+_than_+_20_+_mm_+_unless_+_otherwise_+_specified]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_structure_+_not_+_less_+_than_+_20_+_mm_+_unless_+_otherwise_+_specified
*CAT: n
*SEM: twoRel[rel=fixed_+_structure_+_structure_+_not_+_less_+_than_+_20_+_mm_+_unless_+_otherwise_+_specified]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_structure_+_not_+_less_+_than_+_20_+_mm_+_unless_+_otherwise_+_specified
*CAT: n
*SEM: twoRel[rel=fixed_+_structure_+_structure_+_not_+_less_+_than_+_20_+_mm_+_unless_+_otherwise_+_specified]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_structure_+_not_+_less_+_than_+_20_+_mm_+_unless_+_otherwise_+_specified
*CAT: n
*SEM: orRel[rel=fixed_+_structure_+_structure_+_not_+_less_+_than_+_20_+_mm_+_unless_+_otherwise_+_specified]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_bundles_+_in_+_case_+_of_+_secured_+_routing
*CAT: n
*SEM: unaryRel[rel=other_+_bundles_+_in_+_case_+_of_+_secured_+_routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_bundles_+_in_+_case_+_of_+_secured_+_routing
*CAT: n
*SEM: twoRel[rel=other_+_bundles_+_in_+_case_+_of_+_secured_+_routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_bundles_+_in_+_case_+_of_+_secured_+_routing
*CAT: n
*SEM: twoRel[rel=other_+_bundles_+_in_+_case_+_of_+_secured_+_routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_bundles_+_in_+_case_+_of_+_secured_+_routing
*CAT: n
*SEM: orRel[rel=other_+_bundles_+_in_+_case_+_of_+_secured_+_routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_h
*CAT: n
*SEM: unaryRel[rel=col_obj1_h]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_h
*CAT: n
*SEM: twoRel[rel=col_obj1_h]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_h
*CAT: n
*SEM: twoRel[rel=col_obj1_h]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_h
*CAT: n
*SEM: orRel[rel=col_obj1_h]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_elementary_+_bundle
*CAT: n
*SEM: unaryRel[rel=each_+_elementary_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_elementary_+_bundle
*CAT: n
*SEM: twoRel[rel=each_+_elementary_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_elementary_+_bundle
*CAT: n
*SEM: twoRel[rel=each_+_elementary_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_elementary_+_bundle
*CAT: n
*SEM: orRel[rel=each_+_elementary_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0_-_degrees_-__+_to_+_360_-_degrees_-_
*CAT: n
*SEM: unaryRel[rel=0_-_degrees_-__+_to_+_360_-_degrees_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0_-_degrees_-__+_to_+_360_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=0_-_degrees_-__+_to_+_360_-_degrees_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0_-_degrees_-__+_to_+_360_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=0_-_degrees_-__+_to_+_360_-_degrees_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0_-_degrees_-__+_to_+_360_-_degrees_-_
*CAT: n
*SEM: orRel[rel=0_-_degrees_-__+_to_+_360_-_degrees_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fastening_+_mean
*CAT: n
*SEM: unaryRel[rel=fastening_+_mean]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fastening_+_mean
*CAT: n
*SEM: twoRel[rel=fastening_+_mean]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fastening_+_mean
*CAT: n
*SEM: twoRel[rel=fastening_+_mean]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fastening_+_mean
*CAT: n
*SEM: orRel[rel=fastening_+_mean]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_25_+_mm
*CAT: n
*SEM: unaryRel[rel=least_+_25_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_25_+_mm
*CAT: n
*SEM: twoRel[rel=least_+_25_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_25_+_mm
*CAT: n
*SEM: twoRel[rel=least_+_25_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_25_+_mm
*CAT: n
*SEM: orRel[rel=least_+_25_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_tolerances
*CAT: n
*SEM: unaryRel[rel=installation_+_tolerances]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_tolerances
*CAT: n
*SEM: twoRel[rel=installation_+_tolerances]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_tolerances
*CAT: n
*SEM: twoRel[rel=installation_+_tolerances]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_tolerances
*CAT: n
*SEM: orRel[rel=installation_+_tolerances]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blanket_+_covered_+_structure
*CAT: n
*SEM: unaryRel[rel=blanket_+_covered_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blanket_+_covered_+_structure
*CAT: n
*SEM: twoRel[rel=blanket_+_covered_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blanket_+_covered_+_structure
*CAT: n
*SEM: twoRel[rel=blanket_+_covered_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blanket_+_covered_+_structure
*CAT: n
*SEM: orRel[rel=blanket_+_covered_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation_+_point_+_close_+_to_+_rotation_+_center
*CAT: n
*SEM: unaryRel[rel=fixation_+_point_+_close_+_to_+_rotation_+_center]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation_+_point_+_close_+_to_+_rotation_+_center
*CAT: n
*SEM: twoRel[rel=fixation_+_point_+_close_+_to_+_rotation_+_center]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation_+_point_+_close_+_to_+_rotation_+_center
*CAT: n
*SEM: twoRel[rel=fixation_+_point_+_close_+_to_+_rotation_+_center]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation_+_point_+_close_+_to_+_rotation_+_center
*CAT: n
*SEM: orRel[rel=fixation_+_point_+_close_+_to_+_rotation_+_center]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_protectionor_+_37mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=additional_+_protectionor_+_37mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_protectionor_+_37mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=additional_+_protectionor_+_37mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_protectionor_+_37mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=additional_+_protectionor_+_37mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_protectionor_+_37mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=additional_+_protectionor_+_37mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lug
*CAT: n
*SEM: unaryRel[rel=lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lug
*CAT: n
*SEM: twoRel[rel=lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lug
*CAT: n
*SEM: twoRel[rel=lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lug
*CAT: n
*SEM: orRel[rel=lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0916_+_shrink
*CAT: n
*SEM: unaryRel[rel=abs0916_+_shrink]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0916_+_shrink
*CAT: n
*SEM: twoRel[rel=abs0916_+_shrink]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0916_+_shrink
*CAT: n
*SEM: twoRel[rel=abs0916_+_shrink]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0916_+_shrink
*CAT: n
*SEM: orRel[rel=abs0916_+_shrink]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_the_+_repair_+_of_+_hydraulic_+_lines
*CAT: n
*SEM: unaryRel[rel=allow_+_the_+_repair_+_of_+_hydraulic_+_lines]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_the_+_repair_+_of_+_hydraulic_+_lines
*CAT: n
*SEM: twoRel[rel=allow_+_the_+_repair_+_of_+_hydraulic_+_lines]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_the_+_repair_+_of_+_hydraulic_+_lines
*CAT: n
*SEM: twoRel[rel=allow_+_the_+_repair_+_of_+_hydraulic_+_lines]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_the_+_repair_+_of_+_hydraulic_+_lines
*CAT: n
*SEM: orRel[rel=allow_+_the_+_repair_+_of_+_hydraulic_+_lines]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurized
*CAT: n
*SEM: unaryRel[rel=unpressurized]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurized
*CAT: n
*SEM: twoRel[rel=unpressurized]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurized
*CAT: n
*SEM: twoRel[rel=unpressurized]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurized
*CAT: n
*SEM: orRel[rel=unpressurized]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: min_+_d_+__-_greaterThan_-__+__-_equalto_-_2mm
*CAT: n
*SEM: unaryRel[rel=min_+_d_+__-_greaterThan_-__+__-_equalto_-_2mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: min_+_d_+__-_greaterThan_-__+__-_equalto_-_2mm
*CAT: n
*SEM: twoRel[rel=min_+_d_+__-_greaterThan_-__+__-_equalto_-_2mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: min_+_d_+__-_greaterThan_-__+__-_equalto_-_2mm
*CAT: n
*SEM: twoRel[rel=min_+_d_+__-_greaterThan_-__+__-_equalto_-_2mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: min_+_d_+__-_greaterThan_-__+__-_equalto_-_2mm
*CAT: n
*SEM: orRel[rel=min_+_d_+__-_greaterThan_-__+__-_equalto_-_2mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 254mm
*CAT: n
*SEM: unaryRel[rel=254mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 254mm
*CAT: n
*SEM: twoRel[rel=254mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 254mm
*CAT: n
*SEM: twoRel[rel=254mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 254mm
*CAT: n
*SEM: orRel[rel=254mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: panels
*CAT: n
*SEM: unaryRel[rel=panels]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: panels
*CAT: n
*SEM: twoRel[rel=panels]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: panels
*CAT: n
*SEM: twoRel[rel=panels]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: panels
*CAT: n
*SEM: orRel[rel=panels]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: anse0661
*CAT: n
*SEM: unaryRel[rel=anse0661]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: anse0661
*CAT: n
*SEM: twoRel[rel=anse0661]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: anse0661
*CAT: n
*SEM: twoRel[rel=anse0661]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: anse0661
*CAT: n
*SEM: orRel[rel=anse0661]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zones
*CAT: n
*SEM: unaryRel[rel=zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zones
*CAT: n
*SEM: twoRel[rel=zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zones
*CAT: n
*SEM: twoRel[rel=zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zones
*CAT: n
*SEM: orRel[rel=zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurized_+_areas
*CAT: n
*SEM: unaryRel[rel=unpressurized_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurized_+_areas
*CAT: n
*SEM: twoRel[rel=unpressurized_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurized_+_areas
*CAT: n
*SEM: twoRel[rel=unpressurized_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurized_+_areas
*CAT: n
*SEM: orRel[rel=unpressurized_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_on_+_white_+_background
*CAT: n
*SEM: unaryRel[rel=black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_on_+_white_+_background
*CAT: n
*SEM: twoRel[rel=black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_on_+_white_+_background
*CAT: n
*SEM: twoRel[rel=black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_on_+_white_+_background
*CAT: n
*SEM: orRel[rel=black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_when_+_bundle
*CAT: n
*SEM: unaryRel[rel=position_+_when_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_when_+_bundle
*CAT: n
*SEM: twoRel[rel=position_+_when_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_when_+_bundle
*CAT: n
*SEM: twoRel[rel=position_+_when_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_when_+_bundle
*CAT: n
*SEM: orRel[rel=position_+_when_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p_+_routes
*CAT: n
*SEM: unaryRel[rel=p_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p_+_routes
*CAT: n
*SEM: twoRel[rel=p_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p_+_routes
*CAT: n
*SEM: twoRel[rel=p_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p_+_routes
*CAT: n
*SEM: orRel[rel=p_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_installation
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_installation
*CAT: n
*SEM: twoRel[rel=hydraulic_+_installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_installation
*CAT: n
*SEM: twoRel[rel=hydraulic_+_installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_installation
*CAT: n
*SEM: orRel[rel=hydraulic_+_installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-metallic_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=non-metallic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-metallic_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=non-metallic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-metallic_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=non-metallic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-metallic_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=non-metallic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: required_+_minimum
*CAT: n
*SEM: unaryRel[rel=required_+_minimum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: required_+_minimum
*CAT: n
*SEM: twoRel[rel=required_+_minimum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: required_+_minimum
*CAT: n
*SEM: twoRel[rel=required_+_minimum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: required_+_minimum
*CAT: n
*SEM: orRel[rel=required_+_minimum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: selectors
*CAT: n
*SEM: unaryRel[rel=selectors]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: selectors
*CAT: n
*SEM: twoRel[rel=selectors]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: selectors
*CAT: n
*SEM: twoRel[rel=selectors]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: selectors
*CAT: n
*SEM: orRel[rel=selectors]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: constricted_+_spaces
*CAT: n
*SEM: unaryRel[rel=constricted_+_spaces]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: constricted_+_spaces
*CAT: n
*SEM: twoRel[rel=constricted_+_spaces]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: constricted_+_spaces
*CAT: n
*SEM: twoRel[rel=constricted_+_spaces]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: constricted_+_spaces
*CAT: n
*SEM: orRel[rel=constricted_+_spaces]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: direct_+_contact
*CAT: n
*SEM: unaryRel[rel=direct_+_contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: direct_+_contact
*CAT: n
*SEM: twoRel[rel=direct_+_contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: direct_+_contact
*CAT: n
*SEM: twoRel[rel=direct_+_contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: direct_+_contact
*CAT: n
*SEM: orRel[rel=direct_+_contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamps
*CAT: n
*SEM: unaryRel[rel=p-clamps]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamps
*CAT: n
*SEM: twoRel[rel=p-clamps]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamps
*CAT: n
*SEM: twoRel[rel=p-clamps]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamps
*CAT: n
*SEM: orRel[rel=p-clamps]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: deal
*CAT: n
*SEM: unaryRel[rel=deal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: deal
*CAT: n
*SEM: twoRel[rel=deal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: deal
*CAT: n
*SEM: twoRel[rel=deal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: deal
*CAT: n
*SEM: orRel[rel=deal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: responsible_+_coc_+_is_+_obtained_-_colon_-_
*CAT: n
*SEM: unaryRel[rel=responsible_+_coc_+_is_+_obtained_-_colon_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: responsible_+_coc_+_is_+_obtained_-_colon_-_
*CAT: n
*SEM: twoRel[rel=responsible_+_coc_+_is_+_obtained_-_colon_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: responsible_+_coc_+_is_+_obtained_-_colon_-_
*CAT: n
*SEM: twoRel[rel=responsible_+_coc_+_is_+_obtained_-_colon_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: responsible_+_coc_+_is_+_obtained_-_colon_-_
*CAT: n
*SEM: orRel[rel=responsible_+_coc_+_is_+_obtained_-_colon_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection_+_of_+_bundle
*CAT: n
*SEM: unaryRel[rel=protection_+_of_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection_+_of_+_bundle
*CAT: n
*SEM: twoRel[rel=protection_+_of_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection_+_of_+_bundle
*CAT: n
*SEM: twoRel[rel=protection_+_of_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection_+_of_+_bundle
*CAT: n
*SEM: orRel[rel=protection_+_of_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance_+_of_+_at_+_least_+_10mm
*CAT: n
*SEM: unaryRel[rel=clearance_+_of_+_at_+_least_+_10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance_+_of_+_at_+_least_+_10mm
*CAT: n
*SEM: twoRel[rel=clearance_+_of_+_at_+_least_+_10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance_+_of_+_at_+_least_+_10mm
*CAT: n
*SEM: twoRel[rel=clearance_+_of_+_at_+_least_+_10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance_+_of_+_at_+_least_+_10mm
*CAT: n
*SEM: orRel[rel=clearance_+_of_+_at_+_least_+_10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_relationship
*CAT: n
*SEM: unaryRel[rel=no_+_relationship]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_relationship
*CAT: n
*SEM: twoRel[rel=no_+_relationship]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_relationship
*CAT: n
*SEM: twoRel[rel=no_+_relationship]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_relationship
*CAT: n
*SEM: orRel[rel=no_+_relationship]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.625_+_inch._+_the
*CAT: n
*SEM: unaryRel[rel=0.625_+_inch._+_the]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.625_+_inch._+_the
*CAT: n
*SEM: twoRel[rel=0.625_+_inch._+_the]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.625_+_inch._+_the
*CAT: n
*SEM: twoRel[rel=0.625_+_inch._+_the]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.625_+_inch._+_the
*CAT: n
*SEM: orRel[rel=0.625_+_inch._+_the]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_cable
*CAT: n
*SEM: unaryRel[rel=aluminium_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_cable
*CAT: n
*SEM: twoRel[rel=aluminium_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_cable
*CAT: n
*SEM: twoRel[rel=aluminium_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_cable
*CAT: n
*SEM: orRel[rel=aluminium_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: less_+_than_+_12
*CAT: n
*SEM: unaryRel[rel=less_+_than_+_12]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: less_+_than_+_12
*CAT: n
*SEM: twoRel[rel=less_+_than_+_12]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: less_+_than_+_12
*CAT: n
*SEM: twoRel[rel=less_+_than_+_12]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: less_+_than_+_12
*CAT: n
*SEM: orRel[rel=less_+_than_+_12]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: range_+_between_+_0_-_degrees_-_
*CAT: n
*SEM: unaryRel[rel=range_+_between_+_0_-_degrees_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: range_+_between_+_0_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=range_+_between_+_0_-_degrees_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: range_+_between_+_0_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=range_+_between_+_0_-_degrees_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: range_+_between_+_0_-_degrees_-_
*CAT: n
*SEM: orRel[rel=range_+_between_+_0_-_degrees_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5590
*CAT: n
*SEM: unaryRel[rel=nsa5590]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5590
*CAT: n
*SEM: twoRel[rel=nsa5590]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5590
*CAT: n
*SEM: twoRel[rel=nsa5590]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5590
*CAT: n
*SEM: orRel[rel=nsa5590]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1082_+_bracket
*CAT: n
*SEM: unaryRel[rel=abs_+_1082_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1082_+_bracket
*CAT: n
*SEM: twoRel[rel=abs_+_1082_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1082_+_bracket
*CAT: n
*SEM: twoRel[rel=abs_+_1082_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1082_+_bracket
*CAT: n
*SEM: orRel[rel=abs_+_1082_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_component
*CAT: n
*SEM: unaryRel[rel=obstructive_+_component]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_component
*CAT: n
*SEM: twoRel[rel=obstructive_+_component]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_component
*CAT: n
*SEM: twoRel[rel=obstructive_+_component]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_component
*CAT: n
*SEM: orRel[rel=obstructive_+_component]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_identification
*CAT: n
*SEM: unaryRel[rel=route_+_identification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_identification
*CAT: n
*SEM: twoRel[rel=route_+_identification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_identification
*CAT: n
*SEM: twoRel[rel=route_+_identification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_identification
*CAT: n
*SEM: orRel[rel=route_+_identification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_drop
*CAT: n
*SEM: unaryRel[rel=pressure_+_drop]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_drop
*CAT: n
*SEM: twoRel[rel=pressure_+_drop]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_drop
*CAT: n
*SEM: twoRel[rel=pressure_+_drop]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_drop
*CAT: n
*SEM: orRel[rel=pressure_+_drop]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit
*CAT: n
*SEM: unaryRel[rel=conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit
*CAT: n
*SEM: twoRel[rel=conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit
*CAT: n
*SEM: twoRel[rel=conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit
*CAT: n
*SEM: orRel[rel=conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relation_+_2n_-_backslash_-_d1_+__-_greaterThan_-__+_5d2_-_backslash_-_d1_+__-_smallerThan_-__+_2
*CAT: n
*SEM: unaryRel[rel=relation_+_2n_-_backslash_-_d1_+__-_greaterThan_-__+_5d2_-_backslash_-_d1_+__-_smallerThan_-__+_2]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relation_+_2n_-_backslash_-_d1_+__-_greaterThan_-__+_5d2_-_backslash_-_d1_+__-_smallerThan_-__+_2
*CAT: n
*SEM: twoRel[rel=relation_+_2n_-_backslash_-_d1_+__-_greaterThan_-__+_5d2_-_backslash_-_d1_+__-_smallerThan_-__+_2]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relation_+_2n_-_backslash_-_d1_+__-_greaterThan_-__+_5d2_-_backslash_-_d1_+__-_smallerThan_-__+_2
*CAT: n
*SEM: twoRel[rel=relation_+_2n_-_backslash_-_d1_+__-_greaterThan_-__+_5d2_-_backslash_-_d1_+__-_smallerThan_-__+_2]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relation_+_2n_-_backslash_-_d1_+__-_greaterThan_-__+_5d2_-_backslash_-_d1_+__-_smallerThan_-__+_2
*CAT: n
*SEM: orRel[rel=relation_+_2n_-_backslash_-_d1_+__-_greaterThan_-__+_5d2_-_backslash_-_d1_+__-_smallerThan_-__+_2]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_vibration_+_level_+_installation_+_areas
*CAT: n
*SEM: unaryRel[rel=high_+_vibration_+_level_+_installation_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_vibration_+_level_+_installation_+_areas
*CAT: n
*SEM: twoRel[rel=high_+_vibration_+_level_+_installation_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_vibration_+_level_+_installation_+_areas
*CAT: n
*SEM: twoRel[rel=high_+_vibration_+_level_+_installation_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_vibration_+_level_+_installation_+_areas
*CAT: n
*SEM: orRel[rel=high_+_vibration_+_level_+_installation_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vc
*CAT: n
*SEM: unaryRel[rel=vc]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vc
*CAT: n
*SEM: twoRel[rel=vc]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vc
*CAT: n
*SEM: twoRel[rel=vc]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vc
*CAT: n
*SEM: orRel[rel=vc]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_item_+_during_+_bundle_+_movement
*CAT: n
*SEM: unaryRel[rel=other_+_item_+_during_+_bundle_+_movement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_item_+_during_+_bundle_+_movement
*CAT: n
*SEM: twoRel[rel=other_+_item_+_during_+_bundle_+_movement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_item_+_during_+_bundle_+_movement
*CAT: n
*SEM: twoRel[rel=other_+_item_+_during_+_bundle_+_movement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_item_+_during_+_bundle_+_movement
*CAT: n
*SEM: orRel[rel=other_+_item_+_during_+_bundle_+_movement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulating_+_material_+_ptfe
*CAT: n
*SEM: unaryRel[rel=insulating_+_material_+_ptfe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulating_+_material_+_ptfe
*CAT: n
*SEM: twoRel[rel=insulating_+_material_+_ptfe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulating_+_material_+_ptfe
*CAT: n
*SEM: twoRel[rel=insulating_+_material_+_ptfe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulating_+_material_+_ptfe
*CAT: n
*SEM: orRel[rel=insulating_+_material_+_ptfe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_picture
*CAT: n
*SEM: unaryRel[rel=attached_+_picture]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_picture
*CAT: n
*SEM: twoRel[rel=attached_+_picture]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_picture
*CAT: n
*SEM: twoRel[rel=attached_+_picture]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_picture
*CAT: n
*SEM: orRel[rel=attached_+_picture]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_pipe_+_on_+_the_+_flying_+_tee-union_+_in_+_case_+_of_+_deflection
*CAT: n
*SEM: unaryRel[rel=any_+_other_+_pipe_+_on_+_the_+_flying_+_tee-union_+_in_+_case_+_of_+_deflection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_pipe_+_on_+_the_+_flying_+_tee-union_+_in_+_case_+_of_+_deflection
*CAT: n
*SEM: twoRel[rel=any_+_other_+_pipe_+_on_+_the_+_flying_+_tee-union_+_in_+_case_+_of_+_deflection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_pipe_+_on_+_the_+_flying_+_tee-union_+_in_+_case_+_of_+_deflection
*CAT: n
*SEM: twoRel[rel=any_+_other_+_pipe_+_on_+_the_+_flying_+_tee-union_+_in_+_case_+_of_+_deflection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_pipe_+_on_+_the_+_flying_+_tee-union_+_in_+_case_+_of_+_deflection
*CAT: n
*SEM: orRel[rel=any_+_other_+_pipe_+_on_+_the_+_flying_+_tee-union_+_in_+_case_+_of_+_deflection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame
*CAT: n
*SEM: unaryRel[rel=frame]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame
*CAT: n
*SEM: twoRel[rel=frame]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame
*CAT: n
*SEM: twoRel[rel=frame]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame
*CAT: n
*SEM: orRel[rel=frame]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4mm
*CAT: n
*SEM: unaryRel[rel=4mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4mm
*CAT: n
*SEM: twoRel[rel=4mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4mm
*CAT: n
*SEM: twoRel[rel=4mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4mm
*CAT: n
*SEM: orRel[rel=4mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pra_+__-_opensb_-_particular_+_risk_+_analysis_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=pra_+__-_opensb_-_particular_+_risk_+_analysis_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pra_+__-_opensb_-_particular_+_risk_+_analysis_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=pra_+__-_opensb_-_particular_+_risk_+_analysis_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pra_+__-_opensb_-_particular_+_risk_+_analysis_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=pra_+__-_opensb_-_particular_+_risk_+_analysis_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pra_+__-_opensb_-_particular_+_risk_+_analysis_-_closesb_-_
*CAT: n
*SEM: orRel[rel=pra_+__-_opensb_-_particular_+_risk_+_analysis_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figures_+__-_backslash_-__+_tables
*CAT: n
*SEM: unaryRel[rel=attached_+_figures_+__-_backslash_-__+_tables]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figures_+__-_backslash_-__+_tables
*CAT: n
*SEM: twoRel[rel=attached_+_figures_+__-_backslash_-__+_tables]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figures_+__-_backslash_-__+_tables
*CAT: n
*SEM: twoRel[rel=attached_+_figures_+__-_backslash_-__+_tables]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figures_+__-_backslash_-__+_tables
*CAT: n
*SEM: orRel[rel=attached_+_figures_+__-_backslash_-__+_tables]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_equipment
*CAT: n
*SEM: unaryRel[rel=removable_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_equipment
*CAT: n
*SEM: twoRel[rel=removable_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_equipment
*CAT: n
*SEM: twoRel[rel=removable_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_equipment
*CAT: n
*SEM: orRel[rel=removable_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_coaxial_+_receptable
*CAT: n
*SEM: unaryRel[rel=unused_+_coaxial_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_coaxial_+_receptable
*CAT: n
*SEM: twoRel[rel=unused_+_coaxial_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_coaxial_+_receptable
*CAT: n
*SEM: twoRel[rel=unused_+_coaxial_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_coaxial_+_receptable
*CAT: n
*SEM: orRel[rel=unused_+_coaxial_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 37_-_greaterThan_-__-_equalto_-__+_d_-_greaterThan_-__-_equalto_-__+_25mm
*CAT: n
*SEM: unaryRel[rel=37_-_greaterThan_-__-_equalto_-__+_d_-_greaterThan_-__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 37_-_greaterThan_-__-_equalto_-__+_d_-_greaterThan_-__-_equalto_-__+_25mm
*CAT: n
*SEM: twoRel[rel=37_-_greaterThan_-__-_equalto_-__+_d_-_greaterThan_-__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 37_-_greaterThan_-__-_equalto_-__+_d_-_greaterThan_-__-_equalto_-__+_25mm
*CAT: n
*SEM: twoRel[rel=37_-_greaterThan_-__-_equalto_-__+_d_-_greaterThan_-__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 37_-_greaterThan_-__-_equalto_-__+_d_-_greaterThan_-__-_equalto_-__+_25mm
*CAT: n
*SEM: orRel[rel=37_-_greaterThan_-__-_equalto_-__+_d_-_greaterThan_-__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_75mm
*CAT: n
*SEM: unaryRel[rel=d_-_greaterThan_-__-_equalto_-__+_75mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_75mm
*CAT: n
*SEM: twoRel[rel=d_-_greaterThan_-__-_equalto_-__+_75mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_75mm
*CAT: n
*SEM: twoRel[rel=d_-_greaterThan_-__-_equalto_-__+_75mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_75mm
*CAT: n
*SEM: orRel[rel=d_-_greaterThan_-__-_equalto_-__+_75mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elbow_+_unions
*CAT: n
*SEM: unaryRel[rel=elbow_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elbow_+_unions
*CAT: n
*SEM: twoRel[rel=elbow_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elbow_+_unions
*CAT: n
*SEM: twoRel[rel=elbow_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elbow_+_unions
*CAT: n
*SEM: orRel[rel=elbow_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_operational_+_tolerances
*CAT: n
*SEM: unaryRel[rel=both_+_operational_+_tolerances]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_operational_+_tolerances
*CAT: n
*SEM: twoRel[rel=both_+_operational_+_tolerances]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_operational_+_tolerances
*CAT: n
*SEM: twoRel[rel=both_+_operational_+_tolerances]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_operational_+_tolerances
*CAT: n
*SEM: orRel[rel=both_+_operational_+_tolerances]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_case_+_this_+_distance
*CAT: n
*SEM: unaryRel[rel=no_+_case_+_this_+_distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_case_+_this_+_distance
*CAT: n
*SEM: twoRel[rel=no_+_case_+_this_+_distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_case_+_this_+_distance
*CAT: n
*SEM: twoRel[rel=no_+_case_+_this_+_distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_case_+_this_+_distance
*CAT: n
*SEM: orRel[rel=no_+_case_+_this_+_distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: roughness_+_less
*CAT: n
*SEM: unaryRel[rel=roughness_+_less]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: roughness_+_less
*CAT: n
*SEM: twoRel[rel=roughness_+_less]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: roughness_+_less
*CAT: n
*SEM: twoRel[rel=roughness_+_less]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: roughness_+_less
*CAT: n
*SEM: orRel[rel=roughness_+_less]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_bifilar_+_wire_+_of_+_gauge_+_22
*CAT: n
*SEM: unaryRel[rel=1_+_bifilar_+_wire_+_of_+_gauge_+_22]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_bifilar_+_wire_+_of_+_gauge_+_22
*CAT: n
*SEM: twoRel[rel=1_+_bifilar_+_wire_+_of_+_gauge_+_22]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_bifilar_+_wire_+_of_+_gauge_+_22
*CAT: n
*SEM: twoRel[rel=1_+_bifilar_+_wire_+_of_+_gauge_+_22]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_bifilar_+_wire_+_of_+_gauge_+_22
*CAT: n
*SEM: orRel[rel=1_+_bifilar_+_wire_+_of_+_gauge_+_22]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-pre-stressed_+_bundle
*CAT: n
*SEM: unaryRel[rel=non-pre-stressed_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-pre-stressed_+_bundle
*CAT: n
*SEM: twoRel[rel=non-pre-stressed_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-pre-stressed_+_bundle
*CAT: n
*SEM: twoRel[rel=non-pre-stressed_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-pre-stressed_+_bundle
*CAT: n
*SEM: orRel[rel=non-pre-stressed_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: location
*CAT: n
*SEM: unaryRel[rel=location]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: location
*CAT: n
*SEM: twoRel[rel=location]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: location
*CAT: n
*SEM: twoRel[rel=location]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: location
*CAT: n
*SEM: orRel[rel=location]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1339
*CAT: n
*SEM: unaryRel[rel=abs_+_1339]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1339
*CAT: n
*SEM: twoRel[rel=abs_+_1339]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1339
*CAT: n
*SEM: twoRel[rel=abs_+_1339]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1339
*CAT: n
*SEM: orRel[rel=abs_+_1339]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pull_+_back_+_areof_+_250_+_mm
*CAT: n
*SEM: unaryRel[rel=pull_+_back_+_areof_+_250_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pull_+_back_+_areof_+_250_+_mm
*CAT: n
*SEM: twoRel[rel=pull_+_back_+_areof_+_250_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pull_+_back_+_areof_+_250_+_mm
*CAT: n
*SEM: twoRel[rel=pull_+_back_+_areof_+_250_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pull_+_back_+_areof_+_250_+_mm
*CAT: n
*SEM: orRel[rel=pull_+_back_+_areof_+_250_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_removable_+_end_+__-_opensb_-_e.g._+_connector
*CAT: n
*SEM: unaryRel[rel=at_+_least_+_one_+_removable_+_end_+__-_opensb_-_e.g._+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_removable_+_end_+__-_opensb_-_e.g._+_connector
*CAT: n
*SEM: twoRel[rel=at_+_least_+_one_+_removable_+_end_+__-_opensb_-_e.g._+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_removable_+_end_+__-_opensb_-_e.g._+_connector
*CAT: n
*SEM: twoRel[rel=at_+_least_+_one_+_removable_+_end_+__-_opensb_-_e.g._+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_removable_+_end_+__-_opensb_-_e.g._+_connector
*CAT: n
*SEM: orRel[rel=at_+_least_+_one_+_removable_+_end_+__-_opensb_-_e.g._+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ground_+_power_+_plug
*CAT: n
*SEM: unaryRel[rel=ground_+_power_+_plug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ground_+_power_+_plug
*CAT: n
*SEM: twoRel[rel=ground_+_power_+_plug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ground_+_power_+_plug
*CAT: n
*SEM: twoRel[rel=ground_+_power_+_plug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ground_+_power_+_plug
*CAT: n
*SEM: orRel[rel=ground_+_power_+_plug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_c
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_type_+_c]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_c
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_c]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_c
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_c]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_c
*CAT: n
*SEM: orRel[rel=p-clamp_+_type_+_c]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: way
*CAT: n
*SEM: unaryRel[rel=way]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: way
*CAT: n
*SEM: twoRel[rel=way]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: way
*CAT: n
*SEM: twoRel[rel=way]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: way
*CAT: n
*SEM: orRel[rel=way]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_pink_+_color
*CAT: n
*SEM: unaryRel[rel=in_+_pink_+_color]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_pink_+_color
*CAT: n
*SEM: twoRel[rel=in_+_pink_+_color]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_pink_+_color
*CAT: n
*SEM: twoRel[rel=in_+_pink_+_color]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_pink_+_color
*CAT: n
*SEM: orRel[rel=in_+_pink_+_color]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_segregation
*CAT: n
*SEM: unaryRel[rel=bundle_+_segregation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_segregation
*CAT: n
*SEM: twoRel[rel=bundle_+_segregation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_segregation
*CAT: n
*SEM: twoRel[rel=bundle_+_segregation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_segregation
*CAT: n
*SEM: orRel[rel=bundle_+_segregation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_cables
*CAT: n
*SEM: unaryRel[rel=aluminium_+_cables]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_cables
*CAT: n
*SEM: twoRel[rel=aluminium_+_cables]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_cables
*CAT: n
*SEM: twoRel[rel=aluminium_+_cables]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_cables
*CAT: n
*SEM: orRel[rel=aluminium_+_cables]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blue
*CAT: n
*SEM: unaryRel[rel=blue]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blue
*CAT: n
*SEM: twoRel[rel=blue]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blue
*CAT: n
*SEM: twoRel[rel=blue]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blue
*CAT: n
*SEM: orRel[rel=blue]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_points
*CAT: n
*SEM: unaryRel[rel=attachment_+_points]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_points
*CAT: n
*SEM: twoRel[rel=attachment_+_points]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_points
*CAT: n
*SEM: twoRel[rel=attachment_+_points]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_points
*CAT: n
*SEM: orRel[rel=attachment_+_points]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cavity_+_when
*CAT: n
*SEM: unaryRel[rel=cavity_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cavity_+_when
*CAT: n
*SEM: twoRel[rel=cavity_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cavity_+_when
*CAT: n
*SEM: twoRel[rel=cavity_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cavity_+_when
*CAT: n
*SEM: orRel[rel=cavity_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: damage
*CAT: n
*SEM: unaryRel[rel=damage]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: damage
*CAT: n
*SEM: twoRel[rel=damage]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: damage
*CAT: n
*SEM: twoRel[rel=damage]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: damage
*CAT: n
*SEM: orRel[rel=damage]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation
*CAT: n
*SEM: unaryRel[rel=installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation
*CAT: n
*SEM: twoRel[rel=installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation
*CAT: n
*SEM: twoRel[rel=installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation
*CAT: n
*SEM: orRel[rel=installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: landing_+_gear_+_bay
*CAT: n
*SEM: unaryRel[rel=landing_+_gear_+_bay]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: landing_+_gear_+_bay
*CAT: n
*SEM: twoRel[rel=landing_+_gear_+_bay]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: landing_+_gear_+_bay
*CAT: n
*SEM: twoRel[rel=landing_+_gear_+_bay]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: landing_+_gear_+_bay
*CAT: n
*SEM: orRel[rel=landing_+_gear_+_bay]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauges_+_10_+_to_+_04
*CAT: n
*SEM: unaryRel[rel=gauges_+_10_+_to_+_04]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauges_+_10_+_to_+_04
*CAT: n
*SEM: twoRel[rel=gauges_+_10_+_to_+_04]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauges_+_10_+_to_+_04
*CAT: n
*SEM: twoRel[rel=gauges_+_10_+_to_+_04]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauges_+_10_+_to_+_04
*CAT: n
*SEM: orRel[rel=gauges_+_10_+_to_+_04]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tanks
*CAT: n
*SEM: unaryRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tanks
*CAT: n
*SEM: twoRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tanks
*CAT: n
*SEM: twoRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tanks
*CAT: n
*SEM: orRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_tubes
*CAT: n
*SEM: unaryRel[rel=support_+_tubes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_tubes
*CAT: n
*SEM: twoRel[rel=support_+_tubes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_tubes
*CAT: n
*SEM: twoRel[rel=support_+_tubes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_tubes
*CAT: n
*SEM: orRel[rel=support_+_tubes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dash_+_20_+__-_ampersand_-__+_24_+_sizes_+_where_+_high_+_deflection_+_levels
*CAT: n
*SEM: unaryRel[rel=dash_+_20_+__-_ampersand_-__+_24_+_sizes_+_where_+_high_+_deflection_+_levels]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dash_+_20_+__-_ampersand_-__+_24_+_sizes_+_where_+_high_+_deflection_+_levels
*CAT: n
*SEM: twoRel[rel=dash_+_20_+__-_ampersand_-__+_24_+_sizes_+_where_+_high_+_deflection_+_levels]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dash_+_20_+__-_ampersand_-__+_24_+_sizes_+_where_+_high_+_deflection_+_levels
*CAT: n
*SEM: twoRel[rel=dash_+_20_+__-_ampersand_-__+_24_+_sizes_+_where_+_high_+_deflection_+_levels]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dash_+_20_+__-_ampersand_-__+_24_+_sizes_+_where_+_high_+_deflection_+_levels
*CAT: n
*SEM: orRel[rel=dash_+_20_+__-_ampersand_-__+_24_+_sizes_+_where_+_high_+_deflection_+_levels]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_additional_+_terminal_+_lug_+__-_opensb_-_for_+_in-service_+_needs_-_closesb_-_._+_this_+_applies
*CAT: n
*SEM: unaryRel[rel=one_+_additional_+_terminal_+_lug_+__-_opensb_-_for_+_in-service_+_needs_-_closesb_-_._+_this_+_applies]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_additional_+_terminal_+_lug_+__-_opensb_-_for_+_in-service_+_needs_-_closesb_-_._+_this_+_applies
*CAT: n
*SEM: twoRel[rel=one_+_additional_+_terminal_+_lug_+__-_opensb_-_for_+_in-service_+_needs_-_closesb_-_._+_this_+_applies]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_additional_+_terminal_+_lug_+__-_opensb_-_for_+_in-service_+_needs_-_closesb_-_._+_this_+_applies
*CAT: n
*SEM: twoRel[rel=one_+_additional_+_terminal_+_lug_+__-_opensb_-_for_+_in-service_+_needs_-_closesb_-_._+_this_+_applies]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_additional_+_terminal_+_lug_+__-_opensb_-_for_+_in-service_+_needs_-_closesb_-_._+_this_+_applies
*CAT: n
*SEM: orRel[rel=one_+_additional_+_terminal_+_lug_+__-_opensb_-_for_+_in-service_+_needs_-_closesb_-_._+_this_+_applies]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolt
*CAT: n
*SEM: unaryRel[rel=bolt]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolt
*CAT: n
*SEM: twoRel[rel=bolt]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolt
*CAT: n
*SEM: twoRel[rel=bolt]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolt
*CAT: n
*SEM: orRel[rel=bolt]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sharp_+_edge
*CAT: n
*SEM: unaryRel[rel=sharp_+_edge]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sharp_+_edge
*CAT: n
*SEM: twoRel[rel=sharp_+_edge]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sharp_+_edge
*CAT: n
*SEM: twoRel[rel=sharp_+_edge]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sharp_+_edge
*CAT: n
*SEM: orRel[rel=sharp_+_edge]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 57.15mm
*CAT: n
*SEM: unaryRel[rel=57.15mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 57.15mm
*CAT: n
*SEM: twoRel[rel=57.15mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 57.15mm
*CAT: n
*SEM: twoRel[rel=57.15mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 57.15mm
*CAT: n
*SEM: orRel[rel=57.15mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearly
*CAT: n
*SEM: unaryRel[rel=clearly]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearly
*CAT: n
*SEM: twoRel[rel=clearly]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearly
*CAT: n
*SEM: twoRel[rel=clearly]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearly
*CAT: n
*SEM: orRel[rel=clearly]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 55_-_degrees_-_c
*CAT: n
*SEM: unaryRel[rel=55_-_degrees_-_c]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 55_-_degrees_-_c
*CAT: n
*SEM: twoRel[rel=55_-_degrees_-_c]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 55_-_degrees_-_c
*CAT: n
*SEM: twoRel[rel=55_-_degrees_-_c]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 55_-_degrees_-_c
*CAT: n
*SEM: orRel[rel=55_-_degrees_-_c]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: combi_+_bracket
*CAT: n
*SEM: unaryRel[rel=combi_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: combi_+_bracket
*CAT: n
*SEM: twoRel[rel=combi_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: combi_+_bracket
*CAT: n
*SEM: twoRel[rel=combi_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: combi_+_bracket
*CAT: n
*SEM: orRel[rel=combi_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516j_+_p-clamp
*CAT: n
*SEM: unaryRel[rel=nsa5516j_+_p-clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516j_+_p-clamp
*CAT: n
*SEM: twoRel[rel=nsa5516j_+_p-clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516j_+_p-clamp
*CAT: n
*SEM: twoRel[rel=nsa5516j_+_p-clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516j_+_p-clamp
*CAT: n
*SEM: orRel[rel=nsa5516j_+_p-clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_illustration
*CAT: n
*SEM: unaryRel[rel=attached_+_illustration]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_illustration
*CAT: n
*SEM: twoRel[rel=attached_+_illustration]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_illustration
*CAT: n
*SEM: twoRel[rel=attached_+_illustration]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_illustration
*CAT: n
*SEM: orRel[rel=attached_+_illustration]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surfaces
*CAT: n
*SEM: unaryRel[rel=surfaces]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surfaces
*CAT: n
*SEM: twoRel[rel=surfaces]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surfaces
*CAT: n
*SEM: twoRel[rel=surfaces]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surfaces
*CAT: n
*SEM: orRel[rel=surfaces]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_connectorsor_+_connectors
*CAT: n
*SEM: unaryRel[rel=optical_+_connectorsor_+_connectors]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_connectorsor_+_connectors
*CAT: n
*SEM: twoRel[rel=optical_+_connectorsor_+_connectors]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_connectorsor_+_connectors
*CAT: n
*SEM: twoRel[rel=optical_+_connectorsor_+_connectors]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_connectorsor_+_connectors
*CAT: n
*SEM: orRel[rel=optical_+_connectorsor_+_connectors]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: secured_+_routing_+_case_+_a
*CAT: n
*SEM: unaryRel[rel=secured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: secured_+_routing_+_case_+_a
*CAT: n
*SEM: twoRel[rel=secured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: secured_+_routing_+_case_+_a
*CAT: n
*SEM: twoRel[rel=secured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: secured_+_routing_+_case_+_a
*CAT: n
*SEM: orRel[rel=secured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connected_+_wires
*CAT: n
*SEM: unaryRel[rel=connected_+_wires]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connected_+_wires
*CAT: n
*SEM: twoRel[rel=connected_+_wires]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connected_+_wires
*CAT: n
*SEM: twoRel[rel=connected_+_wires]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connected_+_wires
*CAT: n
*SEM: orRel[rel=connected_+_wires]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal_+_when_+_a_+_backshell
*CAT: n
*SEM: unaryRel[rel=fire_+_seal_+_when_+_a_+_backshell]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal_+_when_+_a_+_backshell
*CAT: n
*SEM: twoRel[rel=fire_+_seal_+_when_+_a_+_backshell]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal_+_when_+_a_+_backshell
*CAT: n
*SEM: twoRel[rel=fire_+_seal_+_when_+_a_+_backshell]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal_+_when_+_a_+_backshell
*CAT: n
*SEM: orRel[rel=fire_+_seal_+_when_+_a_+_backshell]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fluel_+_tank
*CAT: n
*SEM: unaryRel[rel=fluel_+_tank]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fluel_+_tank
*CAT: n
*SEM: twoRel[rel=fluel_+_tank]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fluel_+_tank
*CAT: n
*SEM: twoRel[rel=fluel_+_tank]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fluel_+_tank
*CAT: n
*SEM: orRel[rel=fluel_+_tank]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: recommended_+_values_+_to
*CAT: n
*SEM: unaryRel[rel=recommended_+_values_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: recommended_+_values_+_to
*CAT: n
*SEM: twoRel[rel=recommended_+_values_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: recommended_+_values_+_to
*CAT: n
*SEM: twoRel[rel=recommended_+_values_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: recommended_+_values_+_to
*CAT: n
*SEM: orRel[rel=recommended_+_values_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_point_+_where_+_it_+_will_+_facilitate_+_the_+_tracing
*CAT: n
*SEM: unaryRel[rel=any_+_other_+_point_+_where_+_it_+_will_+_facilitate_+_the_+_tracing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_point_+_where_+_it_+_will_+_facilitate_+_the_+_tracing
*CAT: n
*SEM: twoRel[rel=any_+_other_+_point_+_where_+_it_+_will_+_facilitate_+_the_+_tracing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_point_+_where_+_it_+_will_+_facilitate_+_the_+_tracing
*CAT: n
*SEM: twoRel[rel=any_+_other_+_point_+_where_+_it_+_will_+_facilitate_+_the_+_tracing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_point_+_where_+_it_+_will_+_facilitate_+_the_+_tracing
*CAT: n
*SEM: orRel[rel=any_+_other_+_point_+_where_+_it_+_will_+_facilitate_+_the_+_tracing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: constricted_+_spaces_+_such
*CAT: n
*SEM: unaryRel[rel=constricted_+_spaces_+_such]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: constricted_+_spaces_+_such
*CAT: n
*SEM: twoRel[rel=constricted_+_spaces_+_such]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: constricted_+_spaces_+_such
*CAT: n
*SEM: twoRel[rel=constricted_+_spaces_+_such]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: constricted_+_spaces_+_such
*CAT: n
*SEM: orRel[rel=constricted_+_spaces_+_such]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modify_+_the_+_rest_+_of_+_the_+_installation_+_or
*CAT: n
*SEM: unaryRel[rel=modify_+_the_+_rest_+_of_+_the_+_installation_+_or]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modify_+_the_+_rest_+_of_+_the_+_installation_+_or
*CAT: n
*SEM: twoRel[rel=modify_+_the_+_rest_+_of_+_the_+_installation_+_or]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modify_+_the_+_rest_+_of_+_the_+_installation_+_or
*CAT: n
*SEM: twoRel[rel=modify_+_the_+_rest_+_of_+_the_+_installation_+_or]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modify_+_the_+_rest_+_of_+_the_+_installation_+_or
*CAT: n
*SEM: orRel[rel=modify_+_the_+_rest_+_of_+_the_+_installation_+_or]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_point
*CAT: n
*SEM: unaryRel[rel=low_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_point
*CAT: n
*SEM: twoRel[rel=low_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_point
*CAT: n
*SEM: twoRel[rel=low_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_point
*CAT: n
*SEM: orRel[rel=low_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_provision
*CAT: n
*SEM: unaryRel[rel=spare_+_provision]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_provision
*CAT: n
*SEM: twoRel[rel=spare_+_provision]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_provision
*CAT: n
*SEM: twoRel[rel=spare_+_provision]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_provision
*CAT: n
*SEM: orRel[rel=spare_+_provision]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_is_+_d_-_smallerThan_-__-_equalto_-_10mm
*CAT: n
*SEM: unaryRel[rel=bundle_+_is_+_d_-_smallerThan_-__-_equalto_-_10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_is_+_d_-_smallerThan_-__-_equalto_-_10mm
*CAT: n
*SEM: twoRel[rel=bundle_+_is_+_d_-_smallerThan_-__-_equalto_-_10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_is_+_d_-_smallerThan_-__-_equalto_-_10mm
*CAT: n
*SEM: twoRel[rel=bundle_+_is_+_d_-_smallerThan_-__-_equalto_-_10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_is_+_d_-_smallerThan_-__-_equalto_-_10mm
*CAT: n
*SEM: orRel[rel=bundle_+_is_+_d_-_smallerThan_-__-_equalto_-_10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundles
*CAT: n
*SEM: unaryRel[rel=bundles]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundles
*CAT: n
*SEM: twoRel[rel=bundles]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundles
*CAT: n
*SEM: twoRel[rel=bundles]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundles
*CAT: n
*SEM: orRel[rel=bundles]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936603_+_shrincable_+_cap_+_in_+_all_+_areas
*CAT: n
*SEM: unaryRel[rel=nsa_+_936603_+_shrincable_+_cap_+_in_+_all_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936603_+_shrincable_+_cap_+_in_+_all_+_areas
*CAT: n
*SEM: twoRel[rel=nsa_+_936603_+_shrincable_+_cap_+_in_+_all_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936603_+_shrincable_+_cap_+_in_+_all_+_areas
*CAT: n
*SEM: twoRel[rel=nsa_+_936603_+_shrincable_+_cap_+_in_+_all_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936603_+_shrincable_+_cap_+_in_+_all_+_areas
*CAT: n
*SEM: orRel[rel=nsa_+_936603_+_shrincable_+_cap_+_in_+_all_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stress_+_free_+_installation
*CAT: n
*SEM: unaryRel[rel=stress_+_free_+_installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stress_+_free_+_installation
*CAT: n
*SEM: twoRel[rel=stress_+_free_+_installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stress_+_free_+_installation
*CAT: n
*SEM: twoRel[rel=stress_+_free_+_installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stress_+_free_+_installation
*CAT: n
*SEM: orRel[rel=stress_+_free_+_installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_support_+_distance
*CAT: n
*SEM: unaryRel[rel=maximum_+_support_+_distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_support_+_distance
*CAT: n
*SEM: twoRel[rel=maximum_+_support_+_distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_support_+_distance
*CAT: n
*SEM: twoRel[rel=maximum_+_support_+_distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_support_+_distance
*CAT: n
*SEM: orRel[rel=maximum_+_support_+_distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parallelor
*CAT: n
*SEM: unaryRel[rel=parallelor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parallelor
*CAT: n
*SEM: twoRel[rel=parallelor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parallelor
*CAT: n
*SEM: twoRel[rel=parallelor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parallelor
*CAT: n
*SEM: orRel[rel=parallelor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+__-_opensb_-_e.g._+_abs0887
*CAT: n
*SEM: unaryRel[rel=conduit_+__-_opensb_-_e.g._+_abs0887]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+__-_opensb_-_e.g._+_abs0887
*CAT: n
*SEM: twoRel[rel=conduit_+__-_opensb_-_e.g._+_abs0887]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+__-_opensb_-_e.g._+_abs0887
*CAT: n
*SEM: twoRel[rel=conduit_+__-_opensb_-_e.g._+_abs0887]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+__-_opensb_-_e.g._+_abs0887
*CAT: n
*SEM: orRel[rel=conduit_+__-_opensb_-_e.g._+_abs0887]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: worse_+_case_+_deflections
*CAT: n
*SEM: unaryRel[rel=worse_+_case_+_deflections]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: worse_+_case_+_deflections
*CAT: n
*SEM: twoRel[rel=worse_+_case_+_deflections]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: worse_+_case_+_deflections
*CAT: n
*SEM: twoRel[rel=worse_+_case_+_deflections]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: worse_+_case_+_deflections
*CAT: n
*SEM: orRel[rel=worse_+_case_+_deflections]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_connector
*CAT: n
*SEM: unaryRel[rel=sealed_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_connector
*CAT: n
*SEM: twoRel[rel=sealed_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_connector
*CAT: n
*SEM: twoRel[rel=sealed_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_connector
*CAT: n
*SEM: orRel[rel=sealed_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure
*CAT: n
*SEM: unaryRel[rel=non_+_conductive_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure
*CAT: n
*SEM: orRel[rel=non_+_conductive_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_attachment_+_device
*CAT: n
*SEM: unaryRel[rel=two_+_attachment_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_attachment_+_device
*CAT: n
*SEM: twoRel[rel=two_+_attachment_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_attachment_+_device
*CAT: n
*SEM: twoRel[rel=two_+_attachment_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_attachment_+_device
*CAT: n
*SEM: orRel[rel=two_+_attachment_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block
*CAT: n
*SEM: unaryRel[rel=virtual_+_terminal_+_block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block
*CAT: n
*SEM: orRel[rel=virtual_+_terminal_+_block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: seperatley
*CAT: n
*SEM: unaryRel[rel=seperatley]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: seperatley
*CAT: n
*SEM: twoRel[rel=seperatley]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: seperatley
*CAT: n
*SEM: twoRel[rel=seperatley]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: seperatley
*CAT: n
*SEM: orRel[rel=seperatley]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2d
*CAT: n
*SEM: unaryRel[rel=2d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2d
*CAT: n
*SEM: twoRel[rel=2d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2d
*CAT: n
*SEM: twoRel[rel=2d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2d
*CAT: n
*SEM: orRel[rel=2d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket_+_in_+_order
*CAT: n
*SEM: unaryRel[rel=bracket_+_in_+_order]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket_+_in_+_order
*CAT: n
*SEM: twoRel[rel=bracket_+_in_+_order]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket_+_in_+_order
*CAT: n
*SEM: twoRel[rel=bracket_+_in_+_order]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket_+_in_+_order
*CAT: n
*SEM: orRel[rel=bracket_+_in_+_order]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_plate_+_nsa_+_936809
*CAT: n
*SEM: unaryRel[rel=end_+_plate_+_nsa_+_936809]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_plate_+_nsa_+_936809
*CAT: n
*SEM: twoRel[rel=end_+_plate_+_nsa_+_936809]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_plate_+_nsa_+_936809
*CAT: n
*SEM: twoRel[rel=end_+_plate_+_nsa_+_936809]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_plate_+_nsa_+_936809
*CAT: n
*SEM: orRel[rel=end_+_plate_+_nsa_+_936809]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: entire_+_pneumatic_+_system
*CAT: n
*SEM: unaryRel[rel=entire_+_pneumatic_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: entire_+_pneumatic_+_system
*CAT: n
*SEM: twoRel[rel=entire_+_pneumatic_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: entire_+_pneumatic_+_system
*CAT: n
*SEM: twoRel[rel=entire_+_pneumatic_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: entire_+_pneumatic_+_system
*CAT: n
*SEM: orRel[rel=entire_+_pneumatic_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connectors
*CAT: n
*SEM: unaryRel[rel=connectors]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connectors
*CAT: n
*SEM: twoRel[rel=connectors]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connectors
*CAT: n
*SEM: twoRel[rel=connectors]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connectors
*CAT: n
*SEM: orRel[rel=connectors]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structure
*CAT: n
*SEM: unaryRel[rel=any_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structure
*CAT: n
*SEM: twoRel[rel=any_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structure
*CAT: n
*SEM: twoRel[rel=any_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structure
*CAT: n
*SEM: orRel[rel=any_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: operating_+_temperatures
*CAT: n
*SEM: unaryRel[rel=operating_+_temperatures]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: operating_+_temperatures
*CAT: n
*SEM: twoRel[rel=operating_+_temperatures]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: operating_+_temperatures
*CAT: n
*SEM: twoRel[rel=operating_+_temperatures]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: operating_+_temperatures
*CAT: n
*SEM: orRel[rel=operating_+_temperatures]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: between_+_clamp
*CAT: n
*SEM: unaryRel[rel=between_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: between_+_clamp
*CAT: n
*SEM: twoRel[rel=between_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: between_+_clamp
*CAT: n
*SEM: twoRel[rel=between_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: between_+_clamp
*CAT: n
*SEM: orRel[rel=between_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: particular
*CAT: n
*SEM: unaryRel[rel=particular]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: particular
*CAT: n
*SEM: twoRel[rel=particular]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: particular
*CAT: n
*SEM: twoRel[rel=particular]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: particular
*CAT: n
*SEM: orRel[rel=particular]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_cross_+_connection
*CAT: n
*SEM: unaryRel[rel=any_+_cross_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_cross_+_connection
*CAT: n
*SEM: twoRel[rel=any_+_cross_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_cross_+_connection
*CAT: n
*SEM: twoRel[rel=any_+_cross_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_cross_+_connection
*CAT: n
*SEM: orRel[rel=any_+_cross_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius_+_of_+_2d
*CAT: n
*SEM: unaryRel[rel=minimum_+_bend_+_radius_+_of_+_2d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius_+_of_+_2d
*CAT: n
*SEM: twoRel[rel=minimum_+_bend_+_radius_+_of_+_2d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius_+_of_+_2d
*CAT: n
*SEM: twoRel[rel=minimum_+_bend_+_radius_+_of_+_2d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius_+_of_+_2d
*CAT: n
*SEM: orRel[rel=minimum_+_bend_+_radius_+_of_+_2d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: some_+_cases_+_clearance
*CAT: n
*SEM: unaryRel[rel=some_+_cases_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: some_+_cases_+_clearance
*CAT: n
*SEM: twoRel[rel=some_+_cases_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: some_+_cases_+_clearance
*CAT: n
*SEM: twoRel[rel=some_+_cases_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: some_+_cases_+_clearance
*CAT: n
*SEM: orRel[rel=some_+_cases_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_bracket_+__-_opensb_-_b_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=non_+_conductive_+_bracket_+__-_opensb_-_b_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_bracket_+__-_opensb_-_b_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_bracket_+__-_opensb_-_b_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_bracket_+__-_opensb_-_b_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_bracket_+__-_opensb_-_b_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_bracket_+__-_opensb_-_b_-_closesb_-_
*CAT: n
*SEM: orRel[rel=non_+_conductive_+_bracket_+__-_opensb_-_b_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angles
*CAT: n
*SEM: unaryRel[rel=bend_+_angles]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angles
*CAT: n
*SEM: twoRel[rel=bend_+_angles]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angles
*CAT: n
*SEM: twoRel[rel=bend_+_angles]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angles
*CAT: n
*SEM: orRel[rel=bend_+_angles]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: type
*CAT: n
*SEM: unaryRel[rel=type]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: type
*CAT: n
*SEM: twoRel[rel=type]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: type
*CAT: n
*SEM: twoRel[rel=type]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: type
*CAT: n
*SEM: orRel[rel=type]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact
*CAT: n
*SEM: unaryRel[rel=contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact
*CAT: n
*SEM: twoRel[rel=contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact
*CAT: n
*SEM: twoRel[rel=contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact
*CAT: n
*SEM: orRel[rel=contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locking_+_display_+_in_+_first_+_priorityor_+_lock_+_wire_+_after_+_they_+_had_+_been_+_tightened
*CAT: n
*SEM: unaryRel[rel=locking_+_display_+_in_+_first_+_priorityor_+_lock_+_wire_+_after_+_they_+_had_+_been_+_tightened]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locking_+_display_+_in_+_first_+_priorityor_+_lock_+_wire_+_after_+_they_+_had_+_been_+_tightened
*CAT: n
*SEM: twoRel[rel=locking_+_display_+_in_+_first_+_priorityor_+_lock_+_wire_+_after_+_they_+_had_+_been_+_tightened]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locking_+_display_+_in_+_first_+_priorityor_+_lock_+_wire_+_after_+_they_+_had_+_been_+_tightened
*CAT: n
*SEM: twoRel[rel=locking_+_display_+_in_+_first_+_priorityor_+_lock_+_wire_+_after_+_they_+_had_+_been_+_tightened]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locking_+_display_+_in_+_first_+_priorityor_+_lock_+_wire_+_after_+_they_+_had_+_been_+_tightened
*CAT: n
*SEM: orRel[rel=locking_+_display_+_in_+_first_+_priorityor_+_lock_+_wire_+_after_+_they_+_had_+_been_+_tightened]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_seal
*CAT: n
*SEM: unaryRel[rel=pressure_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_seal
*CAT: n
*SEM: twoRel[rel=pressure_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_seal
*CAT: n
*SEM: twoRel[rel=pressure_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_seal
*CAT: n
*SEM: orRel[rel=pressure_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+_
*CAT: n
*SEM: unaryRel[rel=stand-off_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+_
*CAT: n
*SEM: twoRel[rel=stand-off_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+_
*CAT: n
*SEM: twoRel[rel=stand-off_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+_
*CAT: n
*SEM: orRel[rel=stand-off_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: piping
*CAT: n
*SEM: unaryRel[rel=piping]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: piping
*CAT: n
*SEM: twoRel[rel=piping]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: piping
*CAT: n
*SEM: twoRel[rel=piping]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: piping
*CAT: n
*SEM: orRel[rel=piping]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: provide_+_sufficient_+_space
*CAT: n
*SEM: unaryRel[rel=provide_+_sufficient_+_space]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: provide_+_sufficient_+_space
*CAT: n
*SEM: twoRel[rel=provide_+_sufficient_+_space]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: provide_+_sufficient_+_space
*CAT: n
*SEM: twoRel[rel=provide_+_sufficient_+_space]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: provide_+_sufficient_+_space
*CAT: n
*SEM: orRel[rel=provide_+_sufficient_+_space]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vd
*CAT: n
*SEM: unaryRel[rel=vd]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vd
*CAT: n
*SEM: twoRel[rel=vd]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vd
*CAT: n
*SEM: twoRel[rel=vd]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vd
*CAT: n
*SEM: orRel[rel=vd]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parametric_+_bracket_+_design
*CAT: n
*SEM: unaryRel[rel=parametric_+_bracket_+_design]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parametric_+_bracket_+_design
*CAT: n
*SEM: twoRel[rel=parametric_+_bracket_+_design]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parametric_+_bracket_+_design
*CAT: n
*SEM: twoRel[rel=parametric_+_bracket_+_design]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parametric_+_bracket_+_design
*CAT: n
*SEM: orRel[rel=parametric_+_bracket_+_design]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_2_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=network_+_2_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_2_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=network_+_2_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_2_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=network_+_2_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_2_-_closesb_-_
*CAT: n
*SEM: orRel[rel=network_+_2_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_10_+_times_+_outer
*CAT: n
*SEM: unaryRel[rel=bend_+_10_+_times_+_outer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_10_+_times_+_outer
*CAT: n
*SEM: twoRel[rel=bend_+_10_+_times_+_outer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_10_+_times_+_outer
*CAT: n
*SEM: twoRel[rel=bend_+_10_+_times_+_outer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_10_+_times_+_outer
*CAT: n
*SEM: orRel[rel=bend_+_10_+_times_+_outer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fireresistant_+_connector
*CAT: n
*SEM: unaryRel[rel=fireresistant_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fireresistant_+_connector
*CAT: n
*SEM: twoRel[rel=fireresistant_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fireresistant_+_connector
*CAT: n
*SEM: twoRel[rel=fireresistant_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fireresistant_+_connector
*CAT: n
*SEM: orRel[rel=fireresistant_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 7mm_+_the_+_bundle_+_is_+_attached
*CAT: n
*SEM: unaryRel[rel=7mm_+_the_+_bundle_+_is_+_attached]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 7mm_+_the_+_bundle_+_is_+_attached
*CAT: n
*SEM: twoRel[rel=7mm_+_the_+_bundle_+_is_+_attached]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 7mm_+_the_+_bundle_+_is_+_attached
*CAT: n
*SEM: twoRel[rel=7mm_+_the_+_bundle_+_is_+_attached]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 7mm_+_the_+_bundle_+_is_+_attached
*CAT: n
*SEM: orRel[rel=7mm_+_the_+_bundle_+_is_+_attached]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935829_+_end
*CAT: n
*SEM: unaryRel[rel=nsa_+_935829_+_end]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935829_+_end
*CAT: n
*SEM: twoRel[rel=nsa_+_935829_+_end]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935829_+_end
*CAT: n
*SEM: twoRel[rel=nsa_+_935829_+_end]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935829_+_end
*CAT: n
*SEM: orRel[rel=nsa_+_935829_+_end]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure
*CAT: n
*SEM: unaryRel[rel=pressure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure
*CAT: n
*SEM: twoRel[rel=pressure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure
*CAT: n
*SEM: twoRel[rel=pressure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure
*CAT: n
*SEM: orRel[rel=pressure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_e.g
*CAT: n
*SEM: unaryRel[rel=v-support_+_e.g]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_e.g
*CAT: n
*SEM: twoRel[rel=v-support_+_e.g]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_e.g
*CAT: n
*SEM: twoRel[rel=v-support_+_e.g]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_e.g
*CAT: n
*SEM: orRel[rel=v-support_+_e.g]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment
*CAT: n
*SEM: unaryRel[rel=equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment
*CAT: n
*SEM: twoRel[rel=equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment
*CAT: n
*SEM: twoRel[rel=equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment
*CAT: n
*SEM: orRel[rel=equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_areas
*CAT: n
*SEM: unaryRel[rel=hot_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_areas
*CAT: n
*SEM: twoRel[rel=hot_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_areas
*CAT: n
*SEM: twoRel[rel=hot_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_areas
*CAT: n
*SEM: orRel[rel=hot_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0596_+_split_+_conduit
*CAT: n
*SEM: unaryRel[rel=abs_+_0596_+_split_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0596_+_split_+_conduit
*CAT: n
*SEM: twoRel[rel=abs_+_0596_+_split_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0596_+_split_+_conduit
*CAT: n
*SEM: twoRel[rel=abs_+_0596_+_split_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0596_+_split_+_conduit
*CAT: n
*SEM: orRel[rel=abs_+_0596_+_split_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: code_+__-_invcomma_-__+_w_+_''
*CAT: n
*SEM: unaryRel[rel=code_+__-_invcomma_-__+_w_+_'']
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: code_+__-_invcomma_-__+_w_+_''
*CAT: n
*SEM: twoRel[rel=code_+__-_invcomma_-__+_w_+_'']
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: code_+__-_invcomma_-__+_w_+_''
*CAT: n
*SEM: twoRel[rel=code_+__-_invcomma_-__+_w_+_'']
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: code_+__-_invcomma_-__+_w_+_''
*CAT: n
*SEM: orRel[rel=code_+__-_invcomma_-__+_w_+_'']
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5mm_+__-_smallerThan_-__+__-_equalto_-__+_d_+__-_smallerThan_-_
*CAT: n
*SEM: unaryRel[rel=5mm_+__-_smallerThan_-__+__-_equalto_-__+_d_+__-_smallerThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5mm_+__-_smallerThan_-__+__-_equalto_-__+_d_+__-_smallerThan_-_
*CAT: n
*SEM: twoRel[rel=5mm_+__-_smallerThan_-__+__-_equalto_-__+_d_+__-_smallerThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5mm_+__-_smallerThan_-__+__-_equalto_-__+_d_+__-_smallerThan_-_
*CAT: n
*SEM: twoRel[rel=5mm_+__-_smallerThan_-__+__-_equalto_-__+_d_+__-_smallerThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5mm_+__-_smallerThan_-__+__-_equalto_-__+_d_+__-_smallerThan_-_
*CAT: n
*SEM: orRel[rel=5mm_+__-_smallerThan_-__+__-_equalto_-__+_d_+__-_smallerThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bst_+__-_opensb_-_bracket_+_selection_+_tools_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=bst_+__-_opensb_-_bracket_+_selection_+_tools_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bst_+__-_opensb_-_bracket_+_selection_+_tools_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=bst_+__-_opensb_-_bracket_+_selection_+_tools_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bst_+__-_opensb_-_bracket_+_selection_+_tools_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=bst_+__-_opensb_-_bracket_+_selection_+_tools_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bst_+__-_opensb_-_bracket_+_selection_+_tools_-_closesb_-_
*CAT: n
*SEM: orRel[rel=bst_+__-_opensb_-_bracket_+_selection_+_tools_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: after_+_the_+_loos_+_of_+_separators
*CAT: n
*SEM: unaryRel[rel=after_+_the_+_loos_+_of_+_separators]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: after_+_the_+_loos_+_of_+_separators
*CAT: n
*SEM: twoRel[rel=after_+_the_+_loos_+_of_+_separators]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: after_+_the_+_loos_+_of_+_separators
*CAT: n
*SEM: twoRel[rel=after_+_the_+_loos_+_of_+_separators]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: after_+_the_+_loos_+_of_+_separators
*CAT: n
*SEM: orRel[rel=after_+_the_+_loos_+_of_+_separators]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: for_+_straight_+_runs_+_in_+_constricted_+_spaces_+_such_+_as_+_in_+_the_+_pylon_+_area
*CAT: n
*SEM: unaryRel[rel=for_+_straight_+_runs_+_in_+_constricted_+_spaces_+_such_+_as_+_in_+_the_+_pylon_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: for_+_straight_+_runs_+_in_+_constricted_+_spaces_+_such_+_as_+_in_+_the_+_pylon_+_area
*CAT: n
*SEM: twoRel[rel=for_+_straight_+_runs_+_in_+_constricted_+_spaces_+_such_+_as_+_in_+_the_+_pylon_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: for_+_straight_+_runs_+_in_+_constricted_+_spaces_+_such_+_as_+_in_+_the_+_pylon_+_area
*CAT: n
*SEM: twoRel[rel=for_+_straight_+_runs_+_in_+_constricted_+_spaces_+_such_+_as_+_in_+_the_+_pylon_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: for_+_straight_+_runs_+_in_+_constricted_+_spaces_+_such_+_as_+_in_+_the_+_pylon_+_area
*CAT: n
*SEM: orRel[rel=for_+_straight_+_runs_+_in_+_constricted_+_spaces_+_such_+_as_+_in_+_the_+_pylon_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_heat_+_dissipation
*CAT: n
*SEM: unaryRel[rel=account_+_heat_+_dissipation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_heat_+_dissipation
*CAT: n
*SEM: twoRel[rel=account_+_heat_+_dissipation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_heat_+_dissipation
*CAT: n
*SEM: twoRel[rel=account_+_heat_+_dissipation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_heat_+_dissipation
*CAT: n
*SEM: orRel[rel=account_+_heat_+_dissipation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_to_+_the_+_next_+_pipe_+_bend
*CAT: n
*SEM: unaryRel[rel=distance_+_to_+_the_+_next_+_pipe_+_bend]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_to_+_the_+_next_+_pipe_+_bend
*CAT: n
*SEM: twoRel[rel=distance_+_to_+_the_+_next_+_pipe_+_bend]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_to_+_the_+_next_+_pipe_+_bend
*CAT: n
*SEM: twoRel[rel=distance_+_to_+_the_+_next_+_pipe_+_bend]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_to_+_the_+_next_+_pipe_+_bend
*CAT: n
*SEM: orRel[rel=distance_+_to_+_the_+_next_+_pipe_+_bend]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lower
*CAT: n
*SEM: unaryRel[rel=lower]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lower
*CAT: n
*SEM: twoRel[rel=lower]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lower
*CAT: n
*SEM: twoRel[rel=lower]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lower
*CAT: n
*SEM: orRel[rel=lower]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_distance
*CAT: n
*SEM: unaryRel[rel=sufficient_+_distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_distance
*CAT: n
*SEM: twoRel[rel=sufficient_+_distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_distance
*CAT: n
*SEM: twoRel[rel=sufficient_+_distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_distance
*CAT: n
*SEM: orRel[rel=sufficient_+_distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_i
*CAT: n
*SEM: unaryRel[rel=col_obj1_i]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_i
*CAT: n
*SEM: twoRel[rel=col_obj1_i]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_i
*CAT: n
*SEM: twoRel[rel=col_obj1_i]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_i
*CAT: n
*SEM: orRel[rel=col_obj1_i]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: duct
*CAT: n
*SEM: unaryRel[rel=duct]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: duct
*CAT: n
*SEM: twoRel[rel=duct]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: duct
*CAT: n
*SEM: twoRel[rel=duct]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: duct
*CAT: n
*SEM: orRel[rel=duct]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_systems
*CAT: n
*SEM: unaryRel[rel=other_+_systems]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_systems
*CAT: n
*SEM: twoRel[rel=other_+_systems]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_systems
*CAT: n
*SEM: twoRel[rel=other_+_systems]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_systems
*CAT: n
*SEM: orRel[rel=other_+_systems]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire_+_a_+_clearance
*CAT: n
*SEM: unaryRel[rel=wire_+_a_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire_+_a_+_clearance
*CAT: n
*SEM: twoRel[rel=wire_+_a_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire_+_a_+_clearance
*CAT: n
*SEM: twoRel[rel=wire_+_a_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire_+_a_+_clearance
*CAT: n
*SEM: orRel[rel=wire_+_a_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 60_+__-_percent_-_
*CAT: n
*SEM: unaryRel[rel=60_+__-_percent_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 60_+__-_percent_-_
*CAT: n
*SEM: twoRel[rel=60_+__-_percent_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 60_+__-_percent_-_
*CAT: n
*SEM: twoRel[rel=60_+__-_percent_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 60_+__-_percent_-_
*CAT: n
*SEM: orRel[rel=60_+__-_percent_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: location
*CAT: n
*SEM: unaryRel[rel=location]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: location
*CAT: n
*SEM: twoRel[rel=location]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: location
*CAT: n
*SEM: twoRel[rel=location]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: location
*CAT: n
*SEM: orRel[rel=location]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hanress_+_every_+_2m_+_close_+_to_+_pressure
*CAT: n
*SEM: unaryRel[rel=hanress_+_every_+_2m_+_close_+_to_+_pressure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hanress_+_every_+_2m_+_close_+_to_+_pressure
*CAT: n
*SEM: twoRel[rel=hanress_+_every_+_2m_+_close_+_to_+_pressure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hanress_+_every_+_2m_+_close_+_to_+_pressure
*CAT: n
*SEM: twoRel[rel=hanress_+_every_+_2m_+_close_+_to_+_pressure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hanress_+_every_+_2m_+_close_+_to_+_pressure
*CAT: n
*SEM: orRel[rel=hanress_+_every_+_2m_+_close_+_to_+_pressure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance_+_of_+_10mm
*CAT: n
*SEM: unaryRel[rel=minimum_+_clearance_+_of_+_10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance_+_of_+_10mm
*CAT: n
*SEM: twoRel[rel=minimum_+_clearance_+_of_+_10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance_+_of_+_10mm
*CAT: n
*SEM: twoRel[rel=minimum_+_clearance_+_of_+_10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance_+_of_+_10mm
*CAT: n
*SEM: orRel[rel=minimum_+_clearance_+_of_+_10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_part_+_of_+_p-route
*CAT: n
*SEM: unaryRel[rel=optional_+_part_+_of_+_p-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_part_+_of_+_p-route
*CAT: n
*SEM: twoRel[rel=optional_+_part_+_of_+_p-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_part_+_of_+_p-route
*CAT: n
*SEM: twoRel[rel=optional_+_part_+_of_+_p-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_part_+_of_+_p-route
*CAT: n
*SEM: orRel[rel=optional_+_part_+_of_+_p-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3000psi_+_pipes
*CAT: n
*SEM: unaryRel[rel=3000psi_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3000psi_+_pipes
*CAT: n
*SEM: twoRel[rel=3000psi_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3000psi_+_pipes
*CAT: n
*SEM: twoRel[rel=3000psi_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3000psi_+_pipes
*CAT: n
*SEM: orRel[rel=3000psi_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: information_+_the_+_frame_+_number
*CAT: n
*SEM: unaryRel[rel=information_+_the_+_frame_+_number]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: information_+_the_+_frame_+_number
*CAT: n
*SEM: twoRel[rel=information_+_the_+_frame_+_number]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: information_+_the_+_frame_+_number
*CAT: n
*SEM: twoRel[rel=information_+_the_+_frame_+_number]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: information_+_the_+_frame_+_number
*CAT: n
*SEM: orRel[rel=information_+_the_+_frame_+_number]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_possible
*CAT: n
*SEM: unaryRel[rel=not_+_possible]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_possible
*CAT: n
*SEM: twoRel[rel=not_+_possible]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_possible
*CAT: n
*SEM: twoRel[rel=not_+_possible]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_possible
*CAT: n
*SEM: orRel[rel=not_+_possible]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: controlled_+_relative_+_movement_+_a_+_device_+_to
*CAT: n
*SEM: unaryRel[rel=controlled_+_relative_+_movement_+_a_+_device_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: controlled_+_relative_+_movement_+_a_+_device_+_to
*CAT: n
*SEM: twoRel[rel=controlled_+_relative_+_movement_+_a_+_device_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: controlled_+_relative_+_movement_+_a_+_device_+_to
*CAT: n
*SEM: twoRel[rel=controlled_+_relative_+_movement_+_a_+_device_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: controlled_+_relative_+_movement_+_a_+_device_+_to
*CAT: n
*SEM: orRel[rel=controlled_+_relative_+_movement_+_a_+_device_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bus_+_bar
*CAT: n
*SEM: unaryRel[rel=bus_+_bar]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bus_+_bar
*CAT: n
*SEM: twoRel[rel=bus_+_bar]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bus_+_bar
*CAT: n
*SEM: twoRel[rel=bus_+_bar]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bus_+_bar
*CAT: n
*SEM: orRel[rel=bus_+_bar]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_technical
*CAT: n
*SEM: unaryRel[rel=optional_+_technical]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_technical
*CAT: n
*SEM: twoRel[rel=optional_+_technical]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_technical
*CAT: n
*SEM: twoRel[rel=optional_+_technical]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_technical
*CAT: n
*SEM: orRel[rel=optional_+_technical]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_a_+_maximum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_2500_+_mm
*CAT: n
*SEM: unaryRel[rel=taking_+_into_+_account_+_a_+_maximum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_2500_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_a_+_maximum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_2500_+_mm
*CAT: n
*SEM: twoRel[rel=taking_+_into_+_account_+_a_+_maximum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_2500_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_a_+_maximum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_2500_+_mm
*CAT: n
*SEM: twoRel[rel=taking_+_into_+_account_+_a_+_maximum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_2500_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_a_+_maximum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_2500_+_mm
*CAT: n
*SEM: orRel[rel=taking_+_into_+_account_+_a_+_maximum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_2500_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: uv_+_laser_+_on_+_the_+_insulation
*CAT: n
*SEM: unaryRel[rel=uv_+_laser_+_on_+_the_+_insulation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: uv_+_laser_+_on_+_the_+_insulation
*CAT: n
*SEM: twoRel[rel=uv_+_laser_+_on_+_the_+_insulation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: uv_+_laser_+_on_+_the_+_insulation
*CAT: n
*SEM: twoRel[rel=uv_+_laser_+_on_+_the_+_insulation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: uv_+_laser_+_on_+_the_+_insulation
*CAT: n
*SEM: orRel[rel=uv_+_laser_+_on_+_the_+_insulation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: design
*CAT: n
*SEM: unaryRel[rel=design]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: design
*CAT: n
*SEM: twoRel[rel=design]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: design
*CAT: n
*SEM: twoRel[rel=design]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: design
*CAT: n
*SEM: orRel[rel=design]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_lessthan_-__+_4_+_metres
*CAT: n
*SEM: unaryRel[rel=_-_lessthan_-__+_4_+_metres]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_lessthan_-__+_4_+_metres
*CAT: n
*SEM: twoRel[rel=_-_lessthan_-__+_4_+_metres]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_lessthan_-__+_4_+_metres
*CAT: n
*SEM: twoRel[rel=_-_lessthan_-__+_4_+_metres]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_lessthan_-__+_4_+_metres
*CAT: n
*SEM: orRel[rel=_-_lessthan_-__+_4_+_metres]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_area
*CAT: n
*SEM: unaryRel[rel=this_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_area
*CAT: n
*SEM: twoRel[rel=this_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_area
*CAT: n
*SEM: twoRel[rel=this_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_area
*CAT: n
*SEM: orRel[rel=this_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_faulty_+_connection
*CAT: n
*SEM: unaryRel[rel=avoid_+_faulty_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_faulty_+_connection
*CAT: n
*SEM: twoRel[rel=avoid_+_faulty_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_faulty_+_connection
*CAT: n
*SEM: twoRel[rel=avoid_+_faulty_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_faulty_+_connection
*CAT: n
*SEM: orRel[rel=avoid_+_faulty_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stress_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=stress_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stress_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=stress_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stress_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=stress_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stress_-_closesb_-_
*CAT: n
*SEM: orRel[rel=stress_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansions
*CAT: n
*SEM: unaryRel[rel=expansions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansions
*CAT: n
*SEM: twoRel[rel=expansions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansions
*CAT: n
*SEM: twoRel[rel=expansions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansions
*CAT: n
*SEM: orRel[rel=expansions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cargo_+_floor
*CAT: n
*SEM: unaryRel[rel=cargo_+_floor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cargo_+_floor
*CAT: n
*SEM: twoRel[rel=cargo_+_floor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cargo_+_floor
*CAT: n
*SEM: twoRel[rel=cargo_+_floor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cargo_+_floor
*CAT: n
*SEM: orRel[rel=cargo_+_floor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_block_+_covers
*CAT: n
*SEM: unaryRel[rel=terminal_+_block_+_covers]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_block_+_covers
*CAT: n
*SEM: twoRel[rel=terminal_+_block_+_covers]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_block_+_covers
*CAT: n
*SEM: twoRel[rel=terminal_+_block_+_covers]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_block_+_covers
*CAT: n
*SEM: orRel[rel=terminal_+_block_+_covers]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: difficult_+_access_+_areas
*CAT: n
*SEM: unaryRel[rel=difficult_+_access_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: difficult_+_access_+_areas
*CAT: n
*SEM: twoRel[rel=difficult_+_access_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: difficult_+_access_+_areas
*CAT: n
*SEM: twoRel[rel=difficult_+_access_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: difficult_+_access_+_areas
*CAT: n
*SEM: orRel[rel=difficult_+_access_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized
*CAT: n
*SEM: unaryRel[rel=pressurized]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized
*CAT: n
*SEM: twoRel[rel=pressurized]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized
*CAT: n
*SEM: twoRel[rel=pressurized]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized
*CAT: n
*SEM: orRel[rel=pressurized]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crimped_+_area
*CAT: n
*SEM: unaryRel[rel=crimped_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crimped_+_area
*CAT: n
*SEM: twoRel[rel=crimped_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crimped_+_area
*CAT: n
*SEM: twoRel[rel=crimped_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crimped_+_area
*CAT: n
*SEM: orRel[rel=crimped_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0369_+_saddle_+_clamp
*CAT: n
*SEM: unaryRel[rel=abs0369_+_saddle_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0369_+_saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=abs0369_+_saddle_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0369_+_saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=abs0369_+_saddle_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0369_+_saddle_+_clamp
*CAT: n
*SEM: orRel[rel=abs0369_+_saddle_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2110_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=abs2110_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2110_+_clamp-block
*CAT: n
*SEM: twoRel[rel=abs2110_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2110_+_clamp-block
*CAT: n
*SEM: twoRel[rel=abs2110_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2110_+_clamp-block
*CAT: n
*SEM: orRel[rel=abs2110_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_detection_+_sensing_+_circuit
*CAT: n
*SEM: unaryRel[rel=fire_+_detection_+_sensing_+_circuit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_detection_+_sensing_+_circuit
*CAT: n
*SEM: twoRel[rel=fire_+_detection_+_sensing_+_circuit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_detection_+_sensing_+_circuit
*CAT: n
*SEM: twoRel[rel=fire_+_detection_+_sensing_+_circuit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_detection_+_sensing_+_circuit
*CAT: n
*SEM: orRel[rel=fire_+_detection_+_sensing_+_circuit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_as
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_as]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_as
*CAT: n
*SEM: twoRel[rel=p-clamp_+_as]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_as
*CAT: n
*SEM: twoRel[rel=p-clamp_+_as]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_as
*CAT: n
*SEM: orRel[rel=p-clamp_+_as]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: differently
*CAT: n
*SEM: unaryRel[rel=differently]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: differently
*CAT: n
*SEM: twoRel[rel=differently]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: differently
*CAT: n
*SEM: twoRel[rel=differently]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: differently
*CAT: n
*SEM: orRel[rel=differently]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_areas
*CAT: n
*SEM: unaryRel[rel=fire_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_areas
*CAT: n
*SEM: twoRel[rel=fire_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_areas
*CAT: n
*SEM: twoRel[rel=fire_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_areas
*CAT: n
*SEM: orRel[rel=fire_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_leakage_+_to_+_the_+_pipe
*CAT: n
*SEM: unaryRel[rel=no_+_leakage_+_to_+_the_+_pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_leakage_+_to_+_the_+_pipe
*CAT: n
*SEM: twoRel[rel=no_+_leakage_+_to_+_the_+_pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_leakage_+_to_+_the_+_pipe
*CAT: n
*SEM: twoRel[rel=no_+_leakage_+_to_+_the_+_pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_leakage_+_to_+_the_+_pipe
*CAT: n
*SEM: orRel[rel=no_+_leakage_+_to_+_the_+_pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: “single-hole”_+_type_+_clamp-block_+_solution
*CAT: n
*SEM: unaryRel[rel=“single-hole”_+_type_+_clamp-block_+_solution]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: “single-hole”_+_type_+_clamp-block_+_solution
*CAT: n
*SEM: twoRel[rel=“single-hole”_+_type_+_clamp-block_+_solution]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: “single-hole”_+_type_+_clamp-block_+_solution
*CAT: n
*SEM: twoRel[rel=“single-hole”_+_type_+_clamp-block_+_solution]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: “single-hole”_+_type_+_clamp-block_+_solution
*CAT: n
*SEM: orRel[rel=“single-hole”_+_type_+_clamp-block_+_solution]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2._+_label
*CAT: n
*SEM: unaryRel[rel=2._+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2._+_label
*CAT: n
*SEM: twoRel[rel=2._+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2._+_label
*CAT: n
*SEM: twoRel[rel=2._+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2._+_label
*CAT: n
*SEM: orRel[rel=2._+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g
*CAT: n
*SEM: unaryRel[rel=e.g]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g
*CAT: n
*SEM: twoRel[rel=e.g]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g
*CAT: n
*SEM: twoRel[rel=e.g]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g
*CAT: n
*SEM: orRel[rel=e.g]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5516bd
*CAT: n
*SEM: unaryRel[rel=5516bd]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5516bd
*CAT: n
*SEM: twoRel[rel=5516bd]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5516bd
*CAT: n
*SEM: twoRel[rel=5516bd]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5516bd
*CAT: n
*SEM: orRel[rel=5516bd]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_in_+_bended_+_sections_+_of_+_bundles.or_+_in_+_zones_+_below_+_toilets
*CAT: n
*SEM: unaryRel[rel=or_+_in_+_bended_+_sections_+_of_+_bundles.or_+_in_+_zones_+_below_+_toilets]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_in_+_bended_+_sections_+_of_+_bundles.or_+_in_+_zones_+_below_+_toilets
*CAT: n
*SEM: twoRel[rel=or_+_in_+_bended_+_sections_+_of_+_bundles.or_+_in_+_zones_+_below_+_toilets]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_in_+_bended_+_sections_+_of_+_bundles.or_+_in_+_zones_+_below_+_toilets
*CAT: n
*SEM: twoRel[rel=or_+_in_+_bended_+_sections_+_of_+_bundles.or_+_in_+_zones_+_below_+_toilets]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_in_+_bended_+_sections_+_of_+_bundles.or_+_in_+_zones_+_below_+_toilets
*CAT: n
*SEM: orRel[rel=or_+_in_+_bended_+_sections_+_of_+_bundles.or_+_in_+_zones_+_below_+_toilets]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: panels_+_removed
*CAT: n
*SEM: unaryRel[rel=panels_+_removed]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: panels_+_removed
*CAT: n
*SEM: twoRel[rel=panels_+_removed]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: panels_+_removed
*CAT: n
*SEM: twoRel[rel=panels_+_removed]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: panels_+_removed
*CAT: n
*SEM: orRel[rel=panels_+_removed]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_priorityor
*CAT: n
*SEM: unaryRel[rel=second_+_priorityor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_priorityor
*CAT: n
*SEM: twoRel[rel=second_+_priorityor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_priorityor
*CAT: n
*SEM: twoRel[rel=second_+_priorityor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_priorityor
*CAT: n
*SEM: orRel[rel=second_+_priorityor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: which_+_can_+_not_+_be_+_sealed
*CAT: n
*SEM: unaryRel[rel=which_+_can_+_not_+_be_+_sealed]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: which_+_can_+_not_+_be_+_sealed
*CAT: n
*SEM: twoRel[rel=which_+_can_+_not_+_be_+_sealed]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: which_+_can_+_not_+_be_+_sealed
*CAT: n
*SEM: twoRel[rel=which_+_can_+_not_+_be_+_sealed]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: which_+_can_+_not_+_be_+_sealed
*CAT: n
*SEM: orRel[rel=which_+_can_+_not_+_be_+_sealed]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_2_+_solution
*CAT: n
*SEM: unaryRel[rel=priority_+_2_+_solution]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_2_+_solution
*CAT: n
*SEM: twoRel[rel=priority_+_2_+_solution]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_2_+_solution
*CAT: n
*SEM: twoRel[rel=priority_+_2_+_solution]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_2_+_solution
*CAT: n
*SEM: orRel[rel=priority_+_2_+_solution]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_
*CAT: n
*SEM: orRel[rel=virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_connections_+_of_+_a_+_tee-_+_unions
*CAT: n
*SEM: unaryRel[rel=two_+_connections_+_of_+_a_+_tee-_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_connections_+_of_+_a_+_tee-_+_unions
*CAT: n
*SEM: twoRel[rel=two_+_connections_+_of_+_a_+_tee-_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_connections_+_of_+_a_+_tee-_+_unions
*CAT: n
*SEM: twoRel[rel=two_+_connections_+_of_+_a_+_tee-_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_connections_+_of_+_a_+_tee-_+_unions
*CAT: n
*SEM: orRel[rel=two_+_connections_+_of_+_a_+_tee-_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: un_+_series_+_thread_+_type
*CAT: n
*SEM: unaryRel[rel=un_+_series_+_thread_+_type]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: un_+_series_+_thread_+_type
*CAT: n
*SEM: twoRel[rel=un_+_series_+_thread_+_type]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: un_+_series_+_thread_+_type
*CAT: n
*SEM: twoRel[rel=un_+_series_+_thread_+_type]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: un_+_series_+_thread_+_type
*CAT: n
*SEM: orRel[rel=un_+_series_+_thread_+_type]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_closed_+_conduit
*CAT: n
*SEM: unaryRel[rel=one_+_closed_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_closed_+_conduit
*CAT: n
*SEM: twoRel[rel=one_+_closed_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_closed_+_conduit
*CAT: n
*SEM: twoRel[rel=one_+_closed_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_closed_+_conduit
*CAT: n
*SEM: orRel[rel=one_+_closed_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 180_-_degrees_-__+_downwards
*CAT: n
*SEM: unaryRel[rel=180_-_degrees_-__+_downwards]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 180_-_degrees_-__+_downwards
*CAT: n
*SEM: twoRel[rel=180_-_degrees_-__+_downwards]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 180_-_degrees_-__+_downwards
*CAT: n
*SEM: twoRel[rel=180_-_degrees_-__+_downwards]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 180_-_degrees_-__+_downwards
*CAT: n
*SEM: orRel[rel=180_-_degrees_-__+_downwards]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: module_+_1
*CAT: n
*SEM: unaryRel[rel=module_+_1]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: module_+_1
*CAT: n
*SEM: twoRel[rel=module_+_1]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: module_+_1
*CAT: n
*SEM: twoRel[rel=module_+_1]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: module_+_1
*CAT: n
*SEM: orRel[rel=module_+_1]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact_+_arrangement_+_in_+_first_+_priorityor_+_the_+_length_+_of_+_cable_-_backslash_-_wire
*CAT: n
*SEM: unaryRel[rel=contact_+_arrangement_+_in_+_first_+_priorityor_+_the_+_length_+_of_+_cable_-_backslash_-_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact_+_arrangement_+_in_+_first_+_priorityor_+_the_+_length_+_of_+_cable_-_backslash_-_wire
*CAT: n
*SEM: twoRel[rel=contact_+_arrangement_+_in_+_first_+_priorityor_+_the_+_length_+_of_+_cable_-_backslash_-_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact_+_arrangement_+_in_+_first_+_priorityor_+_the_+_length_+_of_+_cable_-_backslash_-_wire
*CAT: n
*SEM: twoRel[rel=contact_+_arrangement_+_in_+_first_+_priorityor_+_the_+_length_+_of_+_cable_-_backslash_-_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact_+_arrangement_+_in_+_first_+_priorityor_+_the_+_length_+_of_+_cable_-_backslash_-_wire
*CAT: n
*SEM: orRel[rel=contact_+_arrangement_+_in_+_first_+_priorityor_+_the_+_length_+_of_+_cable_-_backslash_-_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modules
*CAT: n
*SEM: unaryRel[rel=modules]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modules
*CAT: n
*SEM: twoRel[rel=modules]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modules
*CAT: n
*SEM: twoRel[rel=modules]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modules
*CAT: n
*SEM: orRel[rel=modules]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0710010_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=0710010_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0710010_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=0710010_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0710010_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=0710010_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0710010_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=0710010_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contamination_+_dummy_+_recetpable
*CAT: n
*SEM: unaryRel[rel=contamination_+_dummy_+_recetpable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contamination_+_dummy_+_recetpable
*CAT: n
*SEM: twoRel[rel=contamination_+_dummy_+_recetpable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contamination_+_dummy_+_recetpable
*CAT: n
*SEM: twoRel[rel=contamination_+_dummy_+_recetpable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contamination_+_dummy_+_recetpable
*CAT: n
*SEM: orRel[rel=contamination_+_dummy_+_recetpable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grommet
*CAT: n
*SEM: unaryRel[rel=grommet]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grommet
*CAT: n
*SEM: twoRel[rel=grommet]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grommet
*CAT: n
*SEM: twoRel[rel=grommet]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grommet
*CAT: n
*SEM: orRel[rel=grommet]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bus_+_bar_+_fixation
*CAT: n
*SEM: unaryRel[rel=bus_+_bar_+_fixation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bus_+_bar_+_fixation
*CAT: n
*SEM: twoRel[rel=bus_+_bar_+_fixation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bus_+_bar_+_fixation
*CAT: n
*SEM: twoRel[rel=bus_+_bar_+_fixation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bus_+_bar_+_fixation
*CAT: n
*SEM: orRel[rel=bus_+_bar_+_fixation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: code_+__-_invcomma_-__+_t_+_''
*CAT: n
*SEM: unaryRel[rel=code_+__-_invcomma_-__+_t_+_'']
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: code_+__-_invcomma_-__+_t_+_''
*CAT: n
*SEM: twoRel[rel=code_+__-_invcomma_-__+_t_+_'']
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: code_+__-_invcomma_-__+_t_+_''
*CAT: n
*SEM: twoRel[rel=code_+__-_invcomma_-__+_t_+_'']
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: code_+__-_invcomma_-__+_t_+_''
*CAT: n
*SEM: orRel[rel=code_+__-_invcomma_-__+_t_+_'']
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: al_+_area
*CAT: n
*SEM: unaryRel[rel=al_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: al_+_area
*CAT: n
*SEM: twoRel[rel=al_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: al_+_area
*CAT: n
*SEM: twoRel[rel=al_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: al_+_area
*CAT: n
*SEM: orRel[rel=al_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi_+_branch_+_single_+_derivation
*CAT: n
*SEM: unaryRel[rel=multi_+_branch_+_single_+_derivation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi_+_branch_+_single_+_derivation
*CAT: n
*SEM: twoRel[rel=multi_+_branch_+_single_+_derivation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi_+_branch_+_single_+_derivation
*CAT: n
*SEM: twoRel[rel=multi_+_branch_+_single_+_derivation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi_+_branch_+_single_+_derivation
*CAT: n
*SEM: orRel[rel=multi_+_branch_+_single_+_derivation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route
*CAT: n
*SEM: unaryRel[rel=g-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route
*CAT: n
*SEM: twoRel[rel=g-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route
*CAT: n
*SEM: twoRel[rel=g-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route
*CAT: n
*SEM: orRel[rel=g-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_togehter
*CAT: n
*SEM: unaryRel[rel=up_+_togehter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_togehter
*CAT: n
*SEM: twoRel[rel=up_+_togehter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_togehter
*CAT: n
*SEM: twoRel[rel=up_+_togehter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_togehter
*CAT: n
*SEM: orRel[rel=up_+_togehter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: environmental_+_constrain_+_e.g
*CAT: n
*SEM: unaryRel[rel=environmental_+_constrain_+_e.g]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: environmental_+_constrain_+_e.g
*CAT: n
*SEM: twoRel[rel=environmental_+_constrain_+_e.g]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: environmental_+_constrain_+_e.g
*CAT: n
*SEM: twoRel[rel=environmental_+_constrain_+_e.g]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: environmental_+_constrain_+_e.g
*CAT: n
*SEM: orRel[rel=environmental_+_constrain_+_e.g]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_much
*CAT: n
*SEM: unaryRel[rel=as_+_much]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_much
*CAT: n
*SEM: twoRel[rel=as_+_much]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_much
*CAT: n
*SEM: twoRel[rel=as_+_much]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_much
*CAT: n
*SEM: orRel[rel=as_+_much]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_pipe
*CAT: n
*SEM: unaryRel[rel=least_+_one_+_pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_pipe
*CAT: n
*SEM: twoRel[rel=least_+_one_+_pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_pipe
*CAT: n
*SEM: twoRel[rel=least_+_one_+_pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_pipe
*CAT: n
*SEM: orRel[rel=least_+_one_+_pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_cases
*CAT: n
*SEM: unaryRel[rel=specific_+_cases]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_cases
*CAT: n
*SEM: twoRel[rel=specific_+_cases]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_cases
*CAT: n
*SEM: twoRel[rel=specific_+_cases]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_cases
*CAT: n
*SEM: orRel[rel=specific_+_cases]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ease_+_pipe_+_routing_+_arrangements
*CAT: n
*SEM: unaryRel[rel=ease_+_pipe_+_routing_+_arrangements]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ease_+_pipe_+_routing_+_arrangements
*CAT: n
*SEM: twoRel[rel=ease_+_pipe_+_routing_+_arrangements]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ease_+_pipe_+_routing_+_arrangements
*CAT: n
*SEM: twoRel[rel=ease_+_pipe_+_routing_+_arrangements]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ease_+_pipe_+_routing_+_arrangements
*CAT: n
*SEM: orRel[rel=ease_+_pipe_+_routing_+_arrangements]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_50mm
*CAT: n
*SEM: unaryRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_50mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_50mm
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_50mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_50mm
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_50mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-_50mm
*CAT: n
*SEM: orRel[rel=d_+__-_greaterThan_-__+__-_equalto_-_50mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_items_+__-_opensb_-_in_+_particular
*CAT: n
*SEM: unaryRel[rel=electrical_+_items_+__-_opensb_-_in_+_particular]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_items_+__-_opensb_-_in_+_particular
*CAT: n
*SEM: twoRel[rel=electrical_+_items_+__-_opensb_-_in_+_particular]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_items_+__-_opensb_-_in_+_particular
*CAT: n
*SEM: twoRel[rel=electrical_+_items_+__-_opensb_-_in_+_particular]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_items_+__-_opensb_-_in_+_particular
*CAT: n
*SEM: orRel[rel=electrical_+_items_+__-_opensb_-_in_+_particular]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: three_+_support_+_points
*CAT: n
*SEM: unaryRel[rel=three_+_support_+_points]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: three_+_support_+_points
*CAT: n
*SEM: twoRel[rel=three_+_support_+_points]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: three_+_support_+_points
*CAT: n
*SEM: twoRel[rel=three_+_support_+_points]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: three_+_support_+_points
*CAT: n
*SEM: orRel[rel=three_+_support_+_points]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper
*CAT: n
*SEM: unaryRel[rel=copper]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper
*CAT: n
*SEM: twoRel[rel=copper]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper
*CAT: n
*SEM: twoRel[rel=copper]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper
*CAT: n
*SEM: orRel[rel=copper]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_diode_+__-_opensb_-_vd_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=virtual_+_diode_+__-_opensb_-_vd_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_diode_+__-_opensb_-_vd_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=virtual_+_diode_+__-_opensb_-_vd_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_diode_+__-_opensb_-_vd_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=virtual_+_diode_+__-_opensb_-_vd_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_diode_+__-_opensb_-_vd_-_closesb_-_
*CAT: n
*SEM: orRel[rel=virtual_+_diode_+__-_opensb_-_vd_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_a_+_minimum_+_straight_+_distance
*CAT: n
*SEM: unaryRel[rel=account_+_a_+_minimum_+_straight_+_distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_a_+_minimum_+_straight_+_distance
*CAT: n
*SEM: twoRel[rel=account_+_a_+_minimum_+_straight_+_distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_a_+_minimum_+_straight_+_distance
*CAT: n
*SEM: twoRel[rel=account_+_a_+_minimum_+_straight_+_distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_a_+_minimum_+_straight_+_distance
*CAT: n
*SEM: orRel[rel=account_+_a_+_minimum_+_straight_+_distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device
*CAT: n
*SEM: unaryRel[rel=attachment_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device
*CAT: n
*SEM: twoRel[rel=attachment_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device
*CAT: n
*SEM: twoRel[rel=attachment_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device
*CAT: n
*SEM: orRel[rel=attachment_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: larger_+_clearance
*CAT: n
*SEM: unaryRel[rel=larger_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: larger_+_clearance
*CAT: n
*SEM: twoRel[rel=larger_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: larger_+_clearance
*CAT: n
*SEM: twoRel[rel=larger_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: larger_+_clearance
*CAT: n
*SEM: orRel[rel=larger_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_equivalent_+_reinforcement
*CAT: n
*SEM: unaryRel[rel=or_+_equivalent_+_reinforcement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_equivalent_+_reinforcement
*CAT: n
*SEM: twoRel[rel=or_+_equivalent_+_reinforcement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_equivalent_+_reinforcement
*CAT: n
*SEM: twoRel[rel=or_+_equivalent_+_reinforcement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_equivalent_+_reinforcement
*CAT: n
*SEM: orRel[rel=or_+_equivalent_+_reinforcement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_over_+_length_+_in_+_drip_+_loop_+_at_+_interface_+_areas
*CAT: n
*SEM: unaryRel[rel=repair_+_over_+_length_+_in_+_drip_+_loop_+_at_+_interface_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_over_+_length_+_in_+_drip_+_loop_+_at_+_interface_+_areas
*CAT: n
*SEM: twoRel[rel=repair_+_over_+_length_+_in_+_drip_+_loop_+_at_+_interface_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_over_+_length_+_in_+_drip_+_loop_+_at_+_interface_+_areas
*CAT: n
*SEM: twoRel[rel=repair_+_over_+_length_+_in_+_drip_+_loop_+_at_+_interface_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_over_+_length_+_in_+_drip_+_loop_+_at_+_interface_+_areas
*CAT: n
*SEM: orRel[rel=repair_+_over_+_length_+_in_+_drip_+_loop_+_at_+_interface_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1339_+_on_+_the_+_bundlel
*CAT: n
*SEM: unaryRel[rel=abs_+_1339_+_on_+_the_+_bundlel]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1339_+_on_+_the_+_bundlel
*CAT: n
*SEM: twoRel[rel=abs_+_1339_+_on_+_the_+_bundlel]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1339_+_on_+_the_+_bundlel
*CAT: n
*SEM: twoRel[rel=abs_+_1339_+_on_+_the_+_bundlel]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1339_+_on_+_the_+_bundlel
*CAT: n
*SEM: orRel[rel=abs_+_1339_+_on_+_the_+_bundlel]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permanently
*CAT: n
*SEM: unaryRel[rel=permanently]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permanently
*CAT: n
*SEM: twoRel[rel=permanently]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permanently
*CAT: n
*SEM: twoRel[rel=permanently]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permanently
*CAT: n
*SEM: orRel[rel=permanently]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne5107-b
*CAT: n
*SEM: unaryRel[rel=asne5107-b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne5107-b
*CAT: n
*SEM: twoRel[rel=asne5107-b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne5107-b
*CAT: n
*SEM: twoRel[rel=asne5107-b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne5107-b
*CAT: n
*SEM: orRel[rel=asne5107-b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swaged_+_fittings
*CAT: n
*SEM: unaryRel[rel=swaged_+_fittings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swaged_+_fittings
*CAT: n
*SEM: twoRel[rel=swaged_+_fittings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swaged_+_fittings
*CAT: n
*SEM: twoRel[rel=swaged_+_fittings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swaged_+_fittings
*CAT: n
*SEM: orRel[rel=swaged_+_fittings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperatures
*CAT: n
*SEM: unaryRel[rel=temperatures]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperatures
*CAT: n
*SEM: twoRel[rel=temperatures]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperatures
*CAT: n
*SEM: twoRel[rel=temperatures]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperatures
*CAT: n
*SEM: orRel[rel=temperatures]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_nsa5516_+_cbdor_+_as62200_+__-_opensb_-_not_+_preferred_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_nsa5516_+_cbdor_+_as62200_+__-_opensb_-_not_+_preferred_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_nsa5516_+_cbdor_+_as62200_+__-_opensb_-_not_+_preferred_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=p-clamp_+_nsa5516_+_cbdor_+_as62200_+__-_opensb_-_not_+_preferred_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_nsa5516_+_cbdor_+_as62200_+__-_opensb_-_not_+_preferred_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=p-clamp_+_nsa5516_+_cbdor_+_as62200_+__-_opensb_-_not_+_preferred_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_nsa5516_+_cbdor_+_as62200_+__-_opensb_-_not_+_preferred_-_closesb_-_
*CAT: n
*SEM: orRel[rel=p-clamp_+_nsa5516_+_cbdor_+_as62200_+__-_opensb_-_not_+_preferred_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_terminal_+_lug
*CAT: n
*SEM: unaryRel[rel=aluminium_+_terminal_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=aluminium_+_terminal_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=aluminium_+_terminal_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_terminal_+_lug
*CAT: n
*SEM: orRel[rel=aluminium_+_terminal_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductors
*CAT: n
*SEM: unaryRel[rel=conductors]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductors
*CAT: n
*SEM: twoRel[rel=conductors]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductors
*CAT: n
*SEM: twoRel[rel=conductors]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductors
*CAT: n
*SEM: orRel[rel=conductors]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_systems_+_e.g_-_colon_-__+_hinge_+_arms
*CAT: n
*SEM: unaryRel[rel=other_+_systems_+_e.g_-_colon_-__+_hinge_+_arms]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_systems_+_e.g_-_colon_-__+_hinge_+_arms
*CAT: n
*SEM: twoRel[rel=other_+_systems_+_e.g_-_colon_-__+_hinge_+_arms]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_systems_+_e.g_-_colon_-__+_hinge_+_arms
*CAT: n
*SEM: twoRel[rel=other_+_systems_+_e.g_-_colon_-__+_hinge_+_arms]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_systems_+_e.g_-_colon_-__+_hinge_+_arms
*CAT: n
*SEM: orRel[rel=other_+_systems_+_e.g_-_colon_-__+_hinge_+_arms]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: full_+_provisions
*CAT: n
*SEM: unaryRel[rel=full_+_provisions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: full_+_provisions
*CAT: n
*SEM: twoRel[rel=full_+_provisions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: full_+_provisions
*CAT: n
*SEM: twoRel[rel=full_+_provisions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: full_+_provisions
*CAT: n
*SEM: orRel[rel=full_+_provisions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_connector_+_types
*CAT: n
*SEM: unaryRel[rel=different_+_connector_+_types]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_connector_+_types
*CAT: n
*SEM: twoRel[rel=different_+_connector_+_types]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_connector_+_types
*CAT: n
*SEM: twoRel[rel=different_+_connector_+_types]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_connector_+_types
*CAT: n
*SEM: orRel[rel=different_+_connector_+_types]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_orientation_+_shown_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: unaryRel[rel=an_+_orientation_+_shown_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_orientation_+_shown_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: twoRel[rel=an_+_orientation_+_shown_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_orientation_+_shown_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: twoRel[rel=an_+_orientation_+_shown_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_orientation_+_shown_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: orRel[rel=an_+_orientation_+_shown_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_5_+_mm_+_additional_+_gap
*CAT: n
*SEM: unaryRel[rel=minimum_+_5_+_mm_+_additional_+_gap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_5_+_mm_+_additional_+_gap
*CAT: n
*SEM: twoRel[rel=minimum_+_5_+_mm_+_additional_+_gap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_5_+_mm_+_additional_+_gap
*CAT: n
*SEM: twoRel[rel=minimum_+_5_+_mm_+_additional_+_gap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_5_+_mm_+_additional_+_gap
*CAT: n
*SEM: orRel[rel=minimum_+_5_+_mm_+_additional_+_gap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_strain_+__+_distortion_+__+_deflection
*CAT: n
*SEM: unaryRel[rel=account_+_strain_+__+_distortion_+__+_deflection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_strain_+__+_distortion_+__+_deflection
*CAT: n
*SEM: twoRel[rel=account_+_strain_+__+_distortion_+__+_deflection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_strain_+__+_distortion_+__+_deflection
*CAT: n
*SEM: twoRel[rel=account_+_strain_+__+_distortion_+__+_deflection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_strain_+__+_distortion_+__+_deflection
*CAT: n
*SEM: orRel[rel=account_+_strain_+__+_distortion_+__+_deflection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loos
*CAT: n
*SEM: unaryRel[rel=loos]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loos
*CAT: n
*SEM: twoRel[rel=loos]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loos
*CAT: n
*SEM: twoRel[rel=loos]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loos
*CAT: n
*SEM: orRel[rel=loos]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_ends
*CAT: n
*SEM: unaryRel[rel=bundle_+_ends]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_ends
*CAT: n
*SEM: twoRel[rel=bundle_+_ends]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_ends
*CAT: n
*SEM: twoRel[rel=bundle_+_ends]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_ends
*CAT: n
*SEM: orRel[rel=bundle_+_ends]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_staging_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=double_+_staging_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_staging_+_clamp-block
*CAT: n
*SEM: twoRel[rel=double_+_staging_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_staging_+_clamp-block
*CAT: n
*SEM: twoRel[rel=double_+_staging_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_staging_+_clamp-block
*CAT: n
*SEM: orRel[rel=double_+_staging_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: white
*CAT: n
*SEM: unaryRel[rel=white]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: white
*CAT: n
*SEM: twoRel[rel=white]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: white
*CAT: n
*SEM: twoRel[rel=white]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: white
*CAT: n
*SEM: orRel[rel=white]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modeling
*CAT: n
*SEM: unaryRel[rel=modeling]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modeling
*CAT: n
*SEM: twoRel[rel=modeling]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modeling
*CAT: n
*SEM: twoRel[rel=modeling]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modeling
*CAT: n
*SEM: orRel[rel=modeling]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_object
*CAT: n
*SEM: unaryRel[rel=self-locking_+_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_object
*CAT: n
*SEM: twoRel[rel=self-locking_+_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_object
*CAT: n
*SEM: twoRel[rel=self-locking_+_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_object
*CAT: n
*SEM: orRel[rel=self-locking_+_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: white_+_on_+_red_+_background
*CAT: n
*SEM: unaryRel[rel=white_+_on_+_red_+_background]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: white_+_on_+_red_+_background
*CAT: n
*SEM: twoRel[rel=white_+_on_+_red_+_background]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: white_+_on_+_red_+_background
*CAT: n
*SEM: twoRel[rel=white_+_on_+_red_+_background]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: white_+_on_+_red_+_background
*CAT: n
*SEM: orRel[rel=white_+_on_+_red_+_background]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: apu_+_zone_+_which
*CAT: n
*SEM: unaryRel[rel=apu_+_zone_+_which]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: apu_+_zone_+_which
*CAT: n
*SEM: twoRel[rel=apu_+_zone_+_which]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: apu_+_zone_+_which
*CAT: n
*SEM: twoRel[rel=apu_+_zone_+_which]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: apu_+_zone_+_which
*CAT: n
*SEM: orRel[rel=apu_+_zone_+_which]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fear
*CAT: n
*SEM: unaryRel[rel=fear]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fear
*CAT: n
*SEM: twoRel[rel=fear]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fear
*CAT: n
*SEM: twoRel[rel=fear]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fear
*CAT: n
*SEM: orRel[rel=fear]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: part_+_number_+_vb_+_number
*CAT: n
*SEM: unaryRel[rel=part_+_number_+_vb_+_number]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: part_+_number_+_vb_+_number
*CAT: n
*SEM: twoRel[rel=part_+_number_+_vb_+_number]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: part_+_number_+_vb_+_number
*CAT: n
*SEM: twoRel[rel=part_+_number_+_vb_+_number]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: part_+_number_+_vb_+_number
*CAT: n
*SEM: orRel[rel=part_+_number_+_vb_+_number]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover
*CAT: n
*SEM: unaryRel[rel=spray_+_cover]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover
*CAT: n
*SEM: twoRel[rel=spray_+_cover]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover
*CAT: n
*SEM: twoRel[rel=spray_+_cover]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover
*CAT: n
*SEM: orRel[rel=spray_+_cover]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_bundle
*CAT: n
*SEM: unaryRel[rel=other_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_bundle
*CAT: n
*SEM: twoRel[rel=other_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_bundle
*CAT: n
*SEM: twoRel[rel=other_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_bundle
*CAT: n
*SEM: orRel[rel=other_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separately
*CAT: n
*SEM: unaryRel[rel=separately]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separately
*CAT: n
*SEM: twoRel[rel=separately]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separately
*CAT: n
*SEM: twoRel[rel=separately]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separately
*CAT: n
*SEM: orRel[rel=separately]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1576_+_peek_+_ramp
*CAT: n
*SEM: unaryRel[rel=abs_+_1576_+_peek_+_ramp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1576_+_peek_+_ramp
*CAT: n
*SEM: twoRel[rel=abs_+_1576_+_peek_+_ramp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1576_+_peek_+_ramp
*CAT: n
*SEM: twoRel[rel=abs_+_1576_+_peek_+_ramp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1576_+_peek_+_ramp
*CAT: n
*SEM: orRel[rel=abs_+_1576_+_peek_+_ramp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_6_+_times_+_outer_+_bundle_+_diameter
*CAT: n
*SEM: unaryRel[rel=minimum_+_6_+_times_+_outer_+_bundle_+_diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_6_+_times_+_outer_+_bundle_+_diameter
*CAT: n
*SEM: twoRel[rel=minimum_+_6_+_times_+_outer_+_bundle_+_diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_6_+_times_+_outer_+_bundle_+_diameter
*CAT: n
*SEM: twoRel[rel=minimum_+_6_+_times_+_outer_+_bundle_+_diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_6_+_times_+_outer_+_bundle_+_diameter
*CAT: n
*SEM: orRel[rel=minimum_+_6_+_times_+_outer_+_bundle_+_diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: instead
*CAT: n
*SEM: unaryRel[rel=instead]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: instead
*CAT: n
*SEM: twoRel[rel=instead]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: instead
*CAT: n
*SEM: twoRel[rel=instead]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: instead
*CAT: n
*SEM: orRel[rel=instead]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_nsa935401_+_but_+_in_+_line
*CAT: n
*SEM: unaryRel[rel=cable_+_tie_+_nsa935401_+_but_+_in_+_line]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_nsa935401_+_but_+_in_+_line
*CAT: n
*SEM: twoRel[rel=cable_+_tie_+_nsa935401_+_but_+_in_+_line]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_nsa935401_+_but_+_in_+_line
*CAT: n
*SEM: twoRel[rel=cable_+_tie_+_nsa935401_+_but_+_in_+_line]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_nsa935401_+_but_+_in_+_line
*CAT: n
*SEM: orRel[rel=cable_+_tie_+_nsa935401_+_but_+_in_+_line]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 80_+__-_percent_-_
*CAT: n
*SEM: unaryRel[rel=80_+__-_percent_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 80_+__-_percent_-_
*CAT: n
*SEM: twoRel[rel=80_+__-_percent_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 80_+__-_percent_-_
*CAT: n
*SEM: twoRel[rel=80_+__-_percent_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 80_+__-_percent_-_
*CAT: n
*SEM: orRel[rel=80_+__-_percent_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0514_+_tube
*CAT: n
*SEM: unaryRel[rel=abs_+_0514_+_tube]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0514_+_tube
*CAT: n
*SEM: twoRel[rel=abs_+_0514_+_tube]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0514_+_tube
*CAT: n
*SEM: twoRel[rel=abs_+_0514_+_tube]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0514_+_tube
*CAT: n
*SEM: orRel[rel=abs_+_0514_+_tube]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_area
*CAT: n
*SEM: unaryRel[rel=pylon_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_area
*CAT: n
*SEM: twoRel[rel=pylon_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_area
*CAT: n
*SEM: twoRel[rel=pylon_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_area
*CAT: n
*SEM: orRel[rel=pylon_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: edge
*CAT: n
*SEM: unaryRel[rel=edge]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: edge
*CAT: n
*SEM: twoRel[rel=edge]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: edge
*CAT: n
*SEM: twoRel[rel=edge]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: edge
*CAT: n
*SEM: orRel[rel=edge]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: umbrellas
*CAT: n
*SEM: unaryRel[rel=umbrellas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: umbrellas
*CAT: n
*SEM: twoRel[rel=umbrellas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: umbrellas
*CAT: n
*SEM: twoRel[rel=umbrellas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: umbrellas
*CAT: n
*SEM: orRel[rel=umbrellas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_crossings
*CAT: n
*SEM: unaryRel[rel=pipe_+_crossings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_crossings
*CAT: n
*SEM: twoRel[rel=pipe_+_crossings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_crossings
*CAT: n
*SEM: twoRel[rel=pipe_+_crossings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_crossings
*CAT: n
*SEM: orRel[rel=pipe_+_crossings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_nsa937901_+_virtual_+_modul_+_rail
*CAT: n
*SEM: unaryRel[rel=dedicated_+_nsa937901_+_virtual_+_modul_+_rail]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_nsa937901_+_virtual_+_modul_+_rail
*CAT: n
*SEM: twoRel[rel=dedicated_+_nsa937901_+_virtual_+_modul_+_rail]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_nsa937901_+_virtual_+_modul_+_rail
*CAT: n
*SEM: twoRel[rel=dedicated_+_nsa937901_+_virtual_+_modul_+_rail]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_nsa937901_+_virtual_+_modul_+_rail
*CAT: n
*SEM: orRel[rel=dedicated_+_nsa937901_+_virtual_+_modul_+_rail]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: if_+_bracket
*CAT: n
*SEM: unaryRel[rel=if_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: if_+_bracket
*CAT: n
*SEM: twoRel[rel=if_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: if_+_bracket
*CAT: n
*SEM: twoRel[rel=if_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: if_+_bracket
*CAT: n
*SEM: orRel[rel=if_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_printed_+_black_+_on_+_white_+_background
*CAT: n
*SEM: unaryRel[rel=nsa_+_937201_+_identification_+_sleeve_+_printed_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_printed_+_black_+_on_+_white_+_background
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve_+_printed_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_printed_+_black_+_on_+_white_+_background
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve_+_printed_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_printed_+_black_+_on_+_white_+_background
*CAT: n
*SEM: orRel[rel=nsa_+_937201_+_identification_+_sleeve_+_printed_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_point_+_to
*CAT: n
*SEM: unaryRel[rel=attachment_+_point_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_point_+_to
*CAT: n
*SEM: twoRel[rel=attachment_+_point_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_point_+_to
*CAT: n
*SEM: twoRel[rel=attachment_+_point_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_point_+_to
*CAT: n
*SEM: orRel[rel=attachment_+_point_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figures
*CAT: n
*SEM: unaryRel[rel=figures]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figures
*CAT: n
*SEM: twoRel[rel=figures]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figures
*CAT: n
*SEM: twoRel[rel=figures]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figures
*CAT: n
*SEM: orRel[rel=figures]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flared_+_outlets
*CAT: n
*SEM: unaryRel[rel=flared_+_outlets]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flared_+_outlets
*CAT: n
*SEM: twoRel[rel=flared_+_outlets]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flared_+_outlets
*CAT: n
*SEM: twoRel[rel=flared_+_outlets]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flared_+_outlets
*CAT: n
*SEM: orRel[rel=flared_+_outlets]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire_+_along_+_entire_+_length
*CAT: n
*SEM: unaryRel[rel=wire_+_along_+_entire_+_length]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire_+_along_+_entire_+_length
*CAT: n
*SEM: twoRel[rel=wire_+_along_+_entire_+_length]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire_+_along_+_entire_+_length
*CAT: n
*SEM: twoRel[rel=wire_+_along_+_entire_+_length]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire_+_along_+_entire_+_length
*CAT: n
*SEM: orRel[rel=wire_+_along_+_entire_+_length]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe
*CAT: n
*SEM: unaryRel[rel=pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe
*CAT: n
*SEM: twoRel[rel=pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe
*CAT: n
*SEM: twoRel[rel=pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe
*CAT: n
*SEM: orRel[rel=pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: curves
*CAT: n
*SEM: unaryRel[rel=curves]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: curves
*CAT: n
*SEM: twoRel[rel=curves]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: curves
*CAT: n
*SEM: twoRel[rel=curves]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: curves
*CAT: n
*SEM: orRel[rel=curves]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bottom
*CAT: n
*SEM: unaryRel[rel=bottom]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bottom
*CAT: n
*SEM: twoRel[rel=bottom]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bottom
*CAT: n
*SEM: twoRel[rel=bottom]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bottom
*CAT: n
*SEM: orRel[rel=bottom]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp
*CAT: n
*SEM: unaryRel[rel=ramp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp
*CAT: n
*SEM: twoRel[rel=ramp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp
*CAT: n
*SEM: twoRel[rel=ramp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp
*CAT: n
*SEM: orRel[rel=ramp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: install
*CAT: n
*SEM: unaryRel[rel=install]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: install
*CAT: n
*SEM: twoRel[rel=install]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: install
*CAT: n
*SEM: twoRel[rel=install]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: install
*CAT: n
*SEM: orRel[rel=install]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0916_+_shrink_+_sleeve
*CAT: n
*SEM: unaryRel[rel=abs_+_0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0916_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=abs_+_0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0916_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=abs_+_0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0916_+_shrink_+_sleeve
*CAT: n
*SEM: orRel[rel=abs_+_0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: operation
*CAT: n
*SEM: unaryRel[rel=operation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: operation
*CAT: n
*SEM: twoRel[rel=operation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: operation
*CAT: n
*SEM: twoRel[rel=operation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: operation
*CAT: n
*SEM: orRel[rel=operation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_broken
*CAT: n
*SEM: unaryRel[rel=be_+_broken]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_broken
*CAT: n
*SEM: twoRel[rel=be_+_broken]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_broken
*CAT: n
*SEM: twoRel[rel=be_+_broken]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_broken
*CAT: n
*SEM: orRel[rel=be_+_broken]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_areas_+_in_+_a_+_primed_+_version
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_areas_+_in_+_a_+_primed_+_version]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_areas_+_in_+_a_+_primed_+_version
*CAT: n
*SEM: twoRel[rel=hydraulic_+_areas_+_in_+_a_+_primed_+_version]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_areas_+_in_+_a_+_primed_+_version
*CAT: n
*SEM: twoRel[rel=hydraulic_+_areas_+_in_+_a_+_primed_+_version]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_areas_+_in_+_a_+_primed_+_version
*CAT: n
*SEM: orRel[rel=hydraulic_+_areas_+_in_+_a_+_primed_+_version]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_3_+_solutionor
*CAT: n
*SEM: unaryRel[rel=priority_+_3_+_solutionor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_3_+_solutionor
*CAT: n
*SEM: twoRel[rel=priority_+_3_+_solutionor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_3_+_solutionor
*CAT: n
*SEM: twoRel[rel=priority_+_3_+_solutionor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: priority_+_3_+_solutionor
*CAT: n
*SEM: orRel[rel=priority_+_3_+_solutionor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blue_+_background
*CAT: n
*SEM: unaryRel[rel=blue_+_background]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blue_+_background
*CAT: n
*SEM: twoRel[rel=blue_+_background]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blue_+_background
*CAT: n
*SEM: twoRel[rel=blue_+_background]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blue_+_background
*CAT: n
*SEM: orRel[rel=blue_+_background]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_component_+_areas
*CAT: n
*SEM: unaryRel[rel=fuel_+_component_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_component_+_areas
*CAT: n
*SEM: twoRel[rel=fuel_+_component_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_component_+_areas
*CAT: n
*SEM: twoRel[rel=fuel_+_component_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_component_+_areas
*CAT: n
*SEM: orRel[rel=fuel_+_component_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_non-pressurised_+_zones
*CAT: n
*SEM: unaryRel[rel=two_+_non-pressurised_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_non-pressurised_+_zones
*CAT: n
*SEM: twoRel[rel=two_+_non-pressurised_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_non-pressurised_+_zones
*CAT: n
*SEM: twoRel[rel=two_+_non-pressurised_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_non-pressurised_+_zones
*CAT: n
*SEM: orRel[rel=two_+_non-pressurised_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alone
*CAT: n
*SEM: unaryRel[rel=alone]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alone
*CAT: n
*SEM: twoRel[rel=alone]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alone
*CAT: n
*SEM: twoRel[rel=alone]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alone
*CAT: n
*SEM: orRel[rel=alone]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansion_+_loop_+__-_opensb_-_for_+_pipe_+_sizes_+_up
*CAT: n
*SEM: unaryRel[rel=expansion_+_loop_+__-_opensb_-_for_+_pipe_+_sizes_+_up]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansion_+_loop_+__-_opensb_-_for_+_pipe_+_sizes_+_up
*CAT: n
*SEM: twoRel[rel=expansion_+_loop_+__-_opensb_-_for_+_pipe_+_sizes_+_up]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansion_+_loop_+__-_opensb_-_for_+_pipe_+_sizes_+_up
*CAT: n
*SEM: twoRel[rel=expansion_+_loop_+__-_opensb_-_for_+_pipe_+_sizes_+_up]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansion_+_loop_+__-_opensb_-_for_+_pipe_+_sizes_+_up
*CAT: n
*SEM: orRel[rel=expansion_+_loop_+__-_opensb_-_for_+_pipe_+_sizes_+_up]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_where_+_it_+_is_+_attached
*CAT: n
*SEM: unaryRel[rel=equipment_+_where_+_it_+_is_+_attached]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_where_+_it_+_is_+_attached
*CAT: n
*SEM: twoRel[rel=equipment_+_where_+_it_+_is_+_attached]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_where_+_it_+_is_+_attached
*CAT: n
*SEM: twoRel[rel=equipment_+_where_+_it_+_is_+_attached]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_where_+_it_+_is_+_attached
*CAT: n
*SEM: orRel[rel=equipment_+_where_+_it_+_is_+_attached]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=_-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=_-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=_-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=_-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_+_-_+_type_+_a
*CAT: n
*SEM: unaryRel[rel=movable_+_component_+_-_+_type_+_a]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_+_-_+_type_+_a
*CAT: n
*SEM: twoRel[rel=movable_+_component_+_-_+_type_+_a]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_+_-_+_type_+_a
*CAT: n
*SEM: twoRel[rel=movable_+_component_+_-_+_type_+_a]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_+_-_+_type_+_a
*CAT: n
*SEM: orRel[rel=movable_+_component_+_-_+_type_+_a]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_umbrella
*CAT: n
*SEM: unaryRel[rel=an_+_umbrella]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_umbrella
*CAT: n
*SEM: twoRel[rel=an_+_umbrella]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_umbrella
*CAT: n
*SEM: twoRel[rel=an_+_umbrella]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_umbrella
*CAT: n
*SEM: orRel[rel=an_+_umbrella]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other-route
*CAT: n
*SEM: unaryRel[rel=other-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other-route
*CAT: n
*SEM: twoRel[rel=other-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other-route
*CAT: n
*SEM: twoRel[rel=other-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other-route
*CAT: n
*SEM: orRel[rel=other-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses_+__-_opensb_-_for_+_pipe_+_sizes_+_larger_+_12_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=flexible_+_hoses_+__-_opensb_-_for_+_pipe_+_sizes_+_larger_+_12_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses_+__-_opensb_-_for_+_pipe_+_sizes_+_larger_+_12_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=flexible_+_hoses_+__-_opensb_-_for_+_pipe_+_sizes_+_larger_+_12_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses_+__-_opensb_-_for_+_pipe_+_sizes_+_larger_+_12_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=flexible_+_hoses_+__-_opensb_-_for_+_pipe_+_sizes_+_larger_+_12_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses_+__-_opensb_-_for_+_pipe_+_sizes_+_larger_+_12_-_closesb_-_
*CAT: n
*SEM: orRel[rel=flexible_+_hoses_+__-_opensb_-_for_+_pipe_+_sizes_+_larger_+_12_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coax_+_n_+__-_greaterThan_-__-_equalto_-_1
*CAT: n
*SEM: unaryRel[rel=coax_+_n_+__-_greaterThan_-__-_equalto_-_1]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coax_+_n_+__-_greaterThan_-__-_equalto_-_1
*CAT: n
*SEM: twoRel[rel=coax_+_n_+__-_greaterThan_-__-_equalto_-_1]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coax_+_n_+__-_greaterThan_-__-_equalto_-_1
*CAT: n
*SEM: twoRel[rel=coax_+_n_+__-_greaterThan_-__-_equalto_-_1]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coax_+_n_+__-_greaterThan_-__-_equalto_-_1
*CAT: n
*SEM: orRel[rel=coax_+_n_+__-_greaterThan_-__-_equalto_-_1]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1339_+_p-clamp
*CAT: n
*SEM: unaryRel[rel=abs_+_1339_+_p-clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1339_+_p-clamp
*CAT: n
*SEM: twoRel[rel=abs_+_1339_+_p-clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1339_+_p-clamp
*CAT: n
*SEM: twoRel[rel=abs_+_1339_+_p-clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1339_+_p-clamp
*CAT: n
*SEM: orRel[rel=abs_+_1339_+_p-clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_installation_+_philosophy
*CAT: n
*SEM: unaryRel[rel=same_+_installation_+_philosophy]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_installation_+_philosophy
*CAT: n
*SEM: twoRel[rel=same_+_installation_+_philosophy]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_installation_+_philosophy
*CAT: n
*SEM: twoRel[rel=same_+_installation_+_philosophy]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_installation_+_philosophy
*CAT: n
*SEM: orRel[rel=same_+_installation_+_philosophy]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_attachment_+_point_+_minimum
*CAT: n
*SEM: unaryRel[rel=two_+_attachment_+_point_+_minimum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_attachment_+_point_+_minimum
*CAT: n
*SEM: twoRel[rel=two_+_attachment_+_point_+_minimum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_attachment_+_point_+_minimum
*CAT: n
*SEM: twoRel[rel=two_+_attachment_+_point_+_minimum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_attachment_+_point_+_minimum
*CAT: n
*SEM: orRel[rel=two_+_attachment_+_point_+_minimum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure
*CAT: n
*SEM: unaryRel[rel=fixed_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure
*CAT: n
*SEM: twoRel[rel=fixed_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure
*CAT: n
*SEM: twoRel[rel=fixed_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure
*CAT: n
*SEM: orRel[rel=fixed_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_nsa5527_+_spacer
*CAT: n
*SEM: unaryRel[rel=2_+_nsa5527_+_spacer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_nsa5527_+_spacer
*CAT: n
*SEM: twoRel[rel=2_+_nsa5527_+_spacer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_nsa5527_+_spacer
*CAT: n
*SEM: twoRel[rel=2_+_nsa5527_+_spacer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_nsa5527_+_spacer
*CAT: n
*SEM: orRel[rel=2_+_nsa5527_+_spacer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fail_+_safe
*CAT: n
*SEM: unaryRel[rel=fail_+_safe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fail_+_safe
*CAT: n
*SEM: twoRel[rel=fail_+_safe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fail_+_safe
*CAT: n
*SEM: twoRel[rel=fail_+_safe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fail_+_safe
*CAT: n
*SEM: orRel[rel=fail_+_safe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_color_+_when
*CAT: n
*SEM: unaryRel[rel=pink_+_color_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_color_+_when
*CAT: n
*SEM: twoRel[rel=pink_+_color_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_color_+_when
*CAT: n
*SEM: twoRel[rel=pink_+_color_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_color_+_when
*CAT: n
*SEM: orRel[rel=pink_+_color_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flange
*CAT: n
*SEM: unaryRel[rel=flange]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flange
*CAT: n
*SEM: twoRel[rel=flange]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flange
*CAT: n
*SEM: twoRel[rel=flange]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flange
*CAT: n
*SEM: orRel[rel=flange]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_holes_+_when
*CAT: n
*SEM: unaryRel[rel=drain_+_holes_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_holes_+_when
*CAT: n
*SEM: twoRel[rel=drain_+_holes_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_holes_+_when
*CAT: n
*SEM: twoRel[rel=drain_+_holes_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_holes_+_when
*CAT: n
*SEM: orRel[rel=drain_+_holes_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6mm_+_to_+_the_+_aircraft_+_structure
*CAT: n
*SEM: unaryRel[rel=6mm_+_to_+_the_+_aircraft_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6mm_+_to_+_the_+_aircraft_+_structure
*CAT: n
*SEM: twoRel[rel=6mm_+_to_+_the_+_aircraft_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6mm_+_to_+_the_+_aircraft_+_structure
*CAT: n
*SEM: twoRel[rel=6mm_+_to_+_the_+_aircraft_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6mm_+_to_+_the_+_aircraft_+_structure
*CAT: n
*SEM: orRel[rel=6mm_+_to_+_the_+_aircraft_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_2
*CAT: n
*SEM: unaryRel[rel=network_+_2]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_2
*CAT: n
*SEM: twoRel[rel=network_+_2]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_2
*CAT: n
*SEM: twoRel[rel=network_+_2]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_2
*CAT: n
*SEM: orRel[rel=network_+_2]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: liable_+_to
*CAT: n
*SEM: unaryRel[rel=liable_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: liable_+_to
*CAT: n
*SEM: twoRel[rel=liable_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: liable_+_to
*CAT: n
*SEM: twoRel[rel=liable_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: liable_+_to
*CAT: n
*SEM: orRel[rel=liable_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_accessible_+_area
*CAT: n
*SEM: unaryRel[rel=an_+_accessible_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_accessible_+_area
*CAT: n
*SEM: twoRel[rel=an_+_accessible_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_accessible_+_area
*CAT: n
*SEM: twoRel[rel=an_+_accessible_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_accessible_+_area
*CAT: n
*SEM: orRel[rel=an_+_accessible_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaging
*CAT: n
*SEM: unaryRel[rel=in-situ_+_swaging]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaging
*CAT: n
*SEM: twoRel[rel=in-situ_+_swaging]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaging
*CAT: n
*SEM: twoRel[rel=in-situ_+_swaging]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaging
*CAT: n
*SEM: orRel[rel=in-situ_+_swaging]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolts
*CAT: n
*SEM: unaryRel[rel=bolts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolts
*CAT: n
*SEM: twoRel[rel=bolts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolts
*CAT: n
*SEM: twoRel[rel=bolts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolts
*CAT: n
*SEM: orRel[rel=bolts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata_+_92_+_fixation_+_point_+_there
*CAT: n
*SEM: unaryRel[rel=ata_+_92_+_fixation_+_point_+_there]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata_+_92_+_fixation_+_point_+_there
*CAT: n
*SEM: twoRel[rel=ata_+_92_+_fixation_+_point_+_there]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata_+_92_+_fixation_+_point_+_there
*CAT: n
*SEM: twoRel[rel=ata_+_92_+_fixation_+_point_+_there]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata_+_92_+_fixation_+_point_+_there
*CAT: n
*SEM: orRel[rel=ata_+_92_+_fixation_+_point_+_there]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_half_+_parts
*CAT: n
*SEM: unaryRel[rel=two_+_half_+_parts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_half_+_parts
*CAT: n
*SEM: twoRel[rel=two_+_half_+_parts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_half_+_parts
*CAT: n
*SEM: twoRel[rel=two_+_half_+_parts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_half_+_parts
*CAT: n
*SEM: orRel[rel=two_+_half_+_parts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata_+_25
*CAT: n
*SEM: unaryRel[rel=ata_+_25]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata_+_25
*CAT: n
*SEM: twoRel[rel=ata_+_25]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata_+_25
*CAT: n
*SEM: twoRel[rel=ata_+_25]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata_+_25
*CAT: n
*SEM: orRel[rel=ata_+_25]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_given_+_in_+_this_+_table
*CAT: n
*SEM: unaryRel[rel=structure_+_given_+_in_+_this_+_table]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_given_+_in_+_this_+_table
*CAT: n
*SEM: twoRel[rel=structure_+_given_+_in_+_this_+_table]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_given_+_in_+_this_+_table
*CAT: n
*SEM: twoRel[rel=structure_+_given_+_in_+_this_+_table]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_given_+_in_+_this_+_table
*CAT: n
*SEM: orRel[rel=structure_+_given_+_in_+_this_+_table]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_d_+_is_+_d_-_greaterThan_-__-_equalto_-__+_35mm
*CAT: n
*SEM: unaryRel[rel=diameter_+_d_+_is_+_d_-_greaterThan_-__-_equalto_-__+_35mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_d_+_is_+_d_-_greaterThan_-__-_equalto_-__+_35mm
*CAT: n
*SEM: twoRel[rel=diameter_+_d_+_is_+_d_-_greaterThan_-__-_equalto_-__+_35mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_d_+_is_+_d_-_greaterThan_-__-_equalto_-__+_35mm
*CAT: n
*SEM: twoRel[rel=diameter_+_d_+_is_+_d_-_greaterThan_-__-_equalto_-__+_35mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_d_+_is_+_d_-_greaterThan_-__-_equalto_-__+_35mm
*CAT: n
*SEM: orRel[rel=diameter_+_d_+_is_+_d_-_greaterThan_-__-_equalto_-__+_35mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937210_+_shrink_+_sleeveor_+_abs_+_5330_+_ptfe_+_tapeor_+_abs_+_0294or_+_ansa_+_5107-b_+_wrapped_+_twice_+_around_+_the_+_bundle
*CAT: n
*SEM: unaryRel[rel=nsa937210_+_shrink_+_sleeveor_+_abs_+_5330_+_ptfe_+_tapeor_+_abs_+_0294or_+_ansa_+_5107-b_+_wrapped_+_twice_+_around_+_the_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937210_+_shrink_+_sleeveor_+_abs_+_5330_+_ptfe_+_tapeor_+_abs_+_0294or_+_ansa_+_5107-b_+_wrapped_+_twice_+_around_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=nsa937210_+_shrink_+_sleeveor_+_abs_+_5330_+_ptfe_+_tapeor_+_abs_+_0294or_+_ansa_+_5107-b_+_wrapped_+_twice_+_around_+_the_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937210_+_shrink_+_sleeveor_+_abs_+_5330_+_ptfe_+_tapeor_+_abs_+_0294or_+_ansa_+_5107-b_+_wrapped_+_twice_+_around_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=nsa937210_+_shrink_+_sleeveor_+_abs_+_5330_+_ptfe_+_tapeor_+_abs_+_0294or_+_ansa_+_5107-b_+_wrapped_+_twice_+_around_+_the_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937210_+_shrink_+_sleeveor_+_abs_+_5330_+_ptfe_+_tapeor_+_abs_+_0294or_+_ansa_+_5107-b_+_wrapped_+_twice_+_around_+_the_+_bundle
*CAT: n
*SEM: orRel[rel=nsa937210_+_shrink_+_sleeveor_+_abs_+_5330_+_ptfe_+_tapeor_+_abs_+_0294or_+_ansa_+_5107-b_+_wrapped_+_twice_+_around_+_the_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_structure
*CAT: n
*SEM: unaryRel[rel=metallic_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_structure
*CAT: n
*SEM: twoRel[rel=metallic_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_structure
*CAT: n
*SEM: twoRel[rel=metallic_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_structure
*CAT: n
*SEM: orRel[rel=metallic_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_the_+_joint
*CAT: n
*SEM: unaryRel[rel=to_+_the_+_joint]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_the_+_joint
*CAT: n
*SEM: twoRel[rel=to_+_the_+_joint]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_the_+_joint
*CAT: n
*SEM: twoRel[rel=to_+_the_+_joint]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_the_+_joint
*CAT: n
*SEM: orRel[rel=to_+_the_+_joint]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: brackets
*CAT: n
*SEM: unaryRel[rel=brackets]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: brackets
*CAT: n
*SEM: twoRel[rel=brackets]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: brackets
*CAT: n
*SEM: twoRel[rel=brackets]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: brackets
*CAT: n
*SEM: orRel[rel=brackets]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa855034_+_code_+__-_invcomma_-_
*CAT: n
*SEM: unaryRel[rel=nsa855034_+_code_+__-_invcomma_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa855034_+_code_+__-_invcomma_-_
*CAT: n
*SEM: twoRel[rel=nsa855034_+_code_+__-_invcomma_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa855034_+_code_+__-_invcomma_-_
*CAT: n
*SEM: twoRel[rel=nsa855034_+_code_+__-_invcomma_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa855034_+_code_+__-_invcomma_-_
*CAT: n
*SEM: orRel[rel=nsa855034_+_code_+__-_invcomma_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing
*CAT: n
*SEM: unaryRel[rel=routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing
*CAT: n
*SEM: twoRel[rel=routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing
*CAT: n
*SEM: twoRel[rel=routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing
*CAT: n
*SEM: orRel[rel=routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_affected
*CAT: n
*SEM: unaryRel[rel=be_+_affected]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_affected
*CAT: n
*SEM: twoRel[rel=be_+_affected]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_affected
*CAT: n
*SEM: twoRel[rel=be_+_affected]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_affected
*CAT: n
*SEM: orRel[rel=be_+_affected]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_pooint
*CAT: n
*SEM: unaryRel[rel=attachment_+_pooint]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_pooint
*CAT: n
*SEM: twoRel[rel=attachment_+_pooint]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_pooint
*CAT: n
*SEM: twoRel[rel=attachment_+_pooint]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_pooint
*CAT: n
*SEM: orRel[rel=attachment_+_pooint]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_over_+_length
*CAT: n
*SEM: unaryRel[rel=bundle_+_over_+_length]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_over_+_length
*CAT: n
*SEM: twoRel[rel=bundle_+_over_+_length]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_over_+_length
*CAT: n
*SEM: twoRel[rel=bundle_+_over_+_length]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_over_+_length
*CAT: n
*SEM: orRel[rel=bundle_+_over_+_length]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: unaryRel[rel=self-locking_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: twoRel[rel=self-locking_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: twoRel[rel=self-locking_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_component_-_backslash_-_item_-_backslash_-_object
*CAT: n
*SEM: orRel[rel=self-locking_+_component_-_backslash_-_item_-_backslash_-_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distribution_+_lugs
*CAT: n
*SEM: unaryRel[rel=distribution_+_lugs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distribution_+_lugs
*CAT: n
*SEM: twoRel[rel=distribution_+_lugs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distribution_+_lugs
*CAT: n
*SEM: twoRel[rel=distribution_+_lugs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distribution_+_lugs
*CAT: n
*SEM: orRel[rel=distribution_+_lugs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_in-situ_+_swaging
*CAT: n
*SEM: unaryRel[rel=allow_+_in-situ_+_swaging]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_in-situ_+_swaging
*CAT: n
*SEM: twoRel[rel=allow_+_in-situ_+_swaging]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_in-situ_+_swaging
*CAT: n
*SEM: twoRel[rel=allow_+_in-situ_+_swaging]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_in-situ_+_swaging
*CAT: n
*SEM: orRel[rel=allow_+_in-situ_+_swaging]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hole_+_diamter_+_9.52mm
*CAT: n
*SEM: unaryRel[rel=hole_+_diamter_+_9.52mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hole_+_diamter_+_9.52mm
*CAT: n
*SEM: twoRel[rel=hole_+_diamter_+_9.52mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hole_+_diamter_+_9.52mm
*CAT: n
*SEM: twoRel[rel=hole_+_diamter_+_9.52mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hole_+_diamter_+_9.52mm
*CAT: n
*SEM: orRel[rel=hole_+_diamter_+_9.52mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bends_+_at_+_a_+_maximum_+_distance_+_of_+_152
*CAT: n
*SEM: unaryRel[rel=bends_+_at_+_a_+_maximum_+_distance_+_of_+_152]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bends_+_at_+_a_+_maximum_+_distance_+_of_+_152
*CAT: n
*SEM: twoRel[rel=bends_+_at_+_a_+_maximum_+_distance_+_of_+_152]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bends_+_at_+_a_+_maximum_+_distance_+_of_+_152
*CAT: n
*SEM: twoRel[rel=bends_+_at_+_a_+_maximum_+_distance_+_of_+_152]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bends_+_at_+_a_+_maximum_+_distance_+_of_+_152
*CAT: n
*SEM: orRel[rel=bends_+_at_+_a_+_maximum_+_distance_+_of_+_152]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduce_+_cuttings
*CAT: n
*SEM: unaryRel[rel=reduce_+_cuttings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduce_+_cuttings
*CAT: n
*SEM: twoRel[rel=reduce_+_cuttings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduce_+_cuttings
*CAT: n
*SEM: twoRel[rel=reduce_+_cuttings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduce_+_cuttings
*CAT: n
*SEM: orRel[rel=reduce_+_cuttings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_requirements
*CAT: n
*SEM: unaryRel[rel=same_+_requirements]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_requirements
*CAT: n
*SEM: twoRel[rel=same_+_requirements]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_requirements
*CAT: n
*SEM: twoRel[rel=same_+_requirements]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_requirements
*CAT: n
*SEM: orRel[rel=same_+_requirements]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priority
*CAT: n
*SEM: unaryRel[rel=first_+_priority]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priority
*CAT: n
*SEM: twoRel[rel=first_+_priority]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priority
*CAT: n
*SEM: twoRel[rel=first_+_priority]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_priority
*CAT: n
*SEM: orRel[rel=first_+_priority]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_diameter
*CAT: n
*SEM: unaryRel[rel=bundle_+_diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_diameter
*CAT: n
*SEM: twoRel[rel=bundle_+_diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_diameter
*CAT: n
*SEM: twoRel[rel=bundle_+_diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_diameter
*CAT: n
*SEM: orRel[rel=bundle_+_diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle
*CAT: n
*SEM: unaryRel[rel=electrical_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle
*CAT: n
*SEM: twoRel[rel=electrical_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle
*CAT: n
*SEM: twoRel[rel=electrical_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle
*CAT: n
*SEM: orRel[rel=electrical_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_tying_+_device
*CAT: n
*SEM: unaryRel[rel=bundle_+_tying_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_tying_+_device
*CAT: n
*SEM: twoRel[rel=bundle_+_tying_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_tying_+_device
*CAT: n
*SEM: twoRel[rel=bundle_+_tying_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_tying_+_device
*CAT: n
*SEM: orRel[rel=bundle_+_tying_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_installation_+_philosophy_+_than_+_normal_+_installation
*CAT: n
*SEM: unaryRel[rel=same_+_installation_+_philosophy_+_than_+_normal_+_installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_installation_+_philosophy_+_than_+_normal_+_installation
*CAT: n
*SEM: twoRel[rel=same_+_installation_+_philosophy_+_than_+_normal_+_installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_installation_+_philosophy_+_than_+_normal_+_installation
*CAT: n
*SEM: twoRel[rel=same_+_installation_+_philosophy_+_than_+_normal_+_installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_installation_+_philosophy_+_than_+_normal_+_installation
*CAT: n
*SEM: orRel[rel=same_+_installation_+_philosophy_+_than_+_normal_+_installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire
*CAT: n
*SEM: unaryRel[rel=fire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire
*CAT: n
*SEM: twoRel[rel=fire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire
*CAT: n
*SEM: twoRel[rel=fire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire
*CAT: n
*SEM: orRel[rel=fire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification
*CAT: n
*SEM: unaryRel[rel=identification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification
*CAT: n
*SEM: twoRel[rel=identification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification
*CAT: n
*SEM: twoRel[rel=identification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification
*CAT: n
*SEM: orRel[rel=identification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_power_+_center
*CAT: n
*SEM: unaryRel[rel=inside_+_power_+_center]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_power_+_center
*CAT: n
*SEM: twoRel[rel=inside_+_power_+_center]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_power_+_center
*CAT: n
*SEM: twoRel[rel=inside_+_power_+_center]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_power_+_center
*CAT: n
*SEM: orRel[rel=inside_+_power_+_center]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermal_+_variation
*CAT: n
*SEM: unaryRel[rel=thermal_+_variation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermal_+_variation
*CAT: n
*SEM: twoRel[rel=thermal_+_variation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermal_+_variation
*CAT: n
*SEM: twoRel[rel=thermal_+_variation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermal_+_variation
*CAT: n
*SEM: orRel[rel=thermal_+_variation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_bundle
*CAT: n
*SEM: unaryRel[rel=vertical_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_bundle
*CAT: n
*SEM: twoRel[rel=vertical_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_bundle
*CAT: n
*SEM: twoRel[rel=vertical_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_bundle
*CAT: n
*SEM: orRel[rel=vertical_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parts
*CAT: n
*SEM: unaryRel[rel=parts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parts
*CAT: n
*SEM: twoRel[rel=parts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parts
*CAT: n
*SEM: twoRel[rel=parts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parts
*CAT: n
*SEM: orRel[rel=parts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 15_+__-_percent_-_
*CAT: n
*SEM: unaryRel[rel=15_+__-_percent_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 15_+__-_percent_-_
*CAT: n
*SEM: twoRel[rel=15_+__-_percent_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 15_+__-_percent_-_
*CAT: n
*SEM: twoRel[rel=15_+__-_percent_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 15_+__-_percent_-_
*CAT: n
*SEM: orRel[rel=15_+__-_percent_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraiding
*CAT: n
*SEM: unaryRel[rel=overbraiding]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraiding
*CAT: n
*SEM: twoRel[rel=overbraiding]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraiding
*CAT: n
*SEM: twoRel[rel=overbraiding]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraiding
*CAT: n
*SEM: orRel[rel=overbraiding]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_pipe_+_connection._+_exception_-_colon_-__+_spacer_+_nsa5527_+_together
*CAT: n
*SEM: unaryRel[rel=intermediate_+_pipe_+_connection._+_exception_-_colon_-__+_spacer_+_nsa5527_+_together]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_pipe_+_connection._+_exception_-_colon_-__+_spacer_+_nsa5527_+_together
*CAT: n
*SEM: twoRel[rel=intermediate_+_pipe_+_connection._+_exception_-_colon_-__+_spacer_+_nsa5527_+_together]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_pipe_+_connection._+_exception_-_colon_-__+_spacer_+_nsa5527_+_together
*CAT: n
*SEM: twoRel[rel=intermediate_+_pipe_+_connection._+_exception_-_colon_-__+_spacer_+_nsa5527_+_together]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_pipe_+_connection._+_exception_-_colon_-__+_spacer_+_nsa5527_+_together
*CAT: n
*SEM: orRel[rel=intermediate_+_pipe_+_connection._+_exception_-_colon_-__+_spacer_+_nsa5527_+_together]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive
*CAT: n
*SEM: unaryRel[rel=conductive]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive
*CAT: n
*SEM: twoRel[rel=conductive]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive
*CAT: n
*SEM: twoRel[rel=conductive]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive
*CAT: n
*SEM: orRel[rel=conductive]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic
*CAT: n
*SEM: unaryRel[rel=hydraulic]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic
*CAT: n
*SEM: twoRel[rel=hydraulic]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic
*CAT: n
*SEM: twoRel[rel=hydraulic]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic
*CAT: n
*SEM: orRel[rel=hydraulic]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: recommended_+_solution
*CAT: n
*SEM: unaryRel[rel=recommended_+_solution]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: recommended_+_solution
*CAT: n
*SEM: twoRel[rel=recommended_+_solution]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: recommended_+_solution
*CAT: n
*SEM: twoRel[rel=recommended_+_solution]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: recommended_+_solution
*CAT: n
*SEM: orRel[rel=recommended_+_solution]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle_+_when
*CAT: n
*SEM: unaryRel[rel=electrical_+_bundle_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle_+_when
*CAT: n
*SEM: twoRel[rel=electrical_+_bundle_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle_+_when
*CAT: n
*SEM: twoRel[rel=electrical_+_bundle_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle_+_when
*CAT: n
*SEM: orRel[rel=electrical_+_bundle_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_compartment
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_compartment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_compartment
*CAT: n
*SEM: twoRel[rel=hydraulic_+_compartment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_compartment
*CAT: n
*SEM: twoRel[rel=hydraulic_+_compartment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_compartment
*CAT: n
*SEM: orRel[rel=hydraulic_+_compartment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_to_+_a_+_harness_+_each_+_single_+_bundle
*CAT: n
*SEM: unaryRel[rel=up_+_to_+_a_+_harness_+_each_+_single_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_to_+_a_+_harness_+_each_+_single_+_bundle
*CAT: n
*SEM: twoRel[rel=up_+_to_+_a_+_harness_+_each_+_single_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_to_+_a_+_harness_+_each_+_single_+_bundle
*CAT: n
*SEM: twoRel[rel=up_+_to_+_a_+_harness_+_each_+_single_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_to_+_a_+_harness_+_each_+_single_+_bundle
*CAT: n
*SEM: orRel[rel=up_+_to_+_a_+_harness_+_each_+_single_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: toilets
*CAT: n
*SEM: unaryRel[rel=toilets]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: toilets
*CAT: n
*SEM: twoRel[rel=toilets]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: toilets
*CAT: n
*SEM: twoRel[rel=toilets]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: toilets
*CAT: n
*SEM: orRel[rel=toilets]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contamination
*CAT: n
*SEM: unaryRel[rel=contamination]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contamination
*CAT: n
*SEM: twoRel[rel=contamination]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contamination
*CAT: n
*SEM: twoRel[rel=contamination]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contamination
*CAT: n
*SEM: orRel[rel=contamination]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_prrotected
*CAT: n
*SEM: unaryRel[rel=bundle_+_prrotected]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_prrotected
*CAT: n
*SEM: twoRel[rel=bundle_+_prrotected]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_prrotected
*CAT: n
*SEM: twoRel[rel=bundle_+_prrotected]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_prrotected
*CAT: n
*SEM: orRel[rel=bundle_+_prrotected]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_routing
*CAT: n
*SEM: unaryRel[rel=horizontal_+_routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_routing
*CAT: n
*SEM: twoRel[rel=horizontal_+_routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_routing
*CAT: n
*SEM: twoRel[rel=horizontal_+_routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_routing
*CAT: n
*SEM: orRel[rel=horizontal_+_routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_connector
*CAT: n
*SEM: unaryRel[rel=optical_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_connector
*CAT: n
*SEM: twoRel[rel=optical_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_connector
*CAT: n
*SEM: twoRel[rel=optical_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_connector
*CAT: n
*SEM: orRel[rel=optical_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_parts
*CAT: n
*SEM: unaryRel[rel=straight_+_parts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_parts
*CAT: n
*SEM: twoRel[rel=straight_+_parts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_parts
*CAT: n
*SEM: twoRel[rel=straight_+_parts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_parts
*CAT: n
*SEM: orRel[rel=straight_+_parts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_10mm
*CAT: n
*SEM: unaryRel[rel=least_+_10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_10mm
*CAT: n
*SEM: twoRel[rel=least_+_10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_10mm
*CAT: n
*SEM: twoRel[rel=least_+_10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_10mm
*CAT: n
*SEM: orRel[rel=least_+_10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dersigner_+_sppreciation
*CAT: n
*SEM: unaryRel[rel=dersigner_+_sppreciation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dersigner_+_sppreciation
*CAT: n
*SEM: twoRel[rel=dersigner_+_sppreciation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dersigner_+_sppreciation
*CAT: n
*SEM: twoRel[rel=dersigner_+_sppreciation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dersigner_+_sppreciation
*CAT: n
*SEM: orRel[rel=dersigner_+_sppreciation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: however
*CAT: n
*SEM: unaryRel[rel=however]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: however
*CAT: n
*SEM: twoRel[rel=however]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: however
*CAT: n
*SEM: twoRel[rel=however]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: however
*CAT: n
*SEM: orRel[rel=however]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: yellow_+_asne0646_+_identification_+_sleeve_+_inside_+_in_+_small_+_vu
*CAT: n
*SEM: unaryRel[rel=yellow_+_asne0646_+_identification_+_sleeve_+_inside_+_in_+_small_+_vu]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: yellow_+_asne0646_+_identification_+_sleeve_+_inside_+_in_+_small_+_vu
*CAT: n
*SEM: twoRel[rel=yellow_+_asne0646_+_identification_+_sleeve_+_inside_+_in_+_small_+_vu]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: yellow_+_asne0646_+_identification_+_sleeve_+_inside_+_in_+_small_+_vu
*CAT: n
*SEM: twoRel[rel=yellow_+_asne0646_+_identification_+_sleeve_+_inside_+_in_+_small_+_vu]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: yellow_+_asne0646_+_identification_+_sleeve_+_inside_+_in_+_small_+_vu
*CAT: n
*SEM: orRel[rel=yellow_+_asne0646_+_identification_+_sleeve_+_inside_+_in_+_small_+_vu]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: varnish
*CAT: n
*SEM: unaryRel[rel=varnish]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: varnish
*CAT: n
*SEM: twoRel[rel=varnish]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: varnish
*CAT: n
*SEM: twoRel[rel=varnish]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: varnish
*CAT: n
*SEM: orRel[rel=varnish]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: anse_+_0354_+_connector
*CAT: n
*SEM: unaryRel[rel=anse_+_0354_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: anse_+_0354_+_connector
*CAT: n
*SEM: twoRel[rel=anse_+_0354_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: anse_+_0354_+_connector
*CAT: n
*SEM: twoRel[rel=anse_+_0354_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: anse_+_0354_+_connector
*CAT: n
*SEM: orRel[rel=anse_+_0354_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance_+_of_+_6mm
*CAT: n
*SEM: unaryRel[rel=minimum_+_clearance_+_of_+_6mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance_+_of_+_6mm
*CAT: n
*SEM: twoRel[rel=minimum_+_clearance_+_of_+_6mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance_+_of_+_6mm
*CAT: n
*SEM: twoRel[rel=minimum_+_clearance_+_of_+_6mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance_+_of_+_6mm
*CAT: n
*SEM: orRel[rel=minimum_+_clearance_+_of_+_6mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lines
*CAT: n
*SEM: unaryRel[rel=lines]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lines
*CAT: n
*SEM: twoRel[rel=lines]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lines
*CAT: n
*SEM: twoRel[rel=lines]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lines
*CAT: n
*SEM: orRel[rel=lines]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4_+_mm
*CAT: n
*SEM: unaryRel[rel=4_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4_+_mm
*CAT: n
*SEM: twoRel[rel=4_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4_+_mm
*CAT: n
*SEM: twoRel[rel=4_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4_+_mm
*CAT: n
*SEM: orRel[rel=4_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_potential_+_clogging
*CAT: n
*SEM: unaryRel[rel=avoid_+_potential_+_clogging]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_potential_+_clogging
*CAT: n
*SEM: twoRel[rel=avoid_+_potential_+_clogging]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_potential_+_clogging
*CAT: n
*SEM: twoRel[rel=avoid_+_potential_+_clogging]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_potential_+_clogging
*CAT: n
*SEM: orRel[rel=avoid_+_potential_+_clogging]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: deflection
*CAT: n
*SEM: unaryRel[rel=deflection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: deflection
*CAT: n
*SEM: twoRel[rel=deflection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: deflection
*CAT: n
*SEM: twoRel[rel=deflection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: deflection
*CAT: n
*SEM: orRel[rel=deflection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: moving_+_components
*CAT: n
*SEM: unaryRel[rel=moving_+_components]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: moving_+_components
*CAT: n
*SEM: twoRel[rel=moving_+_components]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: moving_+_components
*CAT: n
*SEM: twoRel[rel=moving_+_components]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: moving_+_components
*CAT: n
*SEM: orRel[rel=moving_+_components]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: correct_+_electrical_+_installation
*CAT: n
*SEM: unaryRel[rel=correct_+_electrical_+_installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: correct_+_electrical_+_installation
*CAT: n
*SEM: twoRel[rel=correct_+_electrical_+_installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: correct_+_electrical_+_installation
*CAT: n
*SEM: twoRel[rel=correct_+_electrical_+_installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: correct_+_electrical_+_installation
*CAT: n
*SEM: orRel[rel=correct_+_electrical_+_installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_point_+_where
*CAT: n
*SEM: unaryRel[rel=any_+_other_+_point_+_where]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_point_+_where
*CAT: n
*SEM: twoRel[rel=any_+_other_+_point_+_where]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_point_+_where
*CAT: n
*SEM: twoRel[rel=any_+_other_+_point_+_where]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_point_+_where
*CAT: n
*SEM: orRel[rel=any_+_other_+_point_+_where]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_consecutive_+_brackets_+_which
*CAT: n
*SEM: unaryRel[rel=two_+_consecutive_+_brackets_+_which]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_consecutive_+_brackets_+_which
*CAT: n
*SEM: twoRel[rel=two_+_consecutive_+_brackets_+_which]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_consecutive_+_brackets_+_which
*CAT: n
*SEM: twoRel[rel=two_+_consecutive_+_brackets_+_which]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_consecutive_+_brackets_+_which
*CAT: n
*SEM: orRel[rel=two_+_consecutive_+_brackets_+_which]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angles_+_depending_+_on_+_the_+_used_+_material
*CAT: n
*SEM: unaryRel[rel=bend_+_angles_+_depending_+_on_+_the_+_used_+_material]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angles_+_depending_+_on_+_the_+_used_+_material
*CAT: n
*SEM: twoRel[rel=bend_+_angles_+_depending_+_on_+_the_+_used_+_material]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angles_+_depending_+_on_+_the_+_used_+_material
*CAT: n
*SEM: twoRel[rel=bend_+_angles_+_depending_+_on_+_the_+_used_+_material]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angles_+_depending_+_on_+_the_+_used_+_material
*CAT: n
*SEM: orRel[rel=bend_+_angles_+_depending_+_on_+_the_+_used_+_material]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935805tshielded
*CAT: n
*SEM: unaryRel[rel=nsa_+_935805tshielded]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935805tshielded
*CAT: n
*SEM: twoRel[rel=nsa_+_935805tshielded]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935805tshielded
*CAT: n
*SEM: twoRel[rel=nsa_+_935805tshielded]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935805tshielded
*CAT: n
*SEM: orRel[rel=nsa_+_935805tshielded]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_3_+_core_+_wire
*CAT: n
*SEM: unaryRel[rel=twisted_+_3_+_core_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_3_+_core_+_wire
*CAT: n
*SEM: twoRel[rel=twisted_+_3_+_core_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_3_+_core_+_wire
*CAT: n
*SEM: twoRel[rel=twisted_+_3_+_core_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_3_+_core_+_wire
*CAT: n
*SEM: orRel[rel=twisted_+_3_+_core_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: profile
*CAT: n
*SEM: unaryRel[rel=profile]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: profile
*CAT: n
*SEM: twoRel[rel=profile]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: profile
*CAT: n
*SEM: twoRel[rel=profile]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: profile
*CAT: n
*SEM: orRel[rel=profile]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_edges
*CAT: n
*SEM: unaryRel[rel=structural_+_edges]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_edges
*CAT: n
*SEM: twoRel[rel=structural_+_edges]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_edges
*CAT: n
*SEM: twoRel[rel=structural_+_edges]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_edges
*CAT: n
*SEM: orRel[rel=structural_+_edges]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_design_+_of_+_bracket
*CAT: n
*SEM: unaryRel[rel=new_+_design_+_of_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_design_+_of_+_bracket
*CAT: n
*SEM: twoRel[rel=new_+_design_+_of_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_design_+_of_+_bracket
*CAT: n
*SEM: twoRel[rel=new_+_design_+_of_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_design_+_of_+_bracket
*CAT: n
*SEM: orRel[rel=new_+_design_+_of_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: leads
*CAT: n
*SEM: unaryRel[rel=leads]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: leads
*CAT: n
*SEM: twoRel[rel=leads]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: leads
*CAT: n
*SEM: twoRel[rel=leads]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: leads
*CAT: n
*SEM: orRel[rel=leads]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_virtual_+_terminal_+_block
*CAT: n
*SEM: unaryRel[rel=power_+_virtual_+_terminal_+_block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_virtual_+_terminal_+_block
*CAT: n
*SEM: twoRel[rel=power_+_virtual_+_terminal_+_block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_virtual_+_terminal_+_block
*CAT: n
*SEM: twoRel[rel=power_+_virtual_+_terminal_+_block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_virtual_+_terminal_+_block
*CAT: n
*SEM: orRel[rel=power_+_virtual_+_terminal_+_block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: databus_+_wire
*CAT: n
*SEM: unaryRel[rel=databus_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: databus_+_wire
*CAT: n
*SEM: twoRel[rel=databus_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: databus_+_wire
*CAT: n
*SEM: twoRel[rel=databus_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: databus_+_wire
*CAT: n
*SEM: orRel[rel=databus_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: otherwise
*CAT: n
*SEM: unaryRel[rel=otherwise]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: otherwise
*CAT: n
*SEM: twoRel[rel=otherwise]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: otherwise
*CAT: n
*SEM: twoRel[rel=otherwise]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: otherwise
*CAT: n
*SEM: orRel[rel=otherwise]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_zone
*CAT: n
*SEM: unaryRel[rel=fuel_+_zone]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_zone
*CAT: n
*SEM: twoRel[rel=fuel_+_zone]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_zone
*CAT: n
*SEM: twoRel[rel=fuel_+_zone]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_zone
*CAT: n
*SEM: orRel[rel=fuel_+_zone]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+__-_equalto_-_10mm
*CAT: n
*SEM: unaryRel[rel=d_+__-_smallerThan_-__+__-_equalto_-_10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+__-_equalto_-_10mm
*CAT: n
*SEM: twoRel[rel=d_+__-_smallerThan_-__+__-_equalto_-_10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+__-_equalto_-_10mm
*CAT: n
*SEM: twoRel[rel=d_+__-_smallerThan_-__+__-_equalto_-_10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+__-_equalto_-_10mm
*CAT: n
*SEM: orRel[rel=d_+__-_smallerThan_-__+__-_equalto_-_10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: exception
*CAT: n
*SEM: unaryRel[rel=exception]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: exception
*CAT: n
*SEM: twoRel[rel=exception]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: exception
*CAT: n
*SEM: twoRel[rel=exception]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: exception
*CAT: n
*SEM: orRel[rel=exception]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-_+_route_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=g-_+_route_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-_+_route_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=g-_+_route_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-_+_route_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=g-_+_route_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-_+_route_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=g-_+_route_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all
*CAT: n
*SEM: unaryRel[rel=all]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all
*CAT: n
*SEM: twoRel[rel=all]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all
*CAT: n
*SEM: twoRel[rel=all]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all
*CAT: n
*SEM: orRel[rel=all]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hose_+_end_+_unions
*CAT: n
*SEM: unaryRel[rel=flexible_+_hose_+_end_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hose_+_end_+_unions
*CAT: n
*SEM: twoRel[rel=flexible_+_hose_+_end_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hose_+_end_+_unions
*CAT: n
*SEM: twoRel[rel=flexible_+_hose_+_end_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hose_+_end_+_unions
*CAT: n
*SEM: orRel[rel=flexible_+_hose_+_end_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch_+_p_+__-_smallerThan_-__-_equalto_-_150mm
*CAT: n
*SEM: unaryRel[rel=pitch_+_p_+__-_smallerThan_-__-_equalto_-_150mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch_+_p_+__-_smallerThan_-__-_equalto_-_150mm
*CAT: n
*SEM: twoRel[rel=pitch_+_p_+__-_smallerThan_-__-_equalto_-_150mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch_+_p_+__-_smallerThan_-__-_equalto_-_150mm
*CAT: n
*SEM: twoRel[rel=pitch_+_p_+__-_smallerThan_-__-_equalto_-_150mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch_+_p_+__-_smallerThan_-__-_equalto_-_150mm
*CAT: n
*SEM: orRel[rel=pitch_+_p_+__-_smallerThan_-__-_equalto_-_150mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_run
*CAT: n
*SEM: unaryRel[rel=pipe_+_run]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_run
*CAT: n
*SEM: twoRel[rel=pipe_+_run]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_run
*CAT: n
*SEM: twoRel[rel=pipe_+_run]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_run
*CAT: n
*SEM: orRel[rel=pipe_+_run]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic_+_below
*CAT: n
*SEM: unaryRel[rel=graphic_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic_+_below
*CAT: n
*SEM: twoRel[rel=graphic_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic_+_below
*CAT: n
*SEM: twoRel[rel=graphic_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic_+_below
*CAT: n
*SEM: orRel[rel=graphic_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805
*CAT: n
*SEM: unaryRel[rel=nsa935805]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805
*CAT: n
*SEM: twoRel[rel=nsa935805]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805
*CAT: n
*SEM: twoRel[rel=nsa935805]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805
*CAT: n
*SEM: orRel[rel=nsa935805]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_introduces
*CAT: n
*SEM: unaryRel[rel=installation_+_introduces]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_introduces
*CAT: n
*SEM: twoRel[rel=installation_+_introduces]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_introduces
*CAT: n
*SEM: twoRel[rel=installation_+_introduces]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_introduces
*CAT: n
*SEM: orRel[rel=installation_+_introduces]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm
*CAT: n
*SEM: unaryRel[rel=150mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm
*CAT: n
*SEM: twoRel[rel=150mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm
*CAT: n
*SEM: twoRel[rel=150mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm
*CAT: n
*SEM: orRel[rel=150mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_markings
*CAT: n
*SEM: unaryRel[rel=additional_+_markings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_markings
*CAT: n
*SEM: twoRel[rel=additional_+_markings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_markings
*CAT: n
*SEM: twoRel[rel=additional_+_markings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_markings
*CAT: n
*SEM: orRel[rel=additional_+_markings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_rack
*CAT: n
*SEM: unaryRel[rel=equipment_+_rack]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_rack
*CAT: n
*SEM: twoRel[rel=equipment_+_rack]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_rack
*CAT: n
*SEM: twoRel[rel=equipment_+_rack]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_rack
*CAT: n
*SEM: orRel[rel=equipment_+_rack]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle
*CAT: n
*SEM: unaryRel[rel=saddle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle
*CAT: n
*SEM: twoRel[rel=saddle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle
*CAT: n
*SEM: twoRel[rel=saddle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle
*CAT: n
*SEM: orRel[rel=saddle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f02
*CAT: n
*SEM: unaryRel[rel=abs1576-f02]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f02
*CAT: n
*SEM: twoRel[rel=abs1576-f02]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f02
*CAT: n
*SEM: twoRel[rel=abs1576-f02]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f02
*CAT: n
*SEM: orRel[rel=abs1576-f02]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0127_+_cable_+_retainer_+_in_+_wing
*CAT: n
*SEM: unaryRel[rel=abs_+_0127_+_cable_+_retainer_+_in_+_wing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0127_+_cable_+_retainer_+_in_+_wing
*CAT: n
*SEM: twoRel[rel=abs_+_0127_+_cable_+_retainer_+_in_+_wing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0127_+_cable_+_retainer_+_in_+_wing
*CAT: n
*SEM: twoRel[rel=abs_+_0127_+_cable_+_retainer_+_in_+_wing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0127_+_cable_+_retainer_+_in_+_wing
*CAT: n
*SEM: orRel[rel=abs_+_0127_+_cable_+_retainer_+_in_+_wing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermally
*CAT: n
*SEM: unaryRel[rel=thermally]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermally
*CAT: n
*SEM: twoRel[rel=thermally]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermally
*CAT: n
*SEM: twoRel[rel=thermally]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermally
*CAT: n
*SEM: orRel[rel=thermally]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_ns935401_+_cable_+_tie
*CAT: n
*SEM: unaryRel[rel=single_+_ns935401_+_cable_+_tie]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_ns935401_+_cable_+_tie
*CAT: n
*SEM: twoRel[rel=single_+_ns935401_+_cable_+_tie]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_ns935401_+_cable_+_tie
*CAT: n
*SEM: twoRel[rel=single_+_ns935401_+_cable_+_tie]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_ns935401_+_cable_+_tie
*CAT: n
*SEM: orRel[rel=single_+_ns935401_+_cable_+_tie]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: which
*CAT: n
*SEM: unaryRel[rel=which]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: which
*CAT: n
*SEM: twoRel[rel=which]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: which
*CAT: n
*SEM: twoRel[rel=which]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: which
*CAT: n
*SEM: orRel[rel=which]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_planes_-_colon_-__+_2.25_+_inches_+__-_opensb_-_57.15mm_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=different_+_planes_-_colon_-__+_2.25_+_inches_+__-_opensb_-_57.15mm_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_planes_-_colon_-__+_2.25_+_inches_+__-_opensb_-_57.15mm_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=different_+_planes_-_colon_-__+_2.25_+_inches_+__-_opensb_-_57.15mm_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_planes_-_colon_-__+_2.25_+_inches_+__-_opensb_-_57.15mm_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=different_+_planes_-_colon_-__+_2.25_+_inches_+__-_opensb_-_57.15mm_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_planes_-_colon_-__+_2.25_+_inches_+__-_opensb_-_57.15mm_-_closesb_-_
*CAT: n
*SEM: orRel[rel=different_+_planes_-_colon_-__+_2.25_+_inches_+__-_opensb_-_57.15mm_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: phosphate-ester_+_hydraulic_+_fluid_+_â€“resistant
*CAT: n
*SEM: unaryRel[rel=phosphate-ester_+_hydraulic_+_fluid_+_â€“resistant]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: phosphate-ester_+_hydraulic_+_fluid_+_â€“resistant
*CAT: n
*SEM: twoRel[rel=phosphate-ester_+_hydraulic_+_fluid_+_â€“resistant]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: phosphate-ester_+_hydraulic_+_fluid_+_â€“resistant
*CAT: n
*SEM: twoRel[rel=phosphate-ester_+_hydraulic_+_fluid_+_â€“resistant]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: phosphate-ester_+_hydraulic_+_fluid_+_â€“resistant
*CAT: n
*SEM: orRel[rel=phosphate-ester_+_hydraulic_+_fluid_+_â€“resistant]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hinges
*CAT: n
*SEM: unaryRel[rel=hinges]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hinges
*CAT: n
*SEM: twoRel[rel=hinges]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hinges
*CAT: n
*SEM: twoRel[rel=hinges]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hinges
*CAT: n
*SEM: orRel[rel=hinges]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_bobbin
*CAT: n
*SEM: unaryRel[rel=intermediate_+_bobbin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_bobbin
*CAT: n
*SEM: twoRel[rel=intermediate_+_bobbin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_bobbin
*CAT: n
*SEM: twoRel[rel=intermediate_+_bobbin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_bobbin
*CAT: n
*SEM: orRel[rel=intermediate_+_bobbin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4m
*CAT: n
*SEM: unaryRel[rel=4m]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4m
*CAT: n
*SEM: twoRel[rel=4m]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4m
*CAT: n
*SEM: twoRel[rel=4m]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4m
*CAT: n
*SEM: orRel[rel=4m]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: they
*CAT: n
*SEM: unaryRel[rel=they]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: they
*CAT: n
*SEM: twoRel[rel=they]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: they
*CAT: n
*SEM: twoRel[rel=they]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: they
*CAT: n
*SEM: orRel[rel=they]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l
*CAT: n
*SEM: unaryRel[rel=l]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l
*CAT: n
*SEM: twoRel[rel=l]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l
*CAT: n
*SEM: twoRel[rel=l]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l
*CAT: n
*SEM: orRel[rel=l]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate_+_straight_+_at_+_the_+_exits
*CAT: n
*SEM: unaryRel[rel=mounting_+_plate_+_straight_+_at_+_the_+_exits]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate_+_straight_+_at_+_the_+_exits
*CAT: n
*SEM: twoRel[rel=mounting_+_plate_+_straight_+_at_+_the_+_exits]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate_+_straight_+_at_+_the_+_exits
*CAT: n
*SEM: twoRel[rel=mounting_+_plate_+_straight_+_at_+_the_+_exits]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate_+_straight_+_at_+_the_+_exits
*CAT: n
*SEM: orRel[rel=mounting_+_plate_+_straight_+_at_+_the_+_exits]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cutouts
*CAT: n
*SEM: unaryRel[rel=cutouts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cutouts
*CAT: n
*SEM: twoRel[rel=cutouts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cutouts
*CAT: n
*SEM: twoRel[rel=cutouts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cutouts
*CAT: n
*SEM: orRel[rel=cutouts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_detector_+_assembly
*CAT: n
*SEM: unaryRel[rel=fire_+_detector_+_assembly]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_detector_+_assembly
*CAT: n
*SEM: twoRel[rel=fire_+_detector_+_assembly]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_detector_+_assembly
*CAT: n
*SEM: twoRel[rel=fire_+_detector_+_assembly]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_detector_+_assembly
*CAT: n
*SEM: orRel[rel=fire_+_detector_+_assembly]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: keyway
*CAT: n
*SEM: unaryRel[rel=keyway]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: keyway
*CAT: n
*SEM: twoRel[rel=keyway]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: keyway
*CAT: n
*SEM: twoRel[rel=keyway]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: keyway
*CAT: n
*SEM: orRel[rel=keyway]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: together
*CAT: n
*SEM: unaryRel[rel=together]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: together
*CAT: n
*SEM: twoRel[rel=together]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: together
*CAT: n
*SEM: twoRel[rel=together]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: together
*CAT: n
*SEM: orRel[rel=together]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: largest_+_surface_+_first_+_on_+_stud_+_feeder_+_lug
*CAT: n
*SEM: unaryRel[rel=largest_+_surface_+_first_+_on_+_stud_+_feeder_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: largest_+_surface_+_first_+_on_+_stud_+_feeder_+_lug
*CAT: n
*SEM: twoRel[rel=largest_+_surface_+_first_+_on_+_stud_+_feeder_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: largest_+_surface_+_first_+_on_+_stud_+_feeder_+_lug
*CAT: n
*SEM: twoRel[rel=largest_+_surface_+_first_+_on_+_stud_+_feeder_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: largest_+_surface_+_first_+_on_+_stud_+_feeder_+_lug
*CAT: n
*SEM: orRel[rel=largest_+_surface_+_first_+_on_+_stud_+_feeder_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: limitation
*CAT: n
*SEM: unaryRel[rel=limitation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: limitation
*CAT: n
*SEM: twoRel[rel=limitation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: limitation
*CAT: n
*SEM: twoRel[rel=limitation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: limitation
*CAT: n
*SEM: orRel[rel=limitation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee-union
*CAT: n
*SEM: unaryRel[rel=tee-union]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee-union
*CAT: n
*SEM: twoRel[rel=tee-union]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee-union
*CAT: n
*SEM: twoRel[rel=tee-union]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee-union
*CAT: n
*SEM: orRel[rel=tee-union]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_the_+_minimum_+_straight_+_distance_+_containing_+_an_+_in-situ_+_swaging_+_between_+_two_+_bends_+_into_+_account
*CAT: n
*SEM: unaryRel[rel=taking_+_the_+_minimum_+_straight_+_distance_+_containing_+_an_+_in-situ_+_swaging_+_between_+_two_+_bends_+_into_+_account]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_the_+_minimum_+_straight_+_distance_+_containing_+_an_+_in-situ_+_swaging_+_between_+_two_+_bends_+_into_+_account
*CAT: n
*SEM: twoRel[rel=taking_+_the_+_minimum_+_straight_+_distance_+_containing_+_an_+_in-situ_+_swaging_+_between_+_two_+_bends_+_into_+_account]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_the_+_minimum_+_straight_+_distance_+_containing_+_an_+_in-situ_+_swaging_+_between_+_two_+_bends_+_into_+_account
*CAT: n
*SEM: twoRel[rel=taking_+_the_+_minimum_+_straight_+_distance_+_containing_+_an_+_in-situ_+_swaging_+_between_+_two_+_bends_+_into_+_account]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_the_+_minimum_+_straight_+_distance_+_containing_+_an_+_in-situ_+_swaging_+_between_+_two_+_bends_+_into_+_account
*CAT: n
*SEM: orRel[rel=taking_+_the_+_minimum_+_straight_+_distance_+_containing_+_an_+_in-situ_+_swaging_+_between_+_two_+_bends_+_into_+_account]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539_+_when_+_the_+_bundle_+_diameter
*CAT: n
*SEM: unaryRel[rel=nsa_+_5539_+_when_+_the_+_bundle_+_diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539_+_when_+_the_+_bundle_+_diameter
*CAT: n
*SEM: twoRel[rel=nsa_+_5539_+_when_+_the_+_bundle_+_diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539_+_when_+_the_+_bundle_+_diameter
*CAT: n
*SEM: twoRel[rel=nsa_+_5539_+_when_+_the_+_bundle_+_diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539_+_when_+_the_+_bundle_+_diameter
*CAT: n
*SEM: orRel[rel=nsa_+_5539_+_when_+_the_+_bundle_+_diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_at_+_the_+_end_+_of_+_the_+_cable_-_backslash_-_wire
*CAT: n
*SEM: unaryRel[rel=identification_+_at_+_the_+_end_+_of_+_the_+_cable_-_backslash_-_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_at_+_the_+_end_+_of_+_the_+_cable_-_backslash_-_wire
*CAT: n
*SEM: twoRel[rel=identification_+_at_+_the_+_end_+_of_+_the_+_cable_-_backslash_-_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_at_+_the_+_end_+_of_+_the_+_cable_-_backslash_-_wire
*CAT: n
*SEM: twoRel[rel=identification_+_at_+_the_+_end_+_of_+_the_+_cable_-_backslash_-_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_at_+_the_+_end_+_of_+_the_+_cable_-_backslash_-_wire
*CAT: n
*SEM: orRel[rel=identification_+_at_+_the_+_end_+_of_+_the_+_cable_-_backslash_-_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_to
*CAT: n
*SEM: unaryRel[rel=bundle_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_to
*CAT: n
*SEM: twoRel[rel=bundle_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_to
*CAT: n
*SEM: twoRel[rel=bundle_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_to
*CAT: n
*SEM: orRel[rel=bundle_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: antenna_+_removal
*CAT: n
*SEM: unaryRel[rel=antenna_+_removal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: antenna_+_removal
*CAT: n
*SEM: twoRel[rel=antenna_+_removal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: antenna_+_removal
*CAT: n
*SEM: twoRel[rel=antenna_+_removal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: antenna_+_removal
*CAT: n
*SEM: orRel[rel=antenna_+_removal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passenger_+_entertainment_+_video
*CAT: n
*SEM: unaryRel[rel=passenger_+_entertainment_+_video]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passenger_+_entertainment_+_video
*CAT: n
*SEM: twoRel[rel=passenger_+_entertainment_+_video]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passenger_+_entertainment_+_video
*CAT: n
*SEM: twoRel[rel=passenger_+_entertainment_+_video]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passenger_+_entertainment_+_video
*CAT: n
*SEM: orRel[rel=passenger_+_entertainment_+_video]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: areas_+_where_+_rivited
*CAT: n
*SEM: unaryRel[rel=areas_+_where_+_rivited]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: areas_+_where_+_rivited
*CAT: n
*SEM: twoRel[rel=areas_+_where_+_rivited]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: areas_+_where_+_rivited
*CAT: n
*SEM: twoRel[rel=areas_+_where_+_rivited]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: areas_+_where_+_rivited
*CAT: n
*SEM: orRel[rel=areas_+_where_+_rivited]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_passing
*CAT: n
*SEM: unaryRel[rel=routings_+_passing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_passing
*CAT: n
*SEM: twoRel[rel=routings_+_passing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_passing
*CAT: n
*SEM: twoRel[rel=routings_+_passing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_passing
*CAT: n
*SEM: orRel[rel=routings_+_passing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_extremities
*CAT: n
*SEM: unaryRel[rel=end_+_extremities]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_extremities
*CAT: n
*SEM: twoRel[rel=end_+_extremities]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_extremities
*CAT: n
*SEM: twoRel[rel=end_+_extremities]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_extremities
*CAT: n
*SEM: orRel[rel=end_+_extremities]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle_-_opensb_-_s_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=bend_+_angle_-_opensb_-_s_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle_-_opensb_-_s_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=bend_+_angle_-_opensb_-_s_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle_-_opensb_-_s_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=bend_+_angle_-_opensb_-_s_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle_-_opensb_-_s_-_closesb_-_
*CAT: n
*SEM: orRel[rel=bend_+_angle_-_opensb_-_s_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0497_+_+_+_abs_+_0498
*CAT: n
*SEM: unaryRel[rel=abs_+_0497_+_+_+_abs_+_0498]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0497_+_+_+_abs_+_0498
*CAT: n
*SEM: twoRel[rel=abs_+_0497_+_+_+_abs_+_0498]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0497_+_+_+_abs_+_0498
*CAT: n
*SEM: twoRel[rel=abs_+_0497_+_+_+_abs_+_0498]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0497_+_+_+_abs_+_0498
*CAT: n
*SEM: orRel[rel=abs_+_0497_+_+_+_abs_+_0498]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_zones_+_class_+_a
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_zones_+_class_+_a]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_zones_+_class_+_a
*CAT: n
*SEM: twoRel[rel=hydraulic_+_zones_+_class_+_a]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_zones_+_class_+_a
*CAT: n
*SEM: twoRel[rel=hydraulic_+_zones_+_class_+_a]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_zones_+_class_+_a
*CAT: n
*SEM: orRel[rel=hydraulic_+_zones_+_class_+_a]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch
*CAT: n
*SEM: unaryRel[rel=maximum_+_pitch]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch
*CAT: n
*SEM: twoRel[rel=maximum_+_pitch]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch
*CAT: n
*SEM: twoRel[rel=maximum_+_pitch]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch
*CAT: n
*SEM: orRel[rel=maximum_+_pitch]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossbeams
*CAT: n
*SEM: unaryRel[rel=crossbeams]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossbeams
*CAT: n
*SEM: twoRel[rel=crossbeams]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossbeams
*CAT: n
*SEM: twoRel[rel=crossbeams]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossbeams
*CAT: n
*SEM: orRel[rel=crossbeams]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m_+_routes
*CAT: n
*SEM: unaryRel[rel=m_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m_+_routes
*CAT: n
*SEM: twoRel[rel=m_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m_+_routes
*CAT: n
*SEM: twoRel[rel=m_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m_+_routes
*CAT: n
*SEM: orRel[rel=m_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: c_-_closesb_-__+__-_opensb_-_e.g._+_bundles_+_at_+_hinges_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=c_-_closesb_-__+__-_opensb_-_e.g._+_bundles_+_at_+_hinges_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: c_-_closesb_-__+__-_opensb_-_e.g._+_bundles_+_at_+_hinges_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=c_-_closesb_-__+__-_opensb_-_e.g._+_bundles_+_at_+_hinges_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: c_-_closesb_-__+__-_opensb_-_e.g._+_bundles_+_at_+_hinges_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=c_-_closesb_-__+__-_opensb_-_e.g._+_bundles_+_at_+_hinges_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: c_-_closesb_-__+__-_opensb_-_e.g._+_bundles_+_at_+_hinges_-_closesb_-_
*CAT: n
*SEM: orRel[rel=c_-_closesb_-__+__-_opensb_-_e.g._+_bundles_+_at_+_hinges_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sio2_+_cable
*CAT: n
*SEM: unaryRel[rel=sio2_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sio2_+_cable
*CAT: n
*SEM: twoRel[rel=sio2_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sio2_+_cable
*CAT: n
*SEM: twoRel[rel=sio2_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sio2_+_cable
*CAT: n
*SEM: orRel[rel=sio2_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee-unions
*CAT: n
*SEM: unaryRel[rel=tee-unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee-unions
*CAT: n
*SEM: twoRel[rel=tee-unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee-unions
*CAT: n
*SEM: twoRel[rel=tee-unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee-unions
*CAT: n
*SEM: orRel[rel=tee-unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_digit_+_g_+__-_opensb_-_e.g._+_1mg_-_closesb_-_._+_split_+_conduit_+_en_+_60497_+_is_+_recommended
*CAT: n
*SEM: unaryRel[rel=additional_+_digit_+_g_+__-_opensb_-_e.g._+_1mg_-_closesb_-_._+_split_+_conduit_+_en_+_60497_+_is_+_recommended]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_digit_+_g_+__-_opensb_-_e.g._+_1mg_-_closesb_-_._+_split_+_conduit_+_en_+_60497_+_is_+_recommended
*CAT: n
*SEM: twoRel[rel=additional_+_digit_+_g_+__-_opensb_-_e.g._+_1mg_-_closesb_-_._+_split_+_conduit_+_en_+_60497_+_is_+_recommended]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_digit_+_g_+__-_opensb_-_e.g._+_1mg_-_closesb_-_._+_split_+_conduit_+_en_+_60497_+_is_+_recommended
*CAT: n
*SEM: twoRel[rel=additional_+_digit_+_g_+__-_opensb_-_e.g._+_1mg_-_closesb_-_._+_split_+_conduit_+_en_+_60497_+_is_+_recommended]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_digit_+_g_+__-_opensb_-_e.g._+_1mg_-_closesb_-_._+_split_+_conduit_+_en_+_60497_+_is_+_recommended
*CAT: n
*SEM: orRel[rel=additional_+_digit_+_g_+__-_opensb_-_e.g._+_1mg_-_closesb_-_._+_split_+_conduit_+_en_+_60497_+_is_+_recommended]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2018_+_low_+_pressure_+_lines
*CAT: n
*SEM: unaryRel[rel=abs2018_+_low_+_pressure_+_lines]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2018_+_low_+_pressure_+_lines
*CAT: n
*SEM: twoRel[rel=abs2018_+_low_+_pressure_+_lines]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2018_+_low_+_pressure_+_lines
*CAT: n
*SEM: twoRel[rel=abs2018_+_low_+_pressure_+_lines]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2018_+_low_+_pressure_+_lines
*CAT: n
*SEM: orRel[rel=abs2018_+_low_+_pressure_+_lines]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: para-aramid_+_braided_+_non-metallic_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=para-aramid_+_braided_+_non-metallic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: para-aramid_+_braided_+_non-metallic_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=para-aramid_+_braided_+_non-metallic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: para-aramid_+_braided_+_non-metallic_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=para-aramid_+_braided_+_non-metallic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: para-aramid_+_braided_+_non-metallic_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=para-aramid_+_braided_+_non-metallic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_additional_+_protection
*CAT: n
*SEM: unaryRel[rel=an_+_additional_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_additional_+_protection
*CAT: n
*SEM: twoRel[rel=an_+_additional_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_additional_+_protection
*CAT: n
*SEM: twoRel[rel=an_+_additional_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_additional_+_protection
*CAT: n
*SEM: orRel[rel=an_+_additional_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: risk
*CAT: n
*SEM: unaryRel[rel=risk]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: risk
*CAT: n
*SEM: twoRel[rel=risk]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: risk
*CAT: n
*SEM: twoRel[rel=risk]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: risk
*CAT: n
*SEM: orRel[rel=risk]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_circuit
*CAT: n
*SEM: unaryRel[rel=single_+_circuit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_circuit
*CAT: n
*SEM: twoRel[rel=single_+_circuit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_circuit
*CAT: n
*SEM: twoRel[rel=single_+_circuit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_circuit
*CAT: n
*SEM: orRel[rel=single_+_circuit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: antennas
*CAT: n
*SEM: unaryRel[rel=antennas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: antennas
*CAT: n
*SEM: twoRel[rel=antennas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: antennas
*CAT: n
*SEM: twoRel[rel=antennas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: antennas
*CAT: n
*SEM: orRel[rel=antennas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_distance_+_of_+_41.9_+_mm_+_between_+_the_+_first_+_clamp
*CAT: n
*SEM: unaryRel[rel=maximum_+_distance_+_of_+_41.9_+_mm_+_between_+_the_+_first_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_distance_+_of_+_41.9_+_mm_+_between_+_the_+_first_+_clamp
*CAT: n
*SEM: twoRel[rel=maximum_+_distance_+_of_+_41.9_+_mm_+_between_+_the_+_first_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_distance_+_of_+_41.9_+_mm_+_between_+_the_+_first_+_clamp
*CAT: n
*SEM: twoRel[rel=maximum_+_distance_+_of_+_41.9_+_mm_+_between_+_the_+_first_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_distance_+_of_+_41.9_+_mm_+_between_+_the_+_first_+_clamp
*CAT: n
*SEM: orRel[rel=maximum_+_distance_+_of_+_41.9_+_mm_+_between_+_the_+_first_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detoriation_+_when_+_the_+_equipment
*CAT: n
*SEM: unaryRel[rel=detoriation_+_when_+_the_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detoriation_+_when_+_the_+_equipment
*CAT: n
*SEM: twoRel[rel=detoriation_+_when_+_the_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detoriation_+_when_+_the_+_equipment
*CAT: n
*SEM: twoRel[rel=detoriation_+_when_+_the_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detoriation_+_when_+_the_+_equipment
*CAT: n
*SEM: orRel[rel=detoriation_+_when_+_the_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_bobbin_+_in_+_the_+_middle_+_of_+_two_+_frames_+_in_+_curves
*CAT: n
*SEM: unaryRel[rel=intermediate_+_bobbin_+_in_+_the_+_middle_+_of_+_two_+_frames_+_in_+_curves]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_bobbin_+_in_+_the_+_middle_+_of_+_two_+_frames_+_in_+_curves
*CAT: n
*SEM: twoRel[rel=intermediate_+_bobbin_+_in_+_the_+_middle_+_of_+_two_+_frames_+_in_+_curves]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_bobbin_+_in_+_the_+_middle_+_of_+_two_+_frames_+_in_+_curves
*CAT: n
*SEM: twoRel[rel=intermediate_+_bobbin_+_in_+_the_+_middle_+_of_+_two_+_frames_+_in_+_curves]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_bobbin_+_in_+_the_+_middle_+_of_+_two_+_frames_+_in_+_curves
*CAT: n
*SEM: orRel[rel=intermediate_+_bobbin_+_in_+_the_+_middle_+_of_+_two_+_frames_+_in_+_curves]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_when
*CAT: n
*SEM: unaryRel[rel=nsa_+_937201_+_identification_+_sleeve_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_when
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_when
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_when
*CAT: n
*SEM: orRel[rel=nsa_+_937201_+_identification_+_sleeve_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_931025_+_metallic_+_label
*CAT: n
*SEM: unaryRel[rel=nsa_+_931025_+_metallic_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_931025_+_metallic_+_label
*CAT: n
*SEM: twoRel[rel=nsa_+_931025_+_metallic_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_931025_+_metallic_+_label
*CAT: n
*SEM: twoRel[rel=nsa_+_931025_+_metallic_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_931025_+_metallic_+_label
*CAT: n
*SEM: orRel[rel=nsa_+_931025_+_metallic_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cases_+_where_+_wire_+_locking
*CAT: n
*SEM: unaryRel[rel=cases_+_where_+_wire_+_locking]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cases_+_where_+_wire_+_locking
*CAT: n
*SEM: twoRel[rel=cases_+_where_+_wire_+_locking]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cases_+_where_+_wire_+_locking
*CAT: n
*SEM: twoRel[rel=cases_+_where_+_wire_+_locking]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cases_+_where_+_wire_+_locking
*CAT: n
*SEM: orRel[rel=cases_+_where_+_wire_+_locking]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_65_+__-_percent_-__+_fillrate
*CAT: n
*SEM: unaryRel[rel=max_+_65_+__-_percent_-__+_fillrate]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_65_+__-_percent_-__+_fillrate
*CAT: n
*SEM: twoRel[rel=max_+_65_+__-_percent_-__+_fillrate]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_65_+__-_percent_-__+_fillrate
*CAT: n
*SEM: twoRel[rel=max_+_65_+__-_percent_-__+_fillrate]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_65_+__-_percent_-__+_fillrate
*CAT: n
*SEM: orRel[rel=max_+_65_+__-_percent_-__+_fillrate]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_extinguishing_+_system
*CAT: n
*SEM: unaryRel[rel=fire_+_extinguishing_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_extinguishing_+_system
*CAT: n
*SEM: twoRel[rel=fire_+_extinguishing_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_extinguishing_+_system
*CAT: n
*SEM: twoRel[rel=fire_+_extinguishing_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_extinguishing_+_system
*CAT: n
*SEM: orRel[rel=fire_+_extinguishing_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_interface
*CAT: n
*SEM: unaryRel[rel=electrical_+_interface]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_interface
*CAT: n
*SEM: twoRel[rel=electrical_+_interface]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_interface
*CAT: n
*SEM: twoRel[rel=electrical_+_interface]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_interface
*CAT: n
*SEM: orRel[rel=electrical_+_interface]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removal.on_+_interface
*CAT: n
*SEM: unaryRel[rel=removal.on_+_interface]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removal.on_+_interface
*CAT: n
*SEM: twoRel[rel=removal.on_+_interface]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removal.on_+_interface
*CAT: n
*SEM: twoRel[rel=removal.on_+_interface]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removal.on_+_interface
*CAT: n
*SEM: orRel[rel=removal.on_+_interface]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: segregation_+_distances
*CAT: n
*SEM: unaryRel[rel=segregation_+_distances]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: segregation_+_distances
*CAT: n
*SEM: twoRel[rel=segregation_+_distances]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: segregation_+_distances
*CAT: n
*SEM: twoRel[rel=segregation_+_distances]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: segregation_+_distances
*CAT: n
*SEM: orRel[rel=segregation_+_distances]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_+__-_percent_-__+_capacity
*CAT: n
*SEM: unaryRel[rel=20_+__-_percent_-__+_capacity]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_+__-_percent_-__+_capacity
*CAT: n
*SEM: twoRel[rel=20_+__-_percent_-__+_capacity]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_+__-_percent_-__+_capacity
*CAT: n
*SEM: twoRel[rel=20_+__-_percent_-__+_capacity]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_+__-_percent_-__+_capacity
*CAT: n
*SEM: orRel[rel=20_+__-_percent_-__+_capacity]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cockpit_+_vu_+_on_+_all_+_switch_+_guard
*CAT: n
*SEM: unaryRel[rel=cockpit_+_vu_+_on_+_all_+_switch_+_guard]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cockpit_+_vu_+_on_+_all_+_switch_+_guard
*CAT: n
*SEM: twoRel[rel=cockpit_+_vu_+_on_+_all_+_switch_+_guard]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cockpit_+_vu_+_on_+_all_+_switch_+_guard
*CAT: n
*SEM: twoRel[rel=cockpit_+_vu_+_on_+_all_+_switch_+_guard]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cockpit_+_vu_+_on_+_all_+_switch_+_guard
*CAT: n
*SEM: orRel[rel=cockpit_+_vu_+_on_+_all_+_switch_+_guard]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sheath
*CAT: n
*SEM: unaryRel[rel=sheath]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sheath
*CAT: n
*SEM: twoRel[rel=sheath]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sheath
*CAT: n
*SEM: twoRel[rel=sheath]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sheath
*CAT: n
*SEM: orRel[rel=sheath]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptable
*CAT: n
*SEM: unaryRel[rel=receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptable
*CAT: n
*SEM: twoRel[rel=receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptable
*CAT: n
*SEM: twoRel[rel=receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptable
*CAT: n
*SEM: orRel[rel=receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ
*CAT: n
*SEM: unaryRel[rel=in-situ]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ
*CAT: n
*SEM: twoRel[rel=in-situ]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ
*CAT: n
*SEM: twoRel[rel=in-situ]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ
*CAT: n
*SEM: orRel[rel=in-situ]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: failure_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: unaryRel[rel=failure_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: failure_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: twoRel[rel=failure_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: failure_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: twoRel[rel=failure_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: failure_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: orRel[rel=failure_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: biggest_+_pipe
*CAT: n
*SEM: unaryRel[rel=biggest_+_pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: biggest_+_pipe
*CAT: n
*SEM: twoRel[rel=biggest_+_pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: biggest_+_pipe
*CAT: n
*SEM: twoRel[rel=biggest_+_pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: biggest_+_pipe
*CAT: n
*SEM: orRel[rel=biggest_+_pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crew_+_rest_+_compartment
*CAT: n
*SEM: unaryRel[rel=crew_+_rest_+_compartment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crew_+_rest_+_compartment
*CAT: n
*SEM: twoRel[rel=crew_+_rest_+_compartment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crew_+_rest_+_compartment
*CAT: n
*SEM: twoRel[rel=crew_+_rest_+_compartment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crew_+_rest_+_compartment
*CAT: n
*SEM: orRel[rel=crew_+_rest_+_compartment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account
*CAT: n
*SEM: unaryRel[rel=account]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account
*CAT: n
*SEM: twoRel[rel=account]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account
*CAT: n
*SEM: twoRel[rel=account]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account
*CAT: n
*SEM: orRel[rel=account]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion_+_the_+_bearings_+_of_+_the_+_ramps_+_system
*CAT: n
*SEM: unaryRel[rel=torsion_+_the_+_bearings_+_of_+_the_+_ramps_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion_+_the_+_bearings_+_of_+_the_+_ramps_+_system
*CAT: n
*SEM: twoRel[rel=torsion_+_the_+_bearings_+_of_+_the_+_ramps_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion_+_the_+_bearings_+_of_+_the_+_ramps_+_system
*CAT: n
*SEM: twoRel[rel=torsion_+_the_+_bearings_+_of_+_the_+_ramps_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion_+_the_+_bearings_+_of_+_the_+_ramps_+_system
*CAT: n
*SEM: orRel[rel=torsion_+_the_+_bearings_+_of_+_the_+_ramps_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket_+_which
*CAT: n
*SEM: unaryRel[rel=bracket_+_which]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket_+_which
*CAT: n
*SEM: twoRel[rel=bracket_+_which]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket_+_which
*CAT: n
*SEM: twoRel[rel=bracket_+_which]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket_+_which
*CAT: n
*SEM: orRel[rel=bracket_+_which]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_lines
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_lines]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_lines
*CAT: n
*SEM: twoRel[rel=hydraulic_+_lines]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_lines
*CAT: n
*SEM: twoRel[rel=hydraulic_+_lines]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_lines
*CAT: n
*SEM: orRel[rel=hydraulic_+_lines]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: roughness_+_less_+_than_+_3
*CAT: n
*SEM: unaryRel[rel=roughness_+_less_+_than_+_3]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: roughness_+_less_+_than_+_3
*CAT: n
*SEM: twoRel[rel=roughness_+_less_+_than_+_3]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: roughness_+_less_+_than_+_3
*CAT: n
*SEM: twoRel[rel=roughness_+_less_+_than_+_3]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: roughness_+_less_+_than_+_3
*CAT: n
*SEM: orRel[rel=roughness_+_less_+_than_+_3]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_point
*CAT: n
*SEM: unaryRel[rel=attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_point
*CAT: n
*SEM: twoRel[rel=attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_point
*CAT: n
*SEM: twoRel[rel=attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_point
*CAT: n
*SEM: orRel[rel=attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: it
*CAT: n
*SEM: unaryRel[rel=it]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: it
*CAT: n
*SEM: twoRel[rel=it]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: it
*CAT: n
*SEM: twoRel[rel=it]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: it
*CAT: n
*SEM: orRel[rel=it]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: corresponding_+_pipe_+_material_+_used
*CAT: n
*SEM: unaryRel[rel=corresponding_+_pipe_+_material_+_used]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: corresponding_+_pipe_+_material_+_used
*CAT: n
*SEM: twoRel[rel=corresponding_+_pipe_+_material_+_used]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: corresponding_+_pipe_+_material_+_used
*CAT: n
*SEM: twoRel[rel=corresponding_+_pipe_+_material_+_used]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: corresponding_+_pipe_+_material_+_used
*CAT: n
*SEM: orRel[rel=corresponding_+_pipe_+_material_+_used]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mlgb
*CAT: n
*SEM: unaryRel[rel=mlgb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mlgb
*CAT: n
*SEM: twoRel[rel=mlgb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mlgb
*CAT: n
*SEM: twoRel[rel=mlgb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mlgb
*CAT: n
*SEM: orRel[rel=mlgb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+__-_equalto_-_300
*CAT: n
*SEM: unaryRel[rel=d_+__-_smallerThan_-__+__-_equalto_-_300]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+__-_equalto_-_300
*CAT: n
*SEM: twoRel[rel=d_+__-_smallerThan_-__+__-_equalto_-_300]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+__-_equalto_-_300
*CAT: n
*SEM: twoRel[rel=d_+__-_smallerThan_-__+__-_equalto_-_300]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__+__-_equalto_-_300
*CAT: n
*SEM: orRel[rel=d_+__-_smallerThan_-__+__-_equalto_-_300]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition
*CAT: n
*SEM: unaryRel[rel=definition]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition
*CAT: n
*SEM: twoRel[rel=definition]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition
*CAT: n
*SEM: twoRel[rel=definition]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition
*CAT: n
*SEM: orRel[rel=definition]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: use
*CAT: n
*SEM: unaryRel[rel=use]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: use
*CAT: n
*SEM: twoRel[rel=use]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: use
*CAT: n
*SEM: twoRel[rel=use]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: use
*CAT: n
*SEM: orRel[rel=use]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: close_+_to_+_one_+_fixation_+_point
*CAT: n
*SEM: unaryRel[rel=close_+_to_+_one_+_fixation_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: close_+_to_+_one_+_fixation_+_point
*CAT: n
*SEM: twoRel[rel=close_+_to_+_one_+_fixation_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: close_+_to_+_one_+_fixation_+_point
*CAT: n
*SEM: twoRel[rel=close_+_to_+_one_+_fixation_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: close_+_to_+_one_+_fixation_+_point
*CAT: n
*SEM: orRel[rel=close_+_to_+_one_+_fixation_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1s
*CAT: n
*SEM: unaryRel[rel=1s]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1s
*CAT: n
*SEM: twoRel[rel=1s]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1s
*CAT: n
*SEM: twoRel[rel=1s]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1s
*CAT: n
*SEM: orRel[rel=1s]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: close
*CAT: n
*SEM: unaryRel[rel=close]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: close
*CAT: n
*SEM: twoRel[rel=close]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: close
*CAT: n
*SEM: twoRel[rel=close]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: close
*CAT: n
*SEM: orRel[rel=close]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_component
*CAT: n
*SEM: unaryRel[rel=electrical_+_component]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_component
*CAT: n
*SEM: twoRel[rel=electrical_+_component]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_component
*CAT: n
*SEM: twoRel[rel=electrical_+_component]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_component
*CAT: n
*SEM: orRel[rel=electrical_+_component]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ultimate_+_loads
*CAT: n
*SEM: unaryRel[rel=ultimate_+_loads]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ultimate_+_loads
*CAT: n
*SEM: twoRel[rel=ultimate_+_loads]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ultimate_+_loads
*CAT: n
*SEM: twoRel[rel=ultimate_+_loads]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ultimate_+_loads
*CAT: n
*SEM: orRel[rel=ultimate_+_loads]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0294or_+_ansa_+_5107-b
*CAT: n
*SEM: unaryRel[rel=0294or_+_ansa_+_5107-b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0294or_+_ansa_+_5107-b
*CAT: n
*SEM: twoRel[rel=0294or_+_ansa_+_5107-b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0294or_+_ansa_+_5107-b
*CAT: n
*SEM: twoRel[rel=0294or_+_ansa_+_5107-b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0294or_+_ansa_+_5107-b
*CAT: n
*SEM: orRel[rel=0294or_+_ansa_+_5107-b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_pipe
*CAT: n
*SEM: unaryRel[rel=any_+_other_+_pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_pipe
*CAT: n
*SEM: twoRel[rel=any_+_other_+_pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_pipe
*CAT: n
*SEM: twoRel[rel=any_+_other_+_pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_pipe
*CAT: n
*SEM: orRel[rel=any_+_other_+_pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: between_+_distribution_+_lugs._+_the_+_copper_+_terminal_+_lug
*CAT: n
*SEM: unaryRel[rel=between_+_distribution_+_lugs._+_the_+_copper_+_terminal_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: between_+_distribution_+_lugs._+_the_+_copper_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=between_+_distribution_+_lugs._+_the_+_copper_+_terminal_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: between_+_distribution_+_lugs._+_the_+_copper_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=between_+_distribution_+_lugs._+_the_+_copper_+_terminal_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: between_+_distribution_+_lugs._+_the_+_copper_+_terminal_+_lug
*CAT: n
*SEM: orRel[rel=between_+_distribution_+_lugs._+_the_+_copper_+_terminal_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_additional_+_terminal_+_lug_+_this_+_applies
*CAT: n
*SEM: unaryRel[rel=one_+_additional_+_terminal_+_lug_+_this_+_applies]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_additional_+_terminal_+_lug_+_this_+_applies
*CAT: n
*SEM: twoRel[rel=one_+_additional_+_terminal_+_lug_+_this_+_applies]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_additional_+_terminal_+_lug_+_this_+_applies
*CAT: n
*SEM: twoRel[rel=one_+_additional_+_terminal_+_lug_+_this_+_applies]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_additional_+_terminal_+_lug_+_this_+_applies
*CAT: n
*SEM: orRel[rel=one_+_additional_+_terminal_+_lug_+_this_+_applies]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker_+_connection_+_in_+_exceptional_+_cases_+_a_+_maximum_+_of_+_two_+_lugs_+_can_+_be_+_installed_+_on_+_circuit_+_breakers_-_colon_-_
*CAT: n
*SEM: unaryRel[rel=circuit_+_breaker_+_connection_+_in_+_exceptional_+_cases_+_a_+_maximum_+_of_+_two_+_lugs_+_can_+_be_+_installed_+_on_+_circuit_+_breakers_-_colon_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker_+_connection_+_in_+_exceptional_+_cases_+_a_+_maximum_+_of_+_two_+_lugs_+_can_+_be_+_installed_+_on_+_circuit_+_breakers_-_colon_-_
*CAT: n
*SEM: twoRel[rel=circuit_+_breaker_+_connection_+_in_+_exceptional_+_cases_+_a_+_maximum_+_of_+_two_+_lugs_+_can_+_be_+_installed_+_on_+_circuit_+_breakers_-_colon_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker_+_connection_+_in_+_exceptional_+_cases_+_a_+_maximum_+_of_+_two_+_lugs_+_can_+_be_+_installed_+_on_+_circuit_+_breakers_-_colon_-_
*CAT: n
*SEM: twoRel[rel=circuit_+_breaker_+_connection_+_in_+_exceptional_+_cases_+_a_+_maximum_+_of_+_two_+_lugs_+_can_+_be_+_installed_+_on_+_circuit_+_breakers_-_colon_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker_+_connection_+_in_+_exceptional_+_cases_+_a_+_maximum_+_of_+_two_+_lugs_+_can_+_be_+_installed_+_on_+_circuit_+_breakers_-_colon_-_
*CAT: n
*SEM: orRel[rel=circuit_+_breaker_+_connection_+_in_+_exceptional_+_cases_+_a_+_maximum_+_of_+_two_+_lugs_+_can_+_be_+_installed_+_on_+_circuit_+_breakers_-_colon_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_wire
*CAT: n
*SEM: unaryRel[rel=1_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_wire
*CAT: n
*SEM: twoRel[rel=1_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_wire
*CAT: n
*SEM: twoRel[rel=1_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_wire
*CAT: n
*SEM: orRel[rel=1_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_contacts_+__-_opensb_-_en3545xxxm_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=pin_+_contacts_+__-_opensb_-_en3545xxxm_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_contacts_+__-_opensb_-_en3545xxxm_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=pin_+_contacts_+__-_opensb_-_en3545xxxm_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_contacts_+__-_opensb_-_en3545xxxm_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=pin_+_contacts_+__-_opensb_-_en3545xxxm_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_contacts_+__-_opensb_-_en3545xxxm_-_closesb_-_
*CAT: n
*SEM: orRel[rel=pin_+_contacts_+__-_opensb_-_en3545xxxm_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_key_+_way_+_in_+_top_+_orientation
*CAT: n
*SEM: unaryRel[rel=master_+_key_+_way_+_in_+_top_+_orientation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_key_+_way_+_in_+_top_+_orientation
*CAT: n
*SEM: twoRel[rel=master_+_key_+_way_+_in_+_top_+_orientation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_key_+_way_+_in_+_top_+_orientation
*CAT: n
*SEM: twoRel[rel=master_+_key_+_way_+_in_+_top_+_orientation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_key_+_way_+_in_+_top_+_orientation
*CAT: n
*SEM: orRel[rel=master_+_key_+_way_+_in_+_top_+_orientation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_5mm_+_in_+_addition
*CAT: n
*SEM: unaryRel[rel=at_+_least_+_5mm_+_in_+_addition]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_5mm_+_in_+_addition
*CAT: n
*SEM: twoRel[rel=at_+_least_+_5mm_+_in_+_addition]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_5mm_+_in_+_addition
*CAT: n
*SEM: twoRel[rel=at_+_least_+_5mm_+_in_+_addition]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_5mm_+_in_+_addition
*CAT: n
*SEM: orRel[rel=at_+_least_+_5mm_+_in_+_addition]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure
*CAT: n
*SEM: unaryRel[rel=figure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure
*CAT: n
*SEM: twoRel[rel=figure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure
*CAT: n
*SEM: twoRel[rel=figure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure
*CAT: n
*SEM: orRel[rel=figure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.250_+_to_+_0.625_+_inch
*CAT: n
*SEM: unaryRel[rel=0.250_+_to_+_0.625_+_inch]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.250_+_to_+_0.625_+_inch
*CAT: n
*SEM: twoRel[rel=0.250_+_to_+_0.625_+_inch]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.250_+_to_+_0.625_+_inch
*CAT: n
*SEM: twoRel[rel=0.250_+_to_+_0.625_+_inch]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.250_+_to_+_0.625_+_inch
*CAT: n
*SEM: orRel[rel=0.250_+_to_+_0.625_+_inch]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asb1423_+_abs1424_-_closesb_-__+_exept_+_in_+_hot
*CAT: n
*SEM: unaryRel[rel=plastic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asb1423_+_abs1424_-_closesb_-__+_exept_+_in_+_hot]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asb1423_+_abs1424_-_closesb_-__+_exept_+_in_+_hot
*CAT: n
*SEM: twoRel[rel=plastic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asb1423_+_abs1424_-_closesb_-__+_exept_+_in_+_hot]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asb1423_+_abs1424_-_closesb_-__+_exept_+_in_+_hot
*CAT: n
*SEM: twoRel[rel=plastic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asb1423_+_abs1424_-_closesb_-__+_exept_+_in_+_hot]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asb1423_+_abs1424_-_closesb_-__+_exept_+_in_+_hot
*CAT: n
*SEM: orRel[rel=plastic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asb1423_+_abs1424_-_closesb_-__+_exept_+_in_+_hot]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rotating
*CAT: n
*SEM: unaryRel[rel=rotating]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rotating
*CAT: n
*SEM: twoRel[rel=rotating]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rotating
*CAT: n
*SEM: twoRel[rel=rotating]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rotating
*CAT: n
*SEM: orRel[rel=rotating]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_seals
*CAT: n
*SEM: unaryRel[rel=pressure_+_seals]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_seals
*CAT: n
*SEM: twoRel[rel=pressure_+_seals]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_seals
*CAT: n
*SEM: twoRel[rel=pressure_+_seals]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_seals
*CAT: n
*SEM: orRel[rel=pressure_+_seals]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+__-_opensb_-_dash_+_number_+_04_+_to_+_08_-_closesb_-__+_pipes
*CAT: n
*SEM: unaryRel[rel=small_+__-_opensb_-_dash_+_number_+_04_+_to_+_08_-_closesb_-__+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+__-_opensb_-_dash_+_number_+_04_+_to_+_08_-_closesb_-__+_pipes
*CAT: n
*SEM: twoRel[rel=small_+__-_opensb_-_dash_+_number_+_04_+_to_+_08_-_closesb_-__+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+__-_opensb_-_dash_+_number_+_04_+_to_+_08_-_closesb_-__+_pipes
*CAT: n
*SEM: twoRel[rel=small_+__-_opensb_-_dash_+_number_+_04_+_to_+_08_-_closesb_-__+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+__-_opensb_-_dash_+_number_+_04_+_to_+_08_-_closesb_-__+_pipes
*CAT: n
*SEM: orRel[rel=small_+__-_opensb_-_dash_+_number_+_04_+_to_+_08_-_closesb_-__+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket_+_when_+_electrical_+_equipment
*CAT: n
*SEM: unaryRel[rel=bracket_+_when_+_electrical_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket_+_when_+_electrical_+_equipment
*CAT: n
*SEM: twoRel[rel=bracket_+_when_+_electrical_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket_+_when_+_electrical_+_equipment
*CAT: n
*SEM: twoRel[rel=bracket_+_when_+_electrical_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket_+_when_+_electrical_+_equipment
*CAT: n
*SEM: orRel[rel=bracket_+_when_+_electrical_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_8420
*CAT: n
*SEM: unaryRel[rel=nsa_+_8420]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_8420
*CAT: n
*SEM: twoRel[rel=nsa_+_8420]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_8420
*CAT: n
*SEM: twoRel[rel=nsa_+_8420]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_8420
*CAT: n
*SEM: orRel[rel=nsa_+_8420]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: english_+_language
*CAT: n
*SEM: unaryRel[rel=english_+_language]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: english_+_language
*CAT: n
*SEM: twoRel[rel=english_+_language]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: english_+_language
*CAT: n
*SEM: twoRel[rel=english_+_language]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: english_+_language
*CAT: n
*SEM: orRel[rel=english_+_language]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_area
*CAT: n
*SEM: unaryRel[rel=an_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_area
*CAT: n
*SEM: twoRel[rel=an_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_area
*CAT: n
*SEM: twoRel[rel=an_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_area
*CAT: n
*SEM: orRel[rel=an_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: average_+_pitch_+_between_+_two_+_attachment_+_device
*CAT: n
*SEM: unaryRel[rel=average_+_pitch_+_between_+_two_+_attachment_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: average_+_pitch_+_between_+_two_+_attachment_+_device
*CAT: n
*SEM: twoRel[rel=average_+_pitch_+_between_+_two_+_attachment_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: average_+_pitch_+_between_+_two_+_attachment_+_device
*CAT: n
*SEM: twoRel[rel=average_+_pitch_+_between_+_two_+_attachment_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: average_+_pitch_+_between_+_two_+_attachment_+_device
*CAT: n
*SEM: orRel[rel=average_+_pitch_+_between_+_two_+_attachment_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ducts
*CAT: n
*SEM: unaryRel[rel=ducts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ducts
*CAT: n
*SEM: twoRel[rel=ducts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ducts
*CAT: n
*SEM: twoRel[rel=ducts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ducts
*CAT: n
*SEM: orRel[rel=ducts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: continuity_+_connection
*CAT: n
*SEM: unaryRel[rel=continuity_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: continuity_+_connection
*CAT: n
*SEM: twoRel[rel=continuity_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: continuity_+_connection
*CAT: n
*SEM: twoRel[rel=continuity_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: continuity_+_connection
*CAT: n
*SEM: orRel[rel=continuity_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: use_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: unaryRel[rel=use_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: use_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: twoRel[rel=use_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: use_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: twoRel[rel=use_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: use_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: orRel[rel=use_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tape
*CAT: n
*SEM: unaryRel[rel=tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tape
*CAT: n
*SEM: twoRel[rel=tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tape
*CAT: n
*SEM: twoRel[rel=tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tape
*CAT: n
*SEM: orRel[rel=tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: yellow_+_background
*CAT: n
*SEM: unaryRel[rel=yellow_+_background]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: yellow_+_background
*CAT: n
*SEM: twoRel[rel=yellow_+_background]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: yellow_+_background
*CAT: n
*SEM: twoRel[rel=yellow_+_background]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: yellow_+_background
*CAT: n
*SEM: orRel[rel=yellow_+_background]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646-11_+_stowage_+_receptable
*CAT: n
*SEM: unaryRel[rel=en_+_3646-11_+_stowage_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646-11_+_stowage_+_receptable
*CAT: n
*SEM: twoRel[rel=en_+_3646-11_+_stowage_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646-11_+_stowage_+_receptable
*CAT: n
*SEM: twoRel[rel=en_+_3646-11_+_stowage_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646-11_+_stowage_+_receptable
*CAT: n
*SEM: orRel[rel=en_+_3646-11_+_stowage_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: box
*CAT: n
*SEM: unaryRel[rel=box]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: box
*CAT: n
*SEM: twoRel[rel=box]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: box
*CAT: n
*SEM: twoRel[rel=box]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: box
*CAT: n
*SEM: orRel[rel=box]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_stud
*CAT: n
*SEM: unaryRel[rel=one_+_stud]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_stud
*CAT: n
*SEM: twoRel[rel=one_+_stud]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_stud
*CAT: n
*SEM: twoRel[rel=one_+_stud]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_stud
*CAT: n
*SEM: orRel[rel=one_+_stud]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+_route
*CAT: n
*SEM: unaryRel[rel=g_+_route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+_route
*CAT: n
*SEM: twoRel[rel=g_+_route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+_route
*CAT: n
*SEM: twoRel[rel=g_+_route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+_route
*CAT: n
*SEM: orRel[rel=g_+_route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0861_+_fire
*CAT: n
*SEM: unaryRel[rel=abs0861_+_fire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0861_+_fire
*CAT: n
*SEM: twoRel[rel=abs0861_+_fire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0861_+_fire
*CAT: n
*SEM: twoRel[rel=abs0861_+_fire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0861_+_fire
*CAT: n
*SEM: orRel[rel=abs0861_+_fire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2.0_+_inches_+_diameter
*CAT: n
*SEM: unaryRel[rel=2.0_+_inches_+_diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2.0_+_inches_+_diameter
*CAT: n
*SEM: twoRel[rel=2.0_+_inches_+_diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2.0_+_inches_+_diameter
*CAT: n
*SEM: twoRel[rel=2.0_+_inches_+_diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2.0_+_inches_+_diameter
*CAT: n
*SEM: orRel[rel=2.0_+_inches_+_diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbj_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle
*CAT: n
*SEM: unaryRel[rel=nsa5516_+_cbj_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbj_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=nsa5516_+_cbj_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbj_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=nsa5516_+_cbj_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbj_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle
*CAT: n
*SEM: orRel[rel=nsa5516_+_cbj_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 14mm_+_each_+_end
*CAT: n
*SEM: unaryRel[rel=14mm_+_each_+_end]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 14mm_+_each_+_end
*CAT: n
*SEM: twoRel[rel=14mm_+_each_+_end]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 14mm_+_each_+_end
*CAT: n
*SEM: twoRel[rel=14mm_+_each_+_end]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 14mm_+_each_+_end
*CAT: n
*SEM: orRel[rel=14mm_+_each_+_end]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cranked_+_tube_+_section
*CAT: n
*SEM: unaryRel[rel=cranked_+_tube_+_section]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cranked_+_tube_+_section
*CAT: n
*SEM: twoRel[rel=cranked_+_tube_+_section]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cranked_+_tube_+_section
*CAT: n
*SEM: twoRel[rel=cranked_+_tube_+_section]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cranked_+_tube_+_section
*CAT: n
*SEM: orRel[rel=cranked_+_tube_+_section]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramps
*CAT: n
*SEM: unaryRel[rel=ramps]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramps
*CAT: n
*SEM: twoRel[rel=ramps]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramps
*CAT: n
*SEM: twoRel[rel=ramps]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramps
*CAT: n
*SEM: orRel[rel=ramps]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: also_+_attached_+_picture
*CAT: n
*SEM: unaryRel[rel=also_+_attached_+_picture]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: also_+_attached_+_picture
*CAT: n
*SEM: twoRel[rel=also_+_attached_+_picture]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: also_+_attached_+_picture
*CAT: n
*SEM: twoRel[rel=also_+_attached_+_picture]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: also_+_attached_+_picture
*CAT: n
*SEM: orRel[rel=also_+_attached_+_picture]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: less
*CAT: n
*SEM: unaryRel[rel=less]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: less
*CAT: n
*SEM: twoRel[rel=less]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: less
*CAT: n
*SEM: twoRel[rel=less]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: less
*CAT: n
*SEM: orRel[rel=less]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: environmental_+_conditions_+_cost
*CAT: n
*SEM: unaryRel[rel=environmental_+_conditions_+_cost]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: environmental_+_conditions_+_cost
*CAT: n
*SEM: twoRel[rel=environmental_+_conditions_+_cost]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: environmental_+_conditions_+_cost
*CAT: n
*SEM: twoRel[rel=environmental_+_conditions_+_cost]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: environmental_+_conditions_+_cost
*CAT: n
*SEM: orRel[rel=environmental_+_conditions_+_cost]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: resistor
*CAT: n
*SEM: unaryRel[rel=resistor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: resistor
*CAT: n
*SEM: twoRel[rel=resistor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: resistor
*CAT: n
*SEM: twoRel[rel=resistor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: resistor
*CAT: n
*SEM: orRel[rel=resistor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossing_+_routes
*CAT: n
*SEM: unaryRel[rel=crossing_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossing_+_routes
*CAT: n
*SEM: twoRel[rel=crossing_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossing_+_routes
*CAT: n
*SEM: twoRel[rel=crossing_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossing_+_routes
*CAT: n
*SEM: orRel[rel=crossing_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_20mm
*CAT: n
*SEM: unaryRel[rel=d_-_greaterThan_-__-_equalto_-__+_20mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_20mm
*CAT: n
*SEM: twoRel[rel=d_-_greaterThan_-__-_equalto_-__+_20mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_20mm
*CAT: n
*SEM: twoRel[rel=d_-_greaterThan_-__-_equalto_-__+_20mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-__+_20mm
*CAT: n
*SEM: orRel[rel=d_-_greaterThan_-__-_equalto_-__+_20mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_segregation_+_rules
*CAT: n
*SEM: unaryRel[rel=normal_+_segregation_+_rules]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_segregation_+_rules
*CAT: n
*SEM: twoRel[rel=normal_+_segregation_+_rules]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_segregation_+_rules
*CAT: n
*SEM: twoRel[rel=normal_+_segregation_+_rules]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_segregation_+_rules
*CAT: n
*SEM: orRel[rel=normal_+_segregation_+_rules]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_not_+_less
*CAT: n
*SEM: unaryRel[rel=structure_+_not_+_less]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_not_+_less
*CAT: n
*SEM: twoRel[rel=structure_+_not_+_less]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_not_+_less
*CAT: n
*SEM: twoRel[rel=structure_+_not_+_less]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_not_+_less
*CAT: n
*SEM: orRel[rel=structure_+_not_+_less]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact_+_arrangement
*CAT: n
*SEM: unaryRel[rel=contact_+_arrangement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact_+_arrangement
*CAT: n
*SEM: twoRel[rel=contact_+_arrangement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact_+_arrangement
*CAT: n
*SEM: twoRel[rel=contact_+_arrangement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact_+_arrangement
*CAT: n
*SEM: orRel[rel=contact_+_arrangement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance
*CAT: n
*SEM: unaryRel[rel=minimum_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance
*CAT: n
*SEM: twoRel[rel=minimum_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance
*CAT: n
*SEM: twoRel[rel=minimum_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance
*CAT: n
*SEM: orRel[rel=minimum_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_protection
*CAT: n
*SEM: unaryRel[rel=bundle_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_protection
*CAT: n
*SEM: twoRel[rel=bundle_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_protection
*CAT: n
*SEM: twoRel[rel=bundle_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_protection
*CAT: n
*SEM: orRel[rel=bundle_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_retainer_+_system
*CAT: n
*SEM: unaryRel[rel=cable_+_retainer_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_retainer_+_system
*CAT: n
*SEM: twoRel[rel=cable_+_retainer_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_retainer_+_system
*CAT: n
*SEM: twoRel[rel=cable_+_retainer_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_retainer_+_system
*CAT: n
*SEM: orRel[rel=cable_+_retainer_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_parts_+_like_+_shown_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: unaryRel[rel=metallic_+_parts_+_like_+_shown_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_parts_+_like_+_shown_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: twoRel[rel=metallic_+_parts_+_like_+_shown_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_parts_+_like_+_shown_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: twoRel[rel=metallic_+_parts_+_like_+_shown_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_parts_+_like_+_shown_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: orRel[rel=metallic_+_parts_+_like_+_shown_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_feeder_+_wire
*CAT: n
*SEM: unaryRel[rel=each_+_feeder_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_feeder_+_wire
*CAT: n
*SEM: twoRel[rel=each_+_feeder_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_feeder_+_wire
*CAT: n
*SEM: twoRel[rel=each_+_feeder_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_feeder_+_wire
*CAT: n
*SEM: orRel[rel=each_+_feeder_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arrangements
*CAT: n
*SEM: unaryRel[rel=arrangements]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arrangements
*CAT: n
*SEM: twoRel[rel=arrangements]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arrangements
*CAT: n
*SEM: twoRel[rel=arrangements]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arrangements
*CAT: n
*SEM: orRel[rel=arrangements]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal
*CAT: n
*SEM: unaryRel[rel=virtual_+_pressure_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=virtual_+_pressure_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=virtual_+_pressure_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal
*CAT: n
*SEM: orRel[rel=virtual_+_pressure_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: illustration
*CAT: n
*SEM: unaryRel[rel=illustration]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: illustration
*CAT: n
*SEM: twoRel[rel=illustration]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: illustration
*CAT: n
*SEM: twoRel[rel=illustration]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: illustration
*CAT: n
*SEM: orRel[rel=illustration]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_fluid_+_acceleration_+_requirements
*CAT: n
*SEM: unaryRel[rel=high_+_fluid_+_acceleration_+_requirements]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_fluid_+_acceleration_+_requirements
*CAT: n
*SEM: twoRel[rel=high_+_fluid_+_acceleration_+_requirements]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_fluid_+_acceleration_+_requirements
*CAT: n
*SEM: twoRel[rel=high_+_fluid_+_acceleration_+_requirements]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_fluid_+_acceleration_+_requirements
*CAT: n
*SEM: orRel[rel=high_+_fluid_+_acceleration_+_requirements]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6”
*CAT: n
*SEM: unaryRel[rel=6”]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6”
*CAT: n
*SEM: twoRel[rel=6”]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6”
*CAT: n
*SEM: twoRel[rel=6”]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6”
*CAT: n
*SEM: orRel[rel=6”]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_sizes
*CAT: n
*SEM: unaryRel[rel=different_+_sizes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_sizes
*CAT: n
*SEM: twoRel[rel=different_+_sizes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_sizes
*CAT: n
*SEM: twoRel[rel=different_+_sizes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_sizes
*CAT: n
*SEM: orRel[rel=different_+_sizes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tolerances
*CAT: n
*SEM: unaryRel[rel=tolerances]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tolerances
*CAT: n
*SEM: twoRel[rel=tolerances]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tolerances
*CAT: n
*SEM: twoRel[rel=tolerances]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tolerances
*CAT: n
*SEM: orRel[rel=tolerances]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tank_+_area
*CAT: n
*SEM: unaryRel[rel=tank_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tank_+_area
*CAT: n
*SEM: twoRel[rel=tank_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tank_+_area
*CAT: n
*SEM: twoRel[rel=tank_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tank_+_area
*CAT: n
*SEM: orRel[rel=tank_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_5342a01yl_+_tape
*CAT: n
*SEM: unaryRel[rel=abs_+_5342a01yl_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_5342a01yl_+_tape
*CAT: n
*SEM: twoRel[rel=abs_+_5342a01yl_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_5342a01yl_+_tape
*CAT: n
*SEM: twoRel[rel=abs_+_5342a01yl_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_5342a01yl_+_tape
*CAT: n
*SEM: orRel[rel=abs_+_5342a01yl_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_lugs
*CAT: n
*SEM: unaryRel[rel=two_+_lugs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_lugs
*CAT: n
*SEM: twoRel[rel=two_+_lugs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_lugs
*CAT: n
*SEM: twoRel[rel=two_+_lugs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_lugs
*CAT: n
*SEM: orRel[rel=two_+_lugs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: left_+_hand_+_side
*CAT: n
*SEM: unaryRel[rel=left_+_hand_+_side]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: left_+_hand_+_side
*CAT: n
*SEM: twoRel[rel=left_+_hand_+_side]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: left_+_hand_+_side
*CAT: n
*SEM: twoRel[rel=left_+_hand_+_side]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: left_+_hand_+_side
*CAT: n
*SEM: orRel[rel=left_+_hand_+_side]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+_orientation
*CAT: n
*SEM: unaryRel[rel=geometry_+_orientation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+_orientation
*CAT: n
*SEM: twoRel[rel=geometry_+_orientation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+_orientation
*CAT: n
*SEM: twoRel[rel=geometry_+_orientation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+_orientation
*CAT: n
*SEM: orRel[rel=geometry_+_orientation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2m_-_closesb_-__+_and_-_backslash_-_or_+_route_+_categorie_+__-_opensb_-_e.g._+_1m
*CAT: n
*SEM: unaryRel[rel=2m_-_closesb_-__+_and_-_backslash_-_or_+_route_+_categorie_+__-_opensb_-_e.g._+_1m]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2m_-_closesb_-__+_and_-_backslash_-_or_+_route_+_categorie_+__-_opensb_-_e.g._+_1m
*CAT: n
*SEM: twoRel[rel=2m_-_closesb_-__+_and_-_backslash_-_or_+_route_+_categorie_+__-_opensb_-_e.g._+_1m]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2m_-_closesb_-__+_and_-_backslash_-_or_+_route_+_categorie_+__-_opensb_-_e.g._+_1m
*CAT: n
*SEM: twoRel[rel=2m_-_closesb_-__+_and_-_backslash_-_or_+_route_+_categorie_+__-_opensb_-_e.g._+_1m]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2m_-_closesb_-__+_and_-_backslash_-_or_+_route_+_categorie_+__-_opensb_-_e.g._+_1m
*CAT: n
*SEM: orRel[rel=2m_-_closesb_-__+_and_-_backslash_-_or_+_route_+_categorie_+__-_opensb_-_e.g._+_1m]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0126
*CAT: n
*SEM: unaryRel[rel=asne_+_0126]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0126
*CAT: n
*SEM: twoRel[rel=asne_+_0126]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0126
*CAT: n
*SEM: twoRel[rel=asne_+_0126]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0126
*CAT: n
*SEM: orRel[rel=asne_+_0126]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5147_+_metallic_+_ramp
*CAT: n
*SEM: unaryRel[rel=abs5147_+_metallic_+_ramp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5147_+_metallic_+_ramp
*CAT: n
*SEM: twoRel[rel=abs5147_+_metallic_+_ramp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5147_+_metallic_+_ramp
*CAT: n
*SEM: twoRel[rel=abs5147_+_metallic_+_ramp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5147_+_metallic_+_ramp
*CAT: n
*SEM: orRel[rel=abs5147_+_metallic_+_ramp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_in_+_horizontal_+_direction
*CAT: n
*SEM: unaryRel[rel=cut_+_of_+_wire_+_in_+_horizontal_+_direction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_in_+_horizontal_+_direction
*CAT: n
*SEM: twoRel[rel=cut_+_of_+_wire_+_in_+_horizontal_+_direction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_in_+_horizontal_+_direction
*CAT: n
*SEM: twoRel[rel=cut_+_of_+_wire_+_in_+_horizontal_+_direction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_in_+_horizontal_+_direction
*CAT: n
*SEM: orRel[rel=cut_+_of_+_wire_+_in_+_horizontal_+_direction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_diode
*CAT: n
*SEM: unaryRel[rel=virtual_+_diode]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_diode
*CAT: n
*SEM: twoRel[rel=virtual_+_diode]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_diode
*CAT: n
*SEM: twoRel[rel=virtual_+_diode]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_diode
*CAT: n
*SEM: orRel[rel=virtual_+_diode]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150_+_mm
*CAT: n
*SEM: unaryRel[rel=150_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150_+_mm
*CAT: n
*SEM: twoRel[rel=150_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150_+_mm
*CAT: n
*SEM: twoRel[rel=150_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150_+_mm
*CAT: n
*SEM: orRel[rel=150_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_vc
*CAT: n
*SEM: unaryRel[rel=label_+_vc]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_vc
*CAT: n
*SEM: twoRel[rel=label_+_vc]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_vc
*CAT: n
*SEM: twoRel[rel=label_+_vc]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_vc
*CAT: n
*SEM: orRel[rel=label_+_vc]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: item
*CAT: n
*SEM: unaryRel[rel=item]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: item
*CAT: n
*SEM: twoRel[rel=item]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: item
*CAT: n
*SEM: twoRel[rel=item]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: item
*CAT: n
*SEM: orRel[rel=item]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_t_-_degrees_-__+_bobbin
*CAT: n
*SEM: unaryRel[rel=low_+_t_-_degrees_-__+_bobbin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_t_-_degrees_-__+_bobbin
*CAT: n
*SEM: twoRel[rel=low_+_t_-_degrees_-__+_bobbin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_t_-_degrees_-__+_bobbin
*CAT: n
*SEM: twoRel[rel=low_+_t_-_degrees_-__+_bobbin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_t_-_degrees_-__+_bobbin
*CAT: n
*SEM: orRel[rel=low_+_t_-_degrees_-__+_bobbin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_greaterThan_-__+_0_-_comma_-_5m_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=_-_greaterThan_-__+_0_-_comma_-_5m_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_greaterThan_-__+_0_-_comma_-_5m_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=_-_greaterThan_-__+_0_-_comma_-_5m_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_greaterThan_-__+_0_-_comma_-_5m_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=_-_greaterThan_-__+_0_-_comma_-_5m_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_greaterThan_-__+_0_-_comma_-_5m_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=_-_greaterThan_-__+_0_-_comma_-_5m_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_categorie
*CAT: n
*SEM: unaryRel[rel=route_+_categorie]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_categorie
*CAT: n
*SEM: twoRel[rel=route_+_categorie]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_categorie
*CAT: n
*SEM: twoRel[rel=route_+_categorie]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_categorie
*CAT: n
*SEM: orRel[rel=route_+_categorie]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then_+_the_+_lower_+_limit_+_can_+_drop_+_down
*CAT: n
*SEM: unaryRel[rel=then_+_the_+_lower_+_limit_+_can_+_drop_+_down]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then_+_the_+_lower_+_limit_+_can_+_drop_+_down
*CAT: n
*SEM: twoRel[rel=then_+_the_+_lower_+_limit_+_can_+_drop_+_down]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then_+_the_+_lower_+_limit_+_can_+_drop_+_down
*CAT: n
*SEM: twoRel[rel=then_+_the_+_lower_+_limit_+_can_+_drop_+_down]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: then_+_the_+_lower_+_limit_+_can_+_drop_+_down
*CAT: n
*SEM: orRel[rel=then_+_the_+_lower_+_limit_+_can_+_drop_+_down]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_19_+_mm_+_clearance
*CAT: n
*SEM: unaryRel[rel=least_+_19_+_mm_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_19_+_mm_+_clearance
*CAT: n
*SEM: twoRel[rel=least_+_19_+_mm_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_19_+_mm_+_clearance
*CAT: n
*SEM: twoRel[rel=least_+_19_+_mm_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_19_+_mm_+_clearance
*CAT: n
*SEM: orRel[rel=least_+_19_+_mm_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_+_to_+_0000
*CAT: n
*SEM: unaryRel[rel=3_+_to_+_0000]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_+_to_+_0000
*CAT: n
*SEM: twoRel[rel=3_+_to_+_0000]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_+_to_+_0000
*CAT: n
*SEM: twoRel[rel=3_+_to_+_0000]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_+_to_+_0000
*CAT: n
*SEM: orRel[rel=3_+_to_+_0000]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_bundle_+_over_+_length
*CAT: n
*SEM: unaryRel[rel=equipment_+_bundle_+_over_+_length]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_bundle_+_over_+_length
*CAT: n
*SEM: twoRel[rel=equipment_+_bundle_+_over_+_length]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_bundle_+_over_+_length
*CAT: n
*SEM: twoRel[rel=equipment_+_bundle_+_over_+_length]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_bundle_+_over_+_length
*CAT: n
*SEM: orRel[rel=equipment_+_bundle_+_over_+_length]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbj_+_+_+_mechanical_+_protection
*CAT: n
*SEM: unaryRel[rel=nsa5516_+_cbj_+_+_+_mechanical_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbj_+_+_+_mechanical_+_protection
*CAT: n
*SEM: twoRel[rel=nsa5516_+_cbj_+_+_+_mechanical_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbj_+_+_+_mechanical_+_protection
*CAT: n
*SEM: twoRel[rel=nsa5516_+_cbj_+_+_+_mechanical_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbj_+_+_+_mechanical_+_protection
*CAT: n
*SEM: orRel[rel=nsa5516_+_cbj_+_+_+_mechanical_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0663
*CAT: n
*SEM: unaryRel[rel=asne0663]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0663
*CAT: n
*SEM: twoRel[rel=asne0663]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0663
*CAT: n
*SEM: twoRel[rel=asne0663]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0663
*CAT: n
*SEM: orRel[rel=asne0663]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover
*CAT: n
*SEM: unaryRel[rel=spray_+_cover]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover
*CAT: n
*SEM: twoRel[rel=spray_+_cover]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover
*CAT: n
*SEM: twoRel[rel=spray_+_cover]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover
*CAT: n
*SEM: orRel[rel=spray_+_cover]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_relative_+_movement
*CAT: n
*SEM: unaryRel[rel=no_+_relative_+_movement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_relative_+_movement
*CAT: n
*SEM: twoRel[rel=no_+_relative_+_movement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_relative_+_movement
*CAT: n
*SEM: twoRel[rel=no_+_relative_+_movement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_relative_+_movement
*CAT: n
*SEM: orRel[rel=no_+_relative_+_movement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equivalent_+_alternative_+_standard
*CAT: n
*SEM: unaryRel[rel=equivalent_+_alternative_+_standard]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equivalent_+_alternative_+_standard
*CAT: n
*SEM: twoRel[rel=equivalent_+_alternative_+_standard]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equivalent_+_alternative_+_standard
*CAT: n
*SEM: twoRel[rel=equivalent_+_alternative_+_standard]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equivalent_+_alternative_+_standard
*CAT: n
*SEM: orRel[rel=equivalent_+_alternative_+_standard]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pes
*CAT: n
*SEM: unaryRel[rel=pes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pes
*CAT: n
*SEM: twoRel[rel=pes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pes
*CAT: n
*SEM: twoRel[rel=pes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pes
*CAT: n
*SEM: orRel[rel=pes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend
*CAT: n
*SEM: unaryRel[rel=bend]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend
*CAT: n
*SEM: twoRel[rel=bend]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend
*CAT: n
*SEM: twoRel[rel=bend]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend
*CAT: n
*SEM: orRel[rel=bend]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_+__-_percent_-_
*CAT: n
*SEM: unaryRel[rel=20_+__-_percent_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_+__-_percent_-_
*CAT: n
*SEM: twoRel[rel=20_+__-_percent_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_+__-_percent_-_
*CAT: n
*SEM: twoRel[rel=20_+__-_percent_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_+__-_percent_-_
*CAT: n
*SEM: orRel[rel=20_+__-_percent_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_orientation
*CAT: n
*SEM: unaryRel[rel=an_+_orientation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_orientation
*CAT: n
*SEM: twoRel[rel=an_+_orientation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_orientation
*CAT: n
*SEM: twoRel[rel=an_+_orientation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_orientation
*CAT: n
*SEM: orRel[rel=an_+_orientation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flare_+_less_+_hydraulic_+_junction
*CAT: n
*SEM: unaryRel[rel=flare_+_less_+_hydraulic_+_junction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flare_+_less_+_hydraulic_+_junction
*CAT: n
*SEM: twoRel[rel=flare_+_less_+_hydraulic_+_junction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flare_+_less_+_hydraulic_+_junction
*CAT: n
*SEM: twoRel[rel=flare_+_less_+_hydraulic_+_junction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flare_+_less_+_hydraulic_+_junction
*CAT: n
*SEM: orRel[rel=flare_+_less_+_hydraulic_+_junction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve_+_when_+_contact_+_to_+_other_+_bundle
*CAT: n
*SEM: unaryRel[rel=sleeve_+_when_+_contact_+_to_+_other_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve_+_when_+_contact_+_to_+_other_+_bundle
*CAT: n
*SEM: twoRel[rel=sleeve_+_when_+_contact_+_to_+_other_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve_+_when_+_contact_+_to_+_other_+_bundle
*CAT: n
*SEM: twoRel[rel=sleeve_+_when_+_contact_+_to_+_other_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve_+_when_+_contact_+_to_+_other_+_bundle
*CAT: n
*SEM: orRel[rel=sleeve_+_when_+_contact_+_to_+_other_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_bf_+_type_+_cablle
*CAT: n
*SEM: unaryRel[rel=flexible_+_bf_+_type_+_cablle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_bf_+_type_+_cablle
*CAT: n
*SEM: twoRel[rel=flexible_+_bf_+_type_+_cablle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_bf_+_type_+_cablle
*CAT: n
*SEM: twoRel[rel=flexible_+_bf_+_type_+_cablle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_bf_+_type_+_cablle
*CAT: n
*SEM: orRel[rel=flexible_+_bf_+_type_+_cablle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contacts
*CAT: n
*SEM: unaryRel[rel=contacts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contacts
*CAT: n
*SEM: twoRel[rel=contacts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contacts
*CAT: n
*SEM: twoRel[rel=contacts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contacts
*CAT: n
*SEM: orRel[rel=contacts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_temperature_+_is_+_t_-_smallerThan_-_150_-_degrees_-_c
*CAT: n
*SEM: unaryRel[rel=cable_+_temperature_+_is_+_t_-_smallerThan_-_150_-_degrees_-_c]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_temperature_+_is_+_t_-_smallerThan_-_150_-_degrees_-_c
*CAT: n
*SEM: twoRel[rel=cable_+_temperature_+_is_+_t_-_smallerThan_-_150_-_degrees_-_c]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_temperature_+_is_+_t_-_smallerThan_-_150_-_degrees_-_c
*CAT: n
*SEM: twoRel[rel=cable_+_temperature_+_is_+_t_-_smallerThan_-_150_-_degrees_-_c]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_temperature_+_is_+_t_-_smallerThan_-_150_-_degrees_-_c
*CAT: n
*SEM: orRel[rel=cable_+_temperature_+_is_+_t_-_smallerThan_-_150_-_degrees_-_c]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elbow_+_back_+_shell_+_orientation
*CAT: n
*SEM: unaryRel[rel=elbow_+_back_+_shell_+_orientation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elbow_+_back_+_shell_+_orientation
*CAT: n
*SEM: twoRel[rel=elbow_+_back_+_shell_+_orientation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elbow_+_back_+_shell_+_orientation
*CAT: n
*SEM: twoRel[rel=elbow_+_back_+_shell_+_orientation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elbow_+_back_+_shell_+_orientation
*CAT: n
*SEM: orRel[rel=elbow_+_back_+_shell_+_orientation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic_+_above
*CAT: n
*SEM: unaryRel[rel=graphic_+_above]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic_+_above
*CAT: n
*SEM: twoRel[rel=graphic_+_above]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic_+_above
*CAT: n
*SEM: twoRel[rel=graphic_+_above]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic_+_above
*CAT: n
*SEM: orRel[rel=graphic_+_above]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: securely
*CAT: n
*SEM: unaryRel[rel=securely]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: securely
*CAT: n
*SEM: twoRel[rel=securely]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: securely
*CAT: n
*SEM: twoRel[rel=securely]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: securely
*CAT: n
*SEM: orRel[rel=securely]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: preference
*CAT: n
*SEM: unaryRel[rel=preference]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: preference
*CAT: n
*SEM: twoRel[rel=preference]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: preference
*CAT: n
*SEM: twoRel[rel=preference]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: preference
*CAT: n
*SEM: orRel[rel=preference]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_when
*CAT: n
*SEM: unaryRel[rel=v-support_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_when
*CAT: n
*SEM: twoRel[rel=v-support_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_when
*CAT: n
*SEM: twoRel[rel=v-support_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_when
*CAT: n
*SEM: orRel[rel=v-support_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_connector
*CAT: n
*SEM: unaryRel[rel=end_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_connector
*CAT: n
*SEM: twoRel[rel=end_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_connector
*CAT: n
*SEM: twoRel[rel=end_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_connector
*CAT: n
*SEM: orRel[rel=end_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_line_+_pre
*CAT: n
*SEM: unaryRel[rel=black_+_line_+_pre]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_line_+_pre
*CAT: n
*SEM: twoRel[rel=black_+_line_+_pre]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_line_+_pre
*CAT: n
*SEM: twoRel[rel=black_+_line_+_pre]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_line_+_pre
*CAT: n
*SEM: orRel[rel=black_+_line_+_pre]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielding_+_ocntinuity_+_connection
*CAT: n
*SEM: unaryRel[rel=shielding_+_ocntinuity_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielding_+_ocntinuity_+_connection
*CAT: n
*SEM: twoRel[rel=shielding_+_ocntinuity_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielding_+_ocntinuity_+_connection
*CAT: n
*SEM: twoRel[rel=shielding_+_ocntinuity_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielding_+_ocntinuity_+_connection
*CAT: n
*SEM: orRel[rel=shielding_+_ocntinuity_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_line
*CAT: n
*SEM: unaryRel[rel=sense_+_line]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_line
*CAT: n
*SEM: twoRel[rel=sense_+_line]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_line
*CAT: n
*SEM: twoRel[rel=sense_+_line]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_line
*CAT: n
*SEM: orRel[rel=sense_+_line]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 230v
*CAT: n
*SEM: unaryRel[rel=230v]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 230v
*CAT: n
*SEM: twoRel[rel=230v]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 230v
*CAT: n
*SEM: twoRel[rel=230v]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 230v
*CAT: n
*SEM: orRel[rel=230v]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_background
*CAT: n
*SEM: unaryRel[rel=black_+_background]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_background
*CAT: n
*SEM: twoRel[rel=black_+_background]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_background
*CAT: n
*SEM: twoRel[rel=black_+_background]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_background
*CAT: n
*SEM: orRel[rel=black_+_background]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: unaryRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: twoRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: twoRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: orRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pa6.6_+_finish
*CAT: n
*SEM: unaryRel[rel=pa6.6_+_finish]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pa6.6_+_finish
*CAT: n
*SEM: twoRel[rel=pa6.6_+_finish]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pa6.6_+_finish
*CAT: n
*SEM: twoRel[rel=pa6.6_+_finish]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pa6.6_+_finish
*CAT: n
*SEM: orRel[rel=pa6.6_+_finish]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_e
*CAT: n
*SEM: unaryRel[rel=col_obj1_e]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_e
*CAT: n
*SEM: twoRel[rel=col_obj1_e]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_e
*CAT: n
*SEM: twoRel[rel=col_obj1_e]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_e
*CAT: n
*SEM: orRel[rel=col_obj1_e]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_label
*CAT: n
*SEM: unaryRel[rel=one_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_label
*CAT: n
*SEM: twoRel[rel=one_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_label
*CAT: n
*SEM: twoRel[rel=one_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_label
*CAT: n
*SEM: orRel[rel=one_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1mg
*CAT: n
*SEM: unaryRel[rel=1mg]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1mg
*CAT: n
*SEM: twoRel[rel=1mg]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1mg
*CAT: n
*SEM: twoRel[rel=1mg]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1mg
*CAT: n
*SEM: orRel[rel=1mg]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0201_+_contacts
*CAT: n
*SEM: unaryRel[rel=asne_+_0201_+_contacts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0201_+_contacts
*CAT: n
*SEM: twoRel[rel=asne_+_0201_+_contacts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0201_+_contacts
*CAT: n
*SEM: twoRel[rel=asne_+_0201_+_contacts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0201_+_contacts
*CAT: n
*SEM: orRel[rel=asne_+_0201_+_contacts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: manner
*CAT: n
*SEM: unaryRel[rel=manner]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: manner
*CAT: n
*SEM: twoRel[rel=manner]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: manner
*CAT: n
*SEM: twoRel[rel=manner]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: manner
*CAT: n
*SEM: orRel[rel=manner]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: itâ€™s_+_likely_+_to
*CAT: n
*SEM: unaryRel[rel=itâ€™s_+_likely_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: itâ€™s_+_likely_+_to
*CAT: n
*SEM: twoRel[rel=itâ€™s_+_likely_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: itâ€™s_+_likely_+_to
*CAT: n
*SEM: twoRel[rel=itâ€™s_+_likely_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: itâ€™s_+_likely_+_to
*CAT: n
*SEM: orRel[rel=itâ€™s_+_likely_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_fixation
*CAT: n
*SEM: unaryRel[rel=pipe_+_fixation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_fixation
*CAT: n
*SEM: twoRel[rel=pipe_+_fixation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_fixation
*CAT: n
*SEM: twoRel[rel=pipe_+_fixation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_fixation
*CAT: n
*SEM: orRel[rel=pipe_+_fixation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulating_+_material_+_like_+_paint_+_finish_+_inline
*CAT: n
*SEM: unaryRel[rel=insulating_+_material_+_like_+_paint_+_finish_+_inline]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulating_+_material_+_like_+_paint_+_finish_+_inline
*CAT: n
*SEM: twoRel[rel=insulating_+_material_+_like_+_paint_+_finish_+_inline]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulating_+_material_+_like_+_paint_+_finish_+_inline
*CAT: n
*SEM: twoRel[rel=insulating_+_material_+_like_+_paint_+_finish_+_inline]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulating_+_material_+_like_+_paint_+_finish_+_inline
*CAT: n
*SEM: orRel[rel=insulating_+_material_+_like_+_paint_+_finish_+_inline]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_-_percent_-__+_of_+_spare_+_provision
*CAT: n
*SEM: unaryRel[rel=20_-_percent_-__+_of_+_spare_+_provision]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_-_percent_-__+_of_+_spare_+_provision
*CAT: n
*SEM: twoRel[rel=20_-_percent_-__+_of_+_spare_+_provision]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_-_percent_-__+_of_+_spare_+_provision
*CAT: n
*SEM: twoRel[rel=20_-_percent_-__+_of_+_spare_+_provision]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_-_percent_-__+_of_+_spare_+_provision
*CAT: n
*SEM: orRel[rel=20_-_percent_-__+_of_+_spare_+_provision]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: condiut
*CAT: n
*SEM: unaryRel[rel=condiut]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: condiut
*CAT: n
*SEM: twoRel[rel=condiut]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: condiut
*CAT: n
*SEM: twoRel[rel=condiut]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: condiut
*CAT: n
*SEM: orRel[rel=condiut]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: for_+_equipment_-_colon_-__+_a_+_label_+_or
*CAT: n
*SEM: unaryRel[rel=for_+_equipment_-_colon_-__+_a_+_label_+_or]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: for_+_equipment_-_colon_-__+_a_+_label_+_or
*CAT: n
*SEM: twoRel[rel=for_+_equipment_-_colon_-__+_a_+_label_+_or]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: for_+_equipment_-_colon_-__+_a_+_label_+_or
*CAT: n
*SEM: twoRel[rel=for_+_equipment_-_colon_-__+_a_+_label_+_or]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: for_+_equipment_-_colon_-__+_a_+_label_+_or
*CAT: n
*SEM: orRel[rel=for_+_equipment_-_colon_-__+_a_+_label_+_or]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5d
*CAT: n
*SEM: unaryRel[rel=5d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5d
*CAT: n
*SEM: twoRel[rel=5d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5d
*CAT: n
*SEM: twoRel[rel=5d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5d
*CAT: n
*SEM: orRel[rel=5d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: branches
*CAT: n
*SEM: unaryRel[rel=branches]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: branches
*CAT: n
*SEM: twoRel[rel=branches]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: branches
*CAT: n
*SEM: twoRel[rel=branches]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: branches
*CAT: n
*SEM: orRel[rel=branches]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_connector_+__-_opensb_-_grommet_-_closesb_-__+_dummy_+_contacts_+_sealing_+_plugs_+_in_+_hazardous_+_zones_+_connectors
*CAT: n
*SEM: unaryRel[rel=sealed_+_connector_+__-_opensb_-_grommet_-_closesb_-__+_dummy_+_contacts_+_sealing_+_plugs_+_in_+_hazardous_+_zones_+_connectors]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_connector_+__-_opensb_-_grommet_-_closesb_-__+_dummy_+_contacts_+_sealing_+_plugs_+_in_+_hazardous_+_zones_+_connectors
*CAT: n
*SEM: twoRel[rel=sealed_+_connector_+__-_opensb_-_grommet_-_closesb_-__+_dummy_+_contacts_+_sealing_+_plugs_+_in_+_hazardous_+_zones_+_connectors]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_connector_+__-_opensb_-_grommet_-_closesb_-__+_dummy_+_contacts_+_sealing_+_plugs_+_in_+_hazardous_+_zones_+_connectors
*CAT: n
*SEM: twoRel[rel=sealed_+_connector_+__-_opensb_-_grommet_-_closesb_-__+_dummy_+_contacts_+_sealing_+_plugs_+_in_+_hazardous_+_zones_+_connectors]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_connector_+__-_opensb_-_grommet_-_closesb_-__+_dummy_+_contacts_+_sealing_+_plugs_+_in_+_hazardous_+_zones_+_connectors
*CAT: n
*SEM: orRel[rel=sealed_+_connector_+__-_opensb_-_grommet_-_closesb_-__+_dummy_+_contacts_+_sealing_+_plugs_+_in_+_hazardous_+_zones_+_connectors]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cpms_+_cabin
*CAT: n
*SEM: unaryRel[rel=cpms_+_cabin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cpms_+_cabin
*CAT: n
*SEM: twoRel[rel=cpms_+_cabin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cpms_+_cabin
*CAT: n
*SEM: twoRel[rel=cpms_+_cabin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cpms_+_cabin
*CAT: n
*SEM: orRel[rel=cpms_+_cabin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: phase_+_c
*CAT: n
*SEM: unaryRel[rel=phase_+_c]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: phase_+_c
*CAT: n
*SEM: twoRel[rel=phase_+_c]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: phase_+_c
*CAT: n
*SEM: twoRel[rel=phase_+_c]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: phase_+_c
*CAT: n
*SEM: orRel[rel=phase_+_c]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_+_mm
*CAT: n
*SEM: unaryRel[rel=20_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_+_mm
*CAT: n
*SEM: twoRel[rel=20_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_+_mm
*CAT: n
*SEM: twoRel[rel=20_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_+_mm
*CAT: n
*SEM: orRel[rel=20_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_of_+_the_+_bundles
*CAT: n
*SEM: unaryRel[rel=one_+_of_+_the_+_bundles]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_of_+_the_+_bundles
*CAT: n
*SEM: twoRel[rel=one_+_of_+_the_+_bundles]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_of_+_the_+_bundles
*CAT: n
*SEM: twoRel[rel=one_+_of_+_the_+_bundles]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_of_+_the_+_bundles
*CAT: n
*SEM: orRel[rel=one_+_of_+_the_+_bundles]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_over_+_length
*CAT: n
*SEM: unaryRel[rel=repair_+_over_+_length]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_over_+_length
*CAT: n
*SEM: twoRel[rel=repair_+_over_+_length]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_over_+_length
*CAT: n
*SEM: twoRel[rel=repair_+_over_+_length]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_over_+_length
*CAT: n
*SEM: orRel[rel=repair_+_over_+_length]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dash_+_number_+_04_+_to_+_08
*CAT: n
*SEM: unaryRel[rel=dash_+_number_+_04_+_to_+_08]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dash_+_number_+_04_+_to_+_08
*CAT: n
*SEM: twoRel[rel=dash_+_number_+_04_+_to_+_08]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dash_+_number_+_04_+_to_+_08
*CAT: n
*SEM: twoRel[rel=dash_+_number_+_04_+_to_+_08]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dash_+_number_+_04_+_to_+_08
*CAT: n
*SEM: orRel[rel=dash_+_number_+_04_+_to_+_08]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_dummy_+_receptable
*CAT: n
*SEM: unaryRel[rel=optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_dummy_+_receptable
*CAT: n
*SEM: twoRel[rel=optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_dummy_+_receptable
*CAT: n
*SEM: twoRel[rel=optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_dummy_+_receptable
*CAT: n
*SEM: orRel[rel=optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: longer
*CAT: n
*SEM: unaryRel[rel=longer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: longer
*CAT: n
*SEM: twoRel[rel=longer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: longer
*CAT: n
*SEM: twoRel[rel=longer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: longer
*CAT: n
*SEM: orRel[rel=longer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935403_+_silicon_+_tape
*CAT: n
*SEM: unaryRel[rel=nsa935403_+_silicon_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935403_+_silicon_+_tape
*CAT: n
*SEM: twoRel[rel=nsa935403_+_silicon_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935403_+_silicon_+_tape
*CAT: n
*SEM: twoRel[rel=nsa935403_+_silicon_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935403_+_silicon_+_tape
*CAT: n
*SEM: orRel[rel=nsa935403_+_silicon_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_pipes
*CAT: n
*SEM: unaryRel[rel=bleed_+_air_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_pipes
*CAT: n
*SEM: twoRel[rel=bleed_+_air_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_pipes
*CAT: n
*SEM: twoRel[rel=bleed_+_air_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_pipes
*CAT: n
*SEM: orRel[rel=bleed_+_air_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_stress
*CAT: n
*SEM: unaryRel[rel=mechanical_+_stress]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_stress
*CAT: n
*SEM: twoRel[rel=mechanical_+_stress]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_stress
*CAT: n
*SEM: twoRel[rel=mechanical_+_stress]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_stress
*CAT: n
*SEM: orRel[rel=mechanical_+_stress]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: through_+_structure
*CAT: n
*SEM: unaryRel[rel=through_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: through_+_structure
*CAT: n
*SEM: twoRel[rel=through_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: through_+_structure
*CAT: n
*SEM: twoRel[rel=through_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: through_+_structure
*CAT: n
*SEM: orRel[rel=through_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_type
*CAT: n
*SEM: unaryRel[rel=self-locking_+_type]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_type
*CAT: n
*SEM: twoRel[rel=self-locking_+_type]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_type
*CAT: n
*SEM: twoRel[rel=self-locking_+_type]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_type
*CAT: n
*SEM: orRel[rel=self-locking_+_type]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plug
*CAT: n
*SEM: unaryRel[rel=plug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plug
*CAT: n
*SEM: twoRel[rel=plug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plug
*CAT: n
*SEM: twoRel[rel=plug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plug
*CAT: n
*SEM: orRel[rel=plug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: group
*CAT: n
*SEM: unaryRel[rel=group]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: group
*CAT: n
*SEM: twoRel[rel=group]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: group
*CAT: n
*SEM: twoRel[rel=group]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: group
*CAT: n
*SEM: orRel[rel=group]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1409_+_single-hole_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=abs1409_+_single-hole_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1409_+_single-hole_+_clamp-block
*CAT: n
*SEM: twoRel[rel=abs1409_+_single-hole_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1409_+_single-hole_+_clamp-block
*CAT: n
*SEM: twoRel[rel=abs1409_+_single-hole_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1409_+_single-hole_+_clamp-block
*CAT: n
*SEM: orRel[rel=abs1409_+_single-hole_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_structure_+_not_+_less
*CAT: n
*SEM: unaryRel[rel=fixed_+_structure_+_structure_+_not_+_less]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_structure_+_not_+_less
*CAT: n
*SEM: twoRel[rel=fixed_+_structure_+_structure_+_not_+_less]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_structure_+_not_+_less
*CAT: n
*SEM: twoRel[rel=fixed_+_structure_+_structure_+_not_+_less]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_structure_+_not_+_less
*CAT: n
*SEM: orRel[rel=fixed_+_structure_+_structure_+_not_+_less]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: x-dp-29-7.2.2-0002-0001-a
*CAT: n
*SEM: unaryRel[rel=x-dp-29-7.2.2-0002-0001-a]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: x-dp-29-7.2.2-0002-0001-a
*CAT: n
*SEM: twoRel[rel=x-dp-29-7.2.2-0002-0001-a]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: x-dp-29-7.2.2-0002-0001-a
*CAT: n
*SEM: twoRel[rel=x-dp-29-7.2.2-0002-0001-a]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: x-dp-29-7.2.2-0002-0001-a
*CAT: n
*SEM: orRel[rel=x-dp-29-7.2.2-0002-0001-a]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_equipment
*CAT: n
*SEM: unaryRel[rel=each_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_equipment
*CAT: n
*SEM: twoRel[rel=each_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_equipment
*CAT: n
*SEM: twoRel[rel=each_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_equipment
*CAT: n
*SEM: orRel[rel=each_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hole_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=hole_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hole_+_clamp-block
*CAT: n
*SEM: twoRel[rel=hole_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hole_+_clamp-block
*CAT: n
*SEM: twoRel[rel=hole_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hole_+_clamp-block
*CAT: n
*SEM: orRel[rel=hole_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_1_+_to_+_network_+_2
*CAT: n
*SEM: unaryRel[rel=network_+_1_+_to_+_network_+_2]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_1_+_to_+_network_+_2
*CAT: n
*SEM: twoRel[rel=network_+_1_+_to_+_network_+_2]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_1_+_to_+_network_+_2
*CAT: n
*SEM: twoRel[rel=network_+_1_+_to_+_network_+_2]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_1_+_to_+_network_+_2
*CAT: n
*SEM: orRel[rel=network_+_1_+_to_+_network_+_2]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taken_+_into_+_account_+_the_+_functional_+_movements_+_of_+_the_+_hose
*CAT: n
*SEM: unaryRel[rel=taken_+_into_+_account_+_the_+_functional_+_movements_+_of_+_the_+_hose]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taken_+_into_+_account_+_the_+_functional_+_movements_+_of_+_the_+_hose
*CAT: n
*SEM: twoRel[rel=taken_+_into_+_account_+_the_+_functional_+_movements_+_of_+_the_+_hose]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taken_+_into_+_account_+_the_+_functional_+_movements_+_of_+_the_+_hose
*CAT: n
*SEM: twoRel[rel=taken_+_into_+_account_+_the_+_functional_+_movements_+_of_+_the_+_hose]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taken_+_into_+_account_+_the_+_functional_+_movements_+_of_+_the_+_hose
*CAT: n
*SEM: orRel[rel=taken_+_into_+_account_+_the_+_functional_+_movements_+_of_+_the_+_hose]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_changes
*CAT: n
*SEM: unaryRel[rel=length_+_changes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_changes
*CAT: n
*SEM: twoRel[rel=length_+_changes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_changes
*CAT: n
*SEM: twoRel[rel=length_+_changes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_changes
*CAT: n
*SEM: orRel[rel=length_+_changes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc_+_600_+_connector
*CAT: n
*SEM: unaryRel[rel=arinc_+_600_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc_+_600_+_connector
*CAT: n
*SEM: twoRel[rel=arinc_+_600_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc_+_600_+_connector
*CAT: n
*SEM: twoRel[rel=arinc_+_600_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc_+_600_+_connector
*CAT: n
*SEM: orRel[rel=arinc_+_600_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_nsa_+_4571
*CAT: n
*SEM: unaryRel[rel=standard_+_nsa_+_4571]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_nsa_+_4571
*CAT: n
*SEM: twoRel[rel=standard_+_nsa_+_4571]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_nsa_+_4571
*CAT: n
*SEM: twoRel[rel=standard_+_nsa_+_4571]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_nsa_+_4571
*CAT: n
*SEM: orRel[rel=standard_+_nsa_+_4571]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 80kg
*CAT: n
*SEM: unaryRel[rel=80kg]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 80kg
*CAT: n
*SEM: twoRel[rel=80kg]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 80kg
*CAT: n
*SEM: twoRel[rel=80kg]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 80kg
*CAT: n
*SEM: orRel[rel=80kg]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin
*CAT: n
*SEM: unaryRel[rel=fin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin
*CAT: n
*SEM: twoRel[rel=fin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin
*CAT: n
*SEM: twoRel[rel=fin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin
*CAT: n
*SEM: orRel[rel=fin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_design
*CAT: n
*SEM: unaryRel[rel=new_+_design]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_design
*CAT: n
*SEM: twoRel[rel=new_+_design]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_design
*CAT: n
*SEM: twoRel[rel=new_+_design]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_design
*CAT: n
*SEM: orRel[rel=new_+_design]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_+_type_+_a_+_last_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=movable_+_component_+_type_+_a_+_last_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_+_type_+_a_+_last_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=movable_+_component_+_type_+_a_+_last_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_+_type_+_a_+_last_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=movable_+_component_+_type_+_a_+_last_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_+_type_+_a_+_last_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=movable_+_component_+_type_+_a_+_last_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire_+_is_+_less_+_than_+_l_-_smallerThan_-__-_equalto_-_2
*CAT: n
*SEM: unaryRel[rel=wire_+_is_+_less_+_than_+_l_-_smallerThan_-__-_equalto_-_2]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire_+_is_+_less_+_than_+_l_-_smallerThan_-__-_equalto_-_2
*CAT: n
*SEM: twoRel[rel=wire_+_is_+_less_+_than_+_l_-_smallerThan_-__-_equalto_-_2]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire_+_is_+_less_+_than_+_l_-_smallerThan_-__-_equalto_-_2
*CAT: n
*SEM: twoRel[rel=wire_+_is_+_less_+_than_+_l_-_smallerThan_-__-_equalto_-_2]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire_+_is_+_less_+_than_+_l_-_smallerThan_-__-_equalto_-_2
*CAT: n
*SEM: orRel[rel=wire_+_is_+_less_+_than_+_l_-_smallerThan_-__-_equalto_-_2]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: n
*CAT: n
*SEM: unaryRel[rel=n]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: n
*CAT: n
*SEM: twoRel[rel=n]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: n
*CAT: n
*SEM: twoRel[rel=n]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: n
*CAT: n
*SEM: orRel[rel=n]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend
*CAT: n
*SEM: unaryRel[rel=bend]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend
*CAT: n
*SEM: twoRel[rel=bend]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend
*CAT: n
*SEM: twoRel[rel=bend]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend
*CAT: n
*SEM: orRel[rel=bend]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: close_+_to_+_one_+_fixation_+_point_+_to
*CAT: n
*SEM: unaryRel[rel=close_+_to_+_one_+_fixation_+_point_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: close_+_to_+_one_+_fixation_+_point_+_to
*CAT: n
*SEM: twoRel[rel=close_+_to_+_one_+_fixation_+_point_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: close_+_to_+_one_+_fixation_+_point_+_to
*CAT: n
*SEM: twoRel[rel=close_+_to_+_one_+_fixation_+_point_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: close_+_to_+_one_+_fixation_+_point_+_to
*CAT: n
*SEM: orRel[rel=close_+_to_+_one_+_fixation_+_point_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_bends
*CAT: n
*SEM: unaryRel[rel=two_+_bends]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_bends
*CAT: n
*SEM: twoRel[rel=two_+_bends]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_bends
*CAT: n
*SEM: twoRel[rel=two_+_bends]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_bends
*CAT: n
*SEM: orRel[rel=two_+_bends]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_category_+_segregation
*CAT: n
*SEM: unaryRel[rel=route_+_category_+_segregation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_category_+_segregation
*CAT: n
*SEM: twoRel[rel=route_+_category_+_segregation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_category_+_segregation
*CAT: n
*SEM: twoRel[rel=route_+_category_+_segregation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_category_+_segregation
*CAT: n
*SEM: orRel[rel=route_+_category_+_segregation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cooper_+_terminal_+_lugs
*CAT: n
*SEM: unaryRel[rel=cooper_+_terminal_+_lugs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cooper_+_terminal_+_lugs
*CAT: n
*SEM: twoRel[rel=cooper_+_terminal_+_lugs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cooper_+_terminal_+_lugs
*CAT: n
*SEM: twoRel[rel=cooper_+_terminal_+_lugs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cooper_+_terminal_+_lugs
*CAT: n
*SEM: orRel[rel=cooper_+_terminal_+_lugs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: appendix_+_b
*CAT: n
*SEM: unaryRel[rel=appendix_+_b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: appendix_+_b
*CAT: n
*SEM: twoRel[rel=appendix_+_b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: appendix_+_b
*CAT: n
*SEM: twoRel[rel=appendix_+_b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: appendix_+_b
*CAT: n
*SEM: orRel[rel=appendix_+_b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: unaryRel[rel=bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: twoRel[rel=bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: twoRel[rel=bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: orRel[rel=bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_part_+_but
*CAT: n
*SEM: unaryRel[rel=mechanical_+_part_+_but]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_part_+_but
*CAT: n
*SEM: twoRel[rel=mechanical_+_part_+_but]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_part_+_but
*CAT: n
*SEM: twoRel[rel=mechanical_+_part_+_but]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_part_+_but
*CAT: n
*SEM: orRel[rel=mechanical_+_part_+_but]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_fixation_+_points
*CAT: n
*SEM: unaryRel[rel=two_+_fixation_+_points]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_fixation_+_points
*CAT: n
*SEM: twoRel[rel=two_+_fixation_+_points]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_fixation_+_points
*CAT: n
*SEM: twoRel[rel=two_+_fixation_+_points]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_fixation_+_points
*CAT: n
*SEM: orRel[rel=two_+_fixation_+_points]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3645
*CAT: n
*SEM: unaryRel[rel=en_+_3645]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3645
*CAT: n
*SEM: twoRel[rel=en_+_3645]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3645
*CAT: n
*SEM: twoRel[rel=en_+_3645]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3645
*CAT: n
*SEM: orRel[rel=en_+_3645]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_close
*CAT: n
*SEM: unaryRel[rel=as_+_close]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_close
*CAT: n
*SEM: twoRel[rel=as_+_close]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_close
*CAT: n
*SEM: twoRel[rel=as_+_close]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_close
*CAT: n
*SEM: orRel[rel=as_+_close]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_possible_+_to
*CAT: n
*SEM: unaryRel[rel=not_+_possible_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_possible_+_to
*CAT: n
*SEM: twoRel[rel=not_+_possible_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_possible_+_to
*CAT: n
*SEM: twoRel[rel=not_+_possible_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_possible_+_to
*CAT: n
*SEM: orRel[rel=not_+_possible_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structureor_+_other_+_parts
*CAT: n
*SEM: unaryRel[rel=structureor_+_other_+_parts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structureor_+_other_+_parts
*CAT: n
*SEM: twoRel[rel=structureor_+_other_+_parts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structureor_+_other_+_parts
*CAT: n
*SEM: twoRel[rel=structureor_+_other_+_parts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structureor_+_other_+_parts
*CAT: n
*SEM: orRel[rel=structureor_+_other_+_parts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_routes
*CAT: n
*SEM: unaryRel[rel=other_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_routes
*CAT: n
*SEM: twoRel[rel=other_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_routes
*CAT: n
*SEM: twoRel[rel=other_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_routes
*CAT: n
*SEM: orRel[rel=other_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_angle_+_junction
*CAT: n
*SEM: unaryRel[rel=low_+_angle_+_junction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_angle_+_junction
*CAT: n
*SEM: twoRel[rel=low_+_angle_+_junction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_angle_+_junction
*CAT: n
*SEM: twoRel[rel=low_+_angle_+_junction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_angle_+_junction
*CAT: n
*SEM: orRel[rel=low_+_angle_+_junction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relay
*CAT: n
*SEM: unaryRel[rel=relay]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relay
*CAT: n
*SEM: twoRel[rel=relay]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relay
*CAT: n
*SEM: twoRel[rel=relay]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relay
*CAT: n
*SEM: orRel[rel=relay]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component
*CAT: n
*SEM: unaryRel[rel=movable_+_component]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component
*CAT: n
*SEM: twoRel[rel=movable_+_component]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component
*CAT: n
*SEM: twoRel[rel=movable_+_component]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component
*CAT: n
*SEM: orRel[rel=movable_+_component]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 450mm
*CAT: n
*SEM: unaryRel[rel=450mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 450mm
*CAT: n
*SEM: twoRel[rel=450mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 450mm
*CAT: n
*SEM: twoRel[rel=450mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 450mm
*CAT: n
*SEM: orRel[rel=450mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+_route_+_terminal_+_lugs
*CAT: n
*SEM: unaryRel[rel=g_+_route_+_terminal_+_lugs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+_route_+_terminal_+_lugs
*CAT: n
*SEM: twoRel[rel=g_+_route_+_terminal_+_lugs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+_route_+_terminal_+_lugs
*CAT: n
*SEM: twoRel[rel=g_+_route_+_terminal_+_lugs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+_route_+_terminal_+_lugs
*CAT: n
*SEM: orRel[rel=g_+_route_+_terminal_+_lugs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_pipe
*CAT: n
*SEM: unaryRel[rel=one_+_pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_pipe
*CAT: n
*SEM: twoRel[rel=one_+_pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_pipe
*CAT: n
*SEM: twoRel[rel=one_+_pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_pipe
*CAT: n
*SEM: orRel[rel=one_+_pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing
*CAT: n
*SEM: unaryRel[rel=routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing
*CAT: n
*SEM: twoRel[rel=routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing
*CAT: n
*SEM: twoRel[rel=routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing
*CAT: n
*SEM: orRel[rel=routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture
*CAT: n
*SEM: unaryRel[rel=picture]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture
*CAT: n
*SEM: twoRel[rel=picture]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture
*CAT: n
*SEM: twoRel[rel=picture]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture
*CAT: n
*SEM: orRel[rel=picture]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: near_+_equipment
*CAT: n
*SEM: unaryRel[rel=near_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: near_+_equipment
*CAT: n
*SEM: twoRel[rel=near_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: near_+_equipment
*CAT: n
*SEM: twoRel[rel=near_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: near_+_equipment
*CAT: n
*SEM: orRel[rel=near_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: total_+_weight
*CAT: n
*SEM: unaryRel[rel=total_+_weight]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: total_+_weight
*CAT: n
*SEM: twoRel[rel=total_+_weight]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: total_+_weight
*CAT: n
*SEM: twoRel[rel=total_+_weight]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: total_+_weight
*CAT: n
*SEM: orRel[rel=total_+_weight]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion_+_the_+_bearings
*CAT: n
*SEM: unaryRel[rel=torsion_+_the_+_bearings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion_+_the_+_bearings
*CAT: n
*SEM: twoRel[rel=torsion_+_the_+_bearings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion_+_the_+_bearings
*CAT: n
*SEM: twoRel[rel=torsion_+_the_+_bearings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion_+_the_+_bearings
*CAT: n
*SEM: orRel[rel=torsion_+_the_+_bearings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum
*CAT: n
*SEM: unaryRel[rel=minimum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum
*CAT: n
*SEM: twoRel[rel=minimum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum
*CAT: n
*SEM: twoRel[rel=minimum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum
*CAT: n
*SEM: orRel[rel=minimum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_s-route
*CAT: n
*SEM: unaryRel[rel=pre_+_stressed_+_s-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_s-route
*CAT: n
*SEM: twoRel[rel=pre_+_stressed_+_s-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_s-route
*CAT: n
*SEM: twoRel[rel=pre_+_stressed_+_s-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_s-route
*CAT: n
*SEM: orRel[rel=pre_+_stressed_+_s-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_-_comma_-_2_+_microns
*CAT: n
*SEM: unaryRel[rel=3_-_comma_-_2_+_microns]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_-_comma_-_2_+_microns
*CAT: n
*SEM: twoRel[rel=3_-_comma_-_2_+_microns]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_-_comma_-_2_+_microns
*CAT: n
*SEM: twoRel[rel=3_-_comma_-_2_+_microns]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3_-_comma_-_2_+_microns
*CAT: n
*SEM: orRel[rel=3_-_comma_-_2_+_microns]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area
*CAT: n
*SEM: unaryRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area
*CAT: n
*SEM: twoRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area
*CAT: n
*SEM: twoRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area
*CAT: n
*SEM: orRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maring_+_y+-xxx_+__-_opensb_-_e.g._+_y+350_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=maring_+_y+-xxx_+__-_opensb_-_e.g._+_y+350_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maring_+_y+-xxx_+__-_opensb_-_e.g._+_y+350_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=maring_+_y+-xxx_+__-_opensb_-_e.g._+_y+350_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maring_+_y+-xxx_+__-_opensb_-_e.g._+_y+350_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=maring_+_y+-xxx_+__-_opensb_-_e.g._+_y+350_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maring_+_y+-xxx_+__-_opensb_-_e.g._+_y+350_-_closesb_-_
*CAT: n
*SEM: orRel[rel=maring_+_y+-xxx_+__-_opensb_-_e.g._+_y+350_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overlength_+_management
*CAT: n
*SEM: unaryRel[rel=overlength_+_management]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overlength_+_management
*CAT: n
*SEM: twoRel[rel=overlength_+_management]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overlength_+_management
*CAT: n
*SEM: twoRel[rel=overlength_+_management]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overlength_+_management
*CAT: n
*SEM: orRel[rel=overlength_+_management]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line
*CAT: n
*SEM: unaryRel[rel=line]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line
*CAT: n
*SEM: twoRel[rel=line]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line
*CAT: n
*SEM: twoRel[rel=line]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line
*CAT: n
*SEM: orRel[rel=line]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0929-006_+_optical_+_dummy_+_receptable
*CAT: n
*SEM: unaryRel[rel=abs0929-006_+_optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0929-006_+_optical_+_dummy_+_receptable
*CAT: n
*SEM: twoRel[rel=abs0929-006_+_optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0929-006_+_optical_+_dummy_+_receptable
*CAT: n
*SEM: twoRel[rel=abs0929-006_+_optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0929-006_+_optical_+_dummy_+_receptable
*CAT: n
*SEM: orRel[rel=abs0929-006_+_optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_situ_+_swaging
*CAT: n
*SEM: unaryRel[rel=in_+_situ_+_swaging]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_situ_+_swaging
*CAT: n
*SEM: twoRel[rel=in_+_situ_+_swaging]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_situ_+_swaging
*CAT: n
*SEM: twoRel[rel=in_+_situ_+_swaging]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_situ_+_swaging
*CAT: n
*SEM: orRel[rel=in_+_situ_+_swaging]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 22
*CAT: n
*SEM: unaryRel[rel=22]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 22
*CAT: n
*SEM: twoRel[rel=22]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 22
*CAT: n
*SEM: twoRel[rel=22]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 22
*CAT: n
*SEM: orRel[rel=22]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_omega_+_shape
*CAT: n
*SEM: unaryRel[rel=an_+_omega_+_shape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_omega_+_shape
*CAT: n
*SEM: twoRel[rel=an_+_omega_+_shape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_omega_+_shape
*CAT: n
*SEM: twoRel[rel=an_+_omega_+_shape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_omega_+_shape
*CAT: n
*SEM: orRel[rel=an_+_omega_+_shape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire
*CAT: n
*SEM: unaryRel[rel=draw_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire
*CAT: n
*SEM: twoRel[rel=draw_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire
*CAT: n
*SEM: twoRel[rel=draw_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire
*CAT: n
*SEM: orRel[rel=draw_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935805_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=nsa_+_935805_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935805_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=nsa_+_935805_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935805_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=nsa_+_935805_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935805_-_closesb_-_
*CAT: n
*SEM: orRel[rel=nsa_+_935805_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-__+_20mm
*CAT: n
*SEM: unaryRel[rel=d_+__-_greaterThan_-__+__-_equalto_-__+_20mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-__+_20mm
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-__+_20mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-__+_20mm
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-__+__-_equalto_-__+_20mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-__+__-_equalto_-__+_20mm
*CAT: n
*SEM: orRel[rel=d_+__-_greaterThan_-__+__-_equalto_-__+_20mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_rack_+_beside_+_connector_+_asne0161or_+_asne0163or_+_asne0165or_+_asne0086or_+_asne0145or_+_asne0147
*CAT: n
*SEM: unaryRel[rel=equipment_+_rack_+_beside_+_connector_+_asne0161or_+_asne0163or_+_asne0165or_+_asne0086or_+_asne0145or_+_asne0147]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_rack_+_beside_+_connector_+_asne0161or_+_asne0163or_+_asne0165or_+_asne0086or_+_asne0145or_+_asne0147
*CAT: n
*SEM: twoRel[rel=equipment_+_rack_+_beside_+_connector_+_asne0161or_+_asne0163or_+_asne0165or_+_asne0086or_+_asne0145or_+_asne0147]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_rack_+_beside_+_connector_+_asne0161or_+_asne0163or_+_asne0165or_+_asne0086or_+_asne0145or_+_asne0147
*CAT: n
*SEM: twoRel[rel=equipment_+_rack_+_beside_+_connector_+_asne0161or_+_asne0163or_+_asne0165or_+_asne0086or_+_asne0145or_+_asne0147]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_rack_+_beside_+_connector_+_asne0161or_+_asne0163or_+_asne0165or_+_asne0086or_+_asne0145or_+_asne0147
*CAT: n
*SEM: orRel[rel=equipment_+_rack_+_beside_+_connector_+_asne0161or_+_asne0163or_+_asne0165or_+_asne0086or_+_asne0145or_+_asne0147]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_areasor_+_in_+_hazardous_+_areasor_+_underneath_+_of_+_removable_+_pipe_+_couplings_+_carrying_+_fluids
*CAT: n
*SEM: unaryRel[rel=swamp_+_areasor_+_in_+_hazardous_+_areasor_+_underneath_+_of_+_removable_+_pipe_+_couplings_+_carrying_+_fluids]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_areasor_+_in_+_hazardous_+_areasor_+_underneath_+_of_+_removable_+_pipe_+_couplings_+_carrying_+_fluids
*CAT: n
*SEM: twoRel[rel=swamp_+_areasor_+_in_+_hazardous_+_areasor_+_underneath_+_of_+_removable_+_pipe_+_couplings_+_carrying_+_fluids]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_areasor_+_in_+_hazardous_+_areasor_+_underneath_+_of_+_removable_+_pipe_+_couplings_+_carrying_+_fluids
*CAT: n
*SEM: twoRel[rel=swamp_+_areasor_+_in_+_hazardous_+_areasor_+_underneath_+_of_+_removable_+_pipe_+_couplings_+_carrying_+_fluids]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_areasor_+_in_+_hazardous_+_areasor_+_underneath_+_of_+_removable_+_pipe_+_couplings_+_carrying_+_fluids
*CAT: n
*SEM: orRel[rel=swamp_+_areasor_+_in_+_hazardous_+_areasor_+_underneath_+_of_+_removable_+_pipe_+_couplings_+_carrying_+_fluids]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_main_+_routing_+_when
*CAT: n
*SEM: unaryRel[rel=other_+_main_+_routing_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_main_+_routing_+_when
*CAT: n
*SEM: twoRel[rel=other_+_main_+_routing_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_main_+_routing_+_when
*CAT: n
*SEM: twoRel[rel=other_+_main_+_routing_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_main_+_routing_+_when
*CAT: n
*SEM: orRel[rel=other_+_main_+_routing_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_harness_+_is_+_equipped
*CAT: n
*SEM: unaryRel[rel=at_+_least_+_one_+_harness_+_is_+_equipped]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_harness_+_is_+_equipped
*CAT: n
*SEM: twoRel[rel=at_+_least_+_one_+_harness_+_is_+_equipped]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_harness_+_is_+_equipped
*CAT: n
*SEM: twoRel[rel=at_+_least_+_one_+_harness_+_is_+_equipped]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_harness_+_is_+_equipped
*CAT: n
*SEM: orRel[rel=at_+_least_+_one_+_harness_+_is_+_equipped]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: derivation
*CAT: n
*SEM: unaryRel[rel=derivation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: derivation
*CAT: n
*SEM: twoRel[rel=derivation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: derivation
*CAT: n
*SEM: twoRel[rel=derivation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: derivation
*CAT: n
*SEM: orRel[rel=derivation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway
*CAT: n
*SEM: unaryRel[rel=raceway]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway
*CAT: n
*SEM: twoRel[rel=raceway]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway
*CAT: n
*SEM: twoRel[rel=raceway]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway
*CAT: n
*SEM: orRel[rel=raceway]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle_+_inside
*CAT: n
*SEM: unaryRel[rel=electrical_+_bundle_+_inside]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle_+_inside
*CAT: n
*SEM: twoRel[rel=electrical_+_bundle_+_inside]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle_+_inside
*CAT: n
*SEM: twoRel[rel=electrical_+_bundle_+_inside]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle_+_inside
*CAT: n
*SEM: orRel[rel=electrical_+_bundle_+_inside]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit_+_under_+_pax_+_floor
*CAT: n
*SEM: unaryRel[rel=nsa935805_+_convoluted_+_conduit_+_under_+_pax_+_floor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit_+_under_+_pax_+_floor
*CAT: n
*SEM: twoRel[rel=nsa935805_+_convoluted_+_conduit_+_under_+_pax_+_floor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit_+_under_+_pax_+_floor
*CAT: n
*SEM: twoRel[rel=nsa935805_+_convoluted_+_conduit_+_under_+_pax_+_floor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit_+_under_+_pax_+_floor
*CAT: n
*SEM: orRel[rel=nsa935805_+_convoluted_+_conduit_+_under_+_pax_+_floor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block
*CAT: n
*SEM: unaryRel[rel=clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block
*CAT: n
*SEM: twoRel[rel=clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block
*CAT: n
*SEM: twoRel[rel=clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block
*CAT: n
*SEM: orRel[rel=clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air_+_duct
*CAT: n
*SEM: unaryRel[rel=air_+_duct]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air_+_duct
*CAT: n
*SEM: twoRel[rel=air_+_duct]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air_+_duct
*CAT: n
*SEM: twoRel[rel=air_+_duct]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air_+_duct
*CAT: n
*SEM: orRel[rel=air_+_duct]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_the_+_basic_+_clearance_+_definition_+_into_+_account
*CAT: n
*SEM: unaryRel[rel=taking_+_the_+_basic_+_clearance_+_definition_+_into_+_account]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_the_+_basic_+_clearance_+_definition_+_into_+_account
*CAT: n
*SEM: twoRel[rel=taking_+_the_+_basic_+_clearance_+_definition_+_into_+_account]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_the_+_basic_+_clearance_+_definition_+_into_+_account
*CAT: n
*SEM: twoRel[rel=taking_+_the_+_basic_+_clearance_+_definition_+_into_+_account]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_the_+_basic_+_clearance_+_definition_+_into_+_account
*CAT: n
*SEM: orRel[rel=taking_+_the_+_basic_+_clearance_+_definition_+_into_+_account]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_protection_+_when
*CAT: n
*SEM: unaryRel[rel=electrical_+_protection_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_protection_+_when
*CAT: n
*SEM: twoRel[rel=electrical_+_protection_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_protection_+_when
*CAT: n
*SEM: twoRel[rel=electrical_+_protection_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_protection_+_when
*CAT: n
*SEM: orRel[rel=electrical_+_protection_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_0mm
*CAT: n
*SEM: unaryRel[rel=10mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_0mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_0mm
*CAT: n
*SEM: twoRel[rel=10mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_0mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_0mm
*CAT: n
*SEM: twoRel[rel=10mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_0mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_0mm
*CAT: n
*SEM: orRel[rel=10mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_0mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: panel.
*CAT: n
*SEM: unaryRel[rel=panel.]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: panel.
*CAT: n
*SEM: twoRel[rel=panel.]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: panel.
*CAT: n
*SEM: twoRel[rel=panel.]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: panel.
*CAT: n
*SEM: orRel[rel=panel.]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: defined_+_area
*CAT: n
*SEM: unaryRel[rel=defined_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: defined_+_area
*CAT: n
*SEM: twoRel[rel=defined_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: defined_+_area
*CAT: n
*SEM: twoRel[rel=defined_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: defined_+_area
*CAT: n
*SEM: orRel[rel=defined_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness
*CAT: n
*SEM: unaryRel[rel=harness]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness
*CAT: n
*SEM: twoRel[rel=harness]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness
*CAT: n
*SEM: twoRel[rel=harness]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness
*CAT: n
*SEM: orRel[rel=harness]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_axis_+_fastenernsa_+_5159
*CAT: n
*SEM: unaryRel[rel=an_+_axis_+_fastenernsa_+_5159]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_axis_+_fastenernsa_+_5159
*CAT: n
*SEM: twoRel[rel=an_+_axis_+_fastenernsa_+_5159]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_axis_+_fastenernsa_+_5159
*CAT: n
*SEM: twoRel[rel=an_+_axis_+_fastenernsa_+_5159]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_axis_+_fastenernsa_+_5159
*CAT: n
*SEM: orRel[rel=an_+_axis_+_fastenernsa_+_5159]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_titanium_+_pipes_+_unions
*CAT: n
*SEM: unaryRel[rel=two_+_titanium_+_pipes_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_titanium_+_pipes_+_unions
*CAT: n
*SEM: twoRel[rel=two_+_titanium_+_pipes_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_titanium_+_pipes_+_unions
*CAT: n
*SEM: twoRel[rel=two_+_titanium_+_pipes_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_titanium_+_pipes_+_unions
*CAT: n
*SEM: orRel[rel=two_+_titanium_+_pipes_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1s_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=1s_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1s_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=1s_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1s_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=1s_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1s_-_closesb_-_
*CAT: n
*SEM: orRel[rel=1s_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_intermediate_+_bracket
*CAT: n
*SEM: unaryRel[rel=second_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=second_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=second_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_intermediate_+_bracket
*CAT: n
*SEM: orRel[rel=second_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clampblock_+_use
*CAT: n
*SEM: unaryRel[rel=clampblock_+_use]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clampblock_+_use
*CAT: n
*SEM: twoRel[rel=clampblock_+_use]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clampblock_+_use
*CAT: n
*SEM: twoRel[rel=clampblock_+_use]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clampblock_+_use
*CAT: n
*SEM: orRel[rel=clampblock_+_use]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: positions
*CAT: n
*SEM: unaryRel[rel=positions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: positions
*CAT: n
*SEM: twoRel[rel=positions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: positions
*CAT: n
*SEM: twoRel[rel=positions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: positions
*CAT: n
*SEM: orRel[rel=positions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_couplings
*CAT: n
*SEM: unaryRel[rel=flexible_+_couplings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_couplings
*CAT: n
*SEM: twoRel[rel=flexible_+_couplings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_couplings
*CAT: n
*SEM: twoRel[rel=flexible_+_couplings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_couplings
*CAT: n
*SEM: orRel[rel=flexible_+_couplings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_cable
*CAT: n
*SEM: unaryRel[rel=connector_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_cable
*CAT: n
*SEM: twoRel[rel=connector_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_cable
*CAT: n
*SEM: twoRel[rel=connector_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_cable
*CAT: n
*SEM: orRel[rel=connector_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek
*CAT: n
*SEM: unaryRel[rel=abs1576_+_peek]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek
*CAT: n
*SEM: twoRel[rel=abs1576_+_peek]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek
*CAT: n
*SEM: twoRel[rel=abs1576_+_peek]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek
*CAT: n
*SEM: orRel[rel=abs1576_+_peek]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 26
*CAT: n
*SEM: unaryRel[rel=26]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 26
*CAT: n
*SEM: twoRel[rel=26]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 26
*CAT: n
*SEM: twoRel[rel=26]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 26
*CAT: n
*SEM: orRel[rel=26]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_other_+_solution
*CAT: n
*SEM: unaryRel[rel=no_+_other_+_solution]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_other_+_solution
*CAT: n
*SEM: twoRel[rel=no_+_other_+_solution]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_other_+_solution
*CAT: n
*SEM: twoRel[rel=no_+_other_+_solution]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_other_+_solution
*CAT: n
*SEM: orRel[rel=no_+_other_+_solution]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flanged_+_bulkhead_+_unions
*CAT: n
*SEM: unaryRel[rel=flanged_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flanged_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=flanged_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flanged_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=flanged_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flanged_+_bulkhead_+_unions
*CAT: n
*SEM: orRel[rel=flanged_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection_+_sleeve_+_providing_+_mechanical
*CAT: n
*SEM: unaryRel[rel=protection_+_sleeve_+_providing_+_mechanical]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection_+_sleeve_+_providing_+_mechanical
*CAT: n
*SEM: twoRel[rel=protection_+_sleeve_+_providing_+_mechanical]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection_+_sleeve_+_providing_+_mechanical
*CAT: n
*SEM: twoRel[rel=protection_+_sleeve_+_providing_+_mechanical]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection_+_sleeve_+_providing_+_mechanical
*CAT: n
*SEM: orRel[rel=protection_+_sleeve_+_providing_+_mechanical]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 13mm
*CAT: n
*SEM: unaryRel[rel=13mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 13mm
*CAT: n
*SEM: twoRel[rel=13mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 13mm
*CAT: n
*SEM: twoRel[rel=13mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 13mm
*CAT: n
*SEM: orRel[rel=13mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_as_+_62200
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_as_+_62200]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_as_+_62200
*CAT: n
*SEM: twoRel[rel=p-clamp_+_as_+_62200]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_as_+_62200
*CAT: n
*SEM: twoRel[rel=p-clamp_+_as_+_62200]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_as_+_62200
*CAT: n
*SEM: orRel[rel=p-clamp_+_as_+_62200]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_bundle
*CAT: n
*SEM: unaryRel[rel=copper_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_bundle
*CAT: n
*SEM: twoRel[rel=copper_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_bundle
*CAT: n
*SEM: twoRel[rel=copper_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_bundle
*CAT: n
*SEM: orRel[rel=copper_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primed_+_version
*CAT: n
*SEM: unaryRel[rel=primed_+_version]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primed_+_version
*CAT: n
*SEM: twoRel[rel=primed_+_version]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primed_+_version
*CAT: n
*SEM: twoRel[rel=primed_+_version]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primed_+_version
*CAT: n
*SEM: orRel[rel=primed_+_version]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1571_+_pressure_+_seal
*CAT: n
*SEM: unaryRel[rel=abs1571_+_pressure_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1571_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=abs1571_+_pressure_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1571_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=abs1571_+_pressure_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1571_+_pressure_+_seal
*CAT: n
*SEM: orRel[rel=abs1571_+_pressure_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+__+_colonette
*CAT: n
*SEM: unaryRel[rel=stand-off_+__+_colonette]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+__+_colonette
*CAT: n
*SEM: twoRel[rel=stand-off_+__+_colonette]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+__+_colonette
*CAT: n
*SEM: twoRel[rel=stand-off_+__+_colonette]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+__+_colonette
*CAT: n
*SEM: orRel[rel=stand-off_+__+_colonette]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_information_+_frame_+_number
*CAT: n
*SEM: unaryRel[rel=following_+_information_+_frame_+_number]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_information_+_frame_+_number
*CAT: n
*SEM: twoRel[rel=following_+_information_+_frame_+_number]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_information_+_frame_+_number
*CAT: n
*SEM: twoRel[rel=following_+_information_+_frame_+_number]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_information_+_frame_+_number
*CAT: n
*SEM: orRel[rel=following_+_information_+_frame_+_number]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid
*CAT: n
*SEM: unaryRel[rel=rigid]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid
*CAT: n
*SEM: twoRel[rel=rigid]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid
*CAT: n
*SEM: twoRel[rel=rigid]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid
*CAT: n
*SEM: orRel[rel=rigid]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+_minimum
*CAT: n
*SEM: unaryRel[rel=10mm_+_minimum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+_minimum
*CAT: n
*SEM: twoRel[rel=10mm_+_minimum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+_minimum
*CAT: n
*SEM: twoRel[rel=10mm_+_minimum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+_minimum
*CAT: n
*SEM: orRel[rel=10mm_+_minimum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: version
*CAT: n
*SEM: unaryRel[rel=version]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: version
*CAT: n
*SEM: twoRel[rel=version]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: version
*CAT: n
*SEM: twoRel[rel=version]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: version
*CAT: n
*SEM: orRel[rel=version]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_sleeve_+_marqued
*CAT: n
*SEM: unaryRel[rel=identification_+_sleeve_+_marqued]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_sleeve_+_marqued
*CAT: n
*SEM: twoRel[rel=identification_+_sleeve_+_marqued]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_sleeve_+_marqued
*CAT: n
*SEM: twoRel[rel=identification_+_sleeve_+_marqued]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_sleeve_+_marqued
*CAT: n
*SEM: orRel[rel=identification_+_sleeve_+_marqued]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_sections
*CAT: n
*SEM: unaryRel[rel=two_+_sections]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_sections
*CAT: n
*SEM: twoRel[rel=two_+_sections]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_sections
*CAT: n
*SEM: twoRel[rel=two_+_sections]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_sections
*CAT: n
*SEM: orRel[rel=two_+_sections]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: exclusivesly
*CAT: n
*SEM: unaryRel[rel=exclusivesly]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: exclusivesly
*CAT: n
*SEM: twoRel[rel=exclusivesly]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: exclusivesly
*CAT: n
*SEM: twoRel[rel=exclusivesly]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: exclusivesly
*CAT: n
*SEM: orRel[rel=exclusivesly]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f01_+_to
*CAT: n
*SEM: unaryRel[rel=abs1576-f01_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f01_+_to
*CAT: n
*SEM: twoRel[rel=abs1576-f01_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f01_+_to
*CAT: n
*SEM: twoRel[rel=abs1576-f01_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f01_+_to
*CAT: n
*SEM: orRel[rel=abs1576-f01_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_length_+_of_+_6_+_metres
*CAT: n
*SEM: unaryRel[rel=maximum_+_length_+_of_+_6_+_metres]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_length_+_of_+_6_+_metres
*CAT: n
*SEM: twoRel[rel=maximum_+_length_+_of_+_6_+_metres]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_length_+_of_+_6_+_metres
*CAT: n
*SEM: twoRel[rel=maximum_+_length_+_of_+_6_+_metres]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_length_+_of_+_6_+_metres
*CAT: n
*SEM: orRel[rel=maximum_+_length_+_of_+_6_+_metres]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_greaterThan_-__+_3
*CAT: n
*SEM: unaryRel[rel=_-_greaterThan_-__+_3]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_greaterThan_-__+_3
*CAT: n
*SEM: twoRel[rel=_-_greaterThan_-__+_3]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_greaterThan_-__+_3
*CAT: n
*SEM: twoRel[rel=_-_greaterThan_-__+_3]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _-_greaterThan_-__+_3
*CAT: n
*SEM: orRel[rel=_-_greaterThan_-__+_3]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3d
*CAT: n
*SEM: unaryRel[rel=3d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3d
*CAT: n
*SEM: twoRel[rel=3d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3d
*CAT: n
*SEM: twoRel[rel=3d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3d
*CAT: n
*SEM: orRel[rel=3d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundlel
*CAT: n
*SEM: unaryRel[rel=bundlel]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundlel
*CAT: n
*SEM: twoRel[rel=bundlel]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundlel
*CAT: n
*SEM: twoRel[rel=bundlel]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundlel
*CAT: n
*SEM: orRel[rel=bundlel]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: for_+_grounding_+_modules_+__-_opensb_-_vg_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=for_+_grounding_+_modules_+__-_opensb_-_vg_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: for_+_grounding_+_modules_+__-_opensb_-_vg_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=for_+_grounding_+_modules_+__-_opensb_-_vg_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: for_+_grounding_+_modules_+__-_opensb_-_vg_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=for_+_grounding_+_modules_+__-_opensb_-_vg_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: for_+_grounding_+_modules_+__-_opensb_-_vg_-_closesb_-_
*CAT: n
*SEM: orRel[rel=for_+_grounding_+_modules_+__-_opensb_-_vg_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_accessible
*CAT: n
*SEM: unaryRel[rel=be_+_accessible]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_accessible
*CAT: n
*SEM: twoRel[rel=be_+_accessible]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_accessible
*CAT: n
*SEM: twoRel[rel=be_+_accessible]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_accessible
*CAT: n
*SEM: orRel[rel=be_+_accessible]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker_+_connection
*CAT: n
*SEM: unaryRel[rel=circuit_+_breaker_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker_+_connection
*CAT: n
*SEM: twoRel[rel=circuit_+_breaker_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker_+_connection
*CAT: n
*SEM: twoRel[rel=circuit_+_breaker_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker_+_connection
*CAT: n
*SEM: orRel[rel=circuit_+_breaker_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level
*CAT: n
*SEM: unaryRel[rel=level]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level
*CAT: n
*SEM: twoRel[rel=level]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level
*CAT: n
*SEM: twoRel[rel=level]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level
*CAT: n
*SEM: orRel[rel=level]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: long_+_enough_+_to
*CAT: n
*SEM: unaryRel[rel=long_+_enough_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: long_+_enough_+_to
*CAT: n
*SEM: twoRel[rel=long_+_enough_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: long_+_enough_+_to
*CAT: n
*SEM: twoRel[rel=long_+_enough_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: long_+_enough_+_to
*CAT: n
*SEM: orRel[rel=long_+_enough_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_specifying_+_fixation_+_devices
*CAT: n
*SEM: unaryRel[rel=using_+_specifying_+_fixation_+_devices]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_specifying_+_fixation_+_devices
*CAT: n
*SEM: twoRel[rel=using_+_specifying_+_fixation_+_devices]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_specifying_+_fixation_+_devices
*CAT: n
*SEM: twoRel[rel=using_+_specifying_+_fixation_+_devices]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_specifying_+_fixation_+_devices
*CAT: n
*SEM: orRel[rel=using_+_specifying_+_fixation_+_devices]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3646-009_+_protective_+_cap
*CAT: n
*SEM: unaryRel[rel=en3646-009_+_protective_+_cap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3646-009_+_protective_+_cap
*CAT: n
*SEM: twoRel[rel=en3646-009_+_protective_+_cap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3646-009_+_protective_+_cap
*CAT: n
*SEM: twoRel[rel=en3646-009_+_protective_+_cap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3646-009_+_protective_+_cap
*CAT: n
*SEM: orRel[rel=en3646-009_+_protective_+_cap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_on_+_safety_+_wires
*CAT: n
*SEM: unaryRel[rel=black_+_on_+_safety_+_wires]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_on_+_safety_+_wires
*CAT: n
*SEM: twoRel[rel=black_+_on_+_safety_+_wires]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_on_+_safety_+_wires
*CAT: n
*SEM: twoRel[rel=black_+_on_+_safety_+_wires]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_on_+_safety_+_wires
*CAT: n
*SEM: orRel[rel=black_+_on_+_safety_+_wires]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_bundle
*CAT: n
*SEM: unaryRel[rel=case_+_of_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_bundle
*CAT: n
*SEM: twoRel[rel=case_+_of_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_bundle
*CAT: n
*SEM: twoRel[rel=case_+_of_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_bundle
*CAT: n
*SEM: orRel[rel=case_+_of_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attach_+_bundles_+_between_+_floor_+_panel
*CAT: n
*SEM: unaryRel[rel=attach_+_bundles_+_between_+_floor_+_panel]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attach_+_bundles_+_between_+_floor_+_panel
*CAT: n
*SEM: twoRel[rel=attach_+_bundles_+_between_+_floor_+_panel]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attach_+_bundles_+_between_+_floor_+_panel
*CAT: n
*SEM: twoRel[rel=attach_+_bundles_+_between_+_floor_+_panel]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attach_+_bundles_+_between_+_floor_+_panel
*CAT: n
*SEM: orRel[rel=attach_+_bundles_+_between_+_floor_+_panel]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic_+_below_+_positioned_+_above
*CAT: n
*SEM: unaryRel[rel=graphic_+_below_+_positioned_+_above]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic_+_below_+_positioned_+_above
*CAT: n
*SEM: twoRel[rel=graphic_+_below_+_positioned_+_above]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic_+_below_+_positioned_+_above
*CAT: n
*SEM: twoRel[rel=graphic_+_below_+_positioned_+_above]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic_+_below_+_positioned_+_above
*CAT: n
*SEM: orRel[rel=graphic_+_below_+_positioned_+_above]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector
*CAT: n
*SEM: unaryRel[rel=connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector
*CAT: n
*SEM: twoRel[rel=connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector
*CAT: n
*SEM: twoRel[rel=connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector
*CAT: n
*SEM: orRel[rel=connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_ata
*CAT: n
*SEM: unaryRel[rel=mechanical_+_ata]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_ata
*CAT: n
*SEM: twoRel[rel=mechanical_+_ata]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_ata
*CAT: n
*SEM: twoRel[rel=mechanical_+_ata]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_ata
*CAT: n
*SEM: orRel[rel=mechanical_+_ata]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_background
*CAT: n
*SEM: unaryRel[rel=pink_+_background]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_background
*CAT: n
*SEM: twoRel[rel=pink_+_background]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_background
*CAT: n
*SEM: twoRel[rel=pink_+_background]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_background
*CAT: n
*SEM: orRel[rel=pink_+_background]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4
*CAT: n
*SEM: unaryRel[rel=4]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4
*CAT: n
*SEM: twoRel[rel=4]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4
*CAT: n
*SEM: twoRel[rel=4]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4
*CAT: n
*SEM: orRel[rel=4]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure
*CAT: n
*SEM: unaryRel[rel=pressure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure
*CAT: n
*SEM: twoRel[rel=pressure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure
*CAT: n
*SEM: twoRel[rel=pressure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure
*CAT: n
*SEM: orRel[rel=pressure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sizes
*CAT: n
*SEM: unaryRel[rel=sizes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sizes
*CAT: n
*SEM: twoRel[rel=sizes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sizes
*CAT: n
*SEM: twoRel[rel=sizes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sizes
*CAT: n
*SEM: orRel[rel=sizes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0033
*CAT: n
*SEM: unaryRel[rel=asne_+_0033]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0033
*CAT: n
*SEM: twoRel[rel=asne_+_0033]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0033
*CAT: n
*SEM: twoRel[rel=asne_+_0033]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0033
*CAT: n
*SEM: orRel[rel=asne_+_0033]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drained_+_hole
*CAT: n
*SEM: unaryRel[rel=drained_+_hole]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drained_+_hole
*CAT: n
*SEM: twoRel[rel=drained_+_hole]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drained_+_hole
*CAT: n
*SEM: twoRel[rel=drained_+_hole]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drained_+_hole
*CAT: n
*SEM: orRel[rel=drained_+_hole]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_side
*CAT: n
*SEM: unaryRel[rel=front_+_side]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_side
*CAT: n
*SEM: twoRel[rel=front_+_side]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_side
*CAT: n
*SEM: twoRel[rel=front_+_side]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_side
*CAT: n
*SEM: orRel[rel=front_+_side]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_designed_+_bracket
*CAT: n
*SEM: unaryRel[rel=new_+_designed_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_designed_+_bracket
*CAT: n
*SEM: twoRel[rel=new_+_designed_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_designed_+_bracket
*CAT: n
*SEM: twoRel[rel=new_+_designed_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_designed_+_bracket
*CAT: n
*SEM: orRel[rel=new_+_designed_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_minimum_+_80_+_mm_+_up_+_to_+_180_-_degrees_-_
*CAT: n
*SEM: unaryRel[rel=bend_+_minimum_+_80_+_mm_+_up_+_to_+_180_-_degrees_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_minimum_+_80_+_mm_+_up_+_to_+_180_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=bend_+_minimum_+_80_+_mm_+_up_+_to_+_180_-_degrees_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_minimum_+_80_+_mm_+_up_+_to_+_180_-_degrees_-_
*CAT: n
*SEM: twoRel[rel=bend_+_minimum_+_80_+_mm_+_up_+_to_+_180_-_degrees_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_minimum_+_80_+_mm_+_up_+_to_+_180_-_degrees_-_
*CAT: n
*SEM: orRel[rel=bend_+_minimum_+_80_+_mm_+_up_+_to_+_180_-_degrees_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: divergent_+_tapering
*CAT: n
*SEM: unaryRel[rel=divergent_+_tapering]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: divergent_+_tapering
*CAT: n
*SEM: twoRel[rel=divergent_+_tapering]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: divergent_+_tapering
*CAT: n
*SEM: twoRel[rel=divergent_+_tapering]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: divergent_+_tapering
*CAT: n
*SEM: orRel[rel=divergent_+_tapering]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_category
*CAT: n
*SEM: unaryRel[rel=route_+_category]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_category
*CAT: n
*SEM: twoRel[rel=route_+_category]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_category
*CAT: n
*SEM: twoRel[rel=route_+_category]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_category
*CAT: n
*SEM: orRel[rel=route_+_category]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fod_+_on_+_phases
*CAT: n
*SEM: unaryRel[rel=fod_+_on_+_phases]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fod_+_on_+_phases
*CAT: n
*SEM: twoRel[rel=fod_+_on_+_phases]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fod_+_on_+_phases
*CAT: n
*SEM: twoRel[rel=fod_+_on_+_phases]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fod_+_on_+_phases
*CAT: n
*SEM: orRel[rel=fod_+_on_+_phases]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_exceptions
*CAT: n
*SEM: unaryRel[rel=following_+_exceptions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_exceptions
*CAT: n
*SEM: twoRel[rel=following_+_exceptions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_exceptions
*CAT: n
*SEM: twoRel[rel=following_+_exceptions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_exceptions
*CAT: n
*SEM: orRel[rel=following_+_exceptions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: couplings
*CAT: n
*SEM: unaryRel[rel=couplings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: couplings
*CAT: n
*SEM: twoRel[rel=couplings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: couplings
*CAT: n
*SEM: twoRel[rel=couplings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: couplings
*CAT: n
*SEM: orRel[rel=couplings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_identification
*CAT: n
*SEM: unaryRel[rel=harness_+_identification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_identification
*CAT: n
*SEM: twoRel[rel=harness_+_identification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_identification
*CAT: n
*SEM: twoRel[rel=harness_+_identification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_identification
*CAT: n
*SEM: orRel[rel=harness_+_identification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure_+_along_+_hanress_+_every_+_2m_+_close
*CAT: n
*SEM: unaryRel[rel=attached_+_figure_+_along_+_hanress_+_every_+_2m_+_close]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure_+_along_+_hanress_+_every_+_2m_+_close
*CAT: n
*SEM: twoRel[rel=attached_+_figure_+_along_+_hanress_+_every_+_2m_+_close]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure_+_along_+_hanress_+_every_+_2m_+_close
*CAT: n
*SEM: twoRel[rel=attached_+_figure_+_along_+_hanress_+_every_+_2m_+_close]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure_+_along_+_hanress_+_every_+_2m_+_close
*CAT: n
*SEM: orRel[rel=attached_+_figure_+_along_+_hanress_+_every_+_2m_+_close]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=level_+_of_+_virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=level_+_of_+_virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=level_+_of_+_virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_
*CAT: n
*SEM: orRel[rel=level_+_of_+_virtual_+_pressure_+_seal_+__-_opensb_-_vp_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurization_+_variation
*CAT: n
*SEM: unaryRel[rel=pressurization_+_variation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurization_+_variation
*CAT: n
*SEM: twoRel[rel=pressurization_+_variation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurization_+_variation
*CAT: n
*SEM: twoRel[rel=pressurization_+_variation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurization_+_variation
*CAT: n
*SEM: orRel[rel=pressurization_+_variation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+__-_smallerThan_-__+_10_+_d
*CAT: n
*SEM: unaryRel[rel=distance_+__-_smallerThan_-__+_10_+_d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+__-_smallerThan_-__+_10_+_d
*CAT: n
*SEM: twoRel[rel=distance_+__-_smallerThan_-__+_10_+_d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+__-_smallerThan_-__+_10_+_d
*CAT: n
*SEM: twoRel[rel=distance_+__-_smallerThan_-__+_10_+_d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+__-_smallerThan_-__+_10_+_d
*CAT: n
*SEM: orRel[rel=distance_+__-_smallerThan_-__+_10_+_d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_areas
*CAT: n
*SEM: unaryRel[rel=pressurized_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_areas
*CAT: n
*SEM: twoRel[rel=pressurized_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_areas
*CAT: n
*SEM: twoRel[rel=pressurized_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized_+_areas
*CAT: n
*SEM: orRel[rel=pressurized_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: y-tee_+_junction
*CAT: n
*SEM: unaryRel[rel=y-tee_+_junction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: y-tee_+_junction
*CAT: n
*SEM: twoRel[rel=y-tee_+_junction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: y-tee_+_junction
*CAT: n
*SEM: twoRel[rel=y-tee_+_junction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: y-tee_+_junction
*CAT: n
*SEM: orRel[rel=y-tee_+_junction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_the_+_aircraft_+_structureor
*CAT: n
*SEM: unaryRel[rel=to_+_the_+_aircraft_+_structureor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_the_+_aircraft_+_structureor
*CAT: n
*SEM: twoRel[rel=to_+_the_+_aircraft_+_structureor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_the_+_aircraft_+_structureor
*CAT: n
*SEM: twoRel[rel=to_+_the_+_aircraft_+_structureor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to_+_the_+_aircraft_+_structureor
*CAT: n
*SEM: orRel[rel=to_+_the_+_aircraft_+_structureor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameters_+_defined_+_on_+_piping_+_network_+_sketch
*CAT: n
*SEM: unaryRel[rel=diameters_+_defined_+_on_+_piping_+_network_+_sketch]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameters_+_defined_+_on_+_piping_+_network_+_sketch
*CAT: n
*SEM: twoRel[rel=diameters_+_defined_+_on_+_piping_+_network_+_sketch]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameters_+_defined_+_on_+_piping_+_network_+_sketch
*CAT: n
*SEM: twoRel[rel=diameters_+_defined_+_on_+_piping_+_network_+_sketch]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameters_+_defined_+_on_+_piping_+_network_+_sketch
*CAT: n
*SEM: orRel[rel=diameters_+_defined_+_on_+_piping_+_network_+_sketch]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detector_+_housing._+_in_+_no_+_case_+_this_+_distance
*CAT: n
*SEM: unaryRel[rel=detector_+_housing._+_in_+_no_+_case_+_this_+_distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detector_+_housing._+_in_+_no_+_case_+_this_+_distance
*CAT: n
*SEM: twoRel[rel=detector_+_housing._+_in_+_no_+_case_+_this_+_distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detector_+_housing._+_in_+_no_+_case_+_this_+_distance
*CAT: n
*SEM: twoRel[rel=detector_+_housing._+_in_+_no_+_case_+_this_+_distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detector_+_housing._+_in_+_no_+_case_+_this_+_distance
*CAT: n
*SEM: orRel[rel=detector_+_housing._+_in_+_no_+_case_+_this_+_distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 24
*CAT: n
*SEM: unaryRel[rel=24]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 24
*CAT: n
*SEM: twoRel[rel=24]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 24
*CAT: n
*SEM: twoRel[rel=24]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 24
*CAT: n
*SEM: orRel[rel=24]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_-_backslash_-_fixation_+_point
*CAT: n
*SEM: unaryRel[rel=attachment_-_backslash_-_fixation_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_-_backslash_-_fixation_+_point
*CAT: n
*SEM: twoRel[rel=attachment_-_backslash_-_fixation_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_-_backslash_-_fixation_+_point
*CAT: n
*SEM: twoRel[rel=attachment_-_backslash_-_fixation_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_-_backslash_-_fixation_+_point
*CAT: n
*SEM: orRel[rel=attachment_-_backslash_-_fixation_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_contact
*CAT: n
*SEM: unaryRel[rel=no_+_contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_contact
*CAT: n
*SEM: twoRel[rel=no_+_contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_contact
*CAT: n
*SEM: twoRel[rel=no_+_contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: no_+_contact
*CAT: n
*SEM: orRel[rel=no_+_contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_connector
*CAT: n
*SEM: unaryRel[rel=fixed_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_connector
*CAT: n
*SEM: twoRel[rel=fixed_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_connector
*CAT: n
*SEM: twoRel[rel=fixed_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_connector
*CAT: n
*SEM: orRel[rel=fixed_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_well
*CAT: n
*SEM: unaryRel[rel=as_+_well]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_well
*CAT: n
*SEM: twoRel[rel=as_+_well]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_well
*CAT: n
*SEM: twoRel[rel=as_+_well]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_well
*CAT: n
*SEM: orRel[rel=as_+_well]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: device
*CAT: n
*SEM: unaryRel[rel=device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: device
*CAT: n
*SEM: twoRel[rel=device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: device
*CAT: n
*SEM: twoRel[rel=device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: device
*CAT: n
*SEM: orRel[rel=device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_spacer
*CAT: n
*SEM: unaryRel[rel=metallic_+_spacer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_spacer
*CAT: n
*SEM: twoRel[rel=metallic_+_spacer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_spacer
*CAT: n
*SEM: twoRel[rel=metallic_+_spacer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_spacer
*CAT: n
*SEM: orRel[rel=metallic_+_spacer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contact
*CAT: n
*SEM: unaryRel[rel=socket_+_contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contact
*CAT: n
*SEM: twoRel[rel=socket_+_contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contact
*CAT: n
*SEM: twoRel[rel=socket_+_contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contact
*CAT: n
*SEM: orRel[rel=socket_+_contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435_+_bracket
*CAT: n
*SEM: unaryRel[rel=asne_+_0435_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435_+_bracket
*CAT: n
*SEM: twoRel[rel=asne_+_0435_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435_+_bracket
*CAT: n
*SEM: twoRel[rel=asne_+_0435_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435_+_bracket
*CAT: n
*SEM: orRel[rel=asne_+_0435_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_bonded_+_bracket
*CAT: n
*SEM: unaryRel[rel=adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_bonded_+_bracket
*CAT: n
*SEM: twoRel[rel=adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_bonded_+_bracket
*CAT: n
*SEM: twoRel[rel=adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_bonded_+_bracket
*CAT: n
*SEM: orRel[rel=adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: table
*CAT: n
*SEM: unaryRel[rel=table]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: table
*CAT: n
*SEM: twoRel[rel=table]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: table
*CAT: n
*SEM: twoRel[rel=table]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: table
*CAT: n
*SEM: orRel[rel=table]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: type_+_aluminium_+_wire
*CAT: n
*SEM: unaryRel[rel=type_+_aluminium_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: type_+_aluminium_+_wire
*CAT: n
*SEM: twoRel[rel=type_+_aluminium_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: type_+_aluminium_+_wire
*CAT: n
*SEM: twoRel[rel=type_+_aluminium_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: type_+_aluminium_+_wire
*CAT: n
*SEM: orRel[rel=type_+_aluminium_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drilled_+_nuts
*CAT: n
*SEM: unaryRel[rel=drilled_+_nuts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drilled_+_nuts
*CAT: n
*SEM: twoRel[rel=drilled_+_nuts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drilled_+_nuts
*CAT: n
*SEM: twoRel[rel=drilled_+_nuts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drilled_+_nuts
*CAT: n
*SEM: orRel[rel=drilled_+_nuts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_kink
*CAT: n
*SEM: unaryRel[rel=any_+_kink]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_kink
*CAT: n
*SEM: twoRel[rel=any_+_kink]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_kink
*CAT: n
*SEM: twoRel[rel=any_+_kink]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_kink
*CAT: n
*SEM: orRel[rel=any_+_kink]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 100mm
*CAT: n
*SEM: unaryRel[rel=100mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 100mm
*CAT: n
*SEM: twoRel[rel=100mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 100mm
*CAT: n
*SEM: twoRel[rel=100mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 100mm
*CAT: n
*SEM: orRel[rel=100mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movement
*CAT: n
*SEM: unaryRel[rel=movement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movement
*CAT: n
*SEM: twoRel[rel=movement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movement
*CAT: n
*SEM: twoRel[rel=movement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movement
*CAT: n
*SEM: orRel[rel=movement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_-_colon_-__+_closed_+_cover_+_preventing
*CAT: n
*SEM: unaryRel[rel=swamp_-_colon_-__+_closed_+_cover_+_preventing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_-_colon_-__+_closed_+_cover_+_preventing
*CAT: n
*SEM: twoRel[rel=swamp_-_colon_-__+_closed_+_cover_+_preventing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_-_colon_-__+_closed_+_cover_+_preventing
*CAT: n
*SEM: twoRel[rel=swamp_-_colon_-__+_closed_+_cover_+_preventing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_-_colon_-__+_closed_+_cover_+_preventing
*CAT: n
*SEM: orRel[rel=swamp_-_colon_-__+_closed_+_cover_+_preventing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 8_+_to_+_4
*CAT: n
*SEM: unaryRel[rel=8_+_to_+_4]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 8_+_to_+_4
*CAT: n
*SEM: twoRel[rel=8_+_to_+_4]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 8_+_to_+_4
*CAT: n
*SEM: twoRel[rel=8_+_to_+_4]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 8_+_to_+_4
*CAT: n
*SEM: orRel[rel=8_+_to_+_4]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_end
*CAT: n
*SEM: unaryRel[rel=pipe_+_end]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_end
*CAT: n
*SEM: twoRel[rel=pipe_+_end]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_end
*CAT: n
*SEM: twoRel[rel=pipe_+_end]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_end
*CAT: n
*SEM: orRel[rel=pipe_+_end]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptacles
*CAT: n
*SEM: unaryRel[rel=receptacles]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptacles
*CAT: n
*SEM: twoRel[rel=receptacles]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptacles
*CAT: n
*SEM: twoRel[rel=receptacles]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptacles
*CAT: n
*SEM: orRel[rel=receptacles]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperatur
*CAT: n
*SEM: unaryRel[rel=temperatur]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperatur
*CAT: n
*SEM: twoRel[rel=temperatur]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperatur
*CAT: n
*SEM: twoRel[rel=temperatur]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperatur
*CAT: n
*SEM: orRel[rel=temperatur]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5515
*CAT: n
*SEM: unaryRel[rel=nsa_+_5515]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5515
*CAT: n
*SEM: twoRel[rel=nsa_+_5515]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5515
*CAT: n
*SEM: twoRel[rel=nsa_+_5515]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5515
*CAT: n
*SEM: orRel[rel=nsa_+_5515]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: unaryRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: twoRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: twoRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: orRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc
*CAT: n
*SEM: unaryRel[rel=arinc]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc
*CAT: n
*SEM: twoRel[rel=arinc]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc
*CAT: n
*SEM: twoRel[rel=arinc]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc
*CAT: n
*SEM: orRel[rel=arinc]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0470_+_label_+_near_+_each_+_electrical_+_item
*CAT: n
*SEM: unaryRel[rel=asne0470_+_label_+_near_+_each_+_electrical_+_item]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0470_+_label_+_near_+_each_+_electrical_+_item
*CAT: n
*SEM: twoRel[rel=asne0470_+_label_+_near_+_each_+_electrical_+_item]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0470_+_label_+_near_+_each_+_electrical_+_item
*CAT: n
*SEM: twoRel[rel=asne0470_+_label_+_near_+_each_+_electrical_+_item]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0470_+_label_+_near_+_each_+_electrical_+_item
*CAT: n
*SEM: orRel[rel=asne0470_+_label_+_near_+_each_+_electrical_+_item]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adaptation
*CAT: n
*SEM: unaryRel[rel=adaptation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adaptation
*CAT: n
*SEM: twoRel[rel=adaptation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adaptation
*CAT: n
*SEM: twoRel[rel=adaptation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adaptation
*CAT: n
*SEM: orRel[rel=adaptation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_moduls
*CAT: n
*SEM: unaryRel[rel=efcs_+_moduls]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_moduls
*CAT: n
*SEM: twoRel[rel=efcs_+_moduls]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_moduls
*CAT: n
*SEM: twoRel[rel=efcs_+_moduls]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_moduls
*CAT: n
*SEM: orRel[rel=efcs_+_moduls]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius
*CAT: n
*SEM: unaryRel[rel=minimum_+_bend_+_radius]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius
*CAT: n
*SEM: twoRel[rel=minimum_+_bend_+_radius]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius
*CAT: n
*SEM: twoRel[rel=minimum_+_bend_+_radius]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius
*CAT: n
*SEM: orRel[rel=minimum_+_bend_+_radius]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: left_+_hand_+_side_+_of_+_the_+_equipment_-_backslash_-_standard_+_item_+__-_opensb_-_when_+_looking_+_at_+_the_+_front_+_side_-_backslash_-_facing_+_connections_-_closesb_-__+_other_+_positions_+_are_+_permitted
*CAT: n
*SEM: unaryRel[rel=left_+_hand_+_side_+_of_+_the_+_equipment_-_backslash_-_standard_+_item_+__-_opensb_-_when_+_looking_+_at_+_the_+_front_+_side_-_backslash_-_facing_+_connections_-_closesb_-__+_other_+_positions_+_are_+_permitted]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: left_+_hand_+_side_+_of_+_the_+_equipment_-_backslash_-_standard_+_item_+__-_opensb_-_when_+_looking_+_at_+_the_+_front_+_side_-_backslash_-_facing_+_connections_-_closesb_-__+_other_+_positions_+_are_+_permitted
*CAT: n
*SEM: twoRel[rel=left_+_hand_+_side_+_of_+_the_+_equipment_-_backslash_-_standard_+_item_+__-_opensb_-_when_+_looking_+_at_+_the_+_front_+_side_-_backslash_-_facing_+_connections_-_closesb_-__+_other_+_positions_+_are_+_permitted]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: left_+_hand_+_side_+_of_+_the_+_equipment_-_backslash_-_standard_+_item_+__-_opensb_-_when_+_looking_+_at_+_the_+_front_+_side_-_backslash_-_facing_+_connections_-_closesb_-__+_other_+_positions_+_are_+_permitted
*CAT: n
*SEM: twoRel[rel=left_+_hand_+_side_+_of_+_the_+_equipment_-_backslash_-_standard_+_item_+__-_opensb_-_when_+_looking_+_at_+_the_+_front_+_side_-_backslash_-_facing_+_connections_-_closesb_-__+_other_+_positions_+_are_+_permitted]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: left_+_hand_+_side_+_of_+_the_+_equipment_-_backslash_-_standard_+_item_+__-_opensb_-_when_+_looking_+_at_+_the_+_front_+_side_-_backslash_-_facing_+_connections_-_closesb_-__+_other_+_positions_+_are_+_permitted
*CAT: n
*SEM: orRel[rel=left_+_hand_+_side_+_of_+_the_+_equipment_-_backslash_-_standard_+_item_+__-_opensb_-_when_+_looking_+_at_+_the_+_front_+_side_-_backslash_-_facing_+_connections_-_closesb_-__+_other_+_positions_+_are_+_permitted]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=one_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=one_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=one_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=one_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_9504_+_boot
*CAT: n
*SEM: unaryRel[rel=nsa_+_9504_+_boot]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_9504_+_boot
*CAT: n
*SEM: twoRel[rel=nsa_+_9504_+_boot]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_9504_+_boot
*CAT: n
*SEM: twoRel[rel=nsa_+_9504_+_boot]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_9504_+_boot
*CAT: n
*SEM: orRel[rel=nsa_+_9504_+_boot]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f01
*CAT: n
*SEM: unaryRel[rel=abs1576-f01]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f01
*CAT: n
*SEM: twoRel[rel=abs1576-f01]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f01
*CAT: n
*SEM: twoRel[rel=abs1576-f01]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f01
*CAT: n
*SEM: orRel[rel=abs1576-f01]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_wires_+_of_+_gauge_+_20
*CAT: n
*SEM: unaryRel[rel=1_+_wires_+_of_+_gauge_+_20]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_wires_+_of_+_gauge_+_20
*CAT: n
*SEM: twoRel[rel=1_+_wires_+_of_+_gauge_+_20]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_wires_+_of_+_gauge_+_20
*CAT: n
*SEM: twoRel[rel=1_+_wires_+_of_+_gauge_+_20]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_wires_+_of_+_gauge_+_20
*CAT: n
*SEM: orRel[rel=1_+_wires_+_of_+_gauge_+_20]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: entire_+_length
*CAT: n
*SEM: unaryRel[rel=entire_+_length]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: entire_+_length
*CAT: n
*SEM: twoRel[rel=entire_+_length]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: entire_+_length
*CAT: n
*SEM: twoRel[rel=entire_+_length]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: entire_+_length
*CAT: n
*SEM: orRel[rel=entire_+_length]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: umbrella_+_when
*CAT: n
*SEM: unaryRel[rel=umbrella_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: umbrella_+_when
*CAT: n
*SEM: twoRel[rel=umbrella_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: umbrella_+_when
*CAT: n
*SEM: twoRel[rel=umbrella_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: umbrella_+_when
*CAT: n
*SEM: orRel[rel=umbrella_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_link
*CAT: n
*SEM: unaryRel[rel=bonding_+_link]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_link
*CAT: n
*SEM: twoRel[rel=bonding_+_link]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_link
*CAT: n
*SEM: twoRel[rel=bonding_+_link]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_link
*CAT: n
*SEM: orRel[rel=bonding_+_link]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration_+_zones_+_class_+_rs
*CAT: n
*SEM: unaryRel[rel=vibration_+_zones_+_class_+_rs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration_+_zones_+_class_+_rs
*CAT: n
*SEM: twoRel[rel=vibration_+_zones_+_class_+_rs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration_+_zones_+_class_+_rs
*CAT: n
*SEM: twoRel[rel=vibration_+_zones_+_class_+_rs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration_+_zones_+_class_+_rs
*CAT: n
*SEM: orRel[rel=vibration_+_zones_+_class_+_rs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_bifurcation_+_angle
*CAT: n
*SEM: unaryRel[rel=low_+_bifurcation_+_angle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_bifurcation_+_angle
*CAT: n
*SEM: twoRel[rel=low_+_bifurcation_+_angle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_bifurcation_+_angle
*CAT: n
*SEM: twoRel[rel=low_+_bifurcation_+_angle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_bifurcation_+_angle
*CAT: n
*SEM: orRel[rel=low_+_bifurcation_+_angle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_protection_+_13_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=additional_+_protection_+_13_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_protection_+_13_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=additional_+_protection_+_13_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_protection_+_13_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=additional_+_protection_+_13_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_protection_+_13_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=additional_+_protection_+_13_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one
*CAT: n
*SEM: unaryRel[rel=one]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one
*CAT: n
*SEM: twoRel[rel=one]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one
*CAT: n
*SEM: twoRel[rel=one]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one
*CAT: n
*SEM: orRel[rel=one]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermally_+_isolated_+_flanged_+_bulkhead_+_unions
*CAT: n
*SEM: unaryRel[rel=thermally_+_isolated_+_flanged_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermally_+_isolated_+_flanged_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=thermally_+_isolated_+_flanged_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermally_+_isolated_+_flanged_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=thermally_+_isolated_+_flanged_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermally_+_isolated_+_flanged_+_bulkhead_+_unions
*CAT: n
*SEM: orRel[rel=thermally_+_isolated_+_flanged_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flange_+_standard_+_as-1895
*CAT: n
*SEM: unaryRel[rel=flange_+_standard_+_as-1895]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flange_+_standard_+_as-1895
*CAT: n
*SEM: twoRel[rel=flange_+_standard_+_as-1895]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flange_+_standard_+_as-1895
*CAT: n
*SEM: twoRel[rel=flange_+_standard_+_as-1895]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flange_+_standard_+_as-1895
*CAT: n
*SEM: orRel[rel=flange_+_standard_+_as-1895]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position
*CAT: n
*SEM: unaryRel[rel=position]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position
*CAT: n
*SEM: twoRel[rel=position]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position
*CAT: n
*SEM: twoRel[rel=position]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position
*CAT: n
*SEM: orRel[rel=position]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: test_+_optinaonal_+_used_+_connectors_+__-_opensb_-_full_+_provisions_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=test_+_optinaonal_+_used_+_connectors_+__-_opensb_-_full_+_provisions_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: test_+_optinaonal_+_used_+_connectors_+__-_opensb_-_full_+_provisions_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=test_+_optinaonal_+_used_+_connectors_+__-_opensb_-_full_+_provisions_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: test_+_optinaonal_+_used_+_connectors_+__-_opensb_-_full_+_provisions_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=test_+_optinaonal_+_used_+_connectors_+__-_opensb_-_full_+_provisions_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: test_+_optinaonal_+_used_+_connectors_+__-_opensb_-_full_+_provisions_-_closesb_-_
*CAT: n
*SEM: orRel[rel=test_+_optinaonal_+_used_+_connectors_+__-_opensb_-_full_+_provisions_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5151d6-035_+_pipes
*CAT: n
*SEM: unaryRel[rel=abs5151d6-035_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5151d6-035_+_pipes
*CAT: n
*SEM: twoRel[rel=abs5151d6-035_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5151d6-035_+_pipes
*CAT: n
*SEM: twoRel[rel=abs5151d6-035_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5151d6-035_+_pipes
*CAT: n
*SEM: orRel[rel=abs5151d6-035_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_aluminium_+_cables_-_backslash_-_wires
*CAT: n
*SEM: unaryRel[rel=non_+_aluminium_+_cables_-_backslash_-_wires]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_aluminium_+_cables_-_backslash_-_wires
*CAT: n
*SEM: twoRel[rel=non_+_aluminium_+_cables_-_backslash_-_wires]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_aluminium_+_cables_-_backslash_-_wires
*CAT: n
*SEM: twoRel[rel=non_+_aluminium_+_cables_-_backslash_-_wires]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_aluminium_+_cables_-_backslash_-_wires
*CAT: n
*SEM: orRel[rel=non_+_aluminium_+_cables_-_backslash_-_wires]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum
*CAT: n
*SEM: unaryRel[rel=maximum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum
*CAT: n
*SEM: twoRel[rel=maximum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum
*CAT: n
*SEM: twoRel[rel=maximum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum
*CAT: n
*SEM: orRel[rel=maximum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: these_+_repair_+_zones
*CAT: n
*SEM: unaryRel[rel=these_+_repair_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: these_+_repair_+_zones
*CAT: n
*SEM: twoRel[rel=these_+_repair_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: these_+_repair_+_zones
*CAT: n
*SEM: twoRel[rel=these_+_repair_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: these_+_repair_+_zones
*CAT: n
*SEM: orRel[rel=these_+_repair_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_adjacent_+_bends
*CAT: n
*SEM: unaryRel[rel=two_+_adjacent_+_bends]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_adjacent_+_bends
*CAT: n
*SEM: twoRel[rel=two_+_adjacent_+_bends]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_adjacent_+_bends
*CAT: n
*SEM: twoRel[rel=two_+_adjacent_+_bends]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_adjacent_+_bends
*CAT: n
*SEM: orRel[rel=two_+_adjacent_+_bends]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: trailing_+_edge
*CAT: n
*SEM: unaryRel[rel=trailing_+_edge]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: trailing_+_edge
*CAT: n
*SEM: twoRel[rel=trailing_+_edge]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: trailing_+_edge
*CAT: n
*SEM: twoRel[rel=trailing_+_edge]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: trailing_+_edge
*CAT: n
*SEM: orRel[rel=trailing_+_edge]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: onto_+_a_+_second_+_intermediate_+_bracket
*CAT: n
*SEM: unaryRel[rel=onto_+_a_+_second_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: onto_+_a_+_second_+_intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=onto_+_a_+_second_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: onto_+_a_+_second_+_intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=onto_+_a_+_second_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: onto_+_a_+_second_+_intermediate_+_bracket
*CAT: n
*SEM: orRel[rel=onto_+_a_+_second_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: able_+_to
*CAT: n
*SEM: unaryRel[rel=able_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: able_+_to
*CAT: n
*SEM: twoRel[rel=able_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: able_+_to
*CAT: n
*SEM: twoRel[rel=able_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: able_+_to
*CAT: n
*SEM: orRel[rel=able_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_bend
*CAT: n
*SEM: unaryRel[rel=least_+_one_+_bend]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_bend
*CAT: n
*SEM: twoRel[rel=least_+_one_+_bend]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_bend
*CAT: n
*SEM: twoRel[rel=least_+_one_+_bend]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_bend
*CAT: n
*SEM: orRel[rel=least_+_one_+_bend]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+_routes
*CAT: n
*SEM: unaryRel[rel=g_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+_routes
*CAT: n
*SEM: twoRel[rel=g_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+_routes
*CAT: n
*SEM: twoRel[rel=g_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+_routes
*CAT: n
*SEM: orRel[rel=g_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_color
*CAT: n
*SEM: unaryRel[rel=black_+_color]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_color
*CAT: n
*SEM: twoRel[rel=black_+_color]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_color
*CAT: n
*SEM: twoRel[rel=black_+_color]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_color
*CAT: n
*SEM: orRel[rel=black_+_color]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539_+_protective_+_bobbin
*CAT: n
*SEM: unaryRel[rel=nsa_+_5539_+_protective_+_bobbin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539_+_protective_+_bobbin
*CAT: n
*SEM: twoRel[rel=nsa_+_5539_+_protective_+_bobbin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539_+_protective_+_bobbin
*CAT: n
*SEM: twoRel[rel=nsa_+_5539_+_protective_+_bobbin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539_+_protective_+_bobbin
*CAT: n
*SEM: orRel[rel=nsa_+_5539_+_protective_+_bobbin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3660_+_backshell
*CAT: n
*SEM: unaryRel[rel=en3660_+_backshell]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3660_+_backshell
*CAT: n
*SEM: twoRel[rel=en3660_+_backshell]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3660_+_backshell
*CAT: n
*SEM: twoRel[rel=en3660_+_backshell]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3660_+_backshell
*CAT: n
*SEM: orRel[rel=en3660_+_backshell]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l_+__-_greaterThan_-__+__-_equalto_-_150mm
*CAT: n
*SEM: unaryRel[rel=length_+_l_+__-_greaterThan_-__+__-_equalto_-_150mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l_+__-_greaterThan_-__+__-_equalto_-_150mm
*CAT: n
*SEM: twoRel[rel=length_+_l_+__-_greaterThan_-__+__-_equalto_-_150mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l_+__-_greaterThan_-__+__-_equalto_-_150mm
*CAT: n
*SEM: twoRel[rel=length_+_l_+__-_greaterThan_-__+__-_equalto_-_150mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l_+__-_greaterThan_-__+__-_equalto_-_150mm
*CAT: n
*SEM: orRel[rel=length_+_l_+__-_greaterThan_-__+__-_equalto_-_150mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_attachment_+_device_+_minimum
*CAT: n
*SEM: unaryRel[rel=one_+_attachment_+_device_+_minimum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_attachment_+_device_+_minimum
*CAT: n
*SEM: twoRel[rel=one_+_attachment_+_device_+_minimum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_attachment_+_device_+_minimum
*CAT: n
*SEM: twoRel[rel=one_+_attachment_+_device_+_minimum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_attachment_+_device_+_minimum
*CAT: n
*SEM: orRel[rel=one_+_attachment_+_device_+_minimum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1._+_cable_+_identification
*CAT: n
*SEM: unaryRel[rel=1._+_cable_+_identification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1._+_cable_+_identification
*CAT: n
*SEM: twoRel[rel=1._+_cable_+_identification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1._+_cable_+_identification
*CAT: n
*SEM: twoRel[rel=1._+_cable_+_identification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1._+_cable_+_identification
*CAT: n
*SEM: orRel[rel=1._+_cable_+_identification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway
*CAT: n
*SEM: unaryRel[rel=raceway]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway
*CAT: n
*SEM: twoRel[rel=raceway]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway
*CAT: n
*SEM: twoRel[rel=raceway]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway
*CAT: n
*SEM: orRel[rel=raceway]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_single_+_pipe
*CAT: n
*SEM: unaryRel[rel=one_+_single_+_pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_single_+_pipe
*CAT: n
*SEM: twoRel[rel=one_+_single_+_pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_single_+_pipe
*CAT: n
*SEM: twoRel[rel=one_+_single_+_pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_single_+_pipe
*CAT: n
*SEM: orRel[rel=one_+_single_+_pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: direction_+_that_+_connectors_+_do_+_not_+_face_+_upwards._+_taking_+_into_+_account_+_heat_+_dissipation
*CAT: n
*SEM: unaryRel[rel=direction_+_that_+_connectors_+_do_+_not_+_face_+_upwards._+_taking_+_into_+_account_+_heat_+_dissipation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: direction_+_that_+_connectors_+_do_+_not_+_face_+_upwards._+_taking_+_into_+_account_+_heat_+_dissipation
*CAT: n
*SEM: twoRel[rel=direction_+_that_+_connectors_+_do_+_not_+_face_+_upwards._+_taking_+_into_+_account_+_heat_+_dissipation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: direction_+_that_+_connectors_+_do_+_not_+_face_+_upwards._+_taking_+_into_+_account_+_heat_+_dissipation
*CAT: n
*SEM: twoRel[rel=direction_+_that_+_connectors_+_do_+_not_+_face_+_upwards._+_taking_+_into_+_account_+_heat_+_dissipation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: direction_+_that_+_connectors_+_do_+_not_+_face_+_upwards._+_taking_+_into_+_account_+_heat_+_dissipation
*CAT: n
*SEM: orRel[rel=direction_+_that_+_connectors_+_do_+_not_+_face_+_upwards._+_taking_+_into_+_account_+_heat_+_dissipation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tightening_+_torques_-_semicolon_-__+_vibration_-_semicolon_-__+_loads_+_due
*CAT: n
*SEM: unaryRel[rel=tightening_+_torques_-_semicolon_-__+_vibration_-_semicolon_-__+_loads_+_due]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tightening_+_torques_-_semicolon_-__+_vibration_-_semicolon_-__+_loads_+_due
*CAT: n
*SEM: twoRel[rel=tightening_+_torques_-_semicolon_-__+_vibration_-_semicolon_-__+_loads_+_due]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tightening_+_torques_-_semicolon_-__+_vibration_-_semicolon_-__+_loads_+_due
*CAT: n
*SEM: twoRel[rel=tightening_+_torques_-_semicolon_-__+_vibration_-_semicolon_-__+_loads_+_due]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tightening_+_torques_-_semicolon_-__+_vibration_-_semicolon_-__+_loads_+_due
*CAT: n
*SEM: orRel[rel=tightening_+_torques_-_semicolon_-__+_vibration_-_semicolon_-__+_loads_+_due]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vg
*CAT: n
*SEM: unaryRel[rel=vg]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vg
*CAT: n
*SEM: twoRel[rel=vg]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vg
*CAT: n
*SEM: twoRel[rel=vg]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vg
*CAT: n
*SEM: orRel[rel=vg]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_pipes
*CAT: n
*SEM: unaryRel[rel=2_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_pipes
*CAT: n
*SEM: twoRel[rel=2_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_pipes
*CAT: n
*SEM: twoRel[rel=2_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_pipes
*CAT: n
*SEM: orRel[rel=2_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0929-006_+_optical_+_dummy_+_receptable
*CAT: n
*SEM: unaryRel[rel=abs0929-006_+_optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0929-006_+_optical_+_dummy_+_receptable
*CAT: n
*SEM: twoRel[rel=abs0929-006_+_optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0929-006_+_optical_+_dummy_+_receptable
*CAT: n
*SEM: twoRel[rel=abs0929-006_+_optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0929-006_+_optical_+_dummy_+_receptable
*CAT: n
*SEM: orRel[rel=abs0929-006_+_optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bus_+_bar_+_to
*CAT: n
*SEM: unaryRel[rel=bus_+_bar_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bus_+_bar_+_to
*CAT: n
*SEM: twoRel[rel=bus_+_bar_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bus_+_bar_+_to
*CAT: n
*SEM: twoRel[rel=bus_+_bar_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bus_+_bar_+_to
*CAT: n
*SEM: orRel[rel=bus_+_bar_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal
*CAT: n
*SEM: unaryRel[rel=terminal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal
*CAT: n
*SEM: twoRel[rel=terminal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal
*CAT: n
*SEM: twoRel[rel=terminal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal
*CAT: n
*SEM: orRel[rel=terminal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongation_+_of_+_pipes
*CAT: n
*SEM: unaryRel[rel=elongation_+_of_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongation_+_of_+_pipes
*CAT: n
*SEM: twoRel[rel=elongation_+_of_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongation_+_of_+_pipes
*CAT: n
*SEM: twoRel[rel=elongation_+_of_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongation_+_of_+_pipes
*CAT: n
*SEM: orRel[rel=elongation_+_of_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+_entrance
*CAT: n
*SEM: unaryRel[rel=conduit_+_entrance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+_entrance
*CAT: n
*SEM: twoRel[rel=conduit_+_entrance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+_entrance
*CAT: n
*SEM: twoRel[rel=conduit_+_entrance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+_entrance
*CAT: n
*SEM: orRel[rel=conduit_+_entrance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spec_+_tna00710003aa011
*CAT: n
*SEM: unaryRel[rel=spec_+_tna00710003aa011]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spec_+_tna00710003aa011
*CAT: n
*SEM: twoRel[rel=spec_+_tna00710003aa011]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spec_+_tna00710003aa011
*CAT: n
*SEM: twoRel[rel=spec_+_tna00710003aa011]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spec_+_tna00710003aa011
*CAT: n
*SEM: orRel[rel=spec_+_tna00710003aa011]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: margin
*CAT: n
*SEM: unaryRel[rel=margin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: margin
*CAT: n
*SEM: twoRel[rel=margin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: margin
*CAT: n
*SEM: twoRel[rel=margin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: margin
*CAT: n
*SEM: orRel[rel=margin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fflz
*CAT: n
*SEM: unaryRel[rel=fflz]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fflz
*CAT: n
*SEM: twoRel[rel=fflz]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fflz
*CAT: n
*SEM: twoRel[rel=fflz]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fflz
*CAT: n
*SEM: orRel[rel=fflz]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5147_+_metallic
*CAT: n
*SEM: unaryRel[rel=abs5147_+_metallic]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5147_+_metallic
*CAT: n
*SEM: twoRel[rel=abs5147_+_metallic]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5147_+_metallic
*CAT: n
*SEM: twoRel[rel=abs5147_+_metallic]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5147_+_metallic
*CAT: n
*SEM: orRel[rel=abs5147_+_metallic]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_core
*CAT: n
*SEM: unaryRel[rel=each_+_core]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_core
*CAT: n
*SEM: twoRel[rel=each_+_core]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_core
*CAT: n
*SEM: twoRel[rel=each_+_core]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_core
*CAT: n
*SEM: orRel[rel=each_+_core]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_probe
*CAT: n
*SEM: unaryRel[rel=fuel_+_probe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_probe
*CAT: n
*SEM: twoRel[rel=fuel_+_probe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_probe
*CAT: n
*SEM: twoRel[rel=fuel_+_probe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_probe
*CAT: n
*SEM: orRel[rel=fuel_+_probe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_drain_+_pipes_+_which_+_are_+_fixed_+_directly
*CAT: n
*SEM: unaryRel[rel=case_+_drain_+_pipes_+_which_+_are_+_fixed_+_directly]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_drain_+_pipes_+_which_+_are_+_fixed_+_directly
*CAT: n
*SEM: twoRel[rel=case_+_drain_+_pipes_+_which_+_are_+_fixed_+_directly]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_drain_+_pipes_+_which_+_are_+_fixed_+_directly
*CAT: n
*SEM: twoRel[rel=case_+_drain_+_pipes_+_which_+_are_+_fixed_+_directly]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_drain_+_pipes_+_which_+_are_+_fixed_+_directly
*CAT: n
*SEM: orRel[rel=case_+_drain_+_pipes_+_which_+_are_+_fixed_+_directly]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance_+_between_+_saddle_+_clamps
*CAT: n
*SEM: unaryRel[rel=clearance_+_between_+_saddle_+_clamps]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance_+_between_+_saddle_+_clamps
*CAT: n
*SEM: twoRel[rel=clearance_+_between_+_saddle_+_clamps]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance_+_between_+_saddle_+_clamps
*CAT: n
*SEM: twoRel[rel=clearance_+_between_+_saddle_+_clamps]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance_+_between_+_saddle_+_clamps
*CAT: n
*SEM: orRel[rel=clearance_+_between_+_saddle_+_clamps]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_conduit
*CAT: n
*SEM: unaryRel[rel=shielded_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_conduit
*CAT: n
*SEM: twoRel[rel=shielded_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_conduit
*CAT: n
*SEM: twoRel[rel=shielded_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_conduit
*CAT: n
*SEM: orRel[rel=shielded_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6._+_tape
*CAT: n
*SEM: unaryRel[rel=6._+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6._+_tape
*CAT: n
*SEM: twoRel[rel=6._+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6._+_tape
*CAT: n
*SEM: twoRel[rel=6._+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6._+_tape
*CAT: n
*SEM: orRel[rel=6._+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1128
*CAT: n
*SEM: unaryRel[rel=abs1128]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1128
*CAT: n
*SEM: twoRel[rel=abs1128]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1128
*CAT: n
*SEM: twoRel[rel=abs1128]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1128
*CAT: n
*SEM: orRel[rel=abs1128]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_e-route
*CAT: n
*SEM: unaryRel[rel=each_+_e-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_e-route
*CAT: n
*SEM: twoRel[rel=each_+_e-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_e-route
*CAT: n
*SEM: twoRel[rel=each_+_e-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_e-route
*CAT: n
*SEM: orRel[rel=each_+_e-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius
*CAT: n
*SEM: unaryRel[rel=minimum_+_bend_+_radius]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius
*CAT: n
*SEM: twoRel[rel=minimum_+_bend_+_radius]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius
*CAT: n
*SEM: twoRel[rel=minimum_+_bend_+_radius]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius
*CAT: n
*SEM: orRel[rel=minimum_+_bend_+_radius]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive-bracket
*CAT: n
*SEM: unaryRel[rel=non_+_conductive-bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive-bracket
*CAT: n
*SEM: twoRel[rel=non_+_conductive-bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive-bracket
*CAT: n
*SEM: twoRel[rel=non_+_conductive-bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive-bracket
*CAT: n
*SEM: orRel[rel=non_+_conductive-bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_pitch_+_less
*CAT: n
*SEM: unaryRel[rel=attachment_+_pitch_+_less]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_pitch_+_less
*CAT: n
*SEM: twoRel[rel=attachment_+_pitch_+_less]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_pitch_+_less
*CAT: n
*SEM: twoRel[rel=attachment_+_pitch_+_less]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_pitch_+_less
*CAT: n
*SEM: orRel[rel=attachment_+_pitch_+_less]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+__-_smallerThan_-_
*CAT: n
*SEM: unaryRel[rel=length_+__-_smallerThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+__-_smallerThan_-_
*CAT: n
*SEM: twoRel[rel=length_+__-_smallerThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+__-_smallerThan_-_
*CAT: n
*SEM: twoRel[rel=length_+__-_smallerThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+__-_smallerThan_-_
*CAT: n
*SEM: orRel[rel=length_+__-_smallerThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_of_+_d_+__-_smallerThan_-__-_equalto_-__+_580mm_+_in_+_fuselage
*CAT: n
*SEM: unaryRel[rel=maximum_+_pitch_+_of_+_d_+__-_smallerThan_-__-_equalto_-__+_580mm_+_in_+_fuselage]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_of_+_d_+__-_smallerThan_-__-_equalto_-__+_580mm_+_in_+_fuselage
*CAT: n
*SEM: twoRel[rel=maximum_+_pitch_+_of_+_d_+__-_smallerThan_-__-_equalto_-__+_580mm_+_in_+_fuselage]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_of_+_d_+__-_smallerThan_-__-_equalto_-__+_580mm_+_in_+_fuselage
*CAT: n
*SEM: twoRel[rel=maximum_+_pitch_+_of_+_d_+__-_smallerThan_-__-_equalto_-__+_580mm_+_in_+_fuselage]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_of_+_d_+__-_smallerThan_-__-_equalto_-__+_580mm_+_in_+_fuselage
*CAT: n
*SEM: orRel[rel=maximum_+_pitch_+_of_+_d_+__-_smallerThan_-__-_equalto_-__+_580mm_+_in_+_fuselage]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_wire
*CAT: n
*SEM: unaryRel[rel=copper_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_wire
*CAT: n
*SEM: twoRel[rel=copper_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_wire
*CAT: n
*SEM: twoRel[rel=copper_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_wire
*CAT: n
*SEM: orRel[rel=copper_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: area_+_d_+__-_greaterThan_-__+__-_equalto_-_10_+_mm_+_when_+_the_+_bundle
*CAT: n
*SEM: unaryRel[rel=area_+_d_+__-_greaterThan_-__+__-_equalto_-_10_+_mm_+_when_+_the_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: area_+_d_+__-_greaterThan_-__+__-_equalto_-_10_+_mm_+_when_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=area_+_d_+__-_greaterThan_-__+__-_equalto_-_10_+_mm_+_when_+_the_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: area_+_d_+__-_greaterThan_-__+__-_equalto_-_10_+_mm_+_when_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=area_+_d_+__-_greaterThan_-__+__-_equalto_-_10_+_mm_+_when_+_the_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: area_+_d_+__-_greaterThan_-__+__-_equalto_-_10_+_mm_+_when_+_the_+_bundle
*CAT: n
*SEM: orRel[rel=area_+_d_+__-_greaterThan_-__+__-_equalto_-_10_+_mm_+_when_+_the_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_zones
*CAT: n
*SEM: unaryRel[rel=hazardous_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_zones
*CAT: n
*SEM: twoRel[rel=hazardous_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_zones
*CAT: n
*SEM: twoRel[rel=hazardous_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hazardous_+_zones
*CAT: n
*SEM: orRel[rel=hazardous_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: system_+_specialist
*CAT: n
*SEM: unaryRel[rel=system_+_specialist]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: system_+_specialist
*CAT: n
*SEM: twoRel[rel=system_+_specialist]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: system_+_specialist
*CAT: n
*SEM: twoRel[rel=system_+_specialist]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: system_+_specialist
*CAT: n
*SEM: orRel[rel=system_+_specialist]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: white_+_background
*CAT: n
*SEM: unaryRel[rel=white_+_background]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: white_+_background
*CAT: n
*SEM: twoRel[rel=white_+_background]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: white_+_background
*CAT: n
*SEM: twoRel[rel=white_+_background]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: white_+_background
*CAT: n
*SEM: orRel[rel=white_+_background]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_d
*CAT: n
*SEM: unaryRel[rel=diameter_+_d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_d
*CAT: n
*SEM: twoRel[rel=diameter_+_d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_d
*CAT: n
*SEM: twoRel[rel=diameter_+_d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_d
*CAT: n
*SEM: orRel[rel=diameter_+_d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thickness_+__-_greaterThan_-__+__-_equalto_-_2mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=thickness_+__-_greaterThan_-__+__-_equalto_-_2mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thickness_+__-_greaterThan_-__+__-_equalto_-_2mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=thickness_+__-_greaterThan_-__+__-_equalto_-_2mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thickness_+__-_greaterThan_-__+__-_equalto_-_2mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=thickness_+__-_greaterThan_-__+__-_equalto_-_2mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thickness_+__-_greaterThan_-__+__-_equalto_-_2mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=thickness_+__-_greaterThan_-__+__-_equalto_-_2mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_p-route
*CAT: n
*SEM: unaryRel[rel=commercial_+_p-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_p-route
*CAT: n
*SEM: twoRel[rel=commercial_+_p-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_p-route
*CAT: n
*SEM: twoRel[rel=commercial_+_p-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_p-route
*CAT: n
*SEM: orRel[rel=commercial_+_p-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sharp_+_edges
*CAT: n
*SEM: unaryRel[rel=sharp_+_edges]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sharp_+_edges
*CAT: n
*SEM: twoRel[rel=sharp_+_edges]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sharp_+_edges
*CAT: n
*SEM: twoRel[rel=sharp_+_edges]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sharp_+_edges
*CAT: n
*SEM: orRel[rel=sharp_+_edges]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_key_+_way
*CAT: n
*SEM: unaryRel[rel=master_+_key_+_way]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_key_+_way
*CAT: n
*SEM: twoRel[rel=master_+_key_+_way]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_key_+_way
*CAT: n
*SEM: twoRel[rel=master_+_key_+_way]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_key_+_way
*CAT: n
*SEM: orRel[rel=master_+_key_+_way]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l_-_equalto_-_50mm_+_+-_+_5mm_+_after_+_shrinking
*CAT: n
*SEM: unaryRel[rel=l_-_equalto_-_50mm_+_+-_+_5mm_+_after_+_shrinking]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l_-_equalto_-_50mm_+_+-_+_5mm_+_after_+_shrinking
*CAT: n
*SEM: twoRel[rel=l_-_equalto_-_50mm_+_+-_+_5mm_+_after_+_shrinking]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l_-_equalto_-_50mm_+_+-_+_5mm_+_after_+_shrinking
*CAT: n
*SEM: twoRel[rel=l_-_equalto_-_50mm_+_+-_+_5mm_+_after_+_shrinking]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l_-_equalto_-_50mm_+_+-_+_5mm_+_after_+_shrinking
*CAT: n
*SEM: orRel[rel=l_-_equalto_-_50mm_+_+-_+_5mm_+_after_+_shrinking]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx
*CAT: n
*SEM: unaryRel[rel=afdx]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx
*CAT: n
*SEM: twoRel[rel=afdx]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx
*CAT: n
*SEM: twoRel[rel=afdx]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx
*CAT: n
*SEM: orRel[rel=afdx]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: assembly
*CAT: n
*SEM: unaryRel[rel=assembly]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: assembly
*CAT: n
*SEM: twoRel[rel=assembly]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: assembly
*CAT: n
*SEM: twoRel[rel=assembly]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: assembly
*CAT: n
*SEM: orRel[rel=assembly]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_recommended_+_solution
*CAT: n
*SEM: unaryRel[rel=not_+_recommended_+_solution]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_recommended_+_solution
*CAT: n
*SEM: twoRel[rel=not_+_recommended_+_solution]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_recommended_+_solution
*CAT: n
*SEM: twoRel[rel=not_+_recommended_+_solution]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_recommended_+_solution
*CAT: n
*SEM: orRel[rel=not_+_recommended_+_solution]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_of_+_single_+_pipes
*CAT: n
*SEM: unaryRel[rel=routings_+_of_+_single_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_of_+_single_+_pipes
*CAT: n
*SEM: twoRel[rel=routings_+_of_+_single_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_of_+_single_+_pipes
*CAT: n
*SEM: twoRel[rel=routings_+_of_+_single_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_of_+_single_+_pipes
*CAT: n
*SEM: orRel[rel=routings_+_of_+_single_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: three-_+_pipes_+_tee-unions_+_connections
*CAT: n
*SEM: unaryRel[rel=three-_+_pipes_+_tee-unions_+_connections]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: three-_+_pipes_+_tee-unions_+_connections
*CAT: n
*SEM: twoRel[rel=three-_+_pipes_+_tee-unions_+_connections]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: three-_+_pipes_+_tee-unions_+_connections
*CAT: n
*SEM: twoRel[rel=three-_+_pipes_+_tee-unions_+_connections]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: three-_+_pipes_+_tee-unions_+_connections
*CAT: n
*SEM: orRel[rel=three-_+_pipes_+_tee-unions_+_connections]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_clearance_+_to_+_each_+_other
*CAT: n
*SEM: unaryRel[rel=basic_+_clearance_+_to_+_each_+_other]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_clearance_+_to_+_each_+_other
*CAT: n
*SEM: twoRel[rel=basic_+_clearance_+_to_+_each_+_other]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_clearance_+_to_+_each_+_other
*CAT: n
*SEM: twoRel[rel=basic_+_clearance_+_to_+_each_+_other]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_clearance_+_to_+_each_+_other
*CAT: n
*SEM: orRel[rel=basic_+_clearance_+_to_+_each_+_other]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_procedures
*CAT: n
*SEM: unaryRel[rel=specific_+_procedures]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_procedures
*CAT: n
*SEM: twoRel[rel=specific_+_procedures]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_procedures
*CAT: n
*SEM: twoRel[rel=specific_+_procedures]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_procedures
*CAT: n
*SEM: orRel[rel=specific_+_procedures]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: accessible
*CAT: n
*SEM: unaryRel[rel=accessible]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: accessible
*CAT: n
*SEM: twoRel[rel=accessible]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: accessible
*CAT: n
*SEM: twoRel[rel=accessible]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: accessible
*CAT: n
*SEM: orRel[rel=accessible]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size
*CAT: n
*SEM: unaryRel[rel=size]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size
*CAT: n
*SEM: twoRel[rel=size]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size
*CAT: n
*SEM: twoRel[rel=size]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size
*CAT: n
*SEM: orRel[rel=size]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0887
*CAT: n
*SEM: unaryRel[rel=abs0887]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0887
*CAT: n
*SEM: twoRel[rel=abs0887]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0887
*CAT: n
*SEM: twoRel[rel=abs0887]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0887
*CAT: n
*SEM: orRel[rel=abs0887]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: engine
*CAT: n
*SEM: unaryRel[rel=engine]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: engine
*CAT: n
*SEM: twoRel[rel=engine]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: engine
*CAT: n
*SEM: twoRel[rel=engine]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: engine
*CAT: n
*SEM: orRel[rel=engine]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings_+_where_+_the_+_clamps
*CAT: n
*SEM: unaryRel[rel=pipe_+_routings_+_where_+_the_+_clamps]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings_+_where_+_the_+_clamps
*CAT: n
*SEM: twoRel[rel=pipe_+_routings_+_where_+_the_+_clamps]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings_+_where_+_the_+_clamps
*CAT: n
*SEM: twoRel[rel=pipe_+_routings_+_where_+_the_+_clamps]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings_+_where_+_the_+_clamps
*CAT: n
*SEM: orRel[rel=pipe_+_routings_+_where_+_the_+_clamps]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: particular_+_risk_+_analysis
*CAT: n
*SEM: unaryRel[rel=particular_+_risk_+_analysis]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: particular_+_risk_+_analysis
*CAT: n
*SEM: twoRel[rel=particular_+_risk_+_analysis]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: particular_+_risk_+_analysis
*CAT: n
*SEM: twoRel[rel=particular_+_risk_+_analysis]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: particular_+_risk_+_analysis
*CAT: n
*SEM: orRel[rel=particular_+_risk_+_analysis]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: differently_+_sized_+_pipes
*CAT: n
*SEM: unaryRel[rel=differently_+_sized_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: differently_+_sized_+_pipes
*CAT: n
*SEM: twoRel[rel=differently_+_sized_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: differently_+_sized_+_pipes
*CAT: n
*SEM: twoRel[rel=differently_+_sized_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: differently_+_sized_+_pipes
*CAT: n
*SEM: orRel[rel=differently_+_sized_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: section_+_interfaces
*CAT: n
*SEM: unaryRel[rel=section_+_interfaces]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: section_+_interfaces
*CAT: n
*SEM: twoRel[rel=section_+_interfaces]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: section_+_interfaces
*CAT: n
*SEM: twoRel[rel=section_+_interfaces]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: section_+_interfaces
*CAT: n
*SEM: orRel[rel=section_+_interfaces]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_vt
*CAT: n
*SEM: unaryRel[rel=label_+_vt]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_vt
*CAT: n
*SEM: twoRel[rel=label_+_vt]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_vt
*CAT: n
*SEM: twoRel[rel=label_+_vt]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_vt
*CAT: n
*SEM: orRel[rel=label_+_vt]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2
*CAT: n
*SEM: unaryRel[rel=2]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2
*CAT: n
*SEM: twoRel[rel=2]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2
*CAT: n
*SEM: twoRel[rel=2]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2
*CAT: n
*SEM: orRel[rel=2]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asna2328_+__-_backslash_-__+_asna_+_2327_-_closesb_-__+_in_+_hot
*CAT: n
*SEM: unaryRel[rel=metallic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asna2328_+__-_backslash_-__+_asna_+_2327_-_closesb_-__+_in_+_hot]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asna2328_+__-_backslash_-__+_asna_+_2327_-_closesb_-__+_in_+_hot
*CAT: n
*SEM: twoRel[rel=metallic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asna2328_+__-_backslash_-__+_asna_+_2327_-_closesb_-__+_in_+_hot]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asna2328_+__-_backslash_-__+_asna_+_2327_-_closesb_-__+_in_+_hot
*CAT: n
*SEM: twoRel[rel=metallic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asna2328_+__-_backslash_-__+_asna_+_2327_-_closesb_-__+_in_+_hot]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asna2328_+__-_backslash_-__+_asna_+_2327_-_closesb_-__+_in_+_hot
*CAT: n
*SEM: orRel[rel=metallic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asna2328_+__-_backslash_-__+_asna_+_2327_-_closesb_-__+_in_+_hot]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends
*CAT: n
*SEM: unaryRel[rel=taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends
*CAT: n
*SEM: twoRel[rel=taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends
*CAT: n
*SEM: twoRel[rel=taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends
*CAT: n
*SEM: orRel[rel=taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_d_+__-_smallerThan_-__+__-_equalto_-_150mm
*CAT: n
*SEM: unaryRel[rel=maximum_+_d_+__-_smallerThan_-__+__-_equalto_-_150mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_d_+__-_smallerThan_-__+__-_equalto_-_150mm
*CAT: n
*SEM: twoRel[rel=maximum_+_d_+__-_smallerThan_-__+__-_equalto_-_150mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_d_+__-_smallerThan_-__+__-_equalto_-_150mm
*CAT: n
*SEM: twoRel[rel=maximum_+_d_+__-_smallerThan_-__+__-_equalto_-_150mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_d_+__-_smallerThan_-__+__-_equalto_-_150mm
*CAT: n
*SEM: orRel[rel=maximum_+_d_+__-_smallerThan_-__+__-_equalto_-_150mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_mechanical_+_ata
*CAT: n
*SEM: unaryRel[rel=any_+_other_+_mechanical_+_ata]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_mechanical_+_ata
*CAT: n
*SEM: twoRel[rel=any_+_other_+_mechanical_+_ata]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_mechanical_+_ata
*CAT: n
*SEM: twoRel[rel=any_+_other_+_mechanical_+_ata]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_mechanical_+_ata
*CAT: n
*SEM: orRel[rel=any_+_other_+_mechanical_+_ata]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: endible_+_marking
*CAT: n
*SEM: unaryRel[rel=endible_+_marking]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: endible_+_marking
*CAT: n
*SEM: twoRel[rel=endible_+_marking]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: endible_+_marking
*CAT: n
*SEM: twoRel[rel=endible_+_marking]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: endible_+_marking
*CAT: n
*SEM: orRel[rel=endible_+_marking]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m_+_to
*CAT: n
*SEM: unaryRel[rel=m_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m_+_to
*CAT: n
*SEM: twoRel[rel=m_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m_+_to
*CAT: n
*SEM: twoRel[rel=m_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m_+_to
*CAT: n
*SEM: orRel[rel=m_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_pressurised_+_zones
*CAT: n
*SEM: unaryRel[rel=two_+_pressurised_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_pressurised_+_zones
*CAT: n
*SEM: twoRel[rel=two_+_pressurised_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_pressurised_+_zones
*CAT: n
*SEM: twoRel[rel=two_+_pressurised_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_pressurised_+_zones
*CAT: n
*SEM: orRel[rel=two_+_pressurised_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_zoning
*CAT: n
*SEM: unaryRel[rel=specific_+_zoning]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_zoning
*CAT: n
*SEM: twoRel[rel=specific_+_zoning]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_zoning
*CAT: n
*SEM: twoRel[rel=specific_+_zoning]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_zoning
*CAT: n
*SEM: orRel[rel=specific_+_zoning]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shrink_+_temperature_+_which_+_is_+_in_+_line
*CAT: n
*SEM: unaryRel[rel=shrink_+_temperature_+_which_+_is_+_in_+_line]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shrink_+_temperature_+_which_+_is_+_in_+_line
*CAT: n
*SEM: twoRel[rel=shrink_+_temperature_+_which_+_is_+_in_+_line]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shrink_+_temperature_+_which_+_is_+_in_+_line
*CAT: n
*SEM: twoRel[rel=shrink_+_temperature_+_which_+_is_+_in_+_line]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shrink_+_temperature_+_which_+_is_+_in_+_line
*CAT: n
*SEM: orRel[rel=shrink_+_temperature_+_which_+_is_+_in_+_line]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket_+_selection_+_tools
*CAT: n
*SEM: unaryRel[rel=bracket_+_selection_+_tools]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket_+_selection_+_tools
*CAT: n
*SEM: twoRel[rel=bracket_+_selection_+_tools]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket_+_selection_+_tools
*CAT: n
*SEM: twoRel[rel=bracket_+_selection_+_tools]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket_+_selection_+_tools
*CAT: n
*SEM: orRel[rel=bracket_+_selection_+_tools]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: outlets
*CAT: n
*SEM: unaryRel[rel=outlets]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: outlets
*CAT: n
*SEM: twoRel[rel=outlets]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: outlets
*CAT: n
*SEM: twoRel[rel=outlets]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: outlets
*CAT: n
*SEM: orRel[rel=outlets]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thickness_+_of_+_structure_+_at_+_edge_+_is_+_equal
*CAT: n
*SEM: unaryRel[rel=thickness_+_of_+_structure_+_at_+_edge_+_is_+_equal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thickness_+_of_+_structure_+_at_+_edge_+_is_+_equal
*CAT: n
*SEM: twoRel[rel=thickness_+_of_+_structure_+_at_+_edge_+_is_+_equal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thickness_+_of_+_structure_+_at_+_edge_+_is_+_equal
*CAT: n
*SEM: twoRel[rel=thickness_+_of_+_structure_+_at_+_edge_+_is_+_equal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thickness_+_of_+_structure_+_at_+_edge_+_is_+_equal
*CAT: n
*SEM: orRel[rel=thickness_+_of_+_structure_+_at_+_edge_+_is_+_equal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mm_+_system
*CAT: n
*SEM: unaryRel[rel=mm_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mm_+_system
*CAT: n
*SEM: twoRel[rel=mm_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mm_+_system
*CAT: n
*SEM: twoRel[rel=mm_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mm_+_system
*CAT: n
*SEM: orRel[rel=mm_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_programming
*CAT: n
*SEM: unaryRel[rel=pin_+_programming]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_programming
*CAT: n
*SEM: twoRel[rel=pin_+_programming]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_programming
*CAT: n
*SEM: twoRel[rel=pin_+_programming]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_programming
*CAT: n
*SEM: orRel[rel=pin_+_programming]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3739_+_rivet
*CAT: n
*SEM: unaryRel[rel=en3739_+_rivet]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3739_+_rivet
*CAT: n
*SEM: twoRel[rel=en3739_+_rivet]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3739_+_rivet
*CAT: n
*SEM: twoRel[rel=en3739_+_rivet]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3739_+_rivet
*CAT: n
*SEM: orRel[rel=en3739_+_rivet]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_below_+_route
*CAT: n
*SEM: unaryRel[rel=non_+_conductive_+_structure_+_below_+_route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_below_+_route
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure_+_below_+_route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_below_+_route
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure_+_below_+_route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_below_+_route
*CAT: n
*SEM: orRel[rel=non_+_conductive_+_structure_+_below_+_route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure_+__-_backslash_-__+_table
*CAT: n
*SEM: unaryRel[rel=attached_+_figure_+__-_backslash_-__+_table]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure_+__-_backslash_-__+_table
*CAT: n
*SEM: twoRel[rel=attached_+_figure_+__-_backslash_-__+_table]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure_+__-_backslash_-__+_table
*CAT: n
*SEM: twoRel[rel=attached_+_figure_+__-_backslash_-__+_table]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure_+__-_backslash_-__+_table
*CAT: n
*SEM: orRel[rel=attached_+_figure_+__-_backslash_-__+_table]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_positon
*CAT: n
*SEM: unaryRel[rel=horizontal_+_positon]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_positon
*CAT: n
*SEM: twoRel[rel=horizontal_+_positon]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_positon
*CAT: n
*SEM: twoRel[rel=horizontal_+_positon]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_positon
*CAT: n
*SEM: orRel[rel=horizontal_+_positon]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: never
*CAT: n
*SEM: unaryRel[rel=never]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: never
*CAT: n
*SEM: twoRel[rel=never]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: never
*CAT: n
*SEM: twoRel[rel=never]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: never
*CAT: n
*SEM: orRel[rel=never]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: c_+_is_+_fullfilled
*CAT: n
*SEM: unaryRel[rel=c_+_is_+_fullfilled]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: c_+_is_+_fullfilled
*CAT: n
*SEM: twoRel[rel=c_+_is_+_fullfilled]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: c_+_is_+_fullfilled
*CAT: n
*SEM: twoRel[rel=c_+_is_+_fullfilled]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: c_+_is_+_fullfilled
*CAT: n
*SEM: orRel[rel=c_+_is_+_fullfilled]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve
*CAT: n
*SEM: unaryRel[rel=closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve
*CAT: n
*SEM: twoRel[rel=closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve
*CAT: n
*SEM: twoRel[rel=closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve
*CAT: n
*SEM: orRel[rel=closed_-_backslash_-_convoluted_+_conduit_-_backslash_-_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_end_+_nsa936603
*CAT: n
*SEM: unaryRel[rel=each_+_end_+_nsa936603]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_end_+_nsa936603
*CAT: n
*SEM: twoRel[rel=each_+_end_+_nsa936603]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_end_+_nsa936603
*CAT: n
*SEM: twoRel[rel=each_+_end_+_nsa936603]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_end_+_nsa936603
*CAT: n
*SEM: orRel[rel=each_+_end_+_nsa936603]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation
*CAT: n
*SEM: unaryRel[rel=insulation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation
*CAT: n
*SEM: twoRel[rel=insulation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation
*CAT: n
*SEM: twoRel[rel=insulation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation
*CAT: n
*SEM: orRel[rel=insulation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relative_+_movement_+_to_+_a_+_minimum
*CAT: n
*SEM: unaryRel[rel=relative_+_movement_+_to_+_a_+_minimum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relative_+_movement_+_to_+_a_+_minimum
*CAT: n
*SEM: twoRel[rel=relative_+_movement_+_to_+_a_+_minimum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relative_+_movement_+_to_+_a_+_minimum
*CAT: n
*SEM: twoRel[rel=relative_+_movement_+_to_+_a_+_minimum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relative_+_movement_+_to_+_a_+_minimum
*CAT: n
*SEM: orRel[rel=relative_+_movement_+_to_+_a_+_minimum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.625_+_inches
*CAT: n
*SEM: unaryRel[rel=0.625_+_inches]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.625_+_inches
*CAT: n
*SEM: twoRel[rel=0.625_+_inches]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.625_+_inches
*CAT: n
*SEM: twoRel[rel=0.625_+_inches]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.625_+_inches
*CAT: n
*SEM: orRel[rel=0.625_+_inches]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removing_+_any_+_other_+_adjacentstructure_+_parts
*CAT: n
*SEM: unaryRel[rel=removing_+_any_+_other_+_adjacentstructure_+_parts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removing_+_any_+_other_+_adjacentstructure_+_parts
*CAT: n
*SEM: twoRel[rel=removing_+_any_+_other_+_adjacentstructure_+_parts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removing_+_any_+_other_+_adjacentstructure_+_parts
*CAT: n
*SEM: twoRel[rel=removing_+_any_+_other_+_adjacentstructure_+_parts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removing_+_any_+_other_+_adjacentstructure_+_parts
*CAT: n
*SEM: orRel[rel=removing_+_any_+_other_+_adjacentstructure_+_parts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_style_+_which
*CAT: n
*SEM: unaryRel[rel=interface_+_style_+_which]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_style_+_which
*CAT: n
*SEM: twoRel[rel=interface_+_style_+_which]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_style_+_which
*CAT: n
*SEM: twoRel[rel=interface_+_style_+_which]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_style_+_which
*CAT: n
*SEM: orRel[rel=interface_+_style_+_which]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: q-route
*CAT: n
*SEM: unaryRel[rel=q-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: q-route
*CAT: n
*SEM: twoRel[rel=q-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: q-route
*CAT: n
*SEM: twoRel[rel=q-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: q-route
*CAT: n
*SEM: orRel[rel=q-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansions.
*CAT: n
*SEM: unaryRel[rel=expansions.]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansions.
*CAT: n
*SEM: twoRel[rel=expansions.]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansions.
*CAT: n
*SEM: twoRel[rel=expansions.]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansions.
*CAT: n
*SEM: orRel[rel=expansions.]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_which_+_could_+_possibly_+_induce_+_constraints_+_between_+_two_+_fixed_+_points
*CAT: n
*SEM: unaryRel[rel=routings_+_which_+_could_+_possibly_+_induce_+_constraints_+_between_+_two_+_fixed_+_points]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_which_+_could_+_possibly_+_induce_+_constraints_+_between_+_two_+_fixed_+_points
*CAT: n
*SEM: twoRel[rel=routings_+_which_+_could_+_possibly_+_induce_+_constraints_+_between_+_two_+_fixed_+_points]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_which_+_could_+_possibly_+_induce_+_constraints_+_between_+_two_+_fixed_+_points
*CAT: n
*SEM: twoRel[rel=routings_+_which_+_could_+_possibly_+_induce_+_constraints_+_between_+_two_+_fixed_+_points]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_which_+_could_+_possibly_+_induce_+_constraints_+_between_+_two_+_fixed_+_points
*CAT: n
*SEM: orRel[rel=routings_+_which_+_could_+_possibly_+_induce_+_constraints_+_between_+_two_+_fixed_+_points]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5429_+_thermal_+_protection
*CAT: n
*SEM: unaryRel[rel=abs5429_+_thermal_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5429_+_thermal_+_protection
*CAT: n
*SEM: twoRel[rel=abs5429_+_thermal_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5429_+_thermal_+_protection
*CAT: n
*SEM: twoRel[rel=abs5429_+_thermal_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5429_+_thermal_+_protection
*CAT: n
*SEM: orRel[rel=abs5429_+_thermal_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_abs0916_+_shrink_+_sleeve
*CAT: n
*SEM: unaryRel[rel=two_+_abs0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_abs0916_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=two_+_abs0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_abs0916_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=two_+_abs0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_abs0916_+_shrink_+_sleeve
*CAT: n
*SEM: orRel[rel=two_+_abs0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pass_+_through_+_structure
*CAT: n
*SEM: unaryRel[rel=pass_+_through_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pass_+_through_+_structure
*CAT: n
*SEM: twoRel[rel=pass_+_through_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pass_+_through_+_structure
*CAT: n
*SEM: twoRel[rel=pass_+_through_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pass_+_through_+_structure
*CAT: n
*SEM: orRel[rel=pass_+_through_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_straight_+_length_+_between_+_bends
*CAT: n
*SEM: unaryRel[rel=minimum_+_straight_+_length_+_between_+_bends]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_straight_+_length_+_between_+_bends
*CAT: n
*SEM: twoRel[rel=minimum_+_straight_+_length_+_between_+_bends]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_straight_+_length_+_between_+_bends
*CAT: n
*SEM: twoRel[rel=minimum_+_straight_+_length_+_between_+_bends]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_straight_+_length_+_between_+_bends
*CAT: n
*SEM: orRel[rel=minimum_+_straight_+_length_+_between_+_bends]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_protected
*CAT: n
*SEM: unaryRel[rel=be_+_protected]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_protected
*CAT: n
*SEM: twoRel[rel=be_+_protected]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_protected
*CAT: n
*SEM: twoRel[rel=be_+_protected]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_protected
*CAT: n
*SEM: orRel[rel=be_+_protected]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: base_+_flange
*CAT: n
*SEM: unaryRel[rel=base_+_flange]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: base_+_flange
*CAT: n
*SEM: twoRel[rel=base_+_flange]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: base_+_flange
*CAT: n
*SEM: twoRel[rel=base_+_flange]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: base_+_flange
*CAT: n
*SEM: orRel[rel=base_+_flange]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: respect_+_to_+_its_+_neighbouring_+_brackets
*CAT: n
*SEM: unaryRel[rel=respect_+_to_+_its_+_neighbouring_+_brackets]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: respect_+_to_+_its_+_neighbouring_+_brackets
*CAT: n
*SEM: twoRel[rel=respect_+_to_+_its_+_neighbouring_+_brackets]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: respect_+_to_+_its_+_neighbouring_+_brackets
*CAT: n
*SEM: twoRel[rel=respect_+_to_+_its_+_neighbouring_+_brackets]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: respect_+_to_+_its_+_neighbouring_+_brackets
*CAT: n
*SEM: orRel[rel=respect_+_to_+_its_+_neighbouring_+_brackets]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_13mm
*CAT: n
*SEM: unaryRel[rel=25mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_13mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_13mm
*CAT: n
*SEM: twoRel[rel=25mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_13mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_13mm
*CAT: n
*SEM: twoRel[rel=25mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_13mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_13mm
*CAT: n
*SEM: orRel[rel=25mm_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_13mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_nsa5527_+_spacer_+_to
*CAT: n
*SEM: unaryRel[rel=2_+_nsa5527_+_spacer_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_nsa5527_+_spacer_+_to
*CAT: n
*SEM: twoRel[rel=2_+_nsa5527_+_spacer_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_nsa5527_+_spacer_+_to
*CAT: n
*SEM: twoRel[rel=2_+_nsa5527_+_spacer_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_nsa5527_+_spacer_+_to
*CAT: n
*SEM: orRel[rel=2_+_nsa5527_+_spacer_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame
*CAT: n
*SEM: unaryRel[rel=frame]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame
*CAT: n
*SEM: twoRel[rel=frame]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame
*CAT: n
*SEM: twoRel[rel=frame]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame
*CAT: n
*SEM: orRel[rel=frame]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: for_+_pressure_+_seals_+__-_opensb_-_vp_-_closesb_-__-_colon_-__+_a_+_label_+_on_+_both_+_sides_+_or
*CAT: n
*SEM: unaryRel[rel=for_+_pressure_+_seals_+__-_opensb_-_vp_-_closesb_-__-_colon_-__+_a_+_label_+_on_+_both_+_sides_+_or]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: for_+_pressure_+_seals_+__-_opensb_-_vp_-_closesb_-__-_colon_-__+_a_+_label_+_on_+_both_+_sides_+_or
*CAT: n
*SEM: twoRel[rel=for_+_pressure_+_seals_+__-_opensb_-_vp_-_closesb_-__-_colon_-__+_a_+_label_+_on_+_both_+_sides_+_or]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: for_+_pressure_+_seals_+__-_opensb_-_vp_-_closesb_-__-_colon_-__+_a_+_label_+_on_+_both_+_sides_+_or
*CAT: n
*SEM: twoRel[rel=for_+_pressure_+_seals_+__-_opensb_-_vp_-_closesb_-__-_colon_-__+_a_+_label_+_on_+_both_+_sides_+_or]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: for_+_pressure_+_seals_+__-_opensb_-_vp_-_closesb_-__-_colon_-__+_a_+_label_+_on_+_both_+_sides_+_or
*CAT: n
*SEM: orRel[rel=for_+_pressure_+_seals_+__-_opensb_-_vp_-_closesb_-__-_colon_-__+_a_+_label_+_on_+_both_+_sides_+_or]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: open_+_backshell
*CAT: n
*SEM: unaryRel[rel=open_+_backshell]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: open_+_backshell
*CAT: n
*SEM: twoRel[rel=open_+_backshell]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: open_+_backshell
*CAT: n
*SEM: twoRel[rel=open_+_backshell]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: open_+_backshell
*CAT: n
*SEM: orRel[rel=open_+_backshell]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_twisting
*CAT: n
*SEM: unaryRel[rel=harness_+_twisting]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_twisting
*CAT: n
*SEM: twoRel[rel=harness_+_twisting]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_twisting
*CAT: n
*SEM: twoRel[rel=harness_+_twisting]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_twisting
*CAT: n
*SEM: orRel[rel=harness_+_twisting]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_traverse
*CAT: n
*SEM: unaryRel[rel=conductive_+_traverse]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_traverse
*CAT: n
*SEM: twoRel[rel=conductive_+_traverse]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_traverse
*CAT: n
*SEM: twoRel[rel=conductive_+_traverse]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_traverse
*CAT: n
*SEM: orRel[rel=conductive_+_traverse]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphik
*CAT: n
*SEM: unaryRel[rel=graphik]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphik
*CAT: n
*SEM: twoRel[rel=graphik]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphik
*CAT: n
*SEM: twoRel[rel=graphik]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphik
*CAT: n
*SEM: orRel[rel=graphik]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distribute_+_fluid
*CAT: n
*SEM: unaryRel[rel=distribute_+_fluid]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distribute_+_fluid
*CAT: n
*SEM: twoRel[rel=distribute_+_fluid]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distribute_+_fluid
*CAT: n
*SEM: twoRel[rel=distribute_+_fluid]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distribute_+_fluid
*CAT: n
*SEM: orRel[rel=distribute_+_fluid]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_section
*CAT: n
*SEM: unaryRel[rel=bundle_+_section]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_section
*CAT: n
*SEM: twoRel[rel=bundle_+_section]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_section
*CAT: n
*SEM: twoRel[rel=bundle_+_section]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_section
*CAT: n
*SEM: orRel[rel=bundle_+_section]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=10mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=10mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=10mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=10mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 45_-_degrees_-__+_60_-_degrees_-__+__-_closebb_-_
*CAT: n
*SEM: unaryRel[rel=45_-_degrees_-__+_60_-_degrees_-__+__-_closebb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 45_-_degrees_-__+_60_-_degrees_-__+__-_closebb_-_
*CAT: n
*SEM: twoRel[rel=45_-_degrees_-__+_60_-_degrees_-__+__-_closebb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 45_-_degrees_-__+_60_-_degrees_-__+__-_closebb_-_
*CAT: n
*SEM: twoRel[rel=45_-_degrees_-__+_60_-_degrees_-__+__-_closebb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 45_-_degrees_-__+_60_-_degrees_-__+__-_closebb_-_
*CAT: n
*SEM: orRel[rel=45_-_degrees_-__+_60_-_degrees_-__+__-_closebb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_e.g
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_e.g]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_e.g
*CAT: n
*SEM: twoRel[rel=p-clamp_+_e.g]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_e.g
*CAT: n
*SEM: twoRel[rel=p-clamp_+_e.g]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_e.g
*CAT: n
*SEM: orRel[rel=p-clamp_+_e.g]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zones
*CAT: n
*SEM: unaryRel[rel=zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zones
*CAT: n
*SEM: twoRel[rel=zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zones
*CAT: n
*SEM: twoRel[rel=zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zones
*CAT: n
*SEM: orRel[rel=zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fix_+_pipes_+_onto_+_structure
*CAT: n
*SEM: unaryRel[rel=fix_+_pipes_+_onto_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fix_+_pipes_+_onto_+_structure
*CAT: n
*SEM: twoRel[rel=fix_+_pipes_+_onto_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fix_+_pipes_+_onto_+_structure
*CAT: n
*SEM: twoRel[rel=fix_+_pipes_+_onto_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fix_+_pipes_+_onto_+_structure
*CAT: n
*SEM: orRel[rel=fix_+_pipes_+_onto_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: kl_+_cable
*CAT: n
*SEM: unaryRel[rel=kl_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: kl_+_cable
*CAT: n
*SEM: twoRel[rel=kl_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: kl_+_cable
*CAT: n
*SEM: twoRel[rel=kl_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: kl_+_cable
*CAT: n
*SEM: orRel[rel=kl_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_+_diameter
*CAT: n
*SEM: unaryRel[rel=25mm_+_diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_+_diameter
*CAT: n
*SEM: twoRel[rel=25mm_+_diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_+_diameter
*CAT: n
*SEM: twoRel[rel=25mm_+_diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_+_diameter
*CAT: n
*SEM: orRel[rel=25mm_+_diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_version
*CAT: n
*SEM: unaryRel[rel=plastic_+_version]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_version
*CAT: n
*SEM: twoRel[rel=plastic_+_version]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_version
*CAT: n
*SEM: twoRel[rel=plastic_+_version]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_version
*CAT: n
*SEM: orRel[rel=plastic_+_version]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration_+_area
*CAT: n
*SEM: unaryRel[rel=vibration_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration_+_area
*CAT: n
*SEM: twoRel[rel=vibration_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration_+_area
*CAT: n
*SEM: twoRel[rel=vibration_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration_+_area
*CAT: n
*SEM: orRel[rel=vibration_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: creation
*CAT: n
*SEM: unaryRel[rel=creation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: creation
*CAT: n
*SEM: twoRel[rel=creation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: creation
*CAT: n
*SEM: twoRel[rel=creation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: creation
*CAT: n
*SEM: orRel[rel=creation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_direction
*CAT: n
*SEM: unaryRel[rel=horizontal_+_direction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_direction
*CAT: n
*SEM: twoRel[rel=horizontal_+_direction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_direction
*CAT: n
*SEM: twoRel[rel=horizontal_+_direction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_direction
*CAT: n
*SEM: orRel[rel=horizontal_+_direction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm
*CAT: n
*SEM: unaryRel[rel=10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm
*CAT: n
*SEM: twoRel[rel=10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm
*CAT: n
*SEM: twoRel[rel=10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm
*CAT: n
*SEM: orRel[rel=10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_installation
*CAT: n
*SEM: unaryRel[rel=electrical_+_installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_installation
*CAT: n
*SEM: twoRel[rel=electrical_+_installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_installation
*CAT: n
*SEM: twoRel[rel=electrical_+_installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_installation
*CAT: n
*SEM: orRel[rel=electrical_+_installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_rigid_+_conduit
*CAT: n
*SEM: unaryRel[rel=metallic_+_rigid_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_rigid_+_conduit
*CAT: n
*SEM: twoRel[rel=metallic_+_rigid_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_rigid_+_conduit
*CAT: n
*SEM: twoRel[rel=metallic_+_rigid_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_rigid_+_conduit
*CAT: n
*SEM: orRel[rel=metallic_+_rigid_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstruction
*CAT: n
*SEM: unaryRel[rel=obstruction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstruction
*CAT: n
*SEM: twoRel[rel=obstruction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstruction
*CAT: n
*SEM: twoRel[rel=obstruction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstruction
*CAT: n
*SEM: orRel[rel=obstruction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: opposed_+_directions_+__-_opensb_-_e.g._+_on_+_a_+_terminal_+_block_-_closesb_-__-_colon_-__+_method_+_shown_+_in_+_case_+_1
*CAT: n
*SEM: unaryRel[rel=opposed_+_directions_+__-_opensb_-_e.g._+_on_+_a_+_terminal_+_block_-_closesb_-__-_colon_-__+_method_+_shown_+_in_+_case_+_1]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: opposed_+_directions_+__-_opensb_-_e.g._+_on_+_a_+_terminal_+_block_-_closesb_-__-_colon_-__+_method_+_shown_+_in_+_case_+_1
*CAT: n
*SEM: twoRel[rel=opposed_+_directions_+__-_opensb_-_e.g._+_on_+_a_+_terminal_+_block_-_closesb_-__-_colon_-__+_method_+_shown_+_in_+_case_+_1]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: opposed_+_directions_+__-_opensb_-_e.g._+_on_+_a_+_terminal_+_block_-_closesb_-__-_colon_-__+_method_+_shown_+_in_+_case_+_1
*CAT: n
*SEM: twoRel[rel=opposed_+_directions_+__-_opensb_-_e.g._+_on_+_a_+_terminal_+_block_-_closesb_-__-_colon_-__+_method_+_shown_+_in_+_case_+_1]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: opposed_+_directions_+__-_opensb_-_e.g._+_on_+_a_+_terminal_+_block_-_closesb_-__-_colon_-__+_method_+_shown_+_in_+_case_+_1
*CAT: n
*SEM: orRel[rel=opposed_+_directions_+__-_opensb_-_e.g._+_on_+_a_+_terminal_+_block_-_closesb_-__-_colon_-__+_method_+_shown_+_in_+_case_+_1]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel
*CAT: n
*SEM: unaryRel[rel=fuel]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel
*CAT: n
*SEM: twoRel[rel=fuel]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel
*CAT: n
*SEM: twoRel[rel=fuel]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel
*CAT: n
*SEM: orRel[rel=fuel]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: system
*CAT: n
*SEM: unaryRel[rel=system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: system
*CAT: n
*SEM: twoRel[rel=system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: system
*CAT: n
*SEM: twoRel[rel=system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: system
*CAT: n
*SEM: orRel[rel=system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chain
*CAT: n
*SEM: unaryRel[rel=chain]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chain
*CAT: n
*SEM: twoRel[rel=chain]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chain
*CAT: n
*SEM: twoRel[rel=chain]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chain
*CAT: n
*SEM: orRel[rel=chain]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_colour
*CAT: n
*SEM: unaryRel[rel=black_+_colour]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_colour
*CAT: n
*SEM: twoRel[rel=black_+_colour]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_colour
*CAT: n
*SEM: twoRel[rel=black_+_colour]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_colour
*CAT: n
*SEM: orRel[rel=black_+_colour]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abd0003
*CAT: n
*SEM: unaryRel[rel=abd0003]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abd0003
*CAT: n
*SEM: twoRel[rel=abd0003]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abd0003
*CAT: n
*SEM: twoRel[rel=abd0003]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abd0003
*CAT: n
*SEM: orRel[rel=abd0003]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_virtual_+_pressure_+_seal
*CAT: n
*SEM: unaryRel[rel=dedicated_+_virtual_+_pressure_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_virtual_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=dedicated_+_virtual_+_pressure_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_virtual_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=dedicated_+_virtual_+_pressure_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_virtual_+_pressure_+_seal
*CAT: n
*SEM: orRel[rel=dedicated_+_virtual_+_pressure_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: their_+_own_+_clip
*CAT: n
*SEM: unaryRel[rel=their_+_own_+_clip]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: their_+_own_+_clip
*CAT: n
*SEM: twoRel[rel=their_+_own_+_clip]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: their_+_own_+_clip
*CAT: n
*SEM: twoRel[rel=their_+_own_+_clip]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: their_+_own_+_clip
*CAT: n
*SEM: orRel[rel=their_+_own_+_clip]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_values
*CAT: n
*SEM: unaryRel[rel=same_+_values]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_values
*CAT: n
*SEM: twoRel[rel=same_+_values]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_values
*CAT: n
*SEM: twoRel[rel=same_+_values]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_values
*CAT: n
*SEM: orRel[rel=same_+_values]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10_-_degrees_-__+_cone_+_form_+_the_+_last_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=10_-_degrees_-__+_cone_+_form_+_the_+_last_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10_-_degrees_-__+_cone_+_form_+_the_+_last_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=10_-_degrees_-__+_cone_+_form_+_the_+_last_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10_-_degrees_-__+_cone_+_form_+_the_+_last_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=10_-_degrees_-__+_cone_+_form_+_the_+_last_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10_-_degrees_-__+_cone_+_form_+_the_+_last_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=10_-_degrees_-__+_cone_+_form_+_the_+_last_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fqi_+_bundle
*CAT: n
*SEM: unaryRel[rel=fqi_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fqi_+_bundle
*CAT: n
*SEM: twoRel[rel=fqi_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fqi_+_bundle
*CAT: n
*SEM: twoRel[rel=fqi_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fqi_+_bundle
*CAT: n
*SEM: orRel[rel=fqi_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: material
*CAT: n
*SEM: unaryRel[rel=material]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: material
*CAT: n
*SEM: twoRel[rel=material]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: material
*CAT: n
*SEM: twoRel[rel=material]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: material
*CAT: n
*SEM: orRel[rel=material]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_areas
*CAT: n
*SEM: unaryRel[rel=other_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_areas
*CAT: n
*SEM: twoRel[rel=other_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_areas
*CAT: n
*SEM: twoRel[rel=other_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_areas
*CAT: n
*SEM: orRel[rel=other_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_extremity_+_is_+_visible_+_at_+_all_+_times
*CAT: n
*SEM: unaryRel[rel=pipe_+_extremity_+_is_+_visible_+_at_+_all_+_times]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_extremity_+_is_+_visible_+_at_+_all_+_times
*CAT: n
*SEM: twoRel[rel=pipe_+_extremity_+_is_+_visible_+_at_+_all_+_times]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_extremity_+_is_+_visible_+_at_+_all_+_times
*CAT: n
*SEM: twoRel[rel=pipe_+_extremity_+_is_+_visible_+_at_+_all_+_times]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_extremity_+_is_+_visible_+_at_+_all_+_times
*CAT: n
*SEM: orRel[rel=pipe_+_extremity_+_is_+_visible_+_at_+_all_+_times]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaged_+_pipes
*CAT: n
*SEM: unaryRel[rel=in-situ_+_swaged_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaged_+_pipes
*CAT: n
*SEM: twoRel[rel=in-situ_+_swaged_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaged_+_pipes
*CAT: n
*SEM: twoRel[rel=in-situ_+_swaged_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaged_+_pipes
*CAT: n
*SEM: orRel[rel=in-situ_+_swaged_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l_+__-_smallerThan_-__+__-_equalto_-_75mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=l_+__-_smallerThan_-__+__-_equalto_-_75mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l_+__-_smallerThan_-__+__-_equalto_-_75mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=l_+__-_smallerThan_-__+__-_equalto_-_75mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l_+__-_smallerThan_-__+__-_equalto_-_75mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=l_+__-_smallerThan_-__+__-_equalto_-_75mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: l_+__-_smallerThan_-__+__-_equalto_-_75mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=l_+__-_smallerThan_-__+__-_equalto_-_75mm_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_bundle
*CAT: n
*SEM: unaryRel[rel=shielded_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_bundle
*CAT: n
*SEM: twoRel[rel=shielded_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_bundle
*CAT: n
*SEM: twoRel[rel=shielded_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_bundle
*CAT: n
*SEM: orRel[rel=shielded_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: possible
*CAT: n
*SEM: unaryRel[rel=possible]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: possible
*CAT: n
*SEM: twoRel[rel=possible]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: possible
*CAT: n
*SEM: twoRel[rel=possible]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: possible
*CAT: n
*SEM: orRel[rel=possible]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: butterfly_+_configuration_+_are_+_used
*CAT: n
*SEM: unaryRel[rel=butterfly_+_configuration_+_are_+_used]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: butterfly_+_configuration_+_are_+_used
*CAT: n
*SEM: twoRel[rel=butterfly_+_configuration_+_are_+_used]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: butterfly_+_configuration_+_are_+_used
*CAT: n
*SEM: twoRel[rel=butterfly_+_configuration_+_are_+_used]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: butterfly_+_configuration_+_are_+_used
*CAT: n
*SEM: orRel[rel=butterfly_+_configuration_+_are_+_used]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: its_+_neighbouring_+_brackets
*CAT: n
*SEM: unaryRel[rel=its_+_neighbouring_+_brackets]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: its_+_neighbouring_+_brackets
*CAT: n
*SEM: twoRel[rel=its_+_neighbouring_+_brackets]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: its_+_neighbouring_+_brackets
*CAT: n
*SEM: twoRel[rel=its_+_neighbouring_+_brackets]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: its_+_neighbouring_+_brackets
*CAT: n
*SEM: orRel[rel=its_+_neighbouring_+_brackets]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_connector_+_plates_+_20_-_percent_-_
*CAT: n
*SEM: unaryRel[rel=commercial_+_connector_+_plates_+_20_-_percent_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_connector_+_plates_+_20_-_percent_-_
*CAT: n
*SEM: twoRel[rel=commercial_+_connector_+_plates_+_20_-_percent_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_connector_+_plates_+_20_-_percent_-_
*CAT: n
*SEM: twoRel[rel=commercial_+_connector_+_plates_+_20_-_percent_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_connector_+_plates_+_20_-_percent_-_
*CAT: n
*SEM: orRel[rel=commercial_+_connector_+_plates_+_20_-_percent_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_adjacentstructure_+_parts
*CAT: n
*SEM: unaryRel[rel=any_+_other_+_adjacentstructure_+_parts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_adjacentstructure_+_parts
*CAT: n
*SEM: twoRel[rel=any_+_other_+_adjacentstructure_+_parts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_adjacentstructure_+_parts
*CAT: n
*SEM: twoRel[rel=any_+_other_+_adjacentstructure_+_parts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_adjacentstructure_+_parts
*CAT: n
*SEM: orRel[rel=any_+_other_+_adjacentstructure_+_parts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_tables
*CAT: n
*SEM: unaryRel[rel=attached_+_tables]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_tables
*CAT: n
*SEM: twoRel[rel=attached_+_tables]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_tables
*CAT: n
*SEM: twoRel[rel=attached_+_tables]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_tables
*CAT: n
*SEM: orRel[rel=attached_+_tables]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_background
*CAT: n
*SEM: unaryRel[rel=pink_+_background]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_background
*CAT: n
*SEM: twoRel[rel=pink_+_background]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_background
*CAT: n
*SEM: twoRel[rel=pink_+_background]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_background
*CAT: n
*SEM: orRel[rel=pink_+_background]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: splice
*CAT: n
*SEM: unaryRel[rel=splice]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: splice
*CAT: n
*SEM: twoRel[rel=splice]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: splice
*CAT: n
*SEM: twoRel[rel=splice]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: splice
*CAT: n
*SEM: orRel[rel=splice]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0mm_+_when_+_the_+_surface
*CAT: n
*SEM: unaryRel[rel=0mm_+_when_+_the_+_surface]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0mm_+_when_+_the_+_surface
*CAT: n
*SEM: twoRel[rel=0mm_+_when_+_the_+_surface]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0mm_+_when_+_the_+_surface
*CAT: n
*SEM: twoRel[rel=0mm_+_when_+_the_+_surface]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0mm_+_when_+_the_+_surface
*CAT: n
*SEM: orRel[rel=0mm_+_when_+_the_+_surface]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_p-clamp
*CAT: n
*SEM: unaryRel[rel=intermediate_+_p-clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_p-clamp
*CAT: n
*SEM: twoRel[rel=intermediate_+_p-clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_p-clamp
*CAT: n
*SEM: twoRel[rel=intermediate_+_p-clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_p-clamp
*CAT: n
*SEM: orRel[rel=intermediate_+_p-clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electro
*CAT: n
*SEM: unaryRel[rel=electro]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electro
*CAT: n
*SEM: twoRel[rel=electro]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electro
*CAT: n
*SEM: twoRel[rel=electro]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electro
*CAT: n
*SEM: orRel[rel=electro]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_protection
*CAT: n
*SEM: unaryRel[rel=same_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_protection
*CAT: n
*SEM: twoRel[rel=same_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_protection
*CAT: n
*SEM: twoRel[rel=same_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_protection
*CAT: n
*SEM: orRel[rel=same_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_bundles_+_iin_+_case_+_of_+_secured_+_routing
*CAT: n
*SEM: unaryRel[rel=other_+_bundles_+_iin_+_case_+_of_+_secured_+_routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_bundles_+_iin_+_case_+_of_+_secured_+_routing
*CAT: n
*SEM: twoRel[rel=other_+_bundles_+_iin_+_case_+_of_+_secured_+_routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_bundles_+_iin_+_case_+_of_+_secured_+_routing
*CAT: n
*SEM: twoRel[rel=other_+_bundles_+_iin_+_case_+_of_+_secured_+_routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_bundles_+_iin_+_case_+_of_+_secured_+_routing
*CAT: n
*SEM: orRel[rel=other_+_bundles_+_iin_+_case_+_of_+_secured_+_routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_the_+_table
*CAT: n
*SEM: unaryRel[rel=account_+_the_+_table]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_the_+_table
*CAT: n
*SEM: twoRel[rel=account_+_the_+_table]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_the_+_table
*CAT: n
*SEM: twoRel[rel=account_+_the_+_table]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_the_+_table
*CAT: n
*SEM: orRel[rel=account_+_the_+_table]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_obj1_b
*CAT: n
*SEM: unaryRel[rel=np_obj1_b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_obj1_b
*CAT: n
*SEM: twoRel[rel=np_obj1_b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_obj1_b
*CAT: n
*SEM: twoRel[rel=np_obj1_b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_obj1_b
*CAT: n
*SEM: orRel[rel=np_obj1_b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_fixation_+_point
*CAT: n
*SEM: unaryRel[rel=one_+_fixation_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_fixation_+_point
*CAT: n
*SEM: twoRel[rel=one_+_fixation_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_fixation_+_point
*CAT: n
*SEM: twoRel[rel=one_+_fixation_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_fixation_+_point
*CAT: n
*SEM: orRel[rel=one_+_fixation_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank
*CAT: n
*SEM: unaryRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank
*CAT: n
*SEM: twoRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank
*CAT: n
*SEM: twoRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank
*CAT: n
*SEM: orRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p0
*CAT: n
*SEM: unaryRel[rel=p0]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p0
*CAT: n
*SEM: twoRel[rel=p0]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p0
*CAT: n
*SEM: twoRel[rel=p0]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p0
*CAT: n
*SEM: orRel[rel=p0]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_wires
*CAT: n
*SEM: unaryRel[rel=1_+_wires]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_wires
*CAT: n
*SEM: twoRel[rel=1_+_wires]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_wires
*CAT: n
*SEM: twoRel[rel=1_+_wires]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_wires
*CAT: n
*SEM: orRel[rel=1_+_wires]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d-temple_+_abs_+_1089_+_togehter
*CAT: n
*SEM: unaryRel[rel=d-temple_+_abs_+_1089_+_togehter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d-temple_+_abs_+_1089_+_togehter
*CAT: n
*SEM: twoRel[rel=d-temple_+_abs_+_1089_+_togehter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d-temple_+_abs_+_1089_+_togehter
*CAT: n
*SEM: twoRel[rel=d-temple_+_abs_+_1089_+_togehter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d-temple_+_abs_+_1089_+_togehter
*CAT: n
*SEM: orRel[rel=d-temple_+_abs_+_1089_+_togehter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp_+_blocks_+_limitation
*CAT: n
*SEM: unaryRel[rel=clamp_+_blocks_+_limitation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp_+_blocks_+_limitation
*CAT: n
*SEM: twoRel[rel=clamp_+_blocks_+_limitation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp_+_blocks_+_limitation
*CAT: n
*SEM: twoRel[rel=clamp_+_blocks_+_limitation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp_+_blocks_+_limitation
*CAT: n
*SEM: orRel[rel=clamp_+_blocks_+_limitation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_1
*CAT: n
*SEM: unaryRel[rel=case_+_1]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_1
*CAT: n
*SEM: twoRel[rel=case_+_1]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_1
*CAT: n
*SEM: twoRel[rel=case_+_1]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_1
*CAT: n
*SEM: orRel[rel=case_+_1]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_angle_+_+-60_-_degrees_-__+_referenced
*CAT: n
*SEM: unaryRel[rel=maximum_+_angle_+_+-60_-_degrees_-__+_referenced]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_angle_+_+-60_-_degrees_-__+_referenced
*CAT: n
*SEM: twoRel[rel=maximum_+_angle_+_+-60_-_degrees_-__+_referenced]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_angle_+_+-60_-_degrees_-__+_referenced
*CAT: n
*SEM: twoRel[rel=maximum_+_angle_+_+-60_-_degrees_-__+_referenced]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_angle_+_+-60_-_degrees_-__+_referenced
*CAT: n
*SEM: orRel[rel=maximum_+_angle_+_+-60_-_degrees_-__+_referenced]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d
*CAT: n
*SEM: unaryRel[rel=asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d
*CAT: n
*SEM: twoRel[rel=asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d
*CAT: n
*SEM: twoRel[rel=asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d
*CAT: n
*SEM: orRel[rel=asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_diameter_+_d
*CAT: n
*SEM: unaryRel[rel=maximum_+_diameter_+_d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_diameter_+_d
*CAT: n
*SEM: twoRel[rel=maximum_+_diameter_+_d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_diameter_+_d
*CAT: n
*SEM: twoRel[rel=maximum_+_diameter_+_d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_diameter_+_d
*CAT: n
*SEM: orRel[rel=maximum_+_diameter_+_d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: three-_+_pipes_+_tee-unions_+_connections_-_colon_-__+_nut_+_asna3769_+_code_+__-_invcomma_-_w_-_invcomma_-__+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_straight_+_union_+_nsa855010_+_code_+__-_invcomma_-_gv_-_invcomma_-__+_tee_+_union_+_abs0464_+_code_+__-_invcomma_-_-_-_invcomma_-_
*CAT: n
*SEM: unaryRel[rel=three-_+_pipes_+_tee-unions_+_connections_-_colon_-__+_nut_+_asna3769_+_code_+__-_invcomma_-_w_-_invcomma_-__+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_straight_+_union_+_nsa855010_+_code_+__-_invcomma_-_gv_-_invcomma_-__+_tee_+_union_+_abs0464_+_code_+__-_invcomma_-_-_-_invcomma_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: three-_+_pipes_+_tee-unions_+_connections_-_colon_-__+_nut_+_asna3769_+_code_+__-_invcomma_-_w_-_invcomma_-__+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_straight_+_union_+_nsa855010_+_code_+__-_invcomma_-_gv_-_invcomma_-__+_tee_+_union_+_abs0464_+_code_+__-_invcomma_-_-_-_invcomma_-_
*CAT: n
*SEM: twoRel[rel=three-_+_pipes_+_tee-unions_+_connections_-_colon_-__+_nut_+_asna3769_+_code_+__-_invcomma_-_w_-_invcomma_-__+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_straight_+_union_+_nsa855010_+_code_+__-_invcomma_-_gv_-_invcomma_-__+_tee_+_union_+_abs0464_+_code_+__-_invcomma_-_-_-_invcomma_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: three-_+_pipes_+_tee-unions_+_connections_-_colon_-__+_nut_+_asna3769_+_code_+__-_invcomma_-_w_-_invcomma_-__+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_straight_+_union_+_nsa855010_+_code_+__-_invcomma_-_gv_-_invcomma_-__+_tee_+_union_+_abs0464_+_code_+__-_invcomma_-_-_-_invcomma_-_
*CAT: n
*SEM: twoRel[rel=three-_+_pipes_+_tee-unions_+_connections_-_colon_-__+_nut_+_asna3769_+_code_+__-_invcomma_-_w_-_invcomma_-__+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_straight_+_union_+_nsa855010_+_code_+__-_invcomma_-_gv_-_invcomma_-__+_tee_+_union_+_abs0464_+_code_+__-_invcomma_-_-_-_invcomma_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: three-_+_pipes_+_tee-unions_+_connections_-_colon_-__+_nut_+_asna3769_+_code_+__-_invcomma_-_w_-_invcomma_-__+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_straight_+_union_+_nsa855010_+_code_+__-_invcomma_-_gv_-_invcomma_-__+_tee_+_union_+_abs0464_+_code_+__-_invcomma_-_-_-_invcomma_-_
*CAT: n
*SEM: orRel[rel=three-_+_pipes_+_tee-unions_+_connections_-_colon_-__+_nut_+_asna3769_+_code_+__-_invcomma_-_w_-_invcomma_-__+_sleeve_+_nsa855034_+_code_+__-_invcomma_-_-_-_invcomma_-__+_straight_+_union_+_nsa855010_+_code_+__-_invcomma_-_gv_-_invcomma_-__+_tee_+_union_+_abs0464_+_code_+__-_invcomma_-_-_-_invcomma_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asna2328_+__-_backslash_-__+_asna_+_2327_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=metallic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asna2328_+__-_backslash_-__+_asna_+_2327_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asna2328_+__-_backslash_-__+_asna_+_2327_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=metallic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asna2328_+__-_backslash_-__+_asna_+_2327_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asna2328_+__-_backslash_-__+_asna_+_2327_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=metallic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asna2328_+__-_backslash_-__+_asna_+_2327_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asna2328_+__-_backslash_-__+_asna_+_2327_-_closesb_-_
*CAT: n
*SEM: orRel[rel=metallic_+_stand-off_+__-_backslash_-__+_colonettes_+__-_opensb_-_asna2328_+__-_backslash_-__+_asna_+_2327_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_identification_+_marker
*CAT: n
*SEM: unaryRel[rel=route_+_identification_+_marker]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_identification_+_marker
*CAT: n
*SEM: twoRel[rel=route_+_identification_+_marker]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_identification_+_marker
*CAT: n
*SEM: twoRel[rel=route_+_identification_+_marker]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_identification_+_marker
*CAT: n
*SEM: orRel[rel=route_+_identification_+_marker]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150mm
*CAT: n
*SEM: unaryRel[rel=150mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150mm
*CAT: n
*SEM: twoRel[rel=150mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150mm
*CAT: n
*SEM: twoRel[rel=150mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150mm
*CAT: n
*SEM: orRel[rel=150mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_section_+__-_opensb_-_max._+_diameter_+__-_equalto_-__+_50mm_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=bundle_+_section_+__-_opensb_-_max._+_diameter_+__-_equalto_-__+_50mm_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_section_+__-_opensb_-_max._+_diameter_+__-_equalto_-__+_50mm_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=bundle_+_section_+__-_opensb_-_max._+_diameter_+__-_equalto_-__+_50mm_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_section_+__-_opensb_-_max._+_diameter_+__-_equalto_-__+_50mm_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=bundle_+_section_+__-_opensb_-_max._+_diameter_+__-_equalto_-__+_50mm_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_section_+__-_opensb_-_max._+_diameter_+__-_equalto_-__+_50mm_-_closesb_-_
*CAT: n
*SEM: orRel[rel=bundle_+_section_+__-_opensb_-_max._+_diameter_+__-_equalto_-__+_50mm_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_source
*CAT: n
*SEM: unaryRel[rel=single_+_source]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_source
*CAT: n
*SEM: twoRel[rel=single_+_source]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_source
*CAT: n
*SEM: twoRel[rel=single_+_source]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_source
*CAT: n
*SEM: orRel[rel=single_+_source]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_sleeve_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=red_+_sleeve_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_sleeve_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=red_+_sleeve_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_sleeve_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=red_+_sleeve_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_sleeve_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=red_+_sleeve_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_network
*CAT: n
*SEM: unaryRel[rel=electrical_+_network]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_network
*CAT: n
*SEM: twoRel[rel=electrical_+_network]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_network
*CAT: n
*SEM: twoRel[rel=electrical_+_network]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_network
*CAT: n
*SEM: orRel[rel=electrical_+_network]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation_+_devices
*CAT: n
*SEM: unaryRel[rel=fixation_+_devices]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation_+_devices
*CAT: n
*SEM: twoRel[rel=fixation_+_devices]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation_+_devices
*CAT: n
*SEM: twoRel[rel=fixation_+_devices]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation_+_devices
*CAT: n
*SEM: orRel[rel=fixation_+_devices]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-_50mm
*CAT: n
*SEM: unaryRel[rel=d_-_greaterThan_-__-_equalto_-_50mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-_50mm
*CAT: n
*SEM: twoRel[rel=d_-_greaterThan_-__-_equalto_-_50mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-_50mm
*CAT: n
*SEM: twoRel[rel=d_-_greaterThan_-__-_equalto_-_50mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-_50mm
*CAT: n
*SEM: orRel[rel=d_-_greaterThan_-__-_equalto_-_50mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_5342-02_+_flag_+_datum_+_marker
*CAT: n
*SEM: unaryRel[rel=abs_+_5342-02_+_flag_+_datum_+_marker]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_5342-02_+_flag_+_datum_+_marker
*CAT: n
*SEM: twoRel[rel=abs_+_5342-02_+_flag_+_datum_+_marker]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_5342-02_+_flag_+_datum_+_marker
*CAT: n
*SEM: twoRel[rel=abs_+_5342-02_+_flag_+_datum_+_marker]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_5342-02_+_flag_+_datum_+_marker
*CAT: n
*SEM: orRel[rel=abs_+_5342-02_+_flag_+_datum_+_marker]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935805tshielded_+_convoluted_+_conduit
*CAT: n
*SEM: unaryRel[rel=nsa_+_935805tshielded_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935805tshielded_+_convoluted_+_conduit
*CAT: n
*SEM: twoRel[rel=nsa_+_935805tshielded_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935805tshielded_+_convoluted_+_conduit
*CAT: n
*SEM: twoRel[rel=nsa_+_935805tshielded_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935805tshielded_+_convoluted_+_conduit
*CAT: n
*SEM: orRel[rel=nsa_+_935805tshielded_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_wire
*CAT: n
*SEM: unaryRel[rel=feeder_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_wire
*CAT: n
*SEM: twoRel[rel=feeder_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_wire
*CAT: n
*SEM: twoRel[rel=feeder_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_wire
*CAT: n
*SEM: orRel[rel=feeder_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structural_+_part
*CAT: n
*SEM: unaryRel[rel=any_+_structural_+_part]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structural_+_part
*CAT: n
*SEM: twoRel[rel=any_+_structural_+_part]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structural_+_part
*CAT: n
*SEM: twoRel[rel=any_+_structural_+_part]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structural_+_part
*CAT: n
*SEM: orRel[rel=any_+_structural_+_part]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_areas
*CAT: n
*SEM: unaryRel[rel=swamp_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_areas
*CAT: n
*SEM: twoRel[rel=swamp_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_areas
*CAT: n
*SEM: twoRel[rel=swamp_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_areas
*CAT: n
*SEM: orRel[rel=swamp_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: element
*CAT: n
*SEM: unaryRel[rel=element]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: element
*CAT: n
*SEM: twoRel[rel=element]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: element
*CAT: n
*SEM: twoRel[rel=element]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: element
*CAT: n
*SEM: orRel[rel=element]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 24_+_sizes_+_where_+_high_+_deflection_+_levels
*CAT: n
*SEM: unaryRel[rel=24_+_sizes_+_where_+_high_+_deflection_+_levels]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 24_+_sizes_+_where_+_high_+_deflection_+_levels
*CAT: n
*SEM: twoRel[rel=24_+_sizes_+_where_+_high_+_deflection_+_levels]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 24_+_sizes_+_where_+_high_+_deflection_+_levels
*CAT: n
*SEM: twoRel[rel=24_+_sizes_+_where_+_high_+_deflection_+_levels]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 24_+_sizes_+_where_+_high_+_deflection_+_levels
*CAT: n
*SEM: orRel[rel=24_+_sizes_+_where_+_high_+_deflection_+_levels]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_and
*CAT: n
*SEM: unaryRel[rel=minimum_+_and]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_and
*CAT: n
*SEM: twoRel[rel=minimum_+_and]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_and
*CAT: n
*SEM: twoRel[rel=minimum_+_and]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_and
*CAT: n
*SEM: orRel[rel=minimum_+_and]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top.or
*CAT: n
*SEM: unaryRel[rel=top.or]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top.or
*CAT: n
*SEM: twoRel[rel=top.or]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top.or
*CAT: n
*SEM: twoRel[rel=top.or]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top.or
*CAT: n
*SEM: orRel[rel=top.or]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_water_+_ingress_+_in_+_the_+_boot_+_the_+_top_+_of_+_the_+_boot
*CAT: n
*SEM: unaryRel[rel=avoid_+_water_+_ingress_+_in_+_the_+_boot_+_the_+_top_+_of_+_the_+_boot]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_water_+_ingress_+_in_+_the_+_boot_+_the_+_top_+_of_+_the_+_boot
*CAT: n
*SEM: twoRel[rel=avoid_+_water_+_ingress_+_in_+_the_+_boot_+_the_+_top_+_of_+_the_+_boot]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_water_+_ingress_+_in_+_the_+_boot_+_the_+_top_+_of_+_the_+_boot
*CAT: n
*SEM: twoRel[rel=avoid_+_water_+_ingress_+_in_+_the_+_boot_+_the_+_top_+_of_+_the_+_boot]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_water_+_ingress_+_in_+_the_+_boot_+_the_+_top_+_of_+_the_+_boot
*CAT: n
*SEM: orRel[rel=avoid_+_water_+_ingress_+_in_+_the_+_boot_+_the_+_top_+_of_+_the_+_boot]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipesall_+_equipment
*CAT: n
*SEM: unaryRel[rel=pipesall_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipesall_+_equipment
*CAT: n
*SEM: twoRel[rel=pipesall_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipesall_+_equipment
*CAT: n
*SEM: twoRel[rel=pipesall_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipesall_+_equipment
*CAT: n
*SEM: orRel[rel=pipesall_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_clamp_+_asne_+_0033
*CAT: n
*SEM: unaryRel[rel=metallic_+_clamp_+_asne_+_0033]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_clamp_+_asne_+_0033
*CAT: n
*SEM: twoRel[rel=metallic_+_clamp_+_asne_+_0033]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_clamp_+_asne_+_0033
*CAT: n
*SEM: twoRel[rel=metallic_+_clamp_+_asne_+_0033]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_clamp_+_asne_+_0033
*CAT: n
*SEM: orRel[rel=metallic_+_clamp_+_asne_+_0033]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: if_+_standard_+_bracket_+_cannot_+_be_+_used_+_an_+_existing_+_drawn_+_bracket
*CAT: n
*SEM: unaryRel[rel=if_+_standard_+_bracket_+_cannot_+_be_+_used_+_an_+_existing_+_drawn_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: if_+_standard_+_bracket_+_cannot_+_be_+_used_+_an_+_existing_+_drawn_+_bracket
*CAT: n
*SEM: twoRel[rel=if_+_standard_+_bracket_+_cannot_+_be_+_used_+_an_+_existing_+_drawn_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: if_+_standard_+_bracket_+_cannot_+_be_+_used_+_an_+_existing_+_drawn_+_bracket
*CAT: n
*SEM: twoRel[rel=if_+_standard_+_bracket_+_cannot_+_be_+_used_+_an_+_existing_+_drawn_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: if_+_standard_+_bracket_+_cannot_+_be_+_used_+_an_+_existing_+_drawn_+_bracket
*CAT: n
*SEM: orRel[rel=if_+_standard_+_bracket_+_cannot_+_be_+_used_+_an_+_existing_+_drawn_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_pipes
*CAT: n
*SEM: unaryRel[rel=fuel_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_pipes
*CAT: n
*SEM: twoRel[rel=fuel_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_pipes
*CAT: n
*SEM: twoRel[rel=fuel_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_pipes
*CAT: n
*SEM: orRel[rel=fuel_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1423_+_stand-off_+__+_colonette
*CAT: n
*SEM: unaryRel[rel=abs1423_+_stand-off_+__+_colonette]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1423_+_stand-off_+__+_colonette
*CAT: n
*SEM: twoRel[rel=abs1423_+_stand-off_+__+_colonette]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1423_+_stand-off_+__+_colonette
*CAT: n
*SEM: twoRel[rel=abs1423_+_stand-off_+__+_colonette]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1423_+_stand-off_+__+_colonette
*CAT: n
*SEM: orRel[rel=abs1423_+_stand-off_+__+_colonette]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_repair
*CAT: n
*SEM: unaryRel[rel=1_+_repair]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_repair
*CAT: n
*SEM: twoRel[rel=1_+_repair]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_repair
*CAT: n
*SEM: twoRel[rel=1_+_repair]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1_+_repair
*CAT: n
*SEM: orRel[rel=1_+_repair]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermal_+_expansion
*CAT: n
*SEM: unaryRel[rel=thermal_+_expansion]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermal_+_expansion
*CAT: n
*SEM: twoRel[rel=thermal_+_expansion]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermal_+_expansion
*CAT: n
*SEM: twoRel[rel=thermal_+_expansion]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermal_+_expansion
*CAT: n
*SEM: orRel[rel=thermal_+_expansion]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_of_+_d_-_smallerThan_-__-_equalto_-__+_350mm_+_in_+_pylon
*CAT: n
*SEM: unaryRel[rel=maximum_+_pitch_+_of_+_d_-_smallerThan_-__-_equalto_-__+_350mm_+_in_+_pylon]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_of_+_d_-_smallerThan_-__-_equalto_-__+_350mm_+_in_+_pylon
*CAT: n
*SEM: twoRel[rel=maximum_+_pitch_+_of_+_d_-_smallerThan_-__-_equalto_-__+_350mm_+_in_+_pylon]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_of_+_d_-_smallerThan_-__-_equalto_-__+_350mm_+_in_+_pylon
*CAT: n
*SEM: twoRel[rel=maximum_+_pitch_+_of_+_d_-_smallerThan_-__-_equalto_-__+_350mm_+_in_+_pylon]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_of_+_d_-_smallerThan_-__-_equalto_-__+_350mm_+_in_+_pylon
*CAT: n
*SEM: orRel[rel=maximum_+_pitch_+_of_+_d_-_smallerThan_-__-_equalto_-__+_350mm_+_in_+_pylon]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_category
*CAT: n
*SEM: unaryRel[rel=route_+_category]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_category
*CAT: n
*SEM: twoRel[rel=route_+_category]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_category
*CAT: n
*SEM: twoRel[rel=route_+_category]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_category
*CAT: n
*SEM: orRel[rel=route_+_category]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_less
*CAT: n
*SEM: unaryRel[rel=not_+_less]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_less
*CAT: n
*SEM: twoRel[rel=not_+_less]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_less
*CAT: n
*SEM: twoRel[rel=not_+_less]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_less
*CAT: n
*SEM: orRel[rel=not_+_less]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: phase_+_a
*CAT: n
*SEM: unaryRel[rel=phase_+_a]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: phase_+_a
*CAT: n
*SEM: twoRel[rel=phase_+_a]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: phase_+_a
*CAT: n
*SEM: twoRel[rel=phase_+_a]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: phase_+_a
*CAT: n
*SEM: orRel[rel=phase_+_a]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_1
*CAT: n
*SEM: unaryRel[rel=network_+_1]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_1
*CAT: n
*SEM: twoRel[rel=network_+_1]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_1
*CAT: n
*SEM: twoRel[rel=network_+_1]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_1
*CAT: n
*SEM: orRel[rel=network_+_1]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamp
*CAT: n
*SEM: unaryRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamp
*CAT: n
*SEM: orRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_nsa5516_+_cbd
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_nsa5516_+_cbd]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_nsa5516_+_cbd
*CAT: n
*SEM: twoRel[rel=p-clamp_+_nsa5516_+_cbd]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_nsa5516_+_cbd
*CAT: n
*SEM: twoRel[rel=p-clamp_+_nsa5516_+_cbd]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_nsa5516_+_cbd
*CAT: n
*SEM: orRel[rel=p-clamp_+_nsa5516_+_cbd]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4d
*CAT: n
*SEM: unaryRel[rel=4d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4d
*CAT: n
*SEM: twoRel[rel=4d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4d
*CAT: n
*SEM: twoRel[rel=4d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4d
*CAT: n
*SEM: orRel[rel=4d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: internal_+_pressure
*CAT: n
*SEM: unaryRel[rel=internal_+_pressure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: internal_+_pressure
*CAT: n
*SEM: twoRel[rel=internal_+_pressure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: internal_+_pressure
*CAT: n
*SEM: twoRel[rel=internal_+_pressure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: internal_+_pressure
*CAT: n
*SEM: orRel[rel=internal_+_pressure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: jam_+_nut_+_connector
*CAT: n
*SEM: unaryRel[rel=jam_+_nut_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: jam_+_nut_+_connector
*CAT: n
*SEM: twoRel[rel=jam_+_nut_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: jam_+_nut_+_connector
*CAT: n
*SEM: twoRel[rel=jam_+_nut_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: jam_+_nut_+_connector
*CAT: n
*SEM: orRel[rel=jam_+_nut_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_part
*CAT: n
*SEM: unaryRel[rel=mechanical_+_part]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_part
*CAT: n
*SEM: twoRel[rel=mechanical_+_part]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_part
*CAT: n
*SEM: twoRel[rel=mechanical_+_part]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_part
*CAT: n
*SEM: orRel[rel=mechanical_+_part]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_between_+_two_+_pressurised_+_zones
*CAT: n
*SEM: unaryRel[rel=routings_+_between_+_two_+_pressurised_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_between_+_two_+_pressurised_+_zones
*CAT: n
*SEM: twoRel[rel=routings_+_between_+_two_+_pressurised_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_between_+_two_+_pressurised_+_zones
*CAT: n
*SEM: twoRel[rel=routings_+_between_+_two_+_pressurised_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_between_+_two_+_pressurised_+_zones
*CAT: n
*SEM: orRel[rel=routings_+_between_+_two_+_pressurised_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_tool_+_access.
*CAT: n
*SEM: unaryRel[rel=specific_+_tool_+_access.]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_tool_+_access.
*CAT: n
*SEM: twoRel[rel=specific_+_tool_+_access.]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_tool_+_access.
*CAT: n
*SEM: twoRel[rel=specific_+_tool_+_access.]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_tool_+_access.
*CAT: n
*SEM: orRel[rel=specific_+_tool_+_access.]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_on_+_receptable
*CAT: n
*SEM: unaryRel[rel=pin_+_on_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_on_+_receptable
*CAT: n
*SEM: twoRel[rel=pin_+_on_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_on_+_receptable
*CAT: n
*SEM: twoRel[rel=pin_+_on_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_on_+_receptable
*CAT: n
*SEM: orRel[rel=pin_+_on_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: growth
*CAT: n
*SEM: unaryRel[rel=growth]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: growth
*CAT: n
*SEM: twoRel[rel=growth]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: growth
*CAT: n
*SEM: twoRel[rel=growth]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: growth
*CAT: n
*SEM: orRel[rel=growth]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seals
*CAT: n
*SEM: unaryRel[rel=fire_+_seals]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seals
*CAT: n
*SEM: twoRel[rel=fire_+_seals]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seals
*CAT: n
*SEM: twoRel[rel=fire_+_seals]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seals
*CAT: n
*SEM: orRel[rel=fire_+_seals]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+__-_smallerThan_-__-_equalto_-__+_10mm_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_the_+_bundle_+_is_+_securely_+_routed_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_electrical_+_protection_+_is_+_provided
*CAT: n
*SEM: unaryRel[rel=length_+__-_smallerThan_-__-_equalto_-__+_10mm_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_the_+_bundle_+_is_+_securely_+_routed_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_electrical_+_protection_+_is_+_provided]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+__-_smallerThan_-__-_equalto_-__+_10mm_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_the_+_bundle_+_is_+_securely_+_routed_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_electrical_+_protection_+_is_+_provided
*CAT: n
*SEM: twoRel[rel=length_+__-_smallerThan_-__-_equalto_-__+_10mm_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_the_+_bundle_+_is_+_securely_+_routed_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_electrical_+_protection_+_is_+_provided]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+__-_smallerThan_-__-_equalto_-__+_10mm_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_the_+_bundle_+_is_+_securely_+_routed_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_electrical_+_protection_+_is_+_provided
*CAT: n
*SEM: twoRel[rel=length_+__-_smallerThan_-__-_equalto_-__+_10mm_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_the_+_bundle_+_is_+_securely_+_routed_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_electrical_+_protection_+_is_+_provided]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+__-_smallerThan_-__-_equalto_-__+_10mm_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_the_+_bundle_+_is_+_securely_+_routed_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_electrical_+_protection_+_is_+_provided
*CAT: n
*SEM: orRel[rel=length_+__-_smallerThan_-__-_equalto_-__+_10mm_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_the_+_bundle_+_is_+_securely_+_routed_+__-_smallerThan_-_br_+__-_backslash_-__-_greaterThan_-_-_+_electrical_+_protection_+_is_+_provided]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937210_+_heat_+_shrink_+_sleeve
*CAT: n
*SEM: unaryRel[rel=nsa937210_+_heat_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937210_+_heat_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa937210_+_heat_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937210_+_heat_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa937210_+_heat_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937210_+_heat_+_shrink_+_sleeve
*CAT: n
*SEM: orRel[rel=nsa937210_+_heat_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_means
*CAT: n
*SEM: unaryRel[rel=following_+_means]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_means
*CAT: n
*SEM: twoRel[rel=following_+_means]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_means
*CAT: n
*SEM: twoRel[rel=following_+_means]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_means
*CAT: n
*SEM: orRel[rel=following_+_means]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__-_equalto_-__+_50mm_+_in_+_pylon
*CAT: n
*SEM: unaryRel[rel=d_+__-_smallerThan_-__-_equalto_-__+_50mm_+_in_+_pylon]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__-_equalto_-__+_50mm_+_in_+_pylon
*CAT: n
*SEM: twoRel[rel=d_+__-_smallerThan_-__-_equalto_-__+_50mm_+_in_+_pylon]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__-_equalto_-__+_50mm_+_in_+_pylon
*CAT: n
*SEM: twoRel[rel=d_+__-_smallerThan_-__-_equalto_-__+_50mm_+_in_+_pylon]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__-_smallerThan_-__-_equalto_-__+_50mm_+_in_+_pylon
*CAT: n
*SEM: orRel[rel=d_+__-_smallerThan_-__-_equalto_-__+_50mm_+_in_+_pylon]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_ac_+_wiring
*CAT: n
*SEM: unaryRel[rel=normal_+_ac_+_wiring]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_ac_+_wiring
*CAT: n
*SEM: twoRel[rel=normal_+_ac_+_wiring]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_ac_+_wiring
*CAT: n
*SEM: twoRel[rel=normal_+_ac_+_wiring]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_ac_+_wiring
*CAT: n
*SEM: orRel[rel=normal_+_ac_+_wiring]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339-f
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_abs1339-f]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339-f
*CAT: n
*SEM: twoRel[rel=p-clamp_+_abs1339-f]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339-f
*CAT: n
*SEM: twoRel[rel=p-clamp_+_abs1339-f]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339-f
*CAT: n
*SEM: orRel[rel=p-clamp_+_abs1339-f]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tubing
*CAT: n
*SEM: unaryRel[rel=tubing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tubing
*CAT: n
*SEM: twoRel[rel=tubing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tubing
*CAT: n
*SEM: twoRel[rel=tubing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tubing
*CAT: n
*SEM: orRel[rel=tubing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: miain_+_vu_+_interfaces
*CAT: n
*SEM: unaryRel[rel=miain_+_vu_+_interfaces]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: miain_+_vu_+_interfaces
*CAT: n
*SEM: twoRel[rel=miain_+_vu_+_interfaces]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: miain_+_vu_+_interfaces
*CAT: n
*SEM: twoRel[rel=miain_+_vu_+_interfaces]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: miain_+_vu_+_interfaces
*CAT: n
*SEM: orRel[rel=miain_+_vu_+_interfaces]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_items_+_during_+_movement
*CAT: n
*SEM: unaryRel[rel=other_+_items_+_during_+_movement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_items_+_during_+_movement
*CAT: n
*SEM: twoRel[rel=other_+_items_+_during_+_movement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_items_+_during_+_movement
*CAT: n
*SEM: twoRel[rel=other_+_items_+_during_+_movement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_items_+_during_+_movement
*CAT: n
*SEM: orRel[rel=other_+_items_+_during_+_movement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearly_+_define_+_the_+_p-clamp
*CAT: n
*SEM: unaryRel[rel=clearly_+_define_+_the_+_p-clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearly_+_define_+_the_+_p-clamp
*CAT: n
*SEM: twoRel[rel=clearly_+_define_+_the_+_p-clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearly_+_define_+_the_+_p-clamp
*CAT: n
*SEM: twoRel[rel=clearly_+_define_+_the_+_p-clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearly_+_define_+_the_+_p-clamp
*CAT: n
*SEM: orRel[rel=clearly_+_define_+_the_+_p-clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: solver_+_sleeve
*CAT: n
*SEM: unaryRel[rel=solver_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: solver_+_sleeve
*CAT: n
*SEM: twoRel[rel=solver_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: solver_+_sleeve
*CAT: n
*SEM: twoRel[rel=solver_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: solver_+_sleeve
*CAT: n
*SEM: orRel[rel=solver_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dummy_+_plugs
*CAT: n
*SEM: unaryRel[rel=dummy_+_plugs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dummy_+_plugs
*CAT: n
*SEM: twoRel[rel=dummy_+_plugs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dummy_+_plugs
*CAT: n
*SEM: twoRel[rel=dummy_+_plugs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dummy_+_plugs
*CAT: n
*SEM: orRel[rel=dummy_+_plugs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3600
*CAT: n
*SEM: unaryRel[rel=en3600]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3600
*CAT: n
*SEM: twoRel[rel=en3600]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3600
*CAT: n
*SEM: twoRel[rel=en3600]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3600
*CAT: n
*SEM: orRel[rel=en3600]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_diode_+__-_opensb_-_vd_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=level_+_of_+_virtual_+_diode_+__-_opensb_-_vd_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_diode_+__-_opensb_-_vd_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=level_+_of_+_virtual_+_diode_+__-_opensb_-_vd_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_diode_+__-_opensb_-_vd_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=level_+_of_+_virtual_+_diode_+__-_opensb_-_vd_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_diode_+__-_opensb_-_vd_-_closesb_-_
*CAT: n
*SEM: orRel[rel=level_+_of_+_virtual_+_diode_+__-_opensb_-_vd_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: their_+_nominal_+_support_+_dimension_+__-_opensb_-_as_+_per_+_attached_+_figure_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=their_+_nominal_+_support_+_dimension_+__-_opensb_-_as_+_per_+_attached_+_figure_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: their_+_nominal_+_support_+_dimension_+__-_opensb_-_as_+_per_+_attached_+_figure_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=their_+_nominal_+_support_+_dimension_+__-_opensb_-_as_+_per_+_attached_+_figure_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: their_+_nominal_+_support_+_dimension_+__-_opensb_-_as_+_per_+_attached_+_figure_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=their_+_nominal_+_support_+_dimension_+__-_opensb_-_as_+_per_+_attached_+_figure_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: their_+_nominal_+_support_+_dimension_+__-_opensb_-_as_+_per_+_attached_+_figure_-_closesb_-_
*CAT: n
*SEM: orRel[rel=their_+_nominal_+_support_+_dimension_+__-_opensb_-_as_+_per_+_attached_+_figure_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50mmor_+_50_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm
*CAT: n
*SEM: unaryRel[rel=50mmor_+_50_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50mmor_+_50_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm
*CAT: n
*SEM: twoRel[rel=50mmor_+_50_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50mmor_+_50_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm
*CAT: n
*SEM: twoRel[rel=50mmor_+_50_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 50mmor_+_50_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm
*CAT: n
*SEM: orRel[rel=50mmor_+_50_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: manufacturing_+_tolerances
*CAT: n
*SEM: unaryRel[rel=manufacturing_+_tolerances]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: manufacturing_+_tolerances
*CAT: n
*SEM: twoRel[rel=manufacturing_+_tolerances]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: manufacturing_+_tolerances
*CAT: n
*SEM: twoRel[rel=manufacturing_+_tolerances]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: manufacturing_+_tolerances
*CAT: n
*SEM: orRel[rel=manufacturing_+_tolerances]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movement._+_there
*CAT: n
*SEM: unaryRel[rel=movement._+_there]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movement._+_there
*CAT: n
*SEM: twoRel[rel=movement._+_there]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movement._+_there
*CAT: n
*SEM: twoRel[rel=movement._+_there]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movement._+_there
*CAT: n
*SEM: orRel[rel=movement._+_there]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_wire
*CAT: n
*SEM: unaryRel[rel=two_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_wire
*CAT: n
*SEM: twoRel[rel=two_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_wire
*CAT: n
*SEM: twoRel[rel=two_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_wire
*CAT: n
*SEM: orRel[rel=two_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-_25mmor
*CAT: n
*SEM: unaryRel[rel=d_-_greaterThan_-__-_equalto_-_25mmor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-_25mmor
*CAT: n
*SEM: twoRel[rel=d_-_greaterThan_-__-_equalto_-_25mmor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-_25mmor
*CAT: n
*SEM: twoRel[rel=d_-_greaterThan_-__-_equalto_-_25mmor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_-_greaterThan_-__-_equalto_-_25mmor
*CAT: n
*SEM: orRel[rel=d_-_greaterThan_-__-_equalto_-_25mmor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_far
*CAT: n
*SEM: unaryRel[rel=as_+_far]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_far
*CAT: n
*SEM: twoRel[rel=as_+_far]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_far
*CAT: n
*SEM: twoRel[rel=as_+_far]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_far
*CAT: n
*SEM: orRel[rel=as_+_far]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stowage_+_receptable_+_equipped
*CAT: n
*SEM: unaryRel[rel=stowage_+_receptable_+_equipped]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stowage_+_receptable_+_equipped
*CAT: n
*SEM: twoRel[rel=stowage_+_receptable_+_equipped]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stowage_+_receptable_+_equipped
*CAT: n
*SEM: twoRel[rel=stowage_+_receptable_+_equipped]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stowage_+_receptable_+_equipped
*CAT: n
*SEM: orRel[rel=stowage_+_receptable_+_equipped]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_20_+__-_percent_-_
*CAT: n
*SEM: unaryRel[rel=account_+_20_+__-_percent_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_20_+__-_percent_-_
*CAT: n
*SEM: twoRel[rel=account_+_20_+__-_percent_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_20_+__-_percent_-_
*CAT: n
*SEM: twoRel[rel=account_+_20_+__-_percent_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: account_+_20_+__-_percent_-_
*CAT: n
*SEM: orRel[rel=account_+_20_+__-_percent_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5_-_closesb_-__+_standard_+_solution
*CAT: n
*SEM: unaryRel[rel=5_-_closesb_-__+_standard_+_solution]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5_-_closesb_-__+_standard_+_solution
*CAT: n
*SEM: twoRel[rel=5_-_closesb_-__+_standard_+_solution]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5_-_closesb_-__+_standard_+_solution
*CAT: n
*SEM: twoRel[rel=5_-_closesb_-__+_standard_+_solution]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5_-_closesb_-__+_standard_+_solution
*CAT: n
*SEM: orRel[rel=5_-_closesb_-__+_standard_+_solution]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detoriation
*CAT: n
*SEM: unaryRel[rel=detoriation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detoriation
*CAT: n
*SEM: twoRel[rel=detoriation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detoriation
*CAT: n
*SEM: twoRel[rel=detoriation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detoriation
*CAT: n
*SEM: orRel[rel=detoriation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_brackets_+_supporting_+_an_+_intermediate_+_bracket
*CAT: n
*SEM: unaryRel[rel=bonding_+_brackets_+_supporting_+_an_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_brackets_+_supporting_+_an_+_intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=bonding_+_brackets_+_supporting_+_an_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_brackets_+_supporting_+_an_+_intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=bonding_+_brackets_+_supporting_+_an_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_brackets_+_supporting_+_an_+_intermediate_+_bracket
*CAT: n
*SEM: orRel[rel=bonding_+_brackets_+_supporting_+_an_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separators
*CAT: n
*SEM: unaryRel[rel=separators]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separators
*CAT: n
*SEM: twoRel[rel=separators]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separators
*CAT: n
*SEM: twoRel[rel=separators]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separators
*CAT: n
*SEM: orRel[rel=separators]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front
*CAT: n
*SEM: unaryRel[rel=front]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front
*CAT: n
*SEM: twoRel[rel=front]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front
*CAT: n
*SEM: twoRel[rel=front]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front
*CAT: n
*SEM: orRel[rel=front]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system
*CAT: n
*SEM: unaryRel[rel=bleed_+_air_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system
*CAT: n
*SEM: twoRel[rel=bleed_+_air_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system
*CAT: n
*SEM: twoRel[rel=bleed_+_air_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system
*CAT: n
*SEM: orRel[rel=bleed_+_air_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer_+_reference
*CAT: n
*SEM: unaryRel[rel=stringer_+_reference]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer_+_reference
*CAT: n
*SEM: twoRel[rel=stringer_+_reference]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer_+_reference
*CAT: n
*SEM: twoRel[rel=stringer_+_reference]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer_+_reference
*CAT: n
*SEM: orRel[rel=stringer_+_reference]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tape_+_when
*CAT: n
*SEM: unaryRel[rel=tape_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tape_+_when
*CAT: n
*SEM: twoRel[rel=tape_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tape_+_when
*CAT: n
*SEM: twoRel[rel=tape_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tape_+_when
*CAT: n
*SEM: orRel[rel=tape_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stainless_+_steel_+_en_+_2997_+_connector
*CAT: n
*SEM: unaryRel[rel=stainless_+_steel_+_en_+_2997_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stainless_+_steel_+_en_+_2997_+_connector
*CAT: n
*SEM: twoRel[rel=stainless_+_steel_+_en_+_2997_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stainless_+_steel_+_en_+_2997_+_connector
*CAT: n
*SEM: twoRel[rel=stainless_+_steel_+_en_+_2997_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stainless_+_steel_+_en_+_2997_+_connector
*CAT: n
*SEM: orRel[rel=stainless_+_steel_+_en_+_2997_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 37_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm
*CAT: n
*SEM: unaryRel[rel=37_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 37_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm
*CAT: n
*SEM: twoRel[rel=37_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 37_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm
*CAT: n
*SEM: twoRel[rel=37_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 37_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm
*CAT: n
*SEM: orRel[rel=37_+__-_greaterThan_-__+__-_equalto_-__+_d_+__-_greaterThan_-__+__-_equalto_-__+_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: smallest_+_clearance
*CAT: n
*SEM: unaryRel[rel=smallest_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: smallest_+_clearance
*CAT: n
*SEM: twoRel[rel=smallest_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: smallest_+_clearance
*CAT: n
*SEM: twoRel[rel=smallest_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: smallest_+_clearance
*CAT: n
*SEM: orRel[rel=smallest_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 26_+_to_+_10
*CAT: n
*SEM: unaryRel[rel=26_+_to_+_10]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 26_+_to_+_10
*CAT: n
*SEM: twoRel[rel=26_+_to_+_10]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 26_+_to_+_10
*CAT: n
*SEM: twoRel[rel=26_+_to_+_10]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 26_+_to_+_10
*CAT: n
*SEM: orRel[rel=26_+_to_+_10]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s-route
*CAT: n
*SEM: unaryRel[rel=s-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s-route
*CAT: n
*SEM: twoRel[rel=s-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s-route
*CAT: n
*SEM: twoRel[rel=s-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s-route
*CAT: n
*SEM: orRel[rel=s-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: main_+_vu_+_interfaces
*CAT: n
*SEM: unaryRel[rel=main_+_vu_+_interfaces]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: main_+_vu_+_interfaces
*CAT: n
*SEM: twoRel[rel=main_+_vu_+_interfaces]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: main_+_vu_+_interfaces
*CAT: n
*SEM: twoRel[rel=main_+_vu_+_interfaces]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: main_+_vu_+_interfaces
*CAT: n
*SEM: orRel[rel=main_+_vu_+_interfaces]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_bend
*CAT: n
*SEM: unaryRel[rel=second_+_bend]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_bend
*CAT: n
*SEM: twoRel[rel=second_+_bend]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_bend
*CAT: n
*SEM: twoRel[rel=second_+_bend]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: second_+_bend
*CAT: n
*SEM: orRel[rel=second_+_bend]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongation
*CAT: n
*SEM: unaryRel[rel=elongation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongation
*CAT: n
*SEM: twoRel[rel=elongation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongation
*CAT: n
*SEM: twoRel[rel=elongation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongation
*CAT: n
*SEM: orRel[rel=elongation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: snap_+_technology
*CAT: n
*SEM: unaryRel[rel=snap_+_technology]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: snap_+_technology
*CAT: n
*SEM: twoRel[rel=snap_+_technology]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: snap_+_technology
*CAT: n
*SEM: twoRel[rel=snap_+_technology]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: snap_+_technology
*CAT: n
*SEM: orRel[rel=snap_+_technology]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_a
*CAT: n
*SEM: unaryRel[rel=case_+_a]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_a
*CAT: n
*SEM: twoRel[rel=case_+_a]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_a
*CAT: n
*SEM: twoRel[rel=case_+_a]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_a
*CAT: n
*SEM: orRel[rel=case_+_a]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: carbon_+_tank
*CAT: n
*SEM: unaryRel[rel=carbon_+_tank]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: carbon_+_tank
*CAT: n
*SEM: twoRel[rel=carbon_+_tank]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: carbon_+_tank
*CAT: n
*SEM: twoRel[rel=carbon_+_tank]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: carbon_+_tank
*CAT: n
*SEM: orRel[rel=carbon_+_tank]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0121_+_connector
*CAT: n
*SEM: unaryRel[rel=abs_+_0121_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0121_+_connector
*CAT: n
*SEM: twoRel[rel=abs_+_0121_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0121_+_connector
*CAT: n
*SEM: twoRel[rel=abs_+_0121_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0121_+_connector
*CAT: n
*SEM: orRel[rel=abs_+_0121_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5569_+_double_+_clamp
*CAT: n
*SEM: unaryRel[rel=nsa5569_+_double_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5569_+_double_+_clamp
*CAT: n
*SEM: twoRel[rel=nsa5569_+_double_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5569_+_double_+_clamp
*CAT: n
*SEM: twoRel[rel=nsa5569_+_double_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5569_+_double_+_clamp
*CAT: n
*SEM: orRel[rel=nsa5569_+_double_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 200_+_to_+_250_+_mm
*CAT: n
*SEM: unaryRel[rel=200_+_to_+_250_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 200_+_to_+_250_+_mm
*CAT: n
*SEM: twoRel[rel=200_+_to_+_250_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 200_+_to_+_250_+_mm
*CAT: n
*SEM: twoRel[rel=200_+_to_+_250_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 200_+_to_+_250_+_mm
*CAT: n
*SEM: orRel[rel=200_+_to_+_250_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: higher
*CAT: n
*SEM: unaryRel[rel=higher]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: higher
*CAT: n
*SEM: twoRel[rel=higher]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: higher
*CAT: n
*SEM: twoRel[rel=higher]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: higher
*CAT: n
*SEM: orRel[rel=higher]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_layer_+_nsa_+_5107-b_+_black_+_tape
*CAT: n
*SEM: unaryRel[rel=2_+_layer_+_nsa_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_layer_+_nsa_+_5107-b_+_black_+_tape
*CAT: n
*SEM: twoRel[rel=2_+_layer_+_nsa_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_layer_+_nsa_+_5107-b_+_black_+_tape
*CAT: n
*SEM: twoRel[rel=2_+_layer_+_nsa_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_layer_+_nsa_+_5107-b_+_black_+_tape
*CAT: n
*SEM: orRel[rel=2_+_layer_+_nsa_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: exept
*CAT: n
*SEM: unaryRel[rel=exept]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: exept
*CAT: n
*SEM: twoRel[rel=exept]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: exept
*CAT: n
*SEM: twoRel[rel=exept]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: exept
*CAT: n
*SEM: orRel[rel=exept]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm
*CAT: n
*SEM: unaryRel[rel=20mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm
*CAT: n
*SEM: twoRel[rel=20mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm
*CAT: n
*SEM: twoRel[rel=20mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20mm
*CAT: n
*SEM: orRel[rel=20mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_core_+_identifying
*CAT: n
*SEM: unaryRel[rel=each_+_core_+_identifying]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_core_+_identifying
*CAT: n
*SEM: twoRel[rel=each_+_core_+_identifying]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_core_+_identifying
*CAT: n
*SEM: twoRel[rel=each_+_core_+_identifying]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_core_+_identifying
*CAT: n
*SEM: orRel[rel=each_+_core_+_identifying]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dash_+_20
*CAT: n
*SEM: unaryRel[rel=dash_+_20]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dash_+_20
*CAT: n
*SEM: twoRel[rel=dash_+_20]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dash_+_20
*CAT: n
*SEM: twoRel[rel=dash_+_20]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dash_+_20
*CAT: n
*SEM: orRel[rel=dash_+_20]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_nsa5590_+_double-_+_clamp
*CAT: n
*SEM: unaryRel[rel=specific_+_nsa5590_+_double-_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_nsa5590_+_double-_+_clamp
*CAT: n
*SEM: twoRel[rel=specific_+_nsa5590_+_double-_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_nsa5590_+_double-_+_clamp
*CAT: n
*SEM: twoRel[rel=specific_+_nsa5590_+_double-_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_nsa5590_+_double-_+_clamp
*CAT: n
*SEM: orRel[rel=specific_+_nsa5590_+_double-_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mainly
*CAT: n
*SEM: unaryRel[rel=mainly]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mainly
*CAT: n
*SEM: twoRel[rel=mainly]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mainly
*CAT: n
*SEM: twoRel[rel=mainly]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mainly
*CAT: n
*SEM: orRel[rel=mainly]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongated
*CAT: n
*SEM: unaryRel[rel=elongated]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongated
*CAT: n
*SEM: twoRel[rel=elongated]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongated
*CAT: n
*SEM: twoRel[rel=elongated]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongated
*CAT: n
*SEM: orRel[rel=elongated]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5000psi
*CAT: n
*SEM: unaryRel[rel=5000psi]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5000psi
*CAT: n
*SEM: twoRel[rel=5000psi]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5000psi
*CAT: n
*SEM: twoRel[rel=5000psi]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5000psi
*CAT: n
*SEM: orRel[rel=5000psi]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_clearance
*CAT: n
*SEM: unaryRel[rel=sufficient_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_clearance
*CAT: n
*SEM: twoRel[rel=sufficient_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_clearance
*CAT: n
*SEM: twoRel[rel=sufficient_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_clearance
*CAT: n
*SEM: orRel[rel=sufficient_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516_+_p-clamp_+_type_+_b
*CAT: n
*SEM: unaryRel[rel=nsa_+_5516_+_p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516_+_p-clamp_+_type_+_b
*CAT: n
*SEM: twoRel[rel=nsa_+_5516_+_p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516_+_p-clamp_+_type_+_b
*CAT: n
*SEM: twoRel[rel=nsa_+_5516_+_p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516_+_p-clamp_+_type_+_b
*CAT: n
*SEM: orRel[rel=nsa_+_5516_+_p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or
*CAT: n
*SEM: unaryRel[rel=or]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or
*CAT: n
*SEM: twoRel[rel=or]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or
*CAT: n
*SEM: twoRel[rel=or]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or
*CAT: n
*SEM: orRel[rel=or]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: unaryRel[rel=sleeve_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=sleeve_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: twoRel[rel=sleeve_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_
*CAT: n
*SEM: orRel[rel=sleeve_+__-_smallerThan_-__+_br_+__+__-_greaterThan_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_beside_+__-_opensb_-_horizontal_-_closesb_-_
*CAT: n
*SEM: unaryRel[rel=non_+_conductive_+_structure_+_beside_+__-_opensb_-_horizontal_-_closesb_-_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_beside_+__-_opensb_-_horizontal_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure_+_beside_+__-_opensb_-_horizontal_-_closesb_-_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_beside_+__-_opensb_-_horizontal_-_closesb_-_
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure_+_beside_+__-_opensb_-_horizontal_-_closesb_-_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_beside_+__-_opensb_-_horizontal_-_closesb_-_
*CAT: n
*SEM: orRel[rel=non_+_conductive_+_structure_+_beside_+__-_opensb_-_horizontal_-_closesb_-_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2997_+_class_+_rs
*CAT: n
*SEM: unaryRel[rel=2997_+_class_+_rs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2997_+_class_+_rs
*CAT: n
*SEM: twoRel[rel=2997_+_class_+_rs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2997_+_class_+_rs
*CAT: n
*SEM: twoRel[rel=2997_+_class_+_rs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2997_+_class_+_rs
*CAT: n
*SEM: orRel[rel=2997_+_class_+_rs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pax_+_floor
*CAT: n
*SEM: unaryRel[rel=pax_+_floor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pax_+_floor
*CAT: n
*SEM: twoRel[rel=pax_+_floor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pax_+_floor
*CAT: n
*SEM: twoRel[rel=pax_+_floor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pax_+_floor
*CAT: n
*SEM: orRel[rel=pax_+_floor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size
*CAT: n
*SEM: unaryRel[rel=size]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size
*CAT: n
*SEM: twoRel[rel=size]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size
*CAT: n
*SEM: twoRel[rel=size]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size
*CAT: n
*SEM: orRel[rel=size]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: glued_+_label
*CAT: n
*SEM: unaryRel[rel=glued_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: glued_+_label
*CAT: n
*SEM: twoRel[rel=glued_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: glued_+_label
*CAT: n
*SEM: twoRel[rel=glued_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: glued_+_label
*CAT: n
*SEM: orRel[rel=glued_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_bend_+_radius
*CAT: n
*SEM: unaryRel[rel=harness_+_bend_+_radius]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_bend_+_radius
*CAT: n
*SEM: twoRel[rel=harness_+_bend_+_radius]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_bend_+_radius
*CAT: n
*SEM: twoRel[rel=harness_+_bend_+_radius]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_bend_+_radius
*CAT: n
*SEM: orRel[rel=harness_+_bend_+_radius]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch
*CAT: n
*SEM: unaryRel[rel=pitch]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch
*CAT: n
*SEM: twoRel[rel=pitch]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch
*CAT: n
*SEM: twoRel[rel=pitch]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch
*CAT: n
*SEM: orRel[rel=pitch]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_diametrical_+_opposed_+_screw_+_in_+_un-pressurized_+_area
*CAT: n
*SEM: unaryRel[rel=four_+_diametrical_+_opposed_+_screw_+_in_+_un-pressurized_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_diametrical_+_opposed_+_screw_+_in_+_un-pressurized_+_area
*CAT: n
*SEM: twoRel[rel=four_+_diametrical_+_opposed_+_screw_+_in_+_un-pressurized_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_diametrical_+_opposed_+_screw_+_in_+_un-pressurized_+_area
*CAT: n
*SEM: twoRel[rel=four_+_diametrical_+_opposed_+_screw_+_in_+_un-pressurized_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_diametrical_+_opposed_+_screw_+_in_+_un-pressurized_+_area
*CAT: n
*SEM: orRel[rel=four_+_diametrical_+_opposed_+_screw_+_in_+_un-pressurized_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice
*CAT: n
*SEM: unaryRel[rel=virtual_+_splice]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice
*CAT: n
*SEM: twoRel[rel=virtual_+_splice]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice
*CAT: n
*SEM: twoRel[rel=virtual_+_splice]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice
*CAT: n
*SEM: orRel[rel=virtual_+_splice]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: floor
*CAT: n
*SEM: unaryRel[rel=floor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: floor
*CAT: n
*SEM: twoRel[rel=floor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: floor
*CAT: n
*SEM: twoRel[rel=floor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: floor
*CAT: n
*SEM: orRel[rel=floor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_problem_+_occurring
*CAT: n
*SEM: unaryRel[rel=any_+_problem_+_occurring]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_problem_+_occurring
*CAT: n
*SEM: twoRel[rel=any_+_problem_+_occurring]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_problem_+_occurring
*CAT: n
*SEM: twoRel[rel=any_+_problem_+_occurring]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_problem_+_occurring
*CAT: n
*SEM: orRel[rel=any_+_problem_+_occurring]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6
*CAT: n
*SEM: unaryRel[rel=6]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6
*CAT: n
*SEM: twoRel[rel=6]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6
*CAT: n
*SEM: twoRel[rel=6]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 6
*CAT: n
*SEM: orRel[rel=6]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_nsa935401
*CAT: n
*SEM: unaryRel[rel=cable_+_tie_+_nsa935401]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_nsa935401
*CAT: n
*SEM: twoRel[rel=cable_+_tie_+_nsa935401]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_nsa935401
*CAT: n
*SEM: twoRel[rel=cable_+_tie_+_nsa935401]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_nsa935401
*CAT: n
*SEM: orRel[rel=cable_+_tie_+_nsa935401]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_connector
*CAT: n
*SEM: unaryRel[rel=commercial_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_connector
*CAT: n
*SEM: twoRel[rel=commercial_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_connector
*CAT: n
*SEM: twoRel[rel=commercial_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_connector
*CAT: n
*SEM: orRel[rel=commercial_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_to_+_any_+_structural_+_part
*CAT: n
*SEM: unaryRel[rel=distance_+_to_+_any_+_structural_+_part]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_to_+_any_+_structural_+_part
*CAT: n
*SEM: twoRel[rel=distance_+_to_+_any_+_structural_+_part]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_to_+_any_+_structural_+_part
*CAT: n
*SEM: twoRel[rel=distance_+_to_+_any_+_structural_+_part]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_to_+_any_+_structural_+_part
*CAT: n
*SEM: orRel[rel=distance_+_to_+_any_+_structural_+_part]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: un-pressurized_+_area
*CAT: n
*SEM: unaryRel[rel=un-pressurized_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: un-pressurized_+_area
*CAT: n
*SEM: twoRel[rel=un-pressurized_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: un-pressurized_+_area
*CAT: n
*SEM: twoRel[rel=un-pressurized_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: un-pressurized_+_area
*CAT: n
*SEM: orRel[rel=un-pressurized_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_flammable_+_fluids
*CAT: n
*SEM: unaryRel[rel=non_+_flammable_+_fluids]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_flammable_+_fluids
*CAT: n
*SEM: twoRel[rel=non_+_flammable_+_fluids]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_flammable_+_fluids
*CAT: n
*SEM: twoRel[rel=non_+_flammable_+_fluids]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_flammable_+_fluids
*CAT: n
*SEM: orRel[rel=non_+_flammable_+_fluids]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: t_+__-_smallerThan_-__+_150_-_degrees_-_c
*CAT: n
*SEM: unaryRel[rel=t_+__-_smallerThan_-__+_150_-_degrees_-_c]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: t_+__-_smallerThan_-__+_150_-_degrees_-_c
*CAT: n
*SEM: twoRel[rel=t_+__-_smallerThan_-__+_150_-_degrees_-_c]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: t_+__-_smallerThan_-__+_150_-_degrees_-_c
*CAT: n
*SEM: twoRel[rel=t_+__-_smallerThan_-__+_150_-_degrees_-_c]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: t_+__-_smallerThan_-__+_150_-_degrees_-_c
*CAT: n
*SEM: orRel[rel=t_+__-_smallerThan_-__+_150_-_degrees_-_c]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_standard_+_equipment
*CAT: n
*SEM: unaryRel[rel=same_+_standard_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_standard_+_equipment
*CAT: n
*SEM: twoRel[rel=same_+_standard_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_standard_+_equipment
*CAT: n
*SEM: twoRel[rel=same_+_standard_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_standard_+_equipment
*CAT: n
*SEM: orRel[rel=same_+_standard_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_ns935401_+_cable_+_tie_+_would_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=single_+_ns935401_+_cable_+_tie_+_would_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_ns935401_+_cable_+_tie_+_would_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=single_+_ns935401_+_cable_+_tie_+_would_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_ns935401_+_cable_+_tie_+_would_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=single_+_ns935401_+_cable_+_tie_+_would_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_ns935401_+_cable_+_tie_+_would_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=single_+_ns935401_+_cable_+_tie_+_would_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaged_+_unions
*CAT: n
*SEM: unaryRel[rel=in-situ_+_swaged_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaged_+_unions
*CAT: n
*SEM: twoRel[rel=in-situ_+_swaged_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaged_+_unions
*CAT: n
*SEM: twoRel[rel=in-situ_+_swaged_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaged_+_unions
*CAT: n
*SEM: orRel[rel=in-situ_+_swaged_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_especially
*CAT: n
*SEM: unaryRel[rel=bundle_+_especially]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_especially
*CAT: n
*SEM: twoRel[rel=bundle_+_especially]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_especially
*CAT: n
*SEM: twoRel[rel=bundle_+_especially]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_especially
*CAT: n
*SEM: orRel[rel=bundle_+_especially]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plug_+_when
*CAT: n
*SEM: unaryRel[rel=plug_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plug_+_when
*CAT: n
*SEM: twoRel[rel=plug_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plug_+_when
*CAT: n
*SEM: twoRel[rel=plug_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plug_+_when
*CAT: n
*SEM: orRel[rel=plug_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_attachment_+_device_+_when
*CAT: n
*SEM: unaryRel[rel=one_+_attachment_+_device_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_attachment_+_device_+_when
*CAT: n
*SEM: twoRel[rel=one_+_attachment_+_device_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_attachment_+_device_+_when
*CAT: n
*SEM: twoRel[rel=one_+_attachment_+_device_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_attachment_+_device_+_when
*CAT: n
*SEM: orRel[rel=one_+_attachment_+_device_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_standards
*CAT: n
*SEM: unaryRel[rel=following_+_standards]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_standards
*CAT: n
*SEM: twoRel[rel=following_+_standards]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_standards
*CAT: n
*SEM: twoRel[rel=following_+_standards]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_standards
*CAT: n
*SEM: orRel[rel=following_+_standards]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: such_+_a_+_way_+_that_+_individual_+_removal_+_of_+_each_+_instrument_+_is_+_possible
*CAT: n
*SEM: unaryRel[rel=such_+_a_+_way_+_that_+_individual_+_removal_+_of_+_each_+_instrument_+_is_+_possible]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: such_+_a_+_way_+_that_+_individual_+_removal_+_of_+_each_+_instrument_+_is_+_possible
*CAT: n
*SEM: twoRel[rel=such_+_a_+_way_+_that_+_individual_+_removal_+_of_+_each_+_instrument_+_is_+_possible]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: such_+_a_+_way_+_that_+_individual_+_removal_+_of_+_each_+_instrument_+_is_+_possible
*CAT: n
*SEM: twoRel[rel=such_+_a_+_way_+_that_+_individual_+_removal_+_of_+_each_+_instrument_+_is_+_possible]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: such_+_a_+_way_+_that_+_individual_+_removal_+_of_+_each_+_instrument_+_is_+_possible
*CAT: n
*SEM: orRel[rel=such_+_a_+_way_+_that_+_individual_+_removal_+_of_+_each_+_instrument_+_is_+_possible]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passing
*CAT: n
*SEM: unaryRel[rel=passing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passing
*CAT: n
*SEM: twoRel[rel=passing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passing
*CAT: n
*SEM: twoRel[rel=passing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passing
*CAT: n
*SEM: orRel[rel=passing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937901_+_virtual_+_modul_+_rail
*CAT: n
*SEM: unaryRel[rel=nsa937901_+_virtual_+_modul_+_rail]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937901_+_virtual_+_modul_+_rail
*CAT: n
*SEM: twoRel[rel=nsa937901_+_virtual_+_modul_+_rail]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937901_+_virtual_+_modul_+_rail
*CAT: n
*SEM: twoRel[rel=nsa937901_+_virtual_+_modul_+_rail]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937901_+_virtual_+_modul_+_rail
*CAT: n
*SEM: orRel[rel=nsa937901_+_virtual_+_modul_+_rail]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_datum_+_marker
*CAT: n
*SEM: unaryRel[rel=flag_+_datum_+_marker]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_datum_+_marker
*CAT: n
*SEM: twoRel[rel=flag_+_datum_+_marker]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_datum_+_marker
*CAT: n
*SEM: twoRel[rel=flag_+_datum_+_marker]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_datum_+_marker
*CAT: n
*SEM: orRel[rel=flag_+_datum_+_marker]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 08_-_closesb_-__+_pipes
*CAT: n
*SEM: unaryRel[rel=08_-_closesb_-__+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 08_-_closesb_-__+_pipes
*CAT: n
*SEM: twoRel[rel=08_-_closesb_-__+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 08_-_closesb_-__+_pipes
*CAT: n
*SEM: twoRel[rel=08_-_closesb_-__+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 08_-_closesb_-__+_pipes
*CAT: n
*SEM: orRel[rel=08_-_closesb_-__+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5._+_label
*CAT: n
*SEM: unaryRel[rel=5._+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5._+_label
*CAT: n
*SEM: twoRel[rel=5._+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5._+_label
*CAT: n
*SEM: twoRel[rel=5._+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5._+_label
*CAT: n
*SEM: orRel[rel=5._+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_b
*CAT: n
*SEM: unaryRel[rel=position_+_b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_b
*CAT: n
*SEM: twoRel[rel=position_+_b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_b
*CAT: n
*SEM: twoRel[rel=position_+_b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_b
*CAT: n
*SEM: orRel[rel=position_+_b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway_+_either
*CAT: n
*SEM: unaryRel[rel=raceway_+_either]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway_+_either
*CAT: n
*SEM: twoRel[rel=raceway_+_either]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway_+_either
*CAT: n
*SEM: twoRel[rel=raceway_+_either]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway_+_either
*CAT: n
*SEM: orRel[rel=raceway_+_either]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_item
*CAT: n
*SEM: unaryRel[rel=equipment_+_item]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_item
*CAT: n
*SEM: twoRel[rel=equipment_+_item]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_item
*CAT: n
*SEM: twoRel[rel=equipment_+_item]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_item
*CAT: n
*SEM: orRel[rel=equipment_+_item]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system.
*CAT: n
*SEM: unaryRel[rel=receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system.]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system.
*CAT: n
*SEM: twoRel[rel=receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system.]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system.
*CAT: n
*SEM: twoRel[rel=receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system.]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system.
*CAT: n
*SEM: orRel[rel=receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system.]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: replacement
*CAT: n
*SEM: unaryRel[rel=replacement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: replacement
*CAT: n
*SEM: twoRel[rel=replacement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: replacement
*CAT: n
*SEM: twoRel[rel=replacement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: replacement
*CAT: n
*SEM: orRel[rel=replacement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935805
*CAT: n
*SEM: unaryRel[rel=nsa_+_935805]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935805
*CAT: n
*SEM: twoRel[rel=nsa_+_935805]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935805
*CAT: n
*SEM: twoRel[rel=nsa_+_935805]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935805
*CAT: n
*SEM: orRel[rel=nsa_+_935805]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modules_+_resistor
*CAT: n
*SEM: unaryRel[rel=modules_+_resistor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modules_+_resistor
*CAT: n
*SEM: twoRel[rel=modules_+_resistor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modules_+_resistor
*CAT: n
*SEM: twoRel[rel=modules_+_resistor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modules_+_resistor
*CAT: n
*SEM: orRel[rel=modules_+_resistor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing_+_of_+_two
*CAT: n
*SEM: unaryRel[rel=routing_+_of_+_two]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing_+_of_+_two
*CAT: n
*SEM: twoRel[rel=routing_+_of_+_two]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing_+_of_+_two
*CAT: n
*SEM: twoRel[rel=routing_+_of_+_two]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing_+_of_+_two
*CAT: n
*SEM: orRel[rel=routing_+_of_+_two]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=special_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_clamp-block
*CAT: n
*SEM: twoRel[rel=special_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_clamp-block
*CAT: n
*SEM: twoRel[rel=special_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_clamp-block
*CAT: n
*SEM: orRel[rel=special_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this
*CAT: n
*SEM: unaryRel[rel=this]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this
*CAT: n
*SEM: twoRel[rel=this]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this
*CAT: n
*SEM: twoRel[rel=this]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this
*CAT: n
*SEM: orRel[rel=this]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tying_+_bundles
*CAT: n
*SEM: unaryRel[rel=tying_+_bundles]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tying_+_bundles
*CAT: n
*SEM: twoRel[rel=tying_+_bundles]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tying_+_bundles
*CAT: n
*SEM: twoRel[rel=tying_+_bundles]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tying_+_bundles
*CAT: n
*SEM: orRel[rel=tying_+_bundles]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1000psi
*CAT: n
*SEM: unaryRel[rel=1000psi]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1000psi
*CAT: n
*SEM: twoRel[rel=1000psi]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1000psi
*CAT: n
*SEM: twoRel[rel=1000psi]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1000psi
*CAT: n
*SEM: orRel[rel=1000psi]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: apu_+_zone_+_which_+_are_+_defined_+_in_+_attached_+_table
*CAT: n
*SEM: unaryRel[rel=apu_+_zone_+_which_+_are_+_defined_+_in_+_attached_+_table]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: apu_+_zone_+_which_+_are_+_defined_+_in_+_attached_+_table
*CAT: n
*SEM: twoRel[rel=apu_+_zone_+_which_+_are_+_defined_+_in_+_attached_+_table]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: apu_+_zone_+_which_+_are_+_defined_+_in_+_attached_+_table
*CAT: n
*SEM: twoRel[rel=apu_+_zone_+_which_+_are_+_defined_+_in_+_attached_+_table]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: apu_+_zone_+_which_+_are_+_defined_+_in_+_attached_+_table
*CAT: n
*SEM: orRel[rel=apu_+_zone_+_which_+_are_+_defined_+_in_+_attached_+_table]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: continuous_+_fuel_+_immersion
*CAT: n
*SEM: unaryRel[rel=continuous_+_fuel_+_immersion]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: continuous_+_fuel_+_immersion
*CAT: n
*SEM: twoRel[rel=continuous_+_fuel_+_immersion]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: continuous_+_fuel_+_immersion
*CAT: n
*SEM: twoRel[rel=continuous_+_fuel_+_immersion]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: continuous_+_fuel_+_immersion
*CAT: n
*SEM: orRel[rel=continuous_+_fuel_+_immersion]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specification_+_asna2101_-_semicolon_-__+_code_+_25
*CAT: n
*SEM: unaryRel[rel=specification_+_asna2101_-_semicolon_-__+_code_+_25]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specification_+_asna2101_-_semicolon_-__+_code_+_25
*CAT: n
*SEM: twoRel[rel=specification_+_asna2101_-_semicolon_-__+_code_+_25]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specification_+_asna2101_-_semicolon_-__+_code_+_25
*CAT: n
*SEM: twoRel[rel=specification_+_asna2101_-_semicolon_-__+_code_+_25]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specification_+_asna2101_-_semicolon_-__+_code_+_25
*CAT: n
*SEM: orRel[rel=specification_+_asna2101_-_semicolon_-__+_code_+_25]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_vu_+_when_+_cable
*CAT: n
*SEM: unaryRel[rel=inside_+_vu_+_when_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_vu_+_when_+_cable
*CAT: n
*SEM: twoRel[rel=inside_+_vu_+_when_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_vu_+_when_+_cable
*CAT: n
*SEM: twoRel[rel=inside_+_vu_+_when_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_vu_+_when_+_cable
*CAT: n
*SEM: orRel[rel=inside_+_vu_+_when_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:


*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: n0VmainSem[rel=sized,relArg2=sizedArg2,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: onlySubj[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: n0VmainSem[rel=sized,relArg2=sizedArg2,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: onlySubj[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: n0VmainSem[rel=sized,relArg2=sizedArg2,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: onlySubj[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: n0VmainSem[rel=sized,relArg2=sizedArg2,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: onlySubj[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> at/prep



*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> of/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> of/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> of/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> of/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> of/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_case_+_of/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> supporting/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> supporting/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> supporting/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> supporting/prep



*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArgMainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: onlyPObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: allObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: connected
*CAT: v
*SEM: CVpn1Sem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArgMainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: onlyPObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: allObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: connected
*CAT: v
*SEM: CVpn1Sem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArgMainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: onlyPObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: allObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: connected
*CAT: v
*SEM: CVpn1Sem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArgMainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: onlyPObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: allObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: connected
*CAT: v
*SEM: CVpn1Sem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: routed
*CAT: v
*SEM: CVpn1Sem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: routed
*CAT: v
*SEM: CVpn1Sem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: routed
*CAT: v
*SEM: CVpn1Sem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: routed
*CAT: v
*SEM: CVpn1Sem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> using/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> using/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> using/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: equipped
*CAT: v
*SEM: CVpn1Sem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: equipped
*CAT: v
*SEM: CVpn1Sem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: equipped
*CAT: v
*SEM: CVpn1Sem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: equipped
*CAT: v
*SEM: CVpn1Sem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArgMainSem[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: onlyPObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: allObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> together/prep

 

*ENTRY: grouped
*CAT: v
*SEM: CVpn1Sem[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArgMainSem[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: onlyPObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: allObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> together/prep

 

*ENTRY: grouped
*CAT: v
*SEM: CVpn1Sem[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArgMainSem[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: onlyPObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: allObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> together/prep

 

*ENTRY: grouped
*CAT: v
*SEM: CVpn1Sem[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArgMainSem[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: onlyPObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: allObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> together/prep

 

*ENTRY: grouped
*CAT: v
*SEM: CVpn1Sem[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> on/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> on/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> on/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> except_+_for/prep

 

*ENTRY: integrated
*CAT: v
*SEM: CVpn1Sem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> except_+_for/prep

 

*ENTRY: integrated
*CAT: v
*SEM: CVpn1Sem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> except_+_for/prep

 

*ENTRY: integrated
*CAT: v
*SEM: CVpn1Sem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> except_+_for/prep

 

*ENTRY: integrated
*CAT: v
*SEM: CVpn1Sem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> except_+_for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_between/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_between/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_between/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_between/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_between/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> without/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> without/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> without/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> without/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> avoiding/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> avoiding/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> avoiding/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> avoiding/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> of/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> of/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> of/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> of/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> as/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> as/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> as/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> as/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArgMainSem[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: onlyPObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: allObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: sealed
*CAT: v
*SEM: CVpn1Sem[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArgMainSem[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: onlyPObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: allObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: sealed
*CAT: v
*SEM: CVpn1Sem[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArgMainSem[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: onlyPObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: allObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: sealed
*CAT: v
*SEM: CVpn1Sem[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArgMainSem[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: onlyPObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: allObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: sealed
*CAT: v
*SEM: CVpn1Sem[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: qualified
*CAT: v
*SEM: twoPrepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3,relArg4=qualifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: qualified
*CAT: v
*SEM: twoPrepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3,relArg4=qualifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: qualified
*CAT: v
*SEM: twoPrepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3,relArg4=qualifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: qualified
*CAT: v
*SEM: twoPrepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3,relArg4=qualifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> direct_+_on/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> direct_+_on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> by/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> by/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> by/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: equipped
*CAT: v
*SEM: CVpn1Sem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: equipped
*CAT: v
*SEM: CVpn1Sem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: equipped
*CAT: v
*SEM: CVpn1Sem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: equipped
*CAT: v
*SEM: CVpn1Sem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> below/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> below/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> below/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> below/prep
P2 -> with/prep



*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: added
*CAT: v
*SEM: CVpn1Sem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: added
*CAT: v
*SEM: CVpn1Sem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: added
*CAT: v
*SEM: CVpn1Sem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: added
*CAT: v
*SEM: CVpn1Sem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> by/prep



*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with_+_or_+_without/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with_+_or_+_without/prep



*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> allowing/prep
P2 -> of/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> allowing/prep
P2 -> of/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> allowing/prep
P2 -> of/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> allowing/prep
P2 -> of/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> outside/prep
P2 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> outside/prep
P2 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> outside/prep
P2 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> outside/prep
P2 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: locked
*CAT: v
*SEM: CVpn1Sem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: locked
*CAT: v
*SEM: CVpn1Sem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: locked
*CAT: v
*SEM: CVpn1Sem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: locked
*CAT: v
*SEM: CVpn1Sem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> near/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> near/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> near/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> near/prep
P2 -> on/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> with/prep



*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: n0VmainSem[rel=shrunk,relArg2=shrunkArg2,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: onlySubj[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: n0VmainSem[rel=shrunk,relArg2=shrunkArg2,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: onlySubj[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: n0VmainSem[rel=shrunk,relArg2=shrunkArg2,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: onlySubj[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: n0VmainSem[rel=shrunk,relArg2=shrunkArg2,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: onlySubj[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> beside/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> beside/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> beside/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> beside/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_front_+_of/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> compatible_+_with/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> compatible_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_to/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> for/prep



*ENTRY: locked
*CAT: v
*SEM: twoPrepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3,relArg4=lockedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> for/prep



*ENTRY: locked
*CAT: v
*SEM: twoPrepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3,relArg4=lockedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> for/prep



*ENTRY: locked
*CAT: v
*SEM: twoPrepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3,relArg4=lockedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> for/prep



*ENTRY: locked
*CAT: v
*SEM: twoPrepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3,relArg4=lockedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> for/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> or/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> or/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> or/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> or/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: routed
*CAT: v
*SEM: CVpn1Sem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: routed
*CAT: v
*SEM: CVpn1Sem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: routed
*CAT: v
*SEM: CVpn1Sem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: routed
*CAT: v
*SEM: CVpn1Sem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> only/prep

 

*ENTRY: integrated
*CAT: v
*SEM: CVpn1Sem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> only/prep

 

*ENTRY: integrated
*CAT: v
*SEM: CVpn1Sem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> only/prep

 

*ENTRY: integrated
*CAT: v
*SEM: CVpn1Sem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> only/prep

 

*ENTRY: integrated
*CAT: v
*SEM: CVpn1Sem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> only/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArgMainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: onlyPObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: allObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: positioned
*CAT: v
*SEM: CVpn1Sem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArgMainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: onlyPObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: allObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: positioned
*CAT: v
*SEM: CVpn1Sem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArgMainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: onlyPObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: allObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: positioned
*CAT: v
*SEM: CVpn1Sem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArgMainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: onlyPObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: allObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: positioned
*CAT: v
*SEM: CVpn1Sem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> above/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> above/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> above/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> above/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> above/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep

 

*ENTRY: routed
*CAT: v
*SEM: CVpn1Sem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep

 

*ENTRY: routed
*CAT: v
*SEM: CVpn1Sem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep

 

*ENTRY: routed
*CAT: v
*SEM: CVpn1Sem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep

 

*ENTRY: routed
*CAT: v
*SEM: CVpn1Sem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at_+_the_+_level_+_of/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArgMainSem[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: onlyPObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: allObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> considering/prep

 

*ENTRY: calculated
*CAT: v
*SEM: CVpn1Sem[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArgMainSem[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: onlyPObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: allObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> considering/prep

 

*ENTRY: calculated
*CAT: v
*SEM: CVpn1Sem[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArgMainSem[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: onlyPObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: allObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> considering/prep

 

*ENTRY: calculated
*CAT: v
*SEM: CVpn1Sem[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArgMainSem[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: onlyPObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: allObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> considering/prep

 

*ENTRY: calculated
*CAT: v
*SEM: CVpn1Sem[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> considering/prep



*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> on/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> on/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> on/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArgMainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: onlyPObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: allObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: bend
*CAT: v
*SEM: CVpn1Sem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArgMainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: onlyPObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: allObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: bend
*CAT: v
*SEM: CVpn1Sem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArgMainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: onlyPObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: allObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: bend
*CAT: v
*SEM: CVpn1Sem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArgMainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: onlyPObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: allObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: bend
*CAT: v
*SEM: CVpn1Sem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: twoPrepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3,relArg4=providedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> 0/prep



*ENTRY: provided
*CAT: v
*SEM: twoPrepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3,relArg4=providedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> 0/prep



*ENTRY: provided
*CAT: v
*SEM: twoPrepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3,relArg4=providedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> 0/prep



*ENTRY: provided
*CAT: v
*SEM: twoPrepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3,relArg4=providedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> 0/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep
P2 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: integrated
*CAT: v
*SEM: CVpn1Sem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: integrated
*CAT: v
*SEM: CVpn1Sem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: integrated
*CAT: v
*SEM: CVpn1Sem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: integrated
*CAT: v
*SEM: CVpn1Sem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> for/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> for/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> for/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep
P2 -> for/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep
P2 -> for/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep
P2 -> for/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep
P2 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: n0VmainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlySubj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: n0VmainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlySubj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: n0VmainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlySubj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: n0VmainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlySubj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: locked
*CAT: v
*SEM: CVpn1Sem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: locked
*CAT: v
*SEM: CVpn1Sem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: locked
*CAT: v
*SEM: CVpn1Sem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: locked
*CAT: v
*SEM: CVpn1Sem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+__+_combination_+_with/prep
P2 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+__+_combination_+_with/prep
P2 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+__+_combination_+_with/prep
P2 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+__+_combination_+_with/prep
P2 -> directly_+_on/prep



*ENTRY: positioned
*CAT: v
*SEM: twoPrepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3,relArg4=positionedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: positioned
*CAT: v
*SEM: twoPrepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3,relArg4=positionedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: positioned
*CAT: v
*SEM: twoPrepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3,relArg4=positionedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: positioned
*CAT: v
*SEM: twoPrepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3,relArg4=positionedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on_+_fixed_+_part_+_of/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on_+_fixed_+_part_+_of/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on_+_fixed_+_part_+_of/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on_+_fixed_+_part_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at_+_the_+_end_+_of/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_by/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_by/prep



*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
P1 -> with/prep

 

*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> following/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> following/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> following/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> following/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> following/prep



*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: n0VmainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: onlySubj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: n0VmainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: onlySubj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: n0VmainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: onlySubj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: n0VmainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: onlySubj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_on/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: n0VmainSem[rel=selected,relArg2=selectedArg2,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: onlySubj[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: n0VmainSem[rel=selected,relArg2=selectedArg2,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: onlySubj[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: n0VmainSem[rel=selected,relArg2=selectedArg2,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: onlySubj[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: n0VmainSem[rel=selected,relArg2=selectedArg2,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: onlySubj[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> at/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> at/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> at/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> at/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> as/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> as/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> as/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> as/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_line_+_with/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: n0VmainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: onlySubj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: n0VmainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: onlySubj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: n0VmainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: onlySubj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: n0VmainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: onlySubj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: n0VmainSem[rel=manufactured,relArg2=manufacturedArg2,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: onlySubj[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: n0VmainSem[rel=manufactured,relArg2=manufacturedArg2,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: onlySubj[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: n0VmainSem[rel=manufactured,relArg2=manufacturedArg2,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: onlySubj[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: n0VmainSem[rel=manufactured,relArg2=manufacturedArg2,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: onlySubj[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: n0VmainSem[rel=submitted,relArg2=submittedArg2,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: onlySubj[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: n0VmainSem[rel=submitted,relArg2=submittedArg2,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: onlySubj[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: n0VmainSem[rel=submitted,relArg2=submittedArg2,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: onlySubj[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: n0VmainSem[rel=submitted,relArg2=submittedArg2,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: onlySubj[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in_+_the_+_same_+_way_+_as/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> instead_+_of/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> passing_+_through/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> within/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> within/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> within/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> within/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> within/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep

 

*ENTRY: added
*CAT: v
*SEM: CVpn1Sem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep

 

*ENTRY: added
*CAT: v
*SEM: CVpn1Sem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep

 

*ENTRY: added
*CAT: v
*SEM: CVpn1Sem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on_+_top_+_of/prep

 

*ENTRY: added
*CAT: v
*SEM: CVpn1Sem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on_+_top_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: n0VmainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: onlySubj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: n0VmainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: onlySubj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: n0VmainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: onlySubj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: n0VmainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: onlySubj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: integrated
*CAT: v
*SEM: CVpn1Sem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: integrated
*CAT: v
*SEM: CVpn1Sem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: integrated
*CAT: v
*SEM: CVpn1Sem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: integrated
*CAT: v
*SEM: CVpn1Sem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: locked
*CAT: v
*SEM: CVpn1Sem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: locked
*CAT: v
*SEM: CVpn1Sem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: locked
*CAT: v
*SEM: CVpn1Sem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: locked
*CAT: v
*SEM: CVpn1Sem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> together/prep

 

*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> together/prep

 

*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> together/prep

 

*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> together/prep

 

*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> outside/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> outside/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> outside/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> outside/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> outside/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> using/prep

 

*ENTRY: routed
*CAT: v
*SEM: CVpn1Sem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> using/prep

 

*ENTRY: routed
*CAT: v
*SEM: CVpn1Sem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> using/prep

 

*ENTRY: routed
*CAT: v
*SEM: CVpn1Sem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> using/prep

 

*ENTRY: routed
*CAT: v
*SEM: CVpn1Sem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> against/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> against/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> against/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> against/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> against/prep



*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: n0VmainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: onlySubj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: n0VmainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: onlySubj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: n0VmainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: onlySubj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: n0VmainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: onlySubj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> from/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> from/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> from/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> from/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> or/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> or/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> or/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> or/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: n0VmainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: onlySubj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: n0VmainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: onlySubj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: n0VmainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: onlySubj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: n0VmainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: onlySubj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> onto/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> onto/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> onto/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> onto/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> together_+_with/prep

 

*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> together_+_with/prep

 

*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> together_+_with/prep

 

*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> together_+_with/prep

 

*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1Sem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together_+_with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArgMainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: onlyPObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: allObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: labeled
*CAT: v
*SEM: CVpn1Sem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArgMainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: onlyPObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: allObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: labeled
*CAT: v
*SEM: CVpn1Sem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArgMainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: onlyPObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: allObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: labeled
*CAT: v
*SEM: CVpn1Sem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArgMainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: onlyPObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: allObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: labeled
*CAT: v
*SEM: CVpn1Sem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> per/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> per/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> per/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> per/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> per/prep



*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArgMainSem[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: onlyPObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: allObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: able
*CAT: v
*SEM: CVpn1Sem[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArgMainSem[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: onlyPObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: allObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: able
*CAT: v
*SEM: CVpn1Sem[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArgMainSem[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: onlyPObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: allObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: able
*CAT: v
*SEM: CVpn1Sem[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArgMainSem[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: onlyPObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: allObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: able
*CAT: v
*SEM: CVpn1Sem[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> fir/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> fir/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> fir/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> fir/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> fir/prep



*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep

 

*ENTRY: routed
*CAT: v
*SEM: CVpn1Sem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep

 

*ENTRY: routed
*CAT: v
*SEM: CVpn1Sem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep

 

*ENTRY: routed
*CAT: v
*SEM: CVpn1Sem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep

 

*ENTRY: routed
*CAT: v
*SEM: CVpn1Sem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: n0VmainSem[rel=identical,relArg2=identicalArg2,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: onlySubj[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: n0VmainSem[rel=identical,relArg2=identicalArg2,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: onlySubj[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: n0VmainSem[rel=identical,relArg2=identicalArg2,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: onlySubj[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: n0VmainSem[rel=identical,relArg2=identicalArg2,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: onlySubj[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in_+_relation_+_to/prep



*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in_+_relation_+_to/prep



*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in_+_relation_+_to/prep



*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in_+_relation_+_to/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: n0VmainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: onlySubj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: n0VmainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: onlySubj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: n0VmainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: onlySubj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: n0VmainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: onlySubj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly_+_onto/prep

 

*ENTRY: fixed
*CAT: v
*SEM: CVpn1Sem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: provided
*CAT: v
*SEM: CVpn1Sem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> directly/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> directly/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> directly/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> directly/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: integrated
*CAT: v
*SEM: CVpn1Sem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: integrated
*CAT: v
*SEM: CVpn1Sem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: integrated
*CAT: v
*SEM: CVpn1Sem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: integrated
*CAT: v
*SEM: CVpn1Sem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> as/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> as/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> as/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> as/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> onto/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> onto/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> onto/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> onto/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_the_+_area_+_of/prep
P2 -> of/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_the_+_area_+_of/prep
P2 -> of/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_the_+_area_+_of/prep
P2 -> of/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_the_+_area_+_of/prep
P2 -> of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> taking_+_into_+_account/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> without/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> without/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> without/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> without/prep

 

*ENTRY: defined
*CAT: v
*SEM: CVpn1Sem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> inside/prep



*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> at/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> at/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> at/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> at/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> from/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> from/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> from/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> from/prep

 

*ENTRY: segregated
*CAT: v
*SEM: CVpn1Sem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> inside/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep
P2 -> for/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep
P2 -> for/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep
P2 -> for/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep
P2 -> for/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> of/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> between/prep

 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1Sem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: avoided
*CAT: v
*SEM: twoPrepArg[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3,relArg4=avoidedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> for/prep



*ENTRY: avoided
*CAT: v
*SEM: twoPrepArg[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3,relArg4=avoidedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> for/prep



*ENTRY: avoided
*CAT: v
*SEM: twoPrepArg[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3,relArg4=avoidedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> for/prep



*ENTRY: avoided
*CAT: v
*SEM: twoPrepArg[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3,relArg4=avoidedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> for/prep



*ENTRY: insulated
*CAT: v
*SEM: twoPrepArg[rel=insulated,relArg2=insulatedArg2inv,relArg3=insulatedArg3,relArg4=insulatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> by/prep



*ENTRY: insulated
*CAT: v
*SEM: twoPrepArg[rel=insulated,relArg2=insulatedArg2inv,relArg3=insulatedArg3,relArg4=insulatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> by/prep



*ENTRY: insulated
*CAT: v
*SEM: twoPrepArg[rel=insulated,relArg2=insulatedArg2inv,relArg3=insulatedArg3,relArg4=insulatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> by/prep



*ENTRY: insulated
*CAT: v
*SEM: twoPrepArg[rel=insulated,relArg2=insulatedArg2inv,relArg3=insulatedArg3,relArg4=insulatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: n0VmainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: onlySubj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: n0VmainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: onlySubj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: n0VmainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: onlySubj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: n0VmainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: onlySubj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> to/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> in/prep

 

*ENTRY: identified
*CAT: v
*SEM: CVpn1Sem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep
P2 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> with/prep

 

*ENTRY: protected
*CAT: v
*SEM: CVpn1Sem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> showing/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> showing/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> showing/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> showing/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> by_+_use_+_of/prep

 

*ENTRY: installed
*CAT: v
*SEM: CVpn1Sem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by_+_use_+_of/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArgMainSem[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: onlyPObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: allObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: qualified
*CAT: v
*SEM: CVpn1Sem[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArgMainSem[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: onlyPObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: allObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: qualified
*CAT: v
*SEM: CVpn1Sem[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArgMainSem[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: onlyPObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: allObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: qualified
*CAT: v
*SEM: CVpn1Sem[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArgMainSem[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: onlyPObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: allObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> for/prep

 

*ENTRY: qualified
*CAT: v
*SEM: CVpn1Sem[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> when/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> when/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> when/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> when/prep

 

*ENTRY: used
*CAT: v
*SEM: CVpn1Sem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> when/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyn0Vpn1Sem[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux
P1 -> on/prep

 

*ENTRY: attached
*CAT: v
*SEM: CVpn1Sem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep


*ENTRY: on
*CAT: prep
*SEM: prepSem[rel=on]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passing_+_through
*CAT: prep
*SEM: prepSem[rel=passing_+_through]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: directly_+_on
*CAT: prep
*SEM: prepSem[rel=directly_+_on]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: for
*CAT: prep
*SEM: prepSem[rel=for]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: supporting
*CAT: prep
*SEM: prepSem[rel=supporting]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: of
*CAT: prep
*SEM: prepSem[rel=of]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside
*CAT: prep
*SEM: prepSem[rel=inside]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_relation_+_to
*CAT: prep
*SEM: prepSem[rel=in_+_relation_+_to]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or
*CAT: prep
*SEM: prepSem[rel=or]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: beside
*CAT: prep
*SEM: prepSem[rel=beside]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to
*CAT: prep
*SEM: prepSem[rel=to]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: onto
*CAT: prep
*SEM: prepSem[rel=onto]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at
*CAT: prep
*SEM: prepSem[rel=at]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in
*CAT: prep
*SEM: prepSem[rel=in]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following
*CAT: prep
*SEM: prepSem[rel=following]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using
*CAT: prep
*SEM: prepSem[rel=using]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_fixed_+_part_+_of
*CAT: prep
*SEM: prepSem[rel=on_+_fixed_+_part_+_of]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: with
*CAT: prep
*SEM: prepSem[rel=with]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: by
*CAT: prep
*SEM: prepSem[rel=by]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
