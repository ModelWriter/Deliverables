include macros.mac

*ENTRY: not
*CAT: adv
*SEM: negSem[]
*ACC: 1.0
*FAM: Negation
*FILTERS: []
*EX: {}
*EQUATIONS:
*COANCHORS: 

*ENTRY: _+_invcomma_+_single_+_hole_+_invcomma_+__+_type_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=_+_invcomma_+_single_+_hole_+_invcomma_+__+_type_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _+_invcomma_+_single_+_hole_+_invcomma_+__+_type_+_clamp-block
*CAT: n
*SEM: twoRel[rel=_+_invcomma_+_single_+_hole_+_invcomma_+__+_type_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _+_invcomma_+_single_+_hole_+_invcomma_+__+_type_+_clamp-block
*CAT: n
*SEM: twoRel[rel=_+_invcomma_+_single_+_hole_+_invcomma_+__+_type_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _+_invcomma_+_single_+_hole_+_invcomma_+__+_type_+_clamp-block
*CAT: n
*SEM: orRel[rel=_+_invcomma_+_single_+_hole_+_invcomma_+__+_type_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ''_+_single_+_hole_+_''_+_type_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=''_+_single_+_hole_+_''_+_type_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ''_+_single_+_hole_+_''_+_type_+_clamp-block
*CAT: n
*SEM: twoRel[rel=''_+_single_+_hole_+_''_+_type_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ''_+_single_+_hole_+_''_+_type_+_clamp-block
*CAT: n
*SEM: twoRel[rel=''_+_single_+_hole_+_''_+_type_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ''_+_single_+_hole_+_''_+_type_+_clamp-block
*CAT: n
*SEM: orRel[rel=''_+_single_+_hole_+_''_+_type_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ''_+_u_+_shape_+_''
*CAT: n
*SEM: unaryRel[rel=''_+_u_+_shape_+_'']
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ''_+_u_+_shape_+_''
*CAT: n
*SEM: twoRel[rel=''_+_u_+_shape_+_'']
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ''_+_u_+_shape_+_''
*CAT: n
*SEM: twoRel[rel=''_+_u_+_shape_+_'']
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ''_+_u_+_shape_+_''
*CAT: n
*SEM: orRel[rel=''_+_u_+_shape_+_'']
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: -08_+_closesb_+_pipes
*CAT: n
*SEM: unaryRel[rel=-08_+_closesb_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: -08_+_closesb_+_pipes
*CAT: n
*SEM: twoRel[rel=-08_+_closesb_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: -08_+_closesb_+_pipes
*CAT: n
*SEM: twoRel[rel=-08_+_closesb_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: -08_+_closesb_+_pipes
*CAT: n
*SEM: orRel[rel=-08_+_closesb_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: -32_+_pipes
*CAT: n
*SEM: unaryRel[rel=-32_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: -32_+_pipes
*CAT: n
*SEM: twoRel[rel=-32_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: -32_+_pipes
*CAT: n
*SEM: twoRel[rel=-32_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: -32_+_pipes
*CAT: n
*SEM: orRel[rel=-32_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.625_+_inch
*CAT: n
*SEM: unaryRel[rel=0.625_+_inch]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.625_+_inch
*CAT: n
*SEM: twoRel[rel=0.625_+_inch]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.625_+_inch
*CAT: n
*SEM: twoRel[rel=0.625_+_inch]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 0.625_+_inch
*CAT: n
*SEM: orRel[rel=0.625_+_inch]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1000psi
*CAT: n
*SEM: unaryRel[rel=1000psi]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1000psi
*CAT: n
*SEM: twoRel[rel=1000psi]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1000psi
*CAT: n
*SEM: twoRel[rel=1000psi]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 1000psi
*CAT: n
*SEM: orRel[rel=1000psi]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm
*CAT: n
*SEM: unaryRel[rel=10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm
*CAT: n
*SEM: twoRel[rel=10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm
*CAT: n
*SEM: twoRel[rel=10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 10mm
*CAT: n
*SEM: orRel[rel=10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150_+_mm_+_on_+_bends_+_on_+_the_+_support_+_tubes
*CAT: n
*SEM: unaryRel[rel=150_+_mm_+_on_+_bends_+_on_+_the_+_support_+_tubes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150_+_mm_+_on_+_bends_+_on_+_the_+_support_+_tubes
*CAT: n
*SEM: twoRel[rel=150_+_mm_+_on_+_bends_+_on_+_the_+_support_+_tubes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150_+_mm_+_on_+_bends_+_on_+_the_+_support_+_tubes
*CAT: n
*SEM: twoRel[rel=150_+_mm_+_on_+_bends_+_on_+_the_+_support_+_tubes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150_+_mm_+_on_+_bends_+_on_+_the_+_support_+_tubes
*CAT: n
*SEM: orRel[rel=150_+_mm_+_on_+_bends_+_on_+_the_+_support_+_tubes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_25mm
*CAT: n
*SEM: unaryRel[rel=150mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_25mm
*CAT: n
*SEM: twoRel[rel=150mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_25mm
*CAT: n
*SEM: twoRel[rel=150mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 150mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_25mm
*CAT: n
*SEM: orRel[rel=150mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 180
*CAT: n
*SEM: unaryRel[rel=180]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 180
*CAT: n
*SEM: twoRel[rel=180]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 180
*CAT: n
*SEM: twoRel[rel=180]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 180
*CAT: n
*SEM: orRel[rel=180]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 180â°
*CAT: n
*SEM: unaryRel[rel=180â°]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 180â°
*CAT: n
*SEM: twoRel[rel=180â°]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 180â°
*CAT: n
*SEM: twoRel[rel=180â°]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 180â°
*CAT: n
*SEM: orRel[rel=180â°]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2
*CAT: n
*SEM: unaryRel[rel=2]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2
*CAT: n
*SEM: twoRel[rel=2]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2
*CAT: n
*SEM: twoRel[rel=2]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2
*CAT: n
*SEM: orRel[rel=2]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_layer_+_nsa_+_5107-b_+_black_+_tape
*CAT: n
*SEM: unaryRel[rel=2_+_layer_+_nsa_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_layer_+_nsa_+_5107-b_+_black_+_tape
*CAT: n
*SEM: twoRel[rel=2_+_layer_+_nsa_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_layer_+_nsa_+_5107-b_+_black_+_tape
*CAT: n
*SEM: twoRel[rel=2_+_layer_+_nsa_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_layer_+_nsa_+_5107-b_+_black_+_tape
*CAT: n
*SEM: orRel[rel=2_+_layer_+_nsa_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_micrometer
*CAT: n
*SEM: unaryRel[rel=2_+_micrometer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_micrometer
*CAT: n
*SEM: twoRel[rel=2_+_micrometer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_micrometer
*CAT: n
*SEM: twoRel[rel=2_+_micrometer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_micrometer
*CAT: n
*SEM: orRel[rel=2_+_micrometer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_nsa5527_+_spacer
*CAT: n
*SEM: unaryRel[rel=2_+_nsa5527_+_spacer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_nsa5527_+_spacer
*CAT: n
*SEM: twoRel[rel=2_+_nsa5527_+_spacer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_nsa5527_+_spacer
*CAT: n
*SEM: twoRel[rel=2_+_nsa5527_+_spacer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_nsa5527_+_spacer
*CAT: n
*SEM: orRel[rel=2_+_nsa5527_+_spacer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_pipes
*CAT: n
*SEM: unaryRel[rel=2_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_pipes
*CAT: n
*SEM: twoRel[rel=2_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_pipes
*CAT: n
*SEM: twoRel[rel=2_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_pipes
*CAT: n
*SEM: orRel[rel=2_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_successive_+_opensb_+_distance_+_smallerthan_+_10_+_d_+_closesb_+_90_+_bends_+_in_+_the_+_same_+_plane
*CAT: n
*SEM: unaryRel[rel=2_+_successive_+_opensb_+_distance_+_smallerthan_+_10_+_d_+_closesb_+_90_+_bends_+_in_+_the_+_same_+_plane]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_successive_+_opensb_+_distance_+_smallerthan_+_10_+_d_+_closesb_+_90_+_bends_+_in_+_the_+_same_+_plane
*CAT: n
*SEM: twoRel[rel=2_+_successive_+_opensb_+_distance_+_smallerthan_+_10_+_d_+_closesb_+_90_+_bends_+_in_+_the_+_same_+_plane]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_successive_+_opensb_+_distance_+_smallerthan_+_10_+_d_+_closesb_+_90_+_bends_+_in_+_the_+_same_+_plane
*CAT: n
*SEM: twoRel[rel=2_+_successive_+_opensb_+_distance_+_smallerthan_+_10_+_d_+_closesb_+_90_+_bends_+_in_+_the_+_same_+_plane]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2_+_successive_+_opensb_+_distance_+_smallerthan_+_10_+_d_+_closesb_+_90_+_bends_+_in_+_the_+_same_+_plane
*CAT: n
*SEM: orRel[rel=2_+_successive_+_opensb_+_distance_+_smallerthan_+_10_+_d_+_closesb_+_90_+_bends_+_in_+_the_+_same_+_plane]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2-hole_+_bulkhead_+_unions
*CAT: n
*SEM: unaryRel[rel=2-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2-hole_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=2-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2-hole_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=2-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 2-hole_+_bulkhead_+_unions
*CAT: n
*SEM: orRel[rel=2-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_+_percent_+__+_of_+_spare_+_provision
*CAT: n
*SEM: unaryRel[rel=20_+_percent_+__+_of_+_spare_+_provision]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_+_percent_+__+_of_+_spare_+_provision
*CAT: n
*SEM: twoRel[rel=20_+_percent_+__+_of_+_spare_+_provision]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_+_percent_+__+_of_+_spare_+_provision
*CAT: n
*SEM: twoRel[rel=20_+_percent_+__+_of_+_spare_+_provision]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_+_percent_+__+_of_+_spare_+_provision
*CAT: n
*SEM: orRel[rel=20_+_percent_+__+_of_+_spare_+_provision]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_+_percent_+_of_+_spare_+_provision
*CAT: n
*SEM: unaryRel[rel=20_+_percent_+_of_+_spare_+_provision]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_+_percent_+_of_+_spare_+_provision
*CAT: n
*SEM: twoRel[rel=20_+_percent_+_of_+_spare_+_provision]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_+_percent_+_of_+_spare_+_provision
*CAT: n
*SEM: twoRel[rel=20_+_percent_+_of_+_spare_+_provision]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 20_+_percent_+_of_+_spare_+_provision
*CAT: n
*SEM: orRel[rel=20_+_percent_+_of_+_spare_+_provision]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 200
*CAT: n
*SEM: unaryRel[rel=200]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 200
*CAT: n
*SEM: twoRel[rel=200]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 200
*CAT: n
*SEM: twoRel[rel=200]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 200
*CAT: n
*SEM: orRel[rel=200]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25
*CAT: n
*SEM: unaryRel[rel=25]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25
*CAT: n
*SEM: twoRel[rel=25]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25
*CAT: n
*SEM: twoRel[rel=25]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25
*CAT: n
*SEM: orRel[rel=25]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_13mm
*CAT: n
*SEM: unaryRel[rel=25mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_13mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_13mm
*CAT: n
*SEM: twoRel[rel=25mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_13mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_13mm
*CAT: n
*SEM: twoRel[rel=25mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_13mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 25mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_13mm
*CAT: n
*SEM: orRel[rel=25mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_13mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3-hole_+_bulkhead_+_unions
*CAT: n
*SEM: unaryRel[rel=3-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3-hole_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=3-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3-hole_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=3-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3-hole_+_bulkhead_+_unions
*CAT: n
*SEM: orRel[rel=3-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3000psi_+_pipes
*CAT: n
*SEM: unaryRel[rel=3000psi_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3000psi_+_pipes
*CAT: n
*SEM: twoRel[rel=3000psi_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3000psi_+_pipes
*CAT: n
*SEM: twoRel[rel=3000psi_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3000psi_+_pipes
*CAT: n
*SEM: orRel[rel=3000psi_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 300mm_+_maximum_+_from_+_the_+_last_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=300mm_+_maximum_+_from_+_the_+_last_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 300mm_+_maximum_+_from_+_the_+_last_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=300mm_+_maximum_+_from_+_the_+_last_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 300mm_+_maximum_+_from_+_the_+_last_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=300mm_+_maximum_+_from_+_the_+_last_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 300mm_+_maximum_+_from_+_the_+_last_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=300mm_+_maximum_+_from_+_the_+_last_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3d
*CAT: n
*SEM: unaryRel[rel=3d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3d
*CAT: n
*SEM: twoRel[rel=3d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3d
*CAT: n
*SEM: twoRel[rel=3d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 3d
*CAT: n
*SEM: orRel[rel=3d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4_+_mm
*CAT: n
*SEM: unaryRel[rel=4_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4_+_mm
*CAT: n
*SEM: twoRel[rel=4_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4_+_mm
*CAT: n
*SEM: twoRel[rel=4_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4_+_mm
*CAT: n
*SEM: orRel[rel=4_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4s
*CAT: n
*SEM: unaryRel[rel=4s]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4s
*CAT: n
*SEM: twoRel[rel=4s]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4s
*CAT: n
*SEM: twoRel[rel=4s]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4s
*CAT: n
*SEM: orRel[rel=4s]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4s_+_backslash_+_5s
*CAT: n
*SEM: unaryRel[rel=4s_+_backslash_+_5s]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4s_+_backslash_+_5s
*CAT: n
*SEM: twoRel[rel=4s_+_backslash_+_5s]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4s_+_backslash_+_5s
*CAT: n
*SEM: twoRel[rel=4s_+_backslash_+_5s]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 4s_+_backslash_+_5s
*CAT: n
*SEM: orRel[rel=4s_+_backslash_+_5s]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5_+_mm
*CAT: n
*SEM: unaryRel[rel=5_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5_+_mm
*CAT: n
*SEM: twoRel[rel=5_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5_+_mm
*CAT: n
*SEM: twoRel[rel=5_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5_+_mm
*CAT: n
*SEM: orRel[rel=5_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5_+_thread_+_after_+_tightening
*CAT: n
*SEM: unaryRel[rel=5_+_thread_+_after_+_tightening]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5_+_thread_+_after_+_tightening
*CAT: n
*SEM: twoRel[rel=5_+_thread_+_after_+_tightening]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5_+_thread_+_after_+_tightening
*CAT: n
*SEM: twoRel[rel=5_+_thread_+_after_+_tightening]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5_+_thread_+_after_+_tightening
*CAT: n
*SEM: orRel[rel=5_+_thread_+_after_+_tightening]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5.0_+_inch
*CAT: n
*SEM: unaryRel[rel=5.0_+_inch]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5.0_+_inch
*CAT: n
*SEM: twoRel[rel=5.0_+_inch]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5.0_+_inch
*CAT: n
*SEM: twoRel[rel=5.0_+_inch]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5.0_+_inch
*CAT: n
*SEM: orRel[rel=5.0_+_inch]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5080_+_psi_+_pipes
*CAT: n
*SEM: unaryRel[rel=5080_+_psi_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5080_+_psi_+_pipes
*CAT: n
*SEM: twoRel[rel=5080_+_psi_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5080_+_psi_+_pipes
*CAT: n
*SEM: twoRel[rel=5080_+_psi_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5080_+_psi_+_pipes
*CAT: n
*SEM: orRel[rel=5080_+_psi_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5d
*CAT: n
*SEM: unaryRel[rel=5d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5d
*CAT: n
*SEM: twoRel[rel=5d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5d
*CAT: n
*SEM: twoRel[rel=5d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5d
*CAT: n
*SEM: orRel[rel=5d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5s
*CAT: n
*SEM: unaryRel[rel=5s]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5s
*CAT: n
*SEM: twoRel[rel=5s]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5s
*CAT: n
*SEM: twoRel[rel=5s]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5s
*CAT: n
*SEM: orRel[rel=5s]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5s-route
*CAT: n
*SEM: unaryRel[rel=5s-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5s-route
*CAT: n
*SEM: twoRel[rel=5s-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5s-route
*CAT: n
*SEM: twoRel[rel=5s-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 5s-route
*CAT: n
*SEM: orRel[rel=5s-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90
*CAT: n
*SEM: unaryRel[rel=90]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90
*CAT: n
*SEM: twoRel[rel=90]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90
*CAT: n
*SEM: twoRel[rel=90]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90
*CAT: n
*SEM: orRel[rel=90]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90â°
*CAT: n
*SEM: unaryRel[rel=90â°]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90â°
*CAT: n
*SEM: twoRel[rel=90â°]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90â°
*CAT: n
*SEM: twoRel[rel=90â°]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: 90â°
*CAT: n
*SEM: orRel[rel=90â°]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: __+_x000d_+__
*CAT: n
*SEM: unaryRel[rel=__+_x000d_+__]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: __+_x000d_+__
*CAT: n
*SEM: twoRel[rel=__+_x000d_+__]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: __+_x000d_+__
*CAT: n
*SEM: twoRel[rel=__+_x000d_+__]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: __+_x000d_+__
*CAT: n
*SEM: orRel[rel=__+_x000d_+__]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _x000d_
*CAT: n
*SEM: unaryRel[rel=_x000d_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _x000d_
*CAT: n
*SEM: twoRel[rel=_x000d_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _x000d_
*CAT: n
*SEM: twoRel[rel=_x000d_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: _x000d_
*CAT: n
*SEM: orRel[rel=_x000d_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0929-006_+_optical_+_dummy_+_receptable
*CAT: n
*SEM: unaryRel[rel=abs0929-006_+_optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0929-006_+_optical_+_dummy_+_receptable
*CAT: n
*SEM: twoRel[rel=abs0929-006_+_optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0929-006_+_optical_+_dummy_+_receptable
*CAT: n
*SEM: twoRel[rel=abs0929-006_+_optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0929-006_+_optical_+_dummy_+_receptable
*CAT: n
*SEM: orRel[rel=abs0929-006_+_optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_clearance
*CAT: n
*SEM: unaryRel[rel=basic_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_clearance
*CAT: n
*SEM: twoRel[rel=basic_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_clearance
*CAT: n
*SEM: twoRel[rel=basic_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_clearance
*CAT: n
*SEM: orRel[rel=basic_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: unaryRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: twoRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: twoRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: orRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_between_+_3d
*CAT: n
*SEM: unaryRel[rel=bend_+_radius_+_between_+_3d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_between_+_3d
*CAT: n
*SEM: twoRel[rel=bend_+_radius_+_between_+_3d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_between_+_3d
*CAT: n
*SEM: twoRel[rel=bend_+_radius_+_between_+_3d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_between_+_3d
*CAT: n
*SEM: orRel[rel=bend_+_radius_+_between_+_3d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_of_+_2d
*CAT: n
*SEM: unaryRel[rel=bend_+_radius_+_of_+_2d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_of_+_2d
*CAT: n
*SEM: twoRel[rel=bend_+_radius_+_of_+_2d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_of_+_2d
*CAT: n
*SEM: twoRel[rel=bend_+_radius_+_of_+_2d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_of_+_2d
*CAT: n
*SEM: orRel[rel=bend_+_radius_+_of_+_2d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_link
*CAT: n
*SEM: unaryRel[rel=bonding_+_link]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_link
*CAT: n
*SEM: twoRel[rel=bonding_+_link]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_link
*CAT: n
*SEM: twoRel[rel=bonding_+_link]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_link
*CAT: n
*SEM: orRel[rel=bonding_+_link]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: box
*CAT: n
*SEM: unaryRel[rel=box]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: box
*CAT: n
*SEM: twoRel[rel=box]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: box
*CAT: n
*SEM: twoRel[rel=box]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: box
*CAT: n
*SEM: orRel[rel=box]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: unaryRel[rel=bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: twoRel[rel=bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: twoRel[rel=bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: orRel[rel=bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: unaryRel[rel=bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: twoRel[rel=bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: twoRel[rel=bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: orRel[rel=bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_with_+_ns935401_+_cable_+_tie_+_size_+_4
*CAT: n
*SEM: unaryRel[rel=bundle_+_with_+_ns935401_+_cable_+_tie_+_size_+_4]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_with_+_ns935401_+_cable_+_tie_+_size_+_4
*CAT: n
*SEM: twoRel[rel=bundle_+_with_+_ns935401_+_cable_+_tie_+_size_+_4]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_with_+_ns935401_+_cable_+_tie_+_size_+_4
*CAT: n
*SEM: twoRel[rel=bundle_+_with_+_ns935401_+_cable_+_tie_+_size_+_4]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_with_+_ns935401_+_cable_+_tie_+_size_+_4
*CAT: n
*SEM: orRel[rel=bundle_+_with_+_ns935401_+_cable_+_tie_+_size_+_4]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chafing_+_sheath
*CAT: n
*SEM: unaryRel[rel=chafing_+_sheath]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chafing_+_sheath
*CAT: n
*SEM: twoRel[rel=chafing_+_sheath]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chafing_+_sheath
*CAT: n
*SEM: twoRel[rel=chafing_+_sheath]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chafing_+_sheath
*CAT: n
*SEM: orRel[rel=chafing_+_sheath]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance
*CAT: n
*SEM: unaryRel[rel=clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance
*CAT: n
*SEM: twoRel[rel=clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance
*CAT: n
*SEM: twoRel[rel=clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance
*CAT: n
*SEM: orRel[rel=clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance_+_of_+_at_+_least_+_10mm
*CAT: n
*SEM: unaryRel[rel=clearance_+_of_+_at_+_least_+_10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance_+_of_+_at_+_least_+_10mm
*CAT: n
*SEM: twoRel[rel=clearance_+_of_+_at_+_least_+_10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance_+_of_+_at_+_least_+_10mm
*CAT: n
*SEM: twoRel[rel=clearance_+_of_+_at_+_least_+_10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance_+_of_+_at_+_least_+_10mm
*CAT: n
*SEM: orRel[rel=clearance_+_of_+_at_+_least_+_10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cranked_+_tube_+_section
*CAT: n
*SEM: unaryRel[rel=cranked_+_tube_+_section]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cranked_+_tube_+_section
*CAT: n
*SEM: twoRel[rel=cranked_+_tube_+_section]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cranked_+_tube_+_section
*CAT: n
*SEM: twoRel[rel=cranked_+_tube_+_section]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cranked_+_tube_+_section
*CAT: n
*SEM: orRel[rel=cranked_+_tube_+_section]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance
*CAT: n
*SEM: unaryRel[rel=distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance
*CAT: n
*SEM: twoRel[rel=distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance
*CAT: n
*SEM: twoRel[rel=distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance
*CAT: n
*SEM: orRel[rel=distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire
*CAT: n
*SEM: unaryRel[rel=draw_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire
*CAT: n
*SEM: twoRel[rel=draw_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire
*CAT: n
*SEM: twoRel[rel=draw_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire
*CAT: n
*SEM: orRel[rel=draw_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646-11_+_stowage_+_receptable
*CAT: n
*SEM: unaryRel[rel=en_+_3646-11_+_stowage_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646-11_+_stowage_+_receptable
*CAT: n
*SEM: twoRel[rel=en_+_3646-11_+_stowage_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646-11_+_stowage_+_receptable
*CAT: n
*SEM: twoRel[rel=en_+_3646-11_+_stowage_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646-11_+_stowage_+_receptable
*CAT: n
*SEM: orRel[rel=en_+_3646-11_+_stowage_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin_+_label_+_which_+_has
*CAT: n
*SEM: unaryRel[rel=fin_+_label_+_which_+_has]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin_+_label_+_which_+_has
*CAT: n
*SEM: twoRel[rel=fin_+_label_+_which_+_has]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin_+_label_+_which_+_has
*CAT: n
*SEM: twoRel[rel=fin_+_label_+_which_+_has]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin_+_label_+_which_+_has
*CAT: n
*SEM: orRel[rel=fin_+_label_+_which_+_has]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_note
*CAT: n
*SEM: unaryRel[rel=flag_+_note]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_note
*CAT: n
*SEM: twoRel[rel=flag_+_note]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_note
*CAT: n
*SEM: twoRel[rel=flag_+_note]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_note
*CAT: n
*SEM: orRel[rel=flag_+_note]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guiding_+_device
*CAT: n
*SEM: unaryRel[rel=guiding_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guiding_+_device
*CAT: n
*SEM: twoRel[rel=guiding_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guiding_+_device
*CAT: n
*SEM: twoRel[rel=guiding_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guiding_+_device
*CAT: n
*SEM: orRel[rel=guiding_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_each_+_single_+_bundle
*CAT: n
*SEM: unaryRel[rel=harness_+_each_+_single_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_each_+_single_+_bundle
*CAT: n
*SEM: twoRel[rel=harness_+_each_+_single_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_each_+_single_+_bundle
*CAT: n
*SEM: twoRel[rel=harness_+_each_+_single_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_each_+_single_+_bundle
*CAT: n
*SEM: orRel[rel=harness_+_each_+_single_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_abs_+_5342a01yl_+_tape_+_minimum_+_l_+_greaterthan_+_200mm_+_from_+_the_+_rear_+_of_+_the_+_coax_+_contact_+_showing_+_warning_+_''_+_no_+_tying_+_beyond_+_this_+_point_+_''
*CAT: n
*SEM: unaryRel[rel=label_+_abs_+_5342a01yl_+_tape_+_minimum_+_l_+_greaterthan_+_200mm_+_from_+_the_+_rear_+_of_+_the_+_coax_+_contact_+_showing_+_warning_+_''_+_no_+_tying_+_beyond_+_this_+_point_+_'']
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_abs_+_5342a01yl_+_tape_+_minimum_+_l_+_greaterthan_+_200mm_+_from_+_the_+_rear_+_of_+_the_+_coax_+_contact_+_showing_+_warning_+_''_+_no_+_tying_+_beyond_+_this_+_point_+_''
*CAT: n
*SEM: twoRel[rel=label_+_abs_+_5342a01yl_+_tape_+_minimum_+_l_+_greaterthan_+_200mm_+_from_+_the_+_rear_+_of_+_the_+_coax_+_contact_+_showing_+_warning_+_''_+_no_+_tying_+_beyond_+_this_+_point_+_'']
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_abs_+_5342a01yl_+_tape_+_minimum_+_l_+_greaterthan_+_200mm_+_from_+_the_+_rear_+_of_+_the_+_coax_+_contact_+_showing_+_warning_+_''_+_no_+_tying_+_beyond_+_this_+_point_+_''
*CAT: n
*SEM: twoRel[rel=label_+_abs_+_5342a01yl_+_tape_+_minimum_+_l_+_greaterthan_+_200mm_+_from_+_the_+_rear_+_of_+_the_+_coax_+_contact_+_showing_+_warning_+_''_+_no_+_tying_+_beyond_+_this_+_point_+_'']
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_abs_+_5342a01yl_+_tape_+_minimum_+_l_+_greaterthan_+_200mm_+_from_+_the_+_rear_+_of_+_the_+_coax_+_contact_+_showing_+_warning_+_''_+_no_+_tying_+_beyond_+_this_+_point_+_''
*CAT: n
*SEM: orRel[rel=label_+_abs_+_5342a01yl_+_tape_+_minimum_+_l_+_greaterthan_+_200mm_+_from_+_the_+_rear_+_of_+_the_+_coax_+_contact_+_showing_+_warning_+_''_+_no_+_tying_+_beyond_+_this_+_point_+_'']
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: larger_+_bend_+_radius
*CAT: n
*SEM: unaryRel[rel=larger_+_bend_+_radius]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: larger_+_bend_+_radius
*CAT: n
*SEM: twoRel[rel=larger_+_bend_+_radius]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: larger_+_bend_+_radius
*CAT: n
*SEM: twoRel[rel=larger_+_bend_+_radius]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: larger_+_bend_+_radius
*CAT: n
*SEM: orRel[rel=larger_+_bend_+_radius]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l_+_greaterthan_+_10mm
*CAT: n
*SEM: unaryRel[rel=length_+_l_+_greaterthan_+_10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l_+_greaterthan_+_10mm
*CAT: n
*SEM: twoRel[rel=length_+_l_+_greaterthan_+_10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l_+_greaterthan_+_10mm
*CAT: n
*SEM: twoRel[rel=length_+_l_+_greaterthan_+_10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l_+_greaterthan_+_10mm
*CAT: n
*SEM: orRel[rel=length_+_l_+_greaterthan_+_10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: manner_+_that_+_the_+_fixation_+_is_+_accesseable_+_in_+_any_+_case
*CAT: n
*SEM: unaryRel[rel=manner_+_that_+_the_+_fixation_+_is_+_accesseable_+_in_+_any_+_case]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: manner_+_that_+_the_+_fixation_+_is_+_accesseable_+_in_+_any_+_case
*CAT: n
*SEM: twoRel[rel=manner_+_that_+_the_+_fixation_+_is_+_accesseable_+_in_+_any_+_case]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: manner_+_that_+_the_+_fixation_+_is_+_accesseable_+_in_+_any_+_case
*CAT: n
*SEM: twoRel[rel=manner_+_that_+_the_+_fixation_+_is_+_accesseable_+_in_+_any_+_case]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: manner_+_that_+_the_+_fixation_+_is_+_accesseable_+_in_+_any_+_case
*CAT: n
*SEM: orRel[rel=manner_+_that_+_the_+_fixation_+_is_+_accesseable_+_in_+_any_+_case]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_angle_+_+_+_-60_+_referenced
*CAT: n
*SEM: unaryRel[rel=maximum_+_angle_+_+_+_-60_+_referenced]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_angle_+_+_+_-60_+_referenced
*CAT: n
*SEM: twoRel[rel=maximum_+_angle_+_+_+_-60_+_referenced]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_angle_+_+_+_-60_+_referenced
*CAT: n
*SEM: twoRel[rel=maximum_+_angle_+_+_+_-60_+_referenced]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_angle_+_+_+_-60_+_referenced
*CAT: n
*SEM: orRel[rel=maximum_+_angle_+_+_+_-60_+_referenced]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_angle_+_+-60â°_+_referenced
*CAT: n
*SEM: unaryRel[rel=maximum_+_angle_+_+-60â°_+_referenced]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_angle_+_+-60â°_+_referenced
*CAT: n
*SEM: twoRel[rel=maximum_+_angle_+_+-60â°_+_referenced]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_angle_+_+-60â°_+_referenced
*CAT: n
*SEM: twoRel[rel=maximum_+_angle_+_+-60â°_+_referenced]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_angle_+_+-60â°_+_referenced
*CAT: n
*SEM: orRel[rel=maximum_+_angle_+_+-60â°_+_referenced]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_diameter_+_backslash_+_section_+_of_+_50mm_+__+_opensb_+_including_+_margin_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=maximum_+_diameter_+_backslash_+_section_+_of_+_50mm_+__+_opensb_+_including_+_margin_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_diameter_+_backslash_+_section_+_of_+_50mm_+__+_opensb_+_including_+_margin_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=maximum_+_diameter_+_backslash_+_section_+_of_+_50mm_+__+_opensb_+_including_+_margin_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_diameter_+_backslash_+_section_+_of_+_50mm_+__+_opensb_+_including_+_margin_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=maximum_+_diameter_+_backslash_+_section_+_of_+_50mm_+__+_opensb_+_including_+_margin_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_diameter_+_backslash_+_section_+_of_+_50mm_+__+_opensb_+_including_+_margin_+_closesb_+_
*CAT: n
*SEM: orRel[rel=maximum_+_diameter_+_backslash_+_section_+_of_+_50mm_+__+_opensb_+_including_+_margin_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_diameter_+_backslash_+_section_+_of_+_50mm_+_opensb_+_including_+_margin_+_closesb
*CAT: n
*SEM: unaryRel[rel=maximum_+_diameter_+_backslash_+_section_+_of_+_50mm_+_opensb_+_including_+_margin_+_closesb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_diameter_+_backslash_+_section_+_of_+_50mm_+_opensb_+_including_+_margin_+_closesb
*CAT: n
*SEM: twoRel[rel=maximum_+_diameter_+_backslash_+_section_+_of_+_50mm_+_opensb_+_including_+_margin_+_closesb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_diameter_+_backslash_+_section_+_of_+_50mm_+_opensb_+_including_+_margin_+_closesb
*CAT: n
*SEM: twoRel[rel=maximum_+_diameter_+_backslash_+_section_+_of_+_50mm_+_opensb_+_including_+_margin_+_closesb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_diameter_+_backslash_+_section_+_of_+_50mm_+_opensb_+_including_+_margin_+_closesb
*CAT: n
*SEM: orRel[rel=maximum_+_diameter_+_backslash_+_section_+_of_+_50mm_+_opensb_+_including_+_margin_+_closesb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_distance_+_of_+_41.9_+_mm_+_between_+_the_+_first_+_clamp
*CAT: n
*SEM: unaryRel[rel=maximum_+_distance_+_of_+_41.9_+_mm_+_between_+_the_+_first_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_distance_+_of_+_41.9_+_mm_+_between_+_the_+_first_+_clamp
*CAT: n
*SEM: twoRel[rel=maximum_+_distance_+_of_+_41.9_+_mm_+_between_+_the_+_first_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_distance_+_of_+_41.9_+_mm_+_between_+_the_+_first_+_clamp
*CAT: n
*SEM: twoRel[rel=maximum_+_distance_+_of_+_41.9_+_mm_+_between_+_the_+_first_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_distance_+_of_+_41.9_+_mm_+_between_+_the_+_first_+_clamp
*CAT: n
*SEM: orRel[rel=maximum_+_distance_+_of_+_41.9_+_mm_+_between_+_the_+_first_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_length_+_of_+_500_+_mm_+_regardless_+_of_+_the_+_diameter
*CAT: n
*SEM: unaryRel[rel=maximum_+_length_+_of_+_500_+_mm_+_regardless_+_of_+_the_+_diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_length_+_of_+_500_+_mm_+_regardless_+_of_+_the_+_diameter
*CAT: n
*SEM: twoRel[rel=maximum_+_length_+_of_+_500_+_mm_+_regardless_+_of_+_the_+_diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_length_+_of_+_500_+_mm_+_regardless_+_of_+_the_+_diameter
*CAT: n
*SEM: twoRel[rel=maximum_+_length_+_of_+_500_+_mm_+_regardless_+_of_+_the_+_diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_length_+_of_+_500_+_mm_+_regardless_+_of_+_the_+_diameter
*CAT: n
*SEM: orRel[rel=maximum_+_length_+_of_+_500_+_mm_+_regardless_+_of_+_the_+_diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_of_+_350mm
*CAT: n
*SEM: unaryRel[rel=maximum_+_pitch_+_of_+_350mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_of_+_350mm
*CAT: n
*SEM: twoRel[rel=maximum_+_pitch_+_of_+_350mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_of_+_350mm
*CAT: n
*SEM: twoRel[rel=maximum_+_pitch_+_of_+_350mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch_+_of_+_350mm
*CAT: n
*SEM: orRel[rel=maximum_+_pitch_+_of_+_350mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum
*CAT: n
*SEM: unaryRel[rel=minimum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum
*CAT: n
*SEM: twoRel[rel=minimum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum
*CAT: n
*SEM: twoRel[rel=minimum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum
*CAT: n
*SEM: orRel[rel=minimum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions
*CAT: n
*SEM: unaryRel[rel=minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions
*CAT: n
*SEM: twoRel[rel=minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions
*CAT: n
*SEM: twoRel[rel=minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions
*CAT: n
*SEM: orRel[rel=minimum_+_5_+_mm_+_additional_+_gap_+_between_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius_+_of_+_2d
*CAT: n
*SEM: unaryRel[rel=minimum_+_bend_+_radius_+_of_+_2d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius_+_of_+_2d
*CAT: n
*SEM: twoRel[rel=minimum_+_bend_+_radius_+_of_+_2d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius_+_of_+_2d
*CAT: n
*SEM: twoRel[rel=minimum_+_bend_+_radius_+_of_+_2d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius_+_of_+_2d
*CAT: n
*SEM: orRel[rel=minimum_+_bend_+_radius_+_of_+_2d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance
*CAT: n
*SEM: unaryRel[rel=minimum_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance
*CAT: n
*SEM: twoRel[rel=minimum_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance
*CAT: n
*SEM: twoRel[rel=minimum_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance
*CAT: n
*SEM: orRel[rel=minimum_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance_+_of_+_6mm
*CAT: n
*SEM: unaryRel[rel=minimum_+_clearance_+_of_+_6mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance_+_of_+_6mm
*CAT: n
*SEM: twoRel[rel=minimum_+_clearance_+_of_+_6mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance_+_of_+_6mm
*CAT: n
*SEM: twoRel[rel=minimum_+_clearance_+_of_+_6mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_clearance_+_of_+_6mm
*CAT: n
*SEM: orRel[rel=minimum_+_clearance_+_of_+_6mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_conduit_+_size_+_of_+_9
*CAT: n
*SEM: unaryRel[rel=minimum_+_conduit_+_size_+_of_+_9]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_conduit_+_size_+_of_+_9
*CAT: n
*SEM: twoRel[rel=minimum_+_conduit_+_size_+_of_+_9]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_conduit_+_size_+_of_+_9
*CAT: n
*SEM: twoRel[rel=minimum_+_conduit_+_size_+_of_+_9]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_conduit_+_size_+_of_+_9
*CAT: n
*SEM: orRel[rel=minimum_+_conduit_+_size_+_of_+_9]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_distance_+_given_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: unaryRel[rel=minimum_+_distance_+_given_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_distance_+_given_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: twoRel[rel=minimum_+_distance_+_given_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_distance_+_given_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: twoRel[rel=minimum_+_distance_+_given_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_distance_+_given_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: orRel[rel=minimum_+_distance_+_given_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_distance_+_of_+_15mm
*CAT: n
*SEM: unaryRel[rel=minimum_+_distance_+_of_+_15mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_distance_+_of_+_15mm
*CAT: n
*SEM: twoRel[rel=minimum_+_distance_+_of_+_15mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_distance_+_of_+_15mm
*CAT: n
*SEM: twoRel[rel=minimum_+_distance_+_of_+_15mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_distance_+_of_+_15mm
*CAT: n
*SEM: orRel[rel=minimum_+_distance_+_of_+_15mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive-bracket
*CAT: n
*SEM: unaryRel[rel=non_+_conductive-bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive-bracket
*CAT: n
*SEM: twoRel[rel=non_+_conductive-bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive-bracket
*CAT: n
*SEM: twoRel[rel=non_+_conductive-bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive-bracket
*CAT: n
*SEM: orRel[rel=non_+_conductive-bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: unaryRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: twoRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: twoRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: orRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ptfe_+_inner_+_tube_+_with_+_single
*CAT: n
*SEM: unaryRel[rel=ptfe_+_inner_+_tube_+_with_+_single]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ptfe_+_inner_+_tube_+_with_+_single
*CAT: n
*SEM: twoRel[rel=ptfe_+_inner_+_tube_+_with_+_single]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ptfe_+_inner_+_tube_+_with_+_single
*CAT: n
*SEM: twoRel[rel=ptfe_+_inner_+_tube_+_with_+_single]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ptfe_+_inner_+_tube_+_with_+_single
*CAT: n
*SEM: orRel[rel=ptfe_+_inner_+_tube_+_with_+_single]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pull_+_back_+_areof_+_250_+_mm
*CAT: n
*SEM: unaryRel[rel=pull_+_back_+_areof_+_250_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pull_+_back_+_areof_+_250_+_mm
*CAT: n
*SEM: twoRel[rel=pull_+_back_+_areof_+_250_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pull_+_back_+_areof_+_250_+_mm
*CAT: n
*SEM: twoRel[rel=pull_+_back_+_areof_+_250_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pull_+_back_+_areof_+_250_+_mm
*CAT: n
*SEM: orRel[rel=pull_+_back_+_areof_+_250_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: secured_+_routing_+_case_+_a
*CAT: n
*SEM: unaryRel[rel=secured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: secured_+_routing_+_case_+_a
*CAT: n
*SEM: twoRel[rel=secured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: secured_+_routing_+_case_+_a
*CAT: n
*SEM: twoRel[rel=secured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: secured_+_routing_+_case_+_a
*CAT: n
*SEM: orRel[rel=secured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shrink_+_temperature_+_which_+_is_+_in_+_line_+_with_+_the_+_bundle_+_temperature
*CAT: n
*SEM: unaryRel[rel=shrink_+_temperature_+_which_+_is_+_in_+_line_+_with_+_the_+_bundle_+_temperature]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shrink_+_temperature_+_which_+_is_+_in_+_line_+_with_+_the_+_bundle_+_temperature
*CAT: n
*SEM: twoRel[rel=shrink_+_temperature_+_which_+_is_+_in_+_line_+_with_+_the_+_bundle_+_temperature]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shrink_+_temperature_+_which_+_is_+_in_+_line_+_with_+_the_+_bundle_+_temperature
*CAT: n
*SEM: twoRel[rel=shrink_+_temperature_+_which_+_is_+_in_+_line_+_with_+_the_+_bundle_+_temperature]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shrink_+_temperature_+_which_+_is_+_in_+_line_+_with_+_the_+_bundle_+_temperature
*CAT: n
*SEM: orRel[rel=shrink_+_temperature_+_which_+_is_+_in_+_line_+_with_+_the_+_bundle_+_temperature]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_bundle
*CAT: n
*SEM: unaryRel[rel=single_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_bundle
*CAT: n
*SEM: twoRel[rel=single_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_bundle
*CAT: n
*SEM: twoRel[rel=single_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_bundle
*CAT: n
*SEM: orRel[rel=single_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_clamp-block
*CAT: n
*SEM: twoRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_clamp-block
*CAT: n
*SEM: twoRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_clamp-block
*CAT: n
*SEM: orRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_equipment_+_on_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: unaryRel[rel=single_+_equipment_+_on_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_equipment_+_on_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: twoRel[rel=single_+_equipment_+_on_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_equipment_+_on_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: twoRel[rel=single_+_equipment_+_on_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_equipment_+_on_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: orRel[rel=single_+_equipment_+_on_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_ns935401_+_cable_+_tie_+_would_+_not_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=single_+_ns935401_+_cable_+_tie_+_would_+_not_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_ns935401_+_cable_+_tie_+_would_+_not_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=single_+_ns935401_+_cable_+_tie_+_would_+_not_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_ns935401_+_cable_+_tie_+_would_+_not_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=single_+_ns935401_+_cable_+_tie_+_would_+_not_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_ns935401_+_cable_+_tie_+_would_+_not_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=single_+_ns935401_+_cable_+_tie_+_would_+_not_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_ns935401_+_cable_+_tie_+_would_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=single_+_ns935401_+_cable_+_tie_+_would_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_ns935401_+_cable_+_tie_+_would_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=single_+_ns935401_+_cable_+_tie_+_would_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_ns935401_+_cable_+_tie_+_would_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=single_+_ns935401_+_cable_+_tie_+_would_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_ns935401_+_cable_+_tie_+_would_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=single_+_ns935401_+_cable_+_tie_+_would_+_result_+_in_+_the_+_loss_+_of_+_the_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer
*CAT: n
*SEM: unaryRel[rel=spacer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer
*CAT: n
*SEM: twoRel[rel=spacer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer
*CAT: n
*SEM: twoRel[rel=spacer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer
*CAT: n
*SEM: orRel[rel=spacer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_provision
*CAT: n
*SEM: unaryRel[rel=spare_+_provision]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_provision
*CAT: n
*SEM: twoRel[rel=spare_+_provision]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_provision
*CAT: n
*SEM: twoRel[rel=spare_+_provision]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_provision
*CAT: n
*SEM: orRel[rel=spare_+_provision]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover_+_in_+_pressurized_+_zone
*CAT: n
*SEM: unaryRel[rel=spray_+_cover_+_in_+_pressurized_+_zone]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover_+_in_+_pressurized_+_zone
*CAT: n
*SEM: twoRel[rel=spray_+_cover_+_in_+_pressurized_+_zone]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover_+_in_+_pressurized_+_zone
*CAT: n
*SEM: twoRel[rel=spray_+_cover_+_in_+_pressurized_+_zone]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover_+_in_+_pressurized_+_zone
*CAT: n
*SEM: orRel[rel=spray_+_cover_+_in_+_pressurized_+_zone]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stowage_+_receptable
*CAT: n
*SEM: unaryRel[rel=stowage_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stowage_+_receptable
*CAT: n
*SEM: twoRel[rel=stowage_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stowage_+_receptable
*CAT: n
*SEM: twoRel[rel=stowage_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stowage_+_receptable
*CAT: n
*SEM: orRel[rel=stowage_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_distance_+_from_+_the_+_pipe_+_extremity
*CAT: n
*SEM: unaryRel[rel=sufficient_+_distance_+_from_+_the_+_pipe_+_extremity]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_distance_+_from_+_the_+_pipe_+_extremity
*CAT: n
*SEM: twoRel[rel=sufficient_+_distance_+_from_+_the_+_pipe_+_extremity]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_distance_+_from_+_the_+_pipe_+_extremity
*CAT: n
*SEM: twoRel[rel=sufficient_+_distance_+_from_+_the_+_pipe_+_extremity]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_distance_+_from_+_the_+_pipe_+_extremity
*CAT: n
*SEM: orRel[rel=sufficient_+_distance_+_from_+_the_+_pipe_+_extremity]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness_+_less_+_than_+_3
*CAT: n
*SEM: unaryRel[rel=surface_+_roughness_+_less_+_than_+_3]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness_+_less_+_than_+_3
*CAT: n
*SEM: twoRel[rel=surface_+_roughness_+_less_+_than_+_3]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness_+_less_+_than_+_3
*CAT: n
*SEM: twoRel[rel=surface_+_roughness_+_less_+_than_+_3]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness_+_less_+_than_+_3
*CAT: n
*SEM: orRel[rel=surface_+_roughness_+_less_+_than_+_3]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee_+_-_+_unions
*CAT: n
*SEM: unaryRel[rel=tee_+_-_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee_+_-_+_unions
*CAT: n
*SEM: twoRel[rel=tee_+_-_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee_+_-_+_unions
*CAT: n
*SEM: twoRel[rel=tee_+_-_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee_+_-_+_unions
*CAT: n
*SEM: orRel[rel=tee_+_-_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_position
*CAT: n
*SEM: unaryRel[rel=vertical_+_position]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_position
*CAT: n
*SEM: twoRel[rel=vertical_+_position]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_position
*CAT: n
*SEM: twoRel[rel=vertical_+_position]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_position
*CAT: n
*SEM: orRel[rel=vertical_+_position]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+_opensb_+_vs_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=virtual_+_splice_+_opensb_+_vs_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+_opensb_+_vs_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=virtual_+_splice_+_opensb_+_vs_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+_opensb_+_vs_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=virtual_+_splice_+_opensb_+_vs_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+_opensb_+_vs_+_closesb_+_
*CAT: n
*SEM: orRel[rel=virtual_+_splice_+_opensb_+_vs_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: way
*CAT: n
*SEM: unaryRel[rel=way]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: way
*CAT: n
*SEM: twoRel[rel=way]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: way
*CAT: n
*SEM: twoRel[rel=way]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: way
*CAT: n
*SEM: orRel[rel=way]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: a4-d_+_spacer
*CAT: n
*SEM: unaryRel[rel=a4-d_+_spacer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: a4-d_+_spacer
*CAT: n
*SEM: twoRel[rel=a4-d_+_spacer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: a4-d_+_spacer
*CAT: n
*SEM: twoRel[rel=a4-d_+_spacer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: a4-d_+_spacer
*CAT: n
*SEM: orRel[rel=a4-d_+_spacer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: above_+_cwb
*CAT: n
*SEM: unaryRel[rel=above_+_cwb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: above_+_cwb
*CAT: n
*SEM: twoRel[rel=above_+_cwb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: above_+_cwb
*CAT: n
*SEM: twoRel[rel=above_+_cwb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: above_+_cwb
*CAT: n
*SEM: orRel[rel=above_+_cwb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0121_+__+_connector
*CAT: n
*SEM: unaryRel[rel=abs_+_0121_+__+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0121_+__+_connector
*CAT: n
*SEM: twoRel[rel=abs_+_0121_+__+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0121_+__+_connector
*CAT: n
*SEM: twoRel[rel=abs_+_0121_+__+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0121_+__+_connector
*CAT: n
*SEM: orRel[rel=abs_+_0121_+__+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0121_+_connector
*CAT: n
*SEM: unaryRel[rel=abs_+_0121_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0121_+_connector
*CAT: n
*SEM: twoRel[rel=abs_+_0121_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0121_+_connector
*CAT: n
*SEM: twoRel[rel=abs_+_0121_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0121_+_connector
*CAT: n
*SEM: orRel[rel=abs_+_0121_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0127_+_cable_+_retainer
*CAT: n
*SEM: unaryRel[rel=abs_+_0127_+_cable_+_retainer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0127_+_cable_+_retainer
*CAT: n
*SEM: twoRel[rel=abs_+_0127_+_cable_+_retainer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0127_+_cable_+_retainer
*CAT: n
*SEM: twoRel[rel=abs_+_0127_+_cable_+_retainer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0127_+_cable_+_retainer
*CAT: n
*SEM: orRel[rel=abs_+_0127_+_cable_+_retainer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0127_+_cable_+_retainer_+_in_+_wing
*CAT: n
*SEM: unaryRel[rel=abs_+_0127_+_cable_+_retainer_+_in_+_wing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0127_+_cable_+_retainer_+_in_+_wing
*CAT: n
*SEM: twoRel[rel=abs_+_0127_+_cable_+_retainer_+_in_+_wing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0127_+_cable_+_retainer_+_in_+_wing
*CAT: n
*SEM: twoRel[rel=abs_+_0127_+_cable_+_retainer_+_in_+_wing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0127_+_cable_+_retainer_+_in_+_wing
*CAT: n
*SEM: orRel[rel=abs_+_0127_+_cable_+_retainer_+_in_+_wing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0504
*CAT: n
*SEM: unaryRel[rel=abs_+_0504]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0504
*CAT: n
*SEM: twoRel[rel=abs_+_0504]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0504
*CAT: n
*SEM: twoRel[rel=abs_+_0504]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0504
*CAT: n
*SEM: orRel[rel=abs_+_0504]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0514_+_tube
*CAT: n
*SEM: unaryRel[rel=abs_+_0514_+_tube]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0514_+_tube
*CAT: n
*SEM: twoRel[rel=abs_+_0514_+_tube]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0514_+_tube
*CAT: n
*SEM: twoRel[rel=abs_+_0514_+_tube]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0514_+_tube
*CAT: n
*SEM: orRel[rel=abs_+_0514_+_tube]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0596_+_split_+_conduit
*CAT: n
*SEM: unaryRel[rel=abs_+_0596_+_split_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0596_+_split_+_conduit
*CAT: n
*SEM: twoRel[rel=abs_+_0596_+_split_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0596_+_split_+_conduit
*CAT: n
*SEM: twoRel[rel=abs_+_0596_+_split_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0596_+_split_+_conduit
*CAT: n
*SEM: orRel[rel=abs_+_0596_+_split_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724
*CAT: n
*SEM: unaryRel[rel=abs_+_0724]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724
*CAT: n
*SEM: twoRel[rel=abs_+_0724]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724
*CAT: n
*SEM: twoRel[rel=abs_+_0724]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724
*CAT: n
*SEM: orRel[rel=abs_+_0724]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_label
*CAT: n
*SEM: unaryRel[rel=abs_+_0724_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_label
*CAT: n
*SEM: twoRel[rel=abs_+_0724_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_label
*CAT: n
*SEM: twoRel[rel=abs_+_0724_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_label
*CAT: n
*SEM: orRel[rel=abs_+_0724_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_label_+_in_+_white_+_color
*CAT: n
*SEM: unaryRel[rel=abs_+_0724_+_label_+_in_+_white_+_color]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_label_+_in_+_white_+_color
*CAT: n
*SEM: twoRel[rel=abs_+_0724_+_label_+_in_+_white_+_color]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_label_+_in_+_white_+_color
*CAT: n
*SEM: twoRel[rel=abs_+_0724_+_label_+_in_+_white_+_color]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_label_+_in_+_white_+_color
*CAT: n
*SEM: orRel[rel=abs_+_0724_+_label_+_in_+_white_+_color]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_printed_+_with_+_''_+_caution_+_high_+_voltage_+_inside_+_''
*CAT: n
*SEM: unaryRel[rel=abs_+_0724_+_printed_+_with_+_''_+_caution_+_high_+_voltage_+_inside_+_'']
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_printed_+_with_+_''_+_caution_+_high_+_voltage_+_inside_+_''
*CAT: n
*SEM: twoRel[rel=abs_+_0724_+_printed_+_with_+_''_+_caution_+_high_+_voltage_+_inside_+_'']
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_printed_+_with_+_''_+_caution_+_high_+_voltage_+_inside_+_''
*CAT: n
*SEM: twoRel[rel=abs_+_0724_+_printed_+_with_+_''_+_caution_+_high_+_voltage_+_inside_+_'']
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0724_+_printed_+_with_+_''_+_caution_+_high_+_voltage_+_inside_+_''
*CAT: n
*SEM: orRel[rel=abs_+_0724_+_printed_+_with_+_''_+_caution_+_high_+_voltage_+_inside_+_'']
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_conduit
*CAT: n
*SEM: unaryRel[rel=abs_+_0887_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_conduit
*CAT: n
*SEM: twoRel[rel=abs_+_0887_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_conduit
*CAT: n
*SEM: twoRel[rel=abs_+_0887_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_conduit
*CAT: n
*SEM: orRel[rel=abs_+_0887_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_convoluted_+_conduit
*CAT: n
*SEM: unaryRel[rel=abs_+_0887_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_convoluted_+_conduit
*CAT: n
*SEM: twoRel[rel=abs_+_0887_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_convoluted_+_conduit
*CAT: n
*SEM: twoRel[rel=abs_+_0887_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_convoluted_+_conduit
*CAT: n
*SEM: orRel[rel=abs_+_0887_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_spare_+_conduit
*CAT: n
*SEM: unaryRel[rel=abs_+_0887_+_spare_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_spare_+_conduit
*CAT: n
*SEM: twoRel[rel=abs_+_0887_+_spare_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_spare_+_conduit
*CAT: n
*SEM: twoRel[rel=abs_+_0887_+_spare_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0887_+_spare_+_conduit
*CAT: n
*SEM: orRel[rel=abs_+_0887_+_spare_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0916
*CAT: n
*SEM: unaryRel[rel=abs_+_0916]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0916
*CAT: n
*SEM: twoRel[rel=abs_+_0916]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0916
*CAT: n
*SEM: twoRel[rel=abs_+_0916]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0916
*CAT: n
*SEM: orRel[rel=abs_+_0916]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0916_+_shrink_+_sleeve
*CAT: n
*SEM: unaryRel[rel=abs_+_0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0916_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=abs_+_0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0916_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=abs_+_0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_0916_+_shrink_+_sleeve
*CAT: n
*SEM: orRel[rel=abs_+_0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1020_+_grommet
*CAT: n
*SEM: unaryRel[rel=abs_+_1020_+_grommet]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1020_+_grommet
*CAT: n
*SEM: twoRel[rel=abs_+_1020_+_grommet]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1020_+_grommet
*CAT: n
*SEM: twoRel[rel=abs_+_1020_+_grommet]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1020_+_grommet
*CAT: n
*SEM: orRel[rel=abs_+_1020_+_grommet]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1082_+_bracket
*CAT: n
*SEM: unaryRel[rel=abs_+_1082_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1082_+_bracket
*CAT: n
*SEM: twoRel[rel=abs_+_1082_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1082_+_bracket
*CAT: n
*SEM: twoRel[rel=abs_+_1082_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1082_+_bracket
*CAT: n
*SEM: orRel[rel=abs_+_1082_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1095_+_insulating_+_bracket
*CAT: n
*SEM: unaryRel[rel=abs_+_1095_+_insulating_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1095_+_insulating_+_bracket
*CAT: n
*SEM: twoRel[rel=abs_+_1095_+_insulating_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1095_+_insulating_+_bracket
*CAT: n
*SEM: twoRel[rel=abs_+_1095_+_insulating_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1095_+_insulating_+_bracket
*CAT: n
*SEM: orRel[rel=abs_+_1095_+_insulating_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1339_+_p-clamp
*CAT: n
*SEM: unaryRel[rel=abs_+_1339_+_p-clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1339_+_p-clamp
*CAT: n
*SEM: twoRel[rel=abs_+_1339_+_p-clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1339_+_p-clamp
*CAT: n
*SEM: twoRel[rel=abs_+_1339_+_p-clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1339_+_p-clamp
*CAT: n
*SEM: orRel[rel=abs_+_1339_+_p-clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1353_+_emi_+_conduit
*CAT: n
*SEM: unaryRel[rel=abs_+_1353_+_emi_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1353_+_emi_+_conduit
*CAT: n
*SEM: twoRel[rel=abs_+_1353_+_emi_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1353_+_emi_+_conduit
*CAT: n
*SEM: twoRel[rel=abs_+_1353_+_emi_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1353_+_emi_+_conduit
*CAT: n
*SEM: orRel[rel=abs_+_1353_+_emi_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1475-01_+_label
*CAT: n
*SEM: unaryRel[rel=abs_+_1475-01_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1475-01_+_label
*CAT: n
*SEM: twoRel[rel=abs_+_1475-01_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1475-01_+_label
*CAT: n
*SEM: twoRel[rel=abs_+_1475-01_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1475-01_+_label
*CAT: n
*SEM: orRel[rel=abs_+_1475-01_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1569_+_terminal_+_modul
*CAT: n
*SEM: unaryRel[rel=abs_+_1569_+_terminal_+_modul]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1569_+_terminal_+_modul
*CAT: n
*SEM: twoRel[rel=abs_+_1569_+_terminal_+_modul]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1569_+_terminal_+_modul
*CAT: n
*SEM: twoRel[rel=abs_+_1569_+_terminal_+_modul]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1569_+_terminal_+_modul
*CAT: n
*SEM: orRel[rel=abs_+_1569_+_terminal_+_modul]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1571_+_pressure_+_seal
*CAT: n
*SEM: unaryRel[rel=abs_+_1571_+_pressure_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1571_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=abs_+_1571_+_pressure_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1571_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=abs_+_1571_+_pressure_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1571_+_pressure_+_seal
*CAT: n
*SEM: orRel[rel=abs_+_1571_+_pressure_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1576_+_peek_+_ramp
*CAT: n
*SEM: unaryRel[rel=abs_+_1576_+_peek_+_ramp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1576_+_peek_+_ramp
*CAT: n
*SEM: twoRel[rel=abs_+_1576_+_peek_+_ramp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1576_+_peek_+_ramp
*CAT: n
*SEM: twoRel[rel=abs_+_1576_+_peek_+_ramp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_1576_+_peek_+_ramp
*CAT: n
*SEM: orRel[rel=abs_+_1576_+_peek_+_ramp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_5342-02_+_flag_+_datum_+_marker
*CAT: n
*SEM: unaryRel[rel=abs_+_5342-02_+_flag_+_datum_+_marker]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_5342-02_+_flag_+_datum_+_marker
*CAT: n
*SEM: twoRel[rel=abs_+_5342-02_+_flag_+_datum_+_marker]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_5342-02_+_flag_+_datum_+_marker
*CAT: n
*SEM: twoRel[rel=abs_+_5342-02_+_flag_+_datum_+_marker]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_5342-02_+_flag_+_datum_+_marker
*CAT: n
*SEM: orRel[rel=abs_+_5342-02_+_flag_+_datum_+_marker]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_5342a01yl_+_tape
*CAT: n
*SEM: unaryRel[rel=abs_+_5342a01yl_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_5342a01yl_+_tape
*CAT: n
*SEM: twoRel[rel=abs_+_5342a01yl_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_5342a01yl_+_tape
*CAT: n
*SEM: twoRel[rel=abs_+_5342a01yl_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs_+_5342a01yl_+_tape
*CAT: n
*SEM: orRel[rel=abs_+_5342a01yl_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0369_+_saddle_+_clamp
*CAT: n
*SEM: unaryRel[rel=abs0369_+_saddle_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0369_+_saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=abs0369_+_saddle_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0369_+_saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=abs0369_+_saddle_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0369_+_saddle_+_clamp
*CAT: n
*SEM: orRel[rel=abs0369_+_saddle_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0396_+__+_invcomma_+_style_+_a_+_invcomma_+__+_saddle_+_clamp
*CAT: n
*SEM: unaryRel[rel=abs0396_+__+_invcomma_+_style_+_a_+_invcomma_+__+_saddle_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0396_+__+_invcomma_+_style_+_a_+_invcomma_+__+_saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=abs0396_+__+_invcomma_+_style_+_a_+_invcomma_+__+_saddle_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0396_+__+_invcomma_+_style_+_a_+_invcomma_+__+_saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=abs0396_+__+_invcomma_+_style_+_a_+_invcomma_+__+_saddle_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0396_+__+_invcomma_+_style_+_a_+_invcomma_+__+_saddle_+_clamp
*CAT: n
*SEM: orRel[rel=abs0396_+__+_invcomma_+_style_+_a_+_invcomma_+__+_saddle_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0396_+_''_+_style_+_a_+_''_+_saddle_+_clamp
*CAT: n
*SEM: unaryRel[rel=abs0396_+_''_+_style_+_a_+_''_+_saddle_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0396_+_''_+_style_+_a_+_''_+_saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=abs0396_+_''_+_style_+_a_+_''_+_saddle_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0396_+_''_+_style_+_a_+_''_+_saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=abs0396_+_''_+_style_+_a_+_''_+_saddle_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0396_+_''_+_style_+_a_+_''_+_saddle_+_clamp
*CAT: n
*SEM: orRel[rel=abs0396_+_''_+_style_+_a_+_''_+_saddle_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0455_+_backshell
*CAT: n
*SEM: unaryRel[rel=abs0455_+_backshell]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0455_+_backshell
*CAT: n
*SEM: twoRel[rel=abs0455_+_backshell]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0455_+_backshell
*CAT: n
*SEM: twoRel[rel=abs0455_+_backshell]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0455_+_backshell
*CAT: n
*SEM: orRel[rel=abs0455_+_backshell]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0861_+_fire_+_seal
*CAT: n
*SEM: unaryRel[rel=abs0861_+_fire_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0861_+_fire_+_seal
*CAT: n
*SEM: twoRel[rel=abs0861_+_fire_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0861_+_fire_+_seal
*CAT: n
*SEM: twoRel[rel=abs0861_+_fire_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0861_+_fire_+_seal
*CAT: n
*SEM: orRel[rel=abs0861_+_fire_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0916_+_shrink_+_sleeve
*CAT: n
*SEM: unaryRel[rel=abs0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0916_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=abs0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0916_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=abs0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0916_+_shrink_+_sleeve
*CAT: n
*SEM: orRel[rel=abs0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0929-006_+_optical_+_dummy_+_receptable
*CAT: n
*SEM: unaryRel[rel=abs0929-006_+_optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0929-006_+_optical_+_dummy_+_receptable
*CAT: n
*SEM: twoRel[rel=abs0929-006_+_optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0929-006_+_optical_+_dummy_+_receptable
*CAT: n
*SEM: twoRel[rel=abs0929-006_+_optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs0929-006_+_optical_+_dummy_+_receptable
*CAT: n
*SEM: orRel[rel=abs0929-006_+_optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1339-d
*CAT: n
*SEM: unaryRel[rel=abs1339-d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1339-d
*CAT: n
*SEM: twoRel[rel=abs1339-d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1339-d
*CAT: n
*SEM: twoRel[rel=abs1339-d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1339-d
*CAT: n
*SEM: orRel[rel=abs1339-d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1353_+_overbraiding
*CAT: n
*SEM: unaryRel[rel=abs1353_+_overbraiding]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1353_+_overbraiding
*CAT: n
*SEM: twoRel[rel=abs1353_+_overbraiding]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1353_+_overbraiding
*CAT: n
*SEM: twoRel[rel=abs1353_+_overbraiding]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1353_+_overbraiding
*CAT: n
*SEM: orRel[rel=abs1353_+_overbraiding]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1409_+_backslash_+_abs1408_+_single-hole_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=abs1409_+_backslash_+_abs1408_+_single-hole_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1409_+_backslash_+_abs1408_+_single-hole_+_clamp-block
*CAT: n
*SEM: twoRel[rel=abs1409_+_backslash_+_abs1408_+_single-hole_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1409_+_backslash_+_abs1408_+_single-hole_+_clamp-block
*CAT: n
*SEM: twoRel[rel=abs1409_+_backslash_+_abs1408_+_single-hole_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1409_+_backslash_+_abs1408_+_single-hole_+_clamp-block
*CAT: n
*SEM: orRel[rel=abs1409_+_backslash_+_abs1408_+_single-hole_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1423_+_stand-off_+__+_backslash_+__+_colonette
*CAT: n
*SEM: unaryRel[rel=abs1423_+_stand-off_+__+_backslash_+__+_colonette]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1423_+_stand-off_+__+_backslash_+__+_colonette
*CAT: n
*SEM: twoRel[rel=abs1423_+_stand-off_+__+_backslash_+__+_colonette]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1423_+_stand-off_+__+_backslash_+__+_colonette
*CAT: n
*SEM: twoRel[rel=abs1423_+_stand-off_+__+_backslash_+__+_colonette]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1423_+_stand-off_+__+_backslash_+__+_colonette
*CAT: n
*SEM: orRel[rel=abs1423_+_stand-off_+__+_backslash_+__+_colonette]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1423_+_stand-off_+_backslash_+_colonette
*CAT: n
*SEM: unaryRel[rel=abs1423_+_stand-off_+_backslash_+_colonette]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1423_+_stand-off_+_backslash_+_colonette
*CAT: n
*SEM: twoRel[rel=abs1423_+_stand-off_+_backslash_+_colonette]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1423_+_stand-off_+_backslash_+_colonette
*CAT: n
*SEM: twoRel[rel=abs1423_+_stand-off_+_backslash_+_colonette]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1423_+_stand-off_+_backslash_+_colonette
*CAT: n
*SEM: orRel[rel=abs1423_+_stand-off_+_backslash_+_colonette]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1571_+_pressure_+_seal
*CAT: n
*SEM: unaryRel[rel=abs1571_+_pressure_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1571_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=abs1571_+_pressure_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1571_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=abs1571_+_pressure_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1571_+_pressure_+_seal
*CAT: n
*SEM: orRel[rel=abs1571_+_pressure_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek_+_ramp
*CAT: n
*SEM: unaryRel[rel=abs1576_+_peek_+_ramp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek_+_ramp
*CAT: n
*SEM: twoRel[rel=abs1576_+_peek_+_ramp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek_+_ramp
*CAT: n
*SEM: twoRel[rel=abs1576_+_peek_+_ramp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek_+_ramp
*CAT: n
*SEM: orRel[rel=abs1576_+_peek_+_ramp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek_+_ramp_+_with_+_a_+_v-support
*CAT: n
*SEM: unaryRel[rel=abs1576_+_peek_+_ramp_+_with_+_a_+_v-support]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek_+_ramp_+_with_+_a_+_v-support
*CAT: n
*SEM: twoRel[rel=abs1576_+_peek_+_ramp_+_with_+_a_+_v-support]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek_+_ramp_+_with_+_a_+_v-support
*CAT: n
*SEM: twoRel[rel=abs1576_+_peek_+_ramp_+_with_+_a_+_v-support]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek_+_ramp_+_with_+_a_+_v-support
*CAT: n
*SEM: orRel[rel=abs1576_+_peek_+_ramp_+_with_+_a_+_v-support]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek_+_ramp_+_with_+_abs1576-f02
*CAT: n
*SEM: unaryRel[rel=abs1576_+_peek_+_ramp_+_with_+_abs1576-f02]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek_+_ramp_+_with_+_abs1576-f02
*CAT: n
*SEM: twoRel[rel=abs1576_+_peek_+_ramp_+_with_+_abs1576-f02]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek_+_ramp_+_with_+_abs1576-f02
*CAT: n
*SEM: twoRel[rel=abs1576_+_peek_+_ramp_+_with_+_abs1576-f02]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek_+_ramp_+_with_+_abs1576-f02
*CAT: n
*SEM: orRel[rel=abs1576_+_peek_+_ramp_+_with_+_abs1576-f02]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek_+_ramp_+_without_+_touching_+_the_+_bold_+_head_+_by
*CAT: n
*SEM: unaryRel[rel=abs1576_+_peek_+_ramp_+_without_+_touching_+_the_+_bold_+_head_+_by]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek_+_ramp_+_without_+_touching_+_the_+_bold_+_head_+_by
*CAT: n
*SEM: twoRel[rel=abs1576_+_peek_+_ramp_+_without_+_touching_+_the_+_bold_+_head_+_by]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek_+_ramp_+_without_+_touching_+_the_+_bold_+_head_+_by
*CAT: n
*SEM: twoRel[rel=abs1576_+_peek_+_ramp_+_without_+_touching_+_the_+_bold_+_head_+_by]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576_+_peek_+_ramp_+_without_+_touching_+_the_+_bold_+_head_+_by
*CAT: n
*SEM: orRel[rel=abs1576_+_peek_+_ramp_+_without_+_touching_+_the_+_bold_+_head_+_by]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f01
*CAT: n
*SEM: unaryRel[rel=abs1576-f01]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f01
*CAT: n
*SEM: twoRel[rel=abs1576-f01]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f01
*CAT: n
*SEM: twoRel[rel=abs1576-f01]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f01
*CAT: n
*SEM: orRel[rel=abs1576-f01]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f02
*CAT: n
*SEM: unaryRel[rel=abs1576-f02]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f02
*CAT: n
*SEM: twoRel[rel=abs1576-f02]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f02
*CAT: n
*SEM: twoRel[rel=abs1576-f02]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs1576-f02
*CAT: n
*SEM: orRel[rel=abs1576-f02]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2083
*CAT: n
*SEM: unaryRel[rel=abs2083]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2083
*CAT: n
*SEM: twoRel[rel=abs2083]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2083
*CAT: n
*SEM: twoRel[rel=abs2083]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2083
*CAT: n
*SEM: orRel[rel=abs2083]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2083_+_combi_+_bracket
*CAT: n
*SEM: unaryRel[rel=abs2083_+_combi_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2083_+_combi_+_bracket
*CAT: n
*SEM: twoRel[rel=abs2083_+_combi_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2083_+_combi_+_bracket
*CAT: n
*SEM: twoRel[rel=abs2083_+_combi_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2083_+_combi_+_bracket
*CAT: n
*SEM: orRel[rel=abs2083_+_combi_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2110_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=abs2110_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2110_+_clamp-block
*CAT: n
*SEM: twoRel[rel=abs2110_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2110_+_clamp-block
*CAT: n
*SEM: twoRel[rel=abs2110_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2110_+_clamp-block
*CAT: n
*SEM: orRel[rel=abs2110_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195_+__+_opensb_+_preferred_+_for_+_weight_+_saving_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=abs2195_+__+_opensb_+_preferred_+_for_+_weight_+_saving_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195_+__+_opensb_+_preferred_+_for_+_weight_+_saving_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=abs2195_+__+_opensb_+_preferred_+_for_+_weight_+_saving_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195_+__+_opensb_+_preferred_+_for_+_weight_+_saving_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=abs2195_+__+_opensb_+_preferred_+_for_+_weight_+_saving_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195_+__+_opensb_+_preferred_+_for_+_weight_+_saving_+_closesb_+_
*CAT: n
*SEM: orRel[rel=abs2195_+__+_opensb_+_preferred_+_for_+_weight_+_saving_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195_+_clamp
*CAT: n
*SEM: unaryRel[rel=abs2195_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195_+_clamp
*CAT: n
*SEM: twoRel[rel=abs2195_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195_+_clamp
*CAT: n
*SEM: twoRel[rel=abs2195_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195_+_clamp
*CAT: n
*SEM: orRel[rel=abs2195_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195_+_opensb_+_preferred_+_for_+_weight_+_saving_+_closesb_+_or_+_nsa5516j_+_p-clamp
*CAT: n
*SEM: unaryRel[rel=abs2195_+_opensb_+_preferred_+_for_+_weight_+_saving_+_closesb_+_or_+_nsa5516j_+_p-clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195_+_opensb_+_preferred_+_for_+_weight_+_saving_+_closesb_+_or_+_nsa5516j_+_p-clamp
*CAT: n
*SEM: twoRel[rel=abs2195_+_opensb_+_preferred_+_for_+_weight_+_saving_+_closesb_+_or_+_nsa5516j_+_p-clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195_+_opensb_+_preferred_+_for_+_weight_+_saving_+_closesb_+_or_+_nsa5516j_+_p-clamp
*CAT: n
*SEM: twoRel[rel=abs2195_+_opensb_+_preferred_+_for_+_weight_+_saving_+_closesb_+_or_+_nsa5516j_+_p-clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2195_+_opensb_+_preferred_+_for_+_weight_+_saving_+_closesb_+_or_+_nsa5516j_+_p-clamp
*CAT: n
*SEM: orRel[rel=abs2195_+_opensb_+_preferred_+_for_+_weight_+_saving_+_closesb_+_or_+_nsa5516j_+_p-clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2226_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=abs2226_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2226_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=abs2226_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2226_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=abs2226_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs2226_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=abs2226_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5004-xxxx_+_pipes
*CAT: n
*SEM: unaryRel[rel=abs5004-xxxx_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5004-xxxx_+_pipes
*CAT: n
*SEM: twoRel[rel=abs5004-xxxx_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5004-xxxx_+_pipes
*CAT: n
*SEM: twoRel[rel=abs5004-xxxx_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5004-xxxx_+_pipes
*CAT: n
*SEM: orRel[rel=abs5004-xxxx_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5147_+_metallic_+_ramp
*CAT: n
*SEM: unaryRel[rel=abs5147_+_metallic_+_ramp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5147_+_metallic_+_ramp
*CAT: n
*SEM: twoRel[rel=abs5147_+_metallic_+_ramp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5147_+_metallic_+_ramp
*CAT: n
*SEM: twoRel[rel=abs5147_+_metallic_+_ramp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5147_+_metallic_+_ramp
*CAT: n
*SEM: orRel[rel=abs5147_+_metallic_+_ramp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5151d5-035_+__+_ampersand_+__+_abs5151d6-035_+_pipes
*CAT: n
*SEM: unaryRel[rel=abs5151d5-035_+__+_ampersand_+__+_abs5151d6-035_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5151d5-035_+__+_ampersand_+__+_abs5151d6-035_+_pipes
*CAT: n
*SEM: twoRel[rel=abs5151d5-035_+__+_ampersand_+__+_abs5151d6-035_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5151d5-035_+__+_ampersand_+__+_abs5151d6-035_+_pipes
*CAT: n
*SEM: twoRel[rel=abs5151d5-035_+__+_ampersand_+__+_abs5151d6-035_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5151d5-035_+__+_ampersand_+__+_abs5151d6-035_+_pipes
*CAT: n
*SEM: orRel[rel=abs5151d5-035_+__+_ampersand_+__+_abs5151d6-035_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5151d5-035_+_ampersand_+_abs5151d6-035_+_pipes
*CAT: n
*SEM: unaryRel[rel=abs5151d5-035_+_ampersand_+_abs5151d6-035_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5151d5-035_+_ampersand_+_abs5151d6-035_+_pipes
*CAT: n
*SEM: twoRel[rel=abs5151d5-035_+_ampersand_+_abs5151d6-035_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5151d5-035_+_ampersand_+_abs5151d6-035_+_pipes
*CAT: n
*SEM: twoRel[rel=abs5151d5-035_+_ampersand_+_abs5151d6-035_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5151d5-035_+_ampersand_+_abs5151d6-035_+_pipes
*CAT: n
*SEM: orRel[rel=abs5151d5-035_+_ampersand_+_abs5151d6-035_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5429_+_thermal_+_protection
*CAT: n
*SEM: unaryRel[rel=abs5429_+_thermal_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5429_+_thermal_+_protection
*CAT: n
*SEM: twoRel[rel=abs5429_+_thermal_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5429_+_thermal_+_protection
*CAT: n
*SEM: twoRel[rel=abs5429_+_thermal_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5429_+_thermal_+_protection
*CAT: n
*SEM: orRel[rel=abs5429_+_thermal_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5429_+_thermal_+_protection_+_on_+_the_+_primary_+_instlation
*CAT: n
*SEM: unaryRel[rel=abs5429_+_thermal_+_protection_+_on_+_the_+_primary_+_instlation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5429_+_thermal_+_protection_+_on_+_the_+_primary_+_instlation
*CAT: n
*SEM: twoRel[rel=abs5429_+_thermal_+_protection_+_on_+_the_+_primary_+_instlation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5429_+_thermal_+_protection_+_on_+_the_+_primary_+_instlation
*CAT: n
*SEM: twoRel[rel=abs5429_+_thermal_+_protection_+_on_+_the_+_primary_+_instlation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: abs5429_+_thermal_+_protection_+_on_+_the_+_primary_+_instlation
*CAT: n
*SEM: orRel[rel=abs5429_+_thermal_+_protection_+_on_+_the_+_primary_+_instlation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: active_+_item
*CAT: n
*SEM: unaryRel[rel=active_+_item]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: active_+_item
*CAT: n
*SEM: twoRel[rel=active_+_item]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: active_+_item
*CAT: n
*SEM: twoRel[rel=active_+_item]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: active_+_item
*CAT: n
*SEM: orRel[rel=active_+_item]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_clearance
*CAT: n
*SEM: unaryRel[rel=additional_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_clearance
*CAT: n
*SEM: twoRel[rel=additional_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_clearance
*CAT: n
*SEM: twoRel[rel=additional_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: additional_+_clearance
*CAT: n
*SEM: orRel[rel=additional_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_bonded_+_bracket
*CAT: n
*SEM: unaryRel[rel=adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_bonded_+_bracket
*CAT: n
*SEM: twoRel[rel=adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_bonded_+_bracket
*CAT: n
*SEM: twoRel[rel=adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_bonded_+_bracket
*CAT: n
*SEM: orRel[rel=adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_labels
*CAT: n
*SEM: unaryRel[rel=adhesive_+_labels]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_labels
*CAT: n
*SEM: twoRel[rel=adhesive_+_labels]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_labels
*CAT: n
*SEM: twoRel[rel=adhesive_+_labels]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adhesive_+_labels
*CAT: n
*SEM: orRel[rel=adhesive_+_labels]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjacent_+_raceway
*CAT: n
*SEM: unaryRel[rel=adjacent_+_raceway]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjacent_+_raceway
*CAT: n
*SEM: twoRel[rel=adjacent_+_raceway]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjacent_+_raceway
*CAT: n
*SEM: twoRel[rel=adjacent_+_raceway]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjacent_+_raceway
*CAT: n
*SEM: orRel[rel=adjacent_+_raceway]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjacent_+_structure
*CAT: n
*SEM: unaryRel[rel=adjacent_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjacent_+_structure
*CAT: n
*SEM: twoRel[rel=adjacent_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjacent_+_structure
*CAT: n
*SEM: twoRel[rel=adjacent_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjacent_+_structure
*CAT: n
*SEM: orRel[rel=adjacent_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjustable_+_bracket
*CAT: n
*SEM: unaryRel[rel=adjustable_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjustable_+_bracket
*CAT: n
*SEM: twoRel[rel=adjustable_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjustable_+_bracket
*CAT: n
*SEM: twoRel[rel=adjustable_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: adjustable_+_bracket
*CAT: n
*SEM: orRel[rel=adjustable_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx
*CAT: n
*SEM: unaryRel[rel=afdx]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx
*CAT: n
*SEM: twoRel[rel=afdx]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx
*CAT: n
*SEM: twoRel[rel=afdx]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx
*CAT: n
*SEM: orRel[rel=afdx]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_bus_+_link
*CAT: n
*SEM: unaryRel[rel=afdx_+_bus_+_link]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_bus_+_link
*CAT: n
*SEM: twoRel[rel=afdx_+_bus_+_link]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_bus_+_link
*CAT: n
*SEM: twoRel[rel=afdx_+_bus_+_link]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_bus_+_link
*CAT: n
*SEM: orRel[rel=afdx_+_bus_+_link]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_data_+_bus
*CAT: n
*SEM: unaryRel[rel=afdx_+_data_+_bus]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_data_+_bus
*CAT: n
*SEM: twoRel[rel=afdx_+_data_+_bus]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_data_+_bus
*CAT: n
*SEM: twoRel[rel=afdx_+_data_+_bus]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_data_+_bus
*CAT: n
*SEM: orRel[rel=afdx_+_data_+_bus]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_data_+_bus_+_cable
*CAT: n
*SEM: unaryRel[rel=afdx_+_data_+_bus_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_data_+_bus_+_cable
*CAT: n
*SEM: twoRel[rel=afdx_+_data_+_bus_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_data_+_bus_+_cable
*CAT: n
*SEM: twoRel[rel=afdx_+_data_+_bus_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: afdx_+_data_+_bus_+_cable
*CAT: n
*SEM: orRel[rel=afdx_+_data_+_bus_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: after_+_the_+_loos_+_of_+_separators
*CAT: n
*SEM: unaryRel[rel=after_+_the_+_loos_+_of_+_separators]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: after_+_the_+_loos_+_of_+_separators
*CAT: n
*SEM: twoRel[rel=after_+_the_+_loos_+_of_+_separators]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: after_+_the_+_loos_+_of_+_separators
*CAT: n
*SEM: twoRel[rel=after_+_the_+_loos_+_of_+_separators]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: after_+_the_+_loos_+_of_+_separators
*CAT: n
*SEM: orRel[rel=after_+_the_+_loos_+_of_+_separators]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air_+_duct
*CAT: n
*SEM: unaryRel[rel=air_+_duct]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air_+_duct
*CAT: n
*SEM: twoRel[rel=air_+_duct]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air_+_duct
*CAT: n
*SEM: twoRel[rel=air_+_duct]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: air_+_duct
*CAT: n
*SEM: orRel[rel=air_+_duct]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_section_+_interfaces_+__+_opensb_+_fuselage-wing
*CAT: n
*SEM: unaryRel[rel=aircraft_+_section_+_interfaces_+__+_opensb_+_fuselage-wing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_section_+_interfaces_+__+_opensb_+_fuselage-wing
*CAT: n
*SEM: twoRel[rel=aircraft_+_section_+_interfaces_+__+_opensb_+_fuselage-wing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_section_+_interfaces_+__+_opensb_+_fuselage-wing
*CAT: n
*SEM: twoRel[rel=aircraft_+_section_+_interfaces_+__+_opensb_+_fuselage-wing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_section_+_interfaces_+__+_opensb_+_fuselage-wing
*CAT: n
*SEM: orRel[rel=aircraft_+_section_+_interfaces_+__+_opensb_+_fuselage-wing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_section_+_interfaces_+_opensb_+_fuselage-wing
*CAT: n
*SEM: unaryRel[rel=aircraft_+_section_+_interfaces_+_opensb_+_fuselage-wing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_section_+_interfaces_+_opensb_+_fuselage-wing
*CAT: n
*SEM: twoRel[rel=aircraft_+_section_+_interfaces_+_opensb_+_fuselage-wing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_section_+_interfaces_+_opensb_+_fuselage-wing
*CAT: n
*SEM: twoRel[rel=aircraft_+_section_+_interfaces_+_opensb_+_fuselage-wing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aircraft_+_section_+_interfaces_+_opensb_+_fuselage-wing
*CAT: n
*SEM: orRel[rel=aircraft_+_section_+_interfaces_+_opensb_+_fuselage-wing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_bolt
*CAT: n
*SEM: unaryRel[rel=all_+_bolt]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_bolt
*CAT: n
*SEM: twoRel[rel=all_+_bolt]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_bolt
*CAT: n
*SEM: twoRel[rel=all_+_bolt]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_bolt
*CAT: n
*SEM: orRel[rel=all_+_bolt]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_box
*CAT: n
*SEM: unaryRel[rel=all_+_box]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_box
*CAT: n
*SEM: twoRel[rel=all_+_box]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_box
*CAT: n
*SEM: twoRel[rel=all_+_box]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_box
*CAT: n
*SEM: orRel[rel=all_+_box]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: unaryRel[rel=all_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: twoRel[rel=all_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: twoRel[rel=all_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: orRel[rel=all_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_connector
*CAT: n
*SEM: unaryRel[rel=all_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_connector
*CAT: n
*SEM: twoRel[rel=all_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_connector
*CAT: n
*SEM: twoRel[rel=all_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_connector
*CAT: n
*SEM: orRel[rel=all_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_coupling
*CAT: n
*SEM: unaryRel[rel=all_+_coupling]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_coupling
*CAT: n
*SEM: twoRel[rel=all_+_coupling]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_coupling
*CAT: n
*SEM: twoRel[rel=all_+_coupling]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_coupling
*CAT: n
*SEM: orRel[rel=all_+_coupling]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_equipment
*CAT: n
*SEM: unaryRel[rel=all_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_equipment
*CAT: n
*SEM: twoRel[rel=all_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_equipment
*CAT: n
*SEM: twoRel[rel=all_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_equipment
*CAT: n
*SEM: orRel[rel=all_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=all_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=all_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=all_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=all_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_movable_+_panel
*CAT: n
*SEM: unaryRel[rel=all_+_movable_+_panel]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_movable_+_panel
*CAT: n
*SEM: twoRel[rel=all_+_movable_+_panel]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_movable_+_panel
*CAT: n
*SEM: twoRel[rel=all_+_movable_+_panel]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_movable_+_panel
*CAT: n
*SEM: orRel[rel=all_+_movable_+_panel]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_pipe_+_routings_+_passing_+_through_+_any_+_fuel_+_tank_+_boundaries
*CAT: n
*SEM: unaryRel[rel=all_+_pipe_+_routings_+_passing_+_through_+_any_+_fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_pipe_+_routings_+_passing_+_through_+_any_+_fuel_+_tank_+_boundaries
*CAT: n
*SEM: twoRel[rel=all_+_pipe_+_routings_+_passing_+_through_+_any_+_fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_pipe_+_routings_+_passing_+_through_+_any_+_fuel_+_tank_+_boundaries
*CAT: n
*SEM: twoRel[rel=all_+_pipe_+_routings_+_passing_+_through_+_any_+_fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_pipe_+_routings_+_passing_+_through_+_any_+_fuel_+_tank_+_boundaries
*CAT: n
*SEM: orRel[rel=all_+_pipe_+_routings_+_passing_+_through_+_any_+_fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_pipes
*CAT: n
*SEM: unaryRel[rel=all_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_pipes
*CAT: n
*SEM: twoRel[rel=all_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_pipes
*CAT: n
*SEM: twoRel[rel=all_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_pipes
*CAT: n
*SEM: orRel[rel=all_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_removable_+_unions
*CAT: n
*SEM: unaryRel[rel=all_+_removable_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_removable_+_unions
*CAT: n
*SEM: twoRel[rel=all_+_removable_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_removable_+_unions
*CAT: n
*SEM: twoRel[rel=all_+_removable_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_removable_+_unions
*CAT: n
*SEM: orRel[rel=all_+_removable_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_sense_+_line
*CAT: n
*SEM: unaryRel[rel=all_+_sense_+_line]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_sense_+_line
*CAT: n
*SEM: twoRel[rel=all_+_sense_+_line]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_sense_+_line
*CAT: n
*SEM: twoRel[rel=all_+_sense_+_line]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_sense_+_line
*CAT: n
*SEM: orRel[rel=all_+_sense_+_line]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_the_+_pipes
*CAT: n
*SEM: unaryRel[rel=all_+_the_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_the_+_pipes
*CAT: n
*SEM: twoRel[rel=all_+_the_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_the_+_pipes
*CAT: n
*SEM: twoRel[rel=all_+_the_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_the_+_pipes
*CAT: n
*SEM: orRel[rel=all_+_the_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_zones
*CAT: n
*SEM: unaryRel[rel=all_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_zones
*CAT: n
*SEM: twoRel[rel=all_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_zones
*CAT: n
*SEM: twoRel[rel=all_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: all_+_zones
*CAT: n
*SEM: orRel[rel=all_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_the_+_installation_+_of_+_repair_+_pipes
*CAT: n
*SEM: unaryRel[rel=allow_+_the_+_installation_+_of_+_repair_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_the_+_installation_+_of_+_repair_+_pipes
*CAT: n
*SEM: twoRel[rel=allow_+_the_+_installation_+_of_+_repair_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_the_+_installation_+_of_+_repair_+_pipes
*CAT: n
*SEM: twoRel[rel=allow_+_the_+_installation_+_of_+_repair_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: allow_+_the_+_installation_+_of_+_repair_+_pipes
*CAT: n
*SEM: orRel[rel=allow_+_the_+_installation_+_of_+_repair_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alluminium_+_cables_+__+_backslash_+__+_wires
*CAT: n
*SEM: unaryRel[rel=alluminium_+_cables_+__+_backslash_+__+_wires]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alluminium_+_cables_+__+_backslash_+__+_wires
*CAT: n
*SEM: twoRel[rel=alluminium_+_cables_+__+_backslash_+__+_wires]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alluminium_+_cables_+__+_backslash_+__+_wires
*CAT: n
*SEM: twoRel[rel=alluminium_+_cables_+__+_backslash_+__+_wires]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alluminium_+_cables_+__+_backslash_+__+_wires
*CAT: n
*SEM: orRel[rel=alluminium_+_cables_+__+_backslash_+__+_wires]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alluminium_+_cables_+_backslash_+_wires
*CAT: n
*SEM: unaryRel[rel=alluminium_+_cables_+_backslash_+_wires]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alluminium_+_cables_+_backslash_+_wires
*CAT: n
*SEM: twoRel[rel=alluminium_+_cables_+_backslash_+_wires]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alluminium_+_cables_+_backslash_+_wires
*CAT: n
*SEM: twoRel[rel=alluminium_+_cables_+_backslash_+_wires]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: alluminium_+_cables_+_backslash_+_wires
*CAT: n
*SEM: orRel[rel=alluminium_+_cables_+_backslash_+_wires]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_bundle
*CAT: n
*SEM: unaryRel[rel=aluminium_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_bundle
*CAT: n
*SEM: twoRel[rel=aluminium_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_bundle
*CAT: n
*SEM: twoRel[rel=aluminium_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_bundle
*CAT: n
*SEM: orRel[rel=aluminium_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_terminal_+_lug
*CAT: n
*SEM: unaryRel[rel=aluminium_+_terminal_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=aluminium_+_terminal_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=aluminium_+_terminal_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aluminium_+_terminal_+_lug
*CAT: n
*SEM: orRel[rel=aluminium_+_terminal_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_intermediate_+_bracket
*CAT: n
*SEM: unaryRel[rel=an_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=an_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=an_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_intermediate_+_bracket
*CAT: n
*SEM: orRel[rel=an_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_orientation_+_shown_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: unaryRel[rel=an_+_orientation_+_shown_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_orientation_+_shown_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: twoRel[rel=an_+_orientation_+_shown_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_orientation_+_shown_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: twoRel[rel=an_+_orientation_+_shown_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: an_+_orientation_+_shown_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: orRel[rel=an_+_orientation_+_shown_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: anse_+_0354_+_connector
*CAT: n
*SEM: unaryRel[rel=anse_+_0354_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: anse_+_0354_+_connector
*CAT: n
*SEM: twoRel[rel=anse_+_0354_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: anse_+_0354_+_connector
*CAT: n
*SEM: twoRel[rel=anse_+_0354_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: anse_+_0354_+_connector
*CAT: n
*SEM: orRel[rel=anse_+_0354_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: anse0661
*CAT: n
*SEM: unaryRel[rel=anse0661]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: anse0661
*CAT: n
*SEM: twoRel[rel=anse0661]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: anse0661
*CAT: n
*SEM: twoRel[rel=anse0661]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: anse0661
*CAT: n
*SEM: orRel[rel=anse0661]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: antenna
*CAT: n
*SEM: unaryRel[rel=antenna]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: antenna
*CAT: n
*SEM: twoRel[rel=antenna]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: antenna
*CAT: n
*SEM: twoRel[rel=antenna]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: antenna
*CAT: n
*SEM: orRel[rel=antenna]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_component
*CAT: n
*SEM: unaryRel[rel=any_+_component]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_component
*CAT: n
*SEM: twoRel[rel=any_+_component]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_component
*CAT: n
*SEM: twoRel[rel=any_+_component]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_component
*CAT: n
*SEM: orRel[rel=any_+_component]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: unaryRel[rel=any_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: twoRel[rel=any_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: twoRel[rel=any_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: orRel[rel=any_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_equipment
*CAT: n
*SEM: unaryRel[rel=any_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_equipment
*CAT: n
*SEM: twoRel[rel=any_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_equipment
*CAT: n
*SEM: twoRel[rel=any_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_equipment
*CAT: n
*SEM: orRel[rel=any_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_mechanical_+_ata_+_according
*CAT: n
*SEM: unaryRel[rel=any_+_other_+_mechanical_+_ata_+_according]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_mechanical_+_ata_+_according
*CAT: n
*SEM: twoRel[rel=any_+_other_+_mechanical_+_ata_+_according]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_mechanical_+_ata_+_according
*CAT: n
*SEM: twoRel[rel=any_+_other_+_mechanical_+_ata_+_according]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_other_+_mechanical_+_ata_+_according
*CAT: n
*SEM: orRel[rel=any_+_other_+_mechanical_+_ata_+_according]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structural_+_part
*CAT: n
*SEM: unaryRel[rel=any_+_structural_+_part]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structural_+_part
*CAT: n
*SEM: twoRel[rel=any_+_structural_+_part]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structural_+_part
*CAT: n
*SEM: twoRel[rel=any_+_structural_+_part]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structural_+_part
*CAT: n
*SEM: orRel[rel=any_+_structural_+_part]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structure
*CAT: n
*SEM: unaryRel[rel=any_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structure
*CAT: n
*SEM: twoRel[rel=any_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structure
*CAT: n
*SEM: twoRel[rel=any_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structure
*CAT: n
*SEM: orRel[rel=any_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structure_+_by_+_at_+_least_+_6mm_+_the_+_normal_+_gap_+_between_+_the_+_structure
*CAT: n
*SEM: unaryRel[rel=any_+_structure_+_by_+_at_+_least_+_6mm_+_the_+_normal_+_gap_+_between_+_the_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structure_+_by_+_at_+_least_+_6mm_+_the_+_normal_+_gap_+_between_+_the_+_structure
*CAT: n
*SEM: twoRel[rel=any_+_structure_+_by_+_at_+_least_+_6mm_+_the_+_normal_+_gap_+_between_+_the_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structure_+_by_+_at_+_least_+_6mm_+_the_+_normal_+_gap_+_between_+_the_+_structure
*CAT: n
*SEM: twoRel[rel=any_+_structure_+_by_+_at_+_least_+_6mm_+_the_+_normal_+_gap_+_between_+_the_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structure_+_by_+_at_+_least_+_6mm_+_the_+_normal_+_gap_+_between_+_the_+_structure
*CAT: n
*SEM: orRel[rel=any_+_structure_+_by_+_at_+_least_+_6mm_+_the_+_normal_+_gap_+_between_+_the_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structure_+_by_+_at_+_least_+_6mm._+_the_+_normal_+_gap_+_between_+_the_+_structure
*CAT: n
*SEM: unaryRel[rel=any_+_structure_+_by_+_at_+_least_+_6mm._+_the_+_normal_+_gap_+_between_+_the_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structure_+_by_+_at_+_least_+_6mm._+_the_+_normal_+_gap_+_between_+_the_+_structure
*CAT: n
*SEM: twoRel[rel=any_+_structure_+_by_+_at_+_least_+_6mm._+_the_+_normal_+_gap_+_between_+_the_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structure_+_by_+_at_+_least_+_6mm._+_the_+_normal_+_gap_+_between_+_the_+_structure
*CAT: n
*SEM: twoRel[rel=any_+_structure_+_by_+_at_+_least_+_6mm._+_the_+_normal_+_gap_+_between_+_the_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: any_+_structure_+_by_+_at_+_least_+_6mm._+_the_+_normal_+_gap_+_between_+_the_+_structure
*CAT: n
*SEM: orRel[rel=any_+_structure_+_by_+_at_+_least_+_6mm._+_the_+_normal_+_gap_+_between_+_the_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aramid
*CAT: n
*SEM: unaryRel[rel=aramid]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aramid
*CAT: n
*SEM: twoRel[rel=aramid]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aramid
*CAT: n
*SEM: twoRel[rel=aramid]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: aramid
*CAT: n
*SEM: orRel[rel=aramid]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc
*CAT: n
*SEM: unaryRel[rel=arinc]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc
*CAT: n
*SEM: twoRel[rel=arinc]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc
*CAT: n
*SEM: twoRel[rel=arinc]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc
*CAT: n
*SEM: orRel[rel=arinc]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc_+_600_+_connector
*CAT: n
*SEM: unaryRel[rel=arinc_+_600_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc_+_600_+_connector
*CAT: n
*SEM: twoRel[rel=arinc_+_600_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc_+_600_+_connector
*CAT: n
*SEM: twoRel[rel=arinc_+_600_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc_+_600_+_connector
*CAT: n
*SEM: orRel[rel=arinc_+_600_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc_+_600_+_connector_+_at_+_outlets_+_of_+_contacts_+_with_+_reduced
*CAT: n
*SEM: unaryRel[rel=arinc_+_600_+_connector_+_at_+_outlets_+_of_+_contacts_+_with_+_reduced]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc_+_600_+_connector_+_at_+_outlets_+_of_+_contacts_+_with_+_reduced
*CAT: n
*SEM: twoRel[rel=arinc_+_600_+_connector_+_at_+_outlets_+_of_+_contacts_+_with_+_reduced]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc_+_600_+_connector_+_at_+_outlets_+_of_+_contacts_+_with_+_reduced
*CAT: n
*SEM: twoRel[rel=arinc_+_600_+_connector_+_at_+_outlets_+_of_+_contacts_+_with_+_reduced]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: arinc_+_600_+_connector_+_at_+_outlets_+_of_+_contacts_+_with_+_reduced
*CAT: n
*SEM: orRel[rel=arinc_+_600_+_connector_+_at_+_outlets_+_of_+_contacts_+_with_+_reduced]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_bundle_+_tying_+_device
*CAT: n
*SEM: unaryRel[rel=as_+_bundle_+_tying_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_bundle_+_tying_+_device
*CAT: n
*SEM: twoRel[rel=as_+_bundle_+_tying_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_bundle_+_tying_+_device
*CAT: n
*SEM: twoRel[rel=as_+_bundle_+_tying_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_bundle_+_tying_+_device
*CAT: n
*SEM: orRel[rel=as_+_bundle_+_tying_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_illustrated_+_in_+_the_+_sketch_+_below
*CAT: n
*SEM: unaryRel[rel=as_+_illustrated_+_in_+_the_+_sketch_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_illustrated_+_in_+_the_+_sketch_+_below
*CAT: n
*SEM: twoRel[rel=as_+_illustrated_+_in_+_the_+_sketch_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_illustrated_+_in_+_the_+_sketch_+_below
*CAT: n
*SEM: twoRel[rel=as_+_illustrated_+_in_+_the_+_sketch_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: as_+_illustrated_+_in_+_the_+_sketch_+_below
*CAT: n
*SEM: orRel[rel=as_+_illustrated_+_in_+_the_+_sketch_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asn53203_+_rupturing_+_wire
*CAT: n
*SEM: unaryRel[rel=asn53203_+_rupturing_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asn53203_+_rupturing_+_wire
*CAT: n
*SEM: twoRel[rel=asn53203_+_rupturing_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asn53203_+_rupturing_+_wire
*CAT: n
*SEM: twoRel[rel=asn53203_+_rupturing_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asn53203_+_rupturing_+_wire
*CAT: n
*SEM: orRel[rel=asn53203_+_rupturing_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna_+_5107-b_+_black_+_tape_+_at_+_the_+_level_+_of_+_the_+_fixation
*CAT: n
*SEM: unaryRel[rel=asna_+_5107-b_+_black_+_tape_+_at_+_the_+_level_+_of_+_the_+_fixation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna_+_5107-b_+_black_+_tape_+_at_+_the_+_level_+_of_+_the_+_fixation
*CAT: n
*SEM: twoRel[rel=asna_+_5107-b_+_black_+_tape_+_at_+_the_+_level_+_of_+_the_+_fixation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna_+_5107-b_+_black_+_tape_+_at_+_the_+_level_+_of_+_the_+_fixation
*CAT: n
*SEM: twoRel[rel=asna_+_5107-b_+_black_+_tape_+_at_+_the_+_level_+_of_+_the_+_fixation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna_+_5107-b_+_black_+_tape_+_at_+_the_+_level_+_of_+_the_+_fixation
*CAT: n
*SEM: orRel[rel=asna_+_5107-b_+_black_+_tape_+_at_+_the_+_level_+_of_+_the_+_fixation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna0327_+_rivet
*CAT: n
*SEM: unaryRel[rel=asna0327_+_rivet]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna0327_+_rivet
*CAT: n
*SEM: twoRel[rel=asna0327_+_rivet]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna0327_+_rivet
*CAT: n
*SEM: twoRel[rel=asna0327_+_rivet]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna0327_+_rivet
*CAT: n
*SEM: orRel[rel=asna0327_+_rivet]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna2553_+_spring_+_washer
*CAT: n
*SEM: unaryRel[rel=asna2553_+_spring_+_washer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna2553_+_spring_+_washer
*CAT: n
*SEM: twoRel[rel=asna2553_+_spring_+_washer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna2553_+_spring_+_washer
*CAT: n
*SEM: twoRel[rel=asna2553_+_spring_+_washer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asna2553_+_spring_+_washer
*CAT: n
*SEM: orRel[rel=asna2553_+_spring_+_washer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0126_+_shrink_+_sleeve
*CAT: n
*SEM: unaryRel[rel=asne_+_0126_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0126_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=asne_+_0126_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0126_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=asne_+_0126_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0126_+_shrink_+_sleeve
*CAT: n
*SEM: orRel[rel=asne_+_0126_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0126_+_shrink_+_sleeve_+_from_+_base_+_flange_+_over_+_a_+_length_+_of_+_l_+_equalto_+_50mm_+_+_+_-_+_5mm_+_after_+_shrinking
*CAT: n
*SEM: unaryRel[rel=asne_+_0126_+_shrink_+_sleeve_+_from_+_base_+_flange_+_over_+_a_+_length_+_of_+_l_+_equalto_+_50mm_+_+_+_-_+_5mm_+_after_+_shrinking]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0126_+_shrink_+_sleeve_+_from_+_base_+_flange_+_over_+_a_+_length_+_of_+_l_+_equalto_+_50mm_+_+_+_-_+_5mm_+_after_+_shrinking
*CAT: n
*SEM: twoRel[rel=asne_+_0126_+_shrink_+_sleeve_+_from_+_base_+_flange_+_over_+_a_+_length_+_of_+_l_+_equalto_+_50mm_+_+_+_-_+_5mm_+_after_+_shrinking]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0126_+_shrink_+_sleeve_+_from_+_base_+_flange_+_over_+_a_+_length_+_of_+_l_+_equalto_+_50mm_+_+_+_-_+_5mm_+_after_+_shrinking
*CAT: n
*SEM: twoRel[rel=asne_+_0126_+_shrink_+_sleeve_+_from_+_base_+_flange_+_over_+_a_+_length_+_of_+_l_+_equalto_+_50mm_+_+_+_-_+_5mm_+_after_+_shrinking]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0126_+_shrink_+_sleeve_+_from_+_base_+_flange_+_over_+_a_+_length_+_of_+_l_+_equalto_+_50mm_+_+_+_-_+_5mm_+_after_+_shrinking
*CAT: n
*SEM: orRel[rel=asne_+_0126_+_shrink_+_sleeve_+_from_+_base_+_flange_+_over_+_a_+_length_+_of_+_l_+_equalto_+_50mm_+_+_+_-_+_5mm_+_after_+_shrinking]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248
*CAT: n
*SEM: unaryRel[rel=asne_+_0248]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248
*CAT: n
*SEM: twoRel[rel=asne_+_0248]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248
*CAT: n
*SEM: twoRel[rel=asne_+_0248]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248
*CAT: n
*SEM: orRel[rel=asne_+_0248]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_identification_+_label
*CAT: n
*SEM: unaryRel[rel=asne_+_0248_+_identification_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_identification_+_label
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_identification_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_identification_+_label
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_identification_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_identification_+_label
*CAT: n
*SEM: orRel[rel=asne_+_0248_+_identification_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_label
*CAT: n
*SEM: unaryRel[rel=asne_+_0248_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_label
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_label
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_label
*CAT: n
*SEM: orRel[rel=asne_+_0248_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_label_+_printed_+_black_+_on_+_white_+_background
*CAT: n
*SEM: unaryRel[rel=asne_+_0248_+_label_+_printed_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_label_+_printed_+_black_+_on_+_white_+_background
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_label_+_printed_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_label_+_printed_+_black_+_on_+_white_+_background
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_label_+_printed_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_label_+_printed_+_black_+_on_+_white_+_background
*CAT: n
*SEM: orRel[rel=asne_+_0248_+_label_+_printed_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_near_+_each_+_harness_+_extremity_+_printed_+_in_+_black_+_on_+_white_+_background
*CAT: n
*SEM: unaryRel[rel=asne_+_0248_+_near_+_each_+_harness_+_extremity_+_printed_+_in_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_near_+_each_+_harness_+_extremity_+_printed_+_in_+_black_+_on_+_white_+_background
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_near_+_each_+_harness_+_extremity_+_printed_+_in_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_near_+_each_+_harness_+_extremity_+_printed_+_in_+_black_+_on_+_white_+_background
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_near_+_each_+_harness_+_extremity_+_printed_+_in_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0248_+_near_+_each_+_harness_+_extremity_+_printed_+_in_+_black_+_on_+_white_+_background
*CAT: n
*SEM: orRel[rel=asne_+_0248_+_near_+_each_+_harness_+_extremity_+_printed_+_in_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435_+_bracket
*CAT: n
*SEM: unaryRel[rel=asne_+_0435_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435_+_bracket
*CAT: n
*SEM: twoRel[rel=asne_+_0435_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435_+_bracket
*CAT: n
*SEM: twoRel[rel=asne_+_0435_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435_+_bracket
*CAT: n
*SEM: orRel[rel=asne_+_0435_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d_+_of_+_each_+_elementary_+_bundle
*CAT: n
*SEM: unaryRel[rel=asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d_+_of_+_each_+_elementary_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d_+_of_+_each_+_elementary_+_bundle
*CAT: n
*SEM: twoRel[rel=asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d_+_of_+_each_+_elementary_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d_+_of_+_each_+_elementary_+_bundle
*CAT: n
*SEM: twoRel[rel=asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d_+_of_+_each_+_elementary_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d_+_of_+_each_+_elementary_+_bundle
*CAT: n
*SEM: orRel[rel=asne_+_0435_+_bracket_+_the_+_maximum_+_diamter_+_d_+_of_+_each_+_elementary_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0541_+_splice
*CAT: n
*SEM: unaryRel[rel=asne_+_0541_+_splice]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0541_+_splice
*CAT: n
*SEM: twoRel[rel=asne_+_0541_+_splice]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0541_+_splice
*CAT: n
*SEM: twoRel[rel=asne_+_0541_+_splice]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0541_+_splice
*CAT: n
*SEM: orRel[rel=asne_+_0541_+_splice]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0616_+_sealing_+_plug
*CAT: n
*SEM: unaryRel[rel=asne_+_0616_+_sealing_+_plug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0616_+_sealing_+_plug
*CAT: n
*SEM: twoRel[rel=asne_+_0616_+_sealing_+_plug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0616_+_sealing_+_plug
*CAT: n
*SEM: twoRel[rel=asne_+_0616_+_sealing_+_plug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne_+_0616_+_sealing_+_plug
*CAT: n
*SEM: orRel[rel=asne_+_0616_+_sealing_+_plug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0073_+_pressure_+_seal
*CAT: n
*SEM: unaryRel[rel=asne0073_+_pressure_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0073_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=asne0073_+_pressure_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0073_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=asne0073_+_pressure_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0073_+_pressure_+_seal
*CAT: n
*SEM: orRel[rel=asne0073_+_pressure_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0176_+_protective_+_cap
*CAT: n
*SEM: unaryRel[rel=asne0176_+_protective_+_cap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0176_+_protective_+_cap
*CAT: n
*SEM: twoRel[rel=asne0176_+_protective_+_cap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0176_+_protective_+_cap
*CAT: n
*SEM: twoRel[rel=asne0176_+_protective_+_cap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0176_+_protective_+_cap
*CAT: n
*SEM: orRel[rel=asne0176_+_protective_+_cap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0422_+_tr_+_terminal_+_lug
*CAT: n
*SEM: unaryRel[rel=asne0422_+_tr_+_terminal_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0422_+_tr_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=asne0422_+_tr_+_terminal_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0422_+_tr_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=asne0422_+_tr_+_terminal_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0422_+_tr_+_terminal_+_lug
*CAT: n
*SEM: orRel[rel=asne0422_+_tr_+_terminal_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0425_+_sealed_+_vg
*CAT: n
*SEM: unaryRel[rel=asne0425_+_sealed_+_vg]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0425_+_sealed_+_vg
*CAT: n
*SEM: twoRel[rel=asne0425_+_sealed_+_vg]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0425_+_sealed_+_vg
*CAT: n
*SEM: twoRel[rel=asne0425_+_sealed_+_vg]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0425_+_sealed_+_vg
*CAT: n
*SEM: orRel[rel=asne0425_+_sealed_+_vg]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0470_+_label
*CAT: n
*SEM: unaryRel[rel=asne0470_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0470_+_label
*CAT: n
*SEM: twoRel[rel=asne0470_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0470_+_label
*CAT: n
*SEM: twoRel[rel=asne0470_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0470_+_label
*CAT: n
*SEM: orRel[rel=asne0470_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616_+_sealing_+_plug
*CAT: n
*SEM: unaryRel[rel=asne0616_+_sealing_+_plug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616_+_sealing_+_plug
*CAT: n
*SEM: twoRel[rel=asne0616_+_sealing_+_plug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616_+_sealing_+_plug
*CAT: n
*SEM: twoRel[rel=asne0616_+_sealing_+_plug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616_+_sealing_+_plug
*CAT: n
*SEM: orRel[rel=asne0616_+_sealing_+_plug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616_+_sealing_+_plug_+_in_+_al_+_area
*CAT: n
*SEM: unaryRel[rel=asne0616_+_sealing_+_plug_+_in_+_al_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616_+_sealing_+_plug_+_in_+_al_+_area
*CAT: n
*SEM: twoRel[rel=asne0616_+_sealing_+_plug_+_in_+_al_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616_+_sealing_+_plug_+_in_+_al_+_area
*CAT: n
*SEM: twoRel[rel=asne0616_+_sealing_+_plug_+_in_+_al_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616_+_sealing_+_plug_+_in_+_al_+_area
*CAT: n
*SEM: orRel[rel=asne0616_+_sealing_+_plug_+_in_+_al_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616_+_sealing_+_plug_+_in_+_all_+_areas
*CAT: n
*SEM: unaryRel[rel=asne0616_+_sealing_+_plug_+_in_+_all_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616_+_sealing_+_plug_+_in_+_all_+_areas
*CAT: n
*SEM: twoRel[rel=asne0616_+_sealing_+_plug_+_in_+_all_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616_+_sealing_+_plug_+_in_+_all_+_areas
*CAT: n
*SEM: twoRel[rel=asne0616_+_sealing_+_plug_+_in_+_all_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0616_+_sealing_+_plug_+_in_+_all_+_areas
*CAT: n
*SEM: orRel[rel=asne0616_+_sealing_+_plug_+_in_+_all_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0646_+_identification_+_sleeve
*CAT: n
*SEM: unaryRel[rel=asne0646_+_identification_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0646_+_identification_+_sleeve
*CAT: n
*SEM: twoRel[rel=asne0646_+_identification_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0646_+_identification_+_sleeve
*CAT: n
*SEM: twoRel[rel=asne0646_+_identification_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne0646_+_identification_+_sleeve
*CAT: n
*SEM: orRel[rel=asne0646_+_identification_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne5107-b
*CAT: n
*SEM: unaryRel[rel=asne5107-b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne5107-b
*CAT: n
*SEM: twoRel[rel=asne5107-b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne5107-b
*CAT: n
*SEM: twoRel[rel=asne5107-b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne5107-b
*CAT: n
*SEM: orRel[rel=asne5107-b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne5107-b_+_around_+_the_+_bundle
*CAT: n
*SEM: unaryRel[rel=asne5107-b_+_around_+_the_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne5107-b_+_around_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=asne5107-b_+_around_+_the_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne5107-b_+_around_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=asne5107-b_+_around_+_the_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne5107-b_+_around_+_the_+_bundle
*CAT: n
*SEM: orRel[rel=asne5107-b_+_around_+_the_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne5107-b_+_arounfd_+_the_+_bundle
*CAT: n
*SEM: unaryRel[rel=asne5107-b_+_arounfd_+_the_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne5107-b_+_arounfd_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=asne5107-b_+_arounfd_+_the_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne5107-b_+_arounfd_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=asne5107-b_+_arounfd_+_the_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: asne5107-b_+_arounfd_+_the_+_bundle
*CAT: n
*SEM: orRel[rel=asne5107-b_+_arounfd_+_the_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: assembly
*CAT: n
*SEM: unaryRel[rel=assembly]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: assembly
*CAT: n
*SEM: twoRel[rel=assembly]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: assembly
*CAT: n
*SEM: twoRel[rel=assembly]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: assembly
*CAT: n
*SEM: orRel[rel=assembly]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_bend_+_in_+_the_+_hose_+_routing_+_in_+_order
*CAT: n
*SEM: unaryRel[rel=at_+_least_+_one_+_bend_+_in_+_the_+_hose_+_routing_+_in_+_order]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_bend_+_in_+_the_+_hose_+_routing_+_in_+_order
*CAT: n
*SEM: twoRel[rel=at_+_least_+_one_+_bend_+_in_+_the_+_hose_+_routing_+_in_+_order]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_bend_+_in_+_the_+_hose_+_routing_+_in_+_order
*CAT: n
*SEM: twoRel[rel=at_+_least_+_one_+_bend_+_in_+_the_+_hose_+_routing_+_in_+_order]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_bend_+_in_+_the_+_hose_+_routing_+_in_+_order
*CAT: n
*SEM: orRel[rel=at_+_least_+_one_+_bend_+_in_+_the_+_hose_+_routing_+_in_+_order]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_pipe
*CAT: n
*SEM: unaryRel[rel=at_+_least_+_one_+_pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_pipe
*CAT: n
*SEM: twoRel[rel=at_+_least_+_one_+_pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_pipe
*CAT: n
*SEM: twoRel[rel=at_+_least_+_one_+_pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_pipe
*CAT: n
*SEM: orRel[rel=at_+_least_+_one_+_pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_removable_+_end_+__+_opensb_+_e.g._+_connector
*CAT: n
*SEM: unaryRel[rel=at_+_least_+_one_+_removable_+_end_+__+_opensb_+_e.g._+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_removable_+_end_+__+_opensb_+_e.g._+_connector
*CAT: n
*SEM: twoRel[rel=at_+_least_+_one_+_removable_+_end_+__+_opensb_+_e.g._+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_removable_+_end_+__+_opensb_+_e.g._+_connector
*CAT: n
*SEM: twoRel[rel=at_+_least_+_one_+_removable_+_end_+__+_opensb_+_e.g._+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at_+_least_+_one_+_removable_+_end_+__+_opensb_+_e.g._+_connector
*CAT: n
*SEM: orRel[rel=at_+_least_+_one_+_removable_+_end_+__+_opensb_+_e.g._+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata_+_92_+_fixation_+_point
*CAT: n
*SEM: unaryRel[rel=ata_+_92_+_fixation_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata_+_92_+_fixation_+_point
*CAT: n
*SEM: twoRel[rel=ata_+_92_+_fixation_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata_+_92_+_fixation_+_point
*CAT: n
*SEM: twoRel[rel=ata_+_92_+_fixation_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata_+_92_+_fixation_+_point
*CAT: n
*SEM: orRel[rel=ata_+_92_+_fixation_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata26_+_pipes
*CAT: n
*SEM: unaryRel[rel=ata26_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata26_+_pipes
*CAT: n
*SEM: twoRel[rel=ata26_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata26_+_pipes
*CAT: n
*SEM: twoRel[rel=ata26_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ata26_+_pipes
*CAT: n
*SEM: orRel[rel=ata26_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attach_+_bundles_+_between_+_floor_+_panel
*CAT: n
*SEM: unaryRel[rel=attach_+_bundles_+_between_+_floor_+_panel]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attach_+_bundles_+_between_+_floor_+_panel
*CAT: n
*SEM: twoRel[rel=attach_+_bundles_+_between_+_floor_+_panel]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attach_+_bundles_+_between_+_floor_+_panel
*CAT: n
*SEM: twoRel[rel=attach_+_bundles_+_between_+_floor_+_panel]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attach_+_bundles_+_between_+_floor_+_panel
*CAT: n
*SEM: orRel[rel=attach_+_bundles_+_between_+_floor_+_panel]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachable_+_labels
*CAT: n
*SEM: unaryRel[rel=attachable_+_labels]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachable_+_labels
*CAT: n
*SEM: twoRel[rel=attachable_+_labels]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachable_+_labels
*CAT: n
*SEM: twoRel[rel=attachable_+_labels]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachable_+_labels
*CAT: n
*SEM: orRel[rel=attachable_+_labels]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure
*CAT: n
*SEM: unaryRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure
*CAT: n
*SEM: twoRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure
*CAT: n
*SEM: twoRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure
*CAT: n
*SEM: orRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figures
*CAT: n
*SEM: unaryRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figures
*CAT: n
*SEM: twoRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figures
*CAT: n
*SEM: twoRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figures
*CAT: n
*SEM: orRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_pipes_+_at_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=attached_+_pipes_+_at_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_pipes_+_at_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=attached_+_pipes_+_at_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_pipes_+_at_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=attached_+_pipes_+_at_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_pipes_+_at_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=attached_+_pipes_+_at_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device
*CAT: n
*SEM: unaryRel[rel=attachment_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device
*CAT: n
*SEM: twoRel[rel=attachment_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device
*CAT: n
*SEM: twoRel[rel=attachment_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device
*CAT: n
*SEM: orRel[rel=attachment_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device_+_withstanding_+_in_+_peak_+_condition_+_minimum_+_150_+_c
*CAT: n
*SEM: unaryRel[rel=attachment_+_device_+_withstanding_+_in_+_peak_+_condition_+_minimum_+_150_+_c]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device_+_withstanding_+_in_+_peak_+_condition_+_minimum_+_150_+_c
*CAT: n
*SEM: twoRel[rel=attachment_+_device_+_withstanding_+_in_+_peak_+_condition_+_minimum_+_150_+_c]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device_+_withstanding_+_in_+_peak_+_condition_+_minimum_+_150_+_c
*CAT: n
*SEM: twoRel[rel=attachment_+_device_+_withstanding_+_in_+_peak_+_condition_+_minimum_+_150_+_c]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_device_+_withstanding_+_in_+_peak_+_condition_+_minimum_+_150_+_c
*CAT: n
*SEM: orRel[rel=attachment_+_device_+_withstanding_+_in_+_peak_+_condition_+_minimum_+_150_+_c]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_backslash_+_fixation_+_point
*CAT: n
*SEM: unaryRel[rel=attachment_+_backslash_+_fixation_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_backslash_+_fixation_+_point
*CAT: n
*SEM: twoRel[rel=attachment_+_backslash_+_fixation_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_backslash_+_fixation_+_point
*CAT: n
*SEM: twoRel[rel=attachment_+_backslash_+_fixation_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attachment_+_backslash_+_fixation_+_point
*CAT: n
*SEM: orRel[rel=attachment_+_backslash_+_fixation_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_mechanical_+_stress_+_on_+_the_+_connection_+_point
*CAT: n
*SEM: unaryRel[rel=avoid_+_mechanical_+_stress_+_on_+_the_+_connection_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_mechanical_+_stress_+_on_+_the_+_connection_+_point
*CAT: n
*SEM: twoRel[rel=avoid_+_mechanical_+_stress_+_on_+_the_+_connection_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_mechanical_+_stress_+_on_+_the_+_connection_+_point
*CAT: n
*SEM: twoRel[rel=avoid_+_mechanical_+_stress_+_on_+_the_+_connection_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: avoid_+_mechanical_+_stress_+_on_+_the_+_connection_+_point
*CAT: n
*SEM: orRel[rel=avoid_+_mechanical_+_stress_+_on_+_the_+_connection_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: b
*CAT: n
*SEM: unaryRel[rel=b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: b
*CAT: n
*SEM: twoRel[rel=b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: b
*CAT: n
*SEM: twoRel[rel=b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: b
*CAT: n
*SEM: orRel[rel=b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: b_+_and
*CAT: n
*SEM: unaryRel[rel=b_+_and]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: b_+_and
*CAT: n
*SEM: twoRel[rel=b_+_and]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: b_+_and
*CAT: n
*SEM: twoRel[rel=b_+_and]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: b_+_and
*CAT: n
*SEM: orRel[rel=b_+_and]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell
*CAT: n
*SEM: unaryRel[rel=back_+_shell]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell
*CAT: n
*SEM: twoRel[rel=back_+_shell]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell
*CAT: n
*SEM: twoRel[rel=back_+_shell]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell
*CAT: n
*SEM: orRel[rel=back_+_shell]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell_+_by_+_asne5107-b
*CAT: n
*SEM: unaryRel[rel=back_+_shell_+_by_+_asne5107-b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell_+_by_+_asne5107-b
*CAT: n
*SEM: twoRel[rel=back_+_shell_+_by_+_asne5107-b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell_+_by_+_asne5107-b
*CAT: n
*SEM: twoRel[rel=back_+_shell_+_by_+_asne5107-b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell_+_by_+_asne5107-b
*CAT: n
*SEM: orRel[rel=back_+_shell_+_by_+_asne5107-b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell_+_orientation
*CAT: n
*SEM: unaryRel[rel=back_+_shell_+_orientation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell_+_orientation
*CAT: n
*SEM: twoRel[rel=back_+_shell_+_orientation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell_+_orientation
*CAT: n
*SEM: twoRel[rel=back_+_shell_+_orientation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: back_+_shell_+_orientation
*CAT: n
*SEM: orRel[rel=back_+_shell_+_orientation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: backshell
*CAT: n
*SEM: unaryRel[rel=backshell]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: backshell
*CAT: n
*SEM: twoRel[rel=backshell]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: backshell
*CAT: n
*SEM: twoRel[rel=backshell]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: backshell
*CAT: n
*SEM: orRel[rel=backshell]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_design
*CAT: n
*SEM: unaryRel[rel=basic_+_design]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_design
*CAT: n
*SEM: twoRel[rel=basic_+_design]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_design
*CAT: n
*SEM: twoRel[rel=basic_+_design]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: basic_+_design
*CAT: n
*SEM: orRel[rel=basic_+_design]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_accessible_+_with_+_a_+_torque_+_wrench
*CAT: n
*SEM: unaryRel[rel=be_+_accessible_+_with_+_a_+_torque_+_wrench]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_accessible_+_with_+_a_+_torque_+_wrench
*CAT: n
*SEM: twoRel[rel=be_+_accessible_+_with_+_a_+_torque_+_wrench]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_accessible_+_with_+_a_+_torque_+_wrench
*CAT: n
*SEM: twoRel[rel=be_+_accessible_+_with_+_a_+_torque_+_wrench]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_accessible_+_with_+_a_+_torque_+_wrench
*CAT: n
*SEM: orRel[rel=be_+_accessible_+_with_+_a_+_torque_+_wrench]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_affected_+_by_+_significant_+_expansions
*CAT: n
*SEM: unaryRel[rel=be_+_affected_+_by_+_significant_+_expansions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_affected_+_by_+_significant_+_expansions
*CAT: n
*SEM: twoRel[rel=be_+_affected_+_by_+_significant_+_expansions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_affected_+_by_+_significant_+_expansions
*CAT: n
*SEM: twoRel[rel=be_+_affected_+_by_+_significant_+_expansions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_affected_+_by_+_significant_+_expansions
*CAT: n
*SEM: orRel[rel=be_+_affected_+_by_+_significant_+_expansions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_in_+_contact_+_with_+_fuel
*CAT: n
*SEM: unaryRel[rel=be_+_in_+_contact_+_with_+_fuel]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_in_+_contact_+_with_+_fuel
*CAT: n
*SEM: twoRel[rel=be_+_in_+_contact_+_with_+_fuel]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_in_+_contact_+_with_+_fuel
*CAT: n
*SEM: twoRel[rel=be_+_in_+_contact_+_with_+_fuel]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_in_+_contact_+_with_+_fuel
*CAT: n
*SEM: orRel[rel=be_+_in_+_contact_+_with_+_fuel]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_included_+_in_+_the_+_derivation_+_are_+_routed_+_from_+_both_+_sides_+_of_+_the_+_main_+_routing
*CAT: n
*SEM: unaryRel[rel=be_+_included_+_in_+_the_+_derivation_+_are_+_routed_+_from_+_both_+_sides_+_of_+_the_+_main_+_routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_included_+_in_+_the_+_derivation_+_are_+_routed_+_from_+_both_+_sides_+_of_+_the_+_main_+_routing
*CAT: n
*SEM: twoRel[rel=be_+_included_+_in_+_the_+_derivation_+_are_+_routed_+_from_+_both_+_sides_+_of_+_the_+_main_+_routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_included_+_in_+_the_+_derivation_+_are_+_routed_+_from_+_both_+_sides_+_of_+_the_+_main_+_routing
*CAT: n
*SEM: twoRel[rel=be_+_included_+_in_+_the_+_derivation_+_are_+_routed_+_from_+_both_+_sides_+_of_+_the_+_main_+_routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_included_+_in_+_the_+_derivation_+_are_+_routed_+_from_+_both_+_sides_+_of_+_the_+_main_+_routing
*CAT: n
*SEM: orRel[rel=be_+_included_+_in_+_the_+_derivation_+_are_+_routed_+_from_+_both_+_sides_+_of_+_the_+_main_+_routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_justified_+_by_+_technical_+_constraints
*CAT: n
*SEM: unaryRel[rel=be_+_justified_+_by_+_technical_+_constraints]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_justified_+_by_+_technical_+_constraints
*CAT: n
*SEM: twoRel[rel=be_+_justified_+_by_+_technical_+_constraints]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_justified_+_by_+_technical_+_constraints
*CAT: n
*SEM: twoRel[rel=be_+_justified_+_by_+_technical_+_constraints]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_justified_+_by_+_technical_+_constraints
*CAT: n
*SEM: orRel[rel=be_+_justified_+_by_+_technical_+_constraints]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_printed_+_with_+_identification_+_characters_+_in_+_black_+_colour
*CAT: n
*SEM: unaryRel[rel=be_+_printed_+_with_+_identification_+_characters_+_in_+_black_+_colour]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_printed_+_with_+_identification_+_characters_+_in_+_black_+_colour
*CAT: n
*SEM: twoRel[rel=be_+_printed_+_with_+_identification_+_characters_+_in_+_black_+_colour]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_printed_+_with_+_identification_+_characters_+_in_+_black_+_colour
*CAT: n
*SEM: twoRel[rel=be_+_printed_+_with_+_identification_+_characters_+_in_+_black_+_colour]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: be_+_printed_+_with_+_identification_+_characters_+_in_+_black_+_colour
*CAT: n
*SEM: orRel[rel=be_+_printed_+_with_+_identification_+_characters_+_in_+_black_+_colour]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend
*CAT: n
*SEM: unaryRel[rel=bend]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend
*CAT: n
*SEM: twoRel[rel=bend]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend
*CAT: n
*SEM: twoRel[rel=bend]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend
*CAT: n
*SEM: orRel[rel=bend]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle_+_opensb_+_s_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=bend_+_angle_+_opensb_+_s_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle_+_opensb_+_s_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=bend_+_angle_+_opensb_+_s_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle_+_opensb_+_s_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=bend_+_angle_+_opensb_+_s_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle_+_opensb_+_s_+_closesb_+_
*CAT: n
*SEM: orRel[rel=bend_+_angle_+_opensb_+_s_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle_+_opensb_+_s_+_closesb_+__+_between_+_0â°
*CAT: n
*SEM: unaryRel[rel=bend_+_angle_+_opensb_+_s_+_closesb_+__+_between_+_0â°]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle_+_opensb_+_s_+_closesb_+__+_between_+_0â°
*CAT: n
*SEM: twoRel[rel=bend_+_angle_+_opensb_+_s_+_closesb_+__+_between_+_0â°]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle_+_opensb_+_s_+_closesb_+__+_between_+_0â°
*CAT: n
*SEM: twoRel[rel=bend_+_angle_+_opensb_+_s_+_closesb_+__+_between_+_0â°]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle_+_opensb_+_s_+_closesb_+__+_between_+_0â°
*CAT: n
*SEM: orRel[rel=bend_+_angle_+_opensb_+_s_+_closesb_+__+_between_+_0â°]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle_+_opensb_+_s_+_closesb_+_between_+_0
*CAT: n
*SEM: unaryRel[rel=bend_+_angle_+_opensb_+_s_+_closesb_+_between_+_0]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle_+_opensb_+_s_+_closesb_+_between_+_0
*CAT: n
*SEM: twoRel[rel=bend_+_angle_+_opensb_+_s_+_closesb_+_between_+_0]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle_+_opensb_+_s_+_closesb_+_between_+_0
*CAT: n
*SEM: twoRel[rel=bend_+_angle_+_opensb_+_s_+_closesb_+_between_+_0]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angle_+_opensb_+_s_+_closesb_+_between_+_0
*CAT: n
*SEM: orRel[rel=bend_+_angle_+_opensb_+_s_+_closesb_+_between_+_0]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angles_+_depending_+_on_+_the_+_used_+_material
*CAT: n
*SEM: unaryRel[rel=bend_+_angles_+_depending_+_on_+_the_+_used_+_material]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angles_+_depending_+_on_+_the_+_used_+_material
*CAT: n
*SEM: twoRel[rel=bend_+_angles_+_depending_+_on_+_the_+_used_+_material]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angles_+_depending_+_on_+_the_+_used_+_material
*CAT: n
*SEM: twoRel[rel=bend_+_angles_+_depending_+_on_+_the_+_used_+_material]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_angles_+_depending_+_on_+_the_+_used_+_material
*CAT: n
*SEM: orRel[rel=bend_+_angles_+_depending_+_on_+_the_+_used_+_material]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: unaryRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: twoRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: twoRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: orRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_in_+_my_+_opinion_+_i_+_think_+_that
*CAT: n
*SEM: unaryRel[rel=bend_+_radius_+_in_+_my_+_opinion_+_i_+_think_+_that]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_in_+_my_+_opinion_+_i_+_think_+_that
*CAT: n
*SEM: twoRel[rel=bend_+_radius_+_in_+_my_+_opinion_+_i_+_think_+_that]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_in_+_my_+_opinion_+_i_+_think_+_that
*CAT: n
*SEM: twoRel[rel=bend_+_radius_+_in_+_my_+_opinion_+_i_+_think_+_that]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius_+_in_+_my_+_opinion_+_i_+_think_+_that
*CAT: n
*SEM: orRel[rel=bend_+_radius_+_in_+_my_+_opinion_+_i_+_think_+_that]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bended_+_pipe
*CAT: n
*SEM: unaryRel[rel=bended_+_pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bended_+_pipe
*CAT: n
*SEM: twoRel[rel=bended_+_pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bended_+_pipe
*CAT: n
*SEM: twoRel[rel=bended_+_pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bended_+_pipe
*CAT: n
*SEM: orRel[rel=bended_+_pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bending_+_branches_+_of_+_pipes
*CAT: n
*SEM: unaryRel[rel=bending_+_branches_+_of_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bending_+_branches_+_of_+_pipes
*CAT: n
*SEM: twoRel[rel=bending_+_branches_+_of_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bending_+_branches_+_of_+_pipes
*CAT: n
*SEM: twoRel[rel=bending_+_branches_+_of_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bending_+_branches_+_of_+_pipes
*CAT: n
*SEM: orRel[rel=bending_+_branches_+_of_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bending_+_radii_+_for_+_support
*CAT: n
*SEM: unaryRel[rel=bending_+_radii_+_for_+_support]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bending_+_radii_+_for_+_support
*CAT: n
*SEM: twoRel[rel=bending_+_radii_+_for_+_support]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bending_+_radii_+_for_+_support
*CAT: n
*SEM: twoRel[rel=bending_+_radii_+_for_+_support]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bending_+_radii_+_for_+_support
*CAT: n
*SEM: orRel[rel=bending_+_radii_+_for_+_support]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bends
*CAT: n
*SEM: unaryRel[rel=bends]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bends
*CAT: n
*SEM: twoRel[rel=bends]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bends
*CAT: n
*SEM: twoRel[rel=bends]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bends
*CAT: n
*SEM: orRel[rel=bends]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: between_+_clamp
*CAT: n
*SEM: unaryRel[rel=between_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: between_+_clamp
*CAT: n
*SEM: twoRel[rel=between_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: between_+_clamp
*CAT: n
*SEM: twoRel[rel=between_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: between_+_clamp
*CAT: n
*SEM: orRel[rel=between_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_color
*CAT: n
*SEM: unaryRel[rel=black_+_color]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_color
*CAT: n
*SEM: twoRel[rel=black_+_color]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_color
*CAT: n
*SEM: twoRel[rel=black_+_color]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_color
*CAT: n
*SEM: orRel[rel=black_+_color]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_tape_+_asna5107-b
*CAT: n
*SEM: unaryRel[rel=black_+_tape_+_asna5107-b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_tape_+_asna5107-b
*CAT: n
*SEM: twoRel[rel=black_+_tape_+_asna5107-b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_tape_+_asna5107-b
*CAT: n
*SEM: twoRel[rel=black_+_tape_+_asna5107-b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: black_+_tape_+_asna5107-b
*CAT: n
*SEM: orRel[rel=black_+_tape_+_asna5107-b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blanket_+_covered_+_structure_+_with_+_maximum_+_pitch_+_of_+_d_+__+_smallerthan_+__+_equalto_+__+_350mm
*CAT: n
*SEM: unaryRel[rel=blanket_+_covered_+_structure_+_with_+_maximum_+_pitch_+_of_+_d_+__+_smallerthan_+__+_equalto_+__+_350mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blanket_+_covered_+_structure_+_with_+_maximum_+_pitch_+_of_+_d_+__+_smallerthan_+__+_equalto_+__+_350mm
*CAT: n
*SEM: twoRel[rel=blanket_+_covered_+_structure_+_with_+_maximum_+_pitch_+_of_+_d_+__+_smallerthan_+__+_equalto_+__+_350mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blanket_+_covered_+_structure_+_with_+_maximum_+_pitch_+_of_+_d_+__+_smallerthan_+__+_equalto_+__+_350mm
*CAT: n
*SEM: twoRel[rel=blanket_+_covered_+_structure_+_with_+_maximum_+_pitch_+_of_+_d_+__+_smallerthan_+__+_equalto_+__+_350mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blanket_+_covered_+_structure_+_with_+_maximum_+_pitch_+_of_+_d_+__+_smallerthan_+__+_equalto_+__+_350mm
*CAT: n
*SEM: orRel[rel=blanket_+_covered_+_structure_+_with_+_maximum_+_pitch_+_of_+_d_+__+_smallerthan_+__+_equalto_+__+_350mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blanket_+_covered_+_structure_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_350mm
*CAT: n
*SEM: unaryRel[rel=blanket_+_covered_+_structure_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_350mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blanket_+_covered_+_structure_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_350mm
*CAT: n
*SEM: twoRel[rel=blanket_+_covered_+_structure_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_350mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blanket_+_covered_+_structure_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_350mm
*CAT: n
*SEM: twoRel[rel=blanket_+_covered_+_structure_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_350mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blanket_+_covered_+_structure_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_350mm
*CAT: n
*SEM: orRel[rel=blanket_+_covered_+_structure_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_350mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_pipes
*CAT: n
*SEM: unaryRel[rel=bleed_+_air_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_pipes
*CAT: n
*SEM: twoRel[rel=bleed_+_air_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_pipes
*CAT: n
*SEM: twoRel[rel=bleed_+_air_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_pipes
*CAT: n
*SEM: orRel[rel=bleed_+_air_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system
*CAT: n
*SEM: unaryRel[rel=bleed_+_air_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system
*CAT: n
*SEM: twoRel[rel=bleed_+_air_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system
*CAT: n
*SEM: twoRel[rel=bleed_+_air_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system
*CAT: n
*SEM: orRel[rel=bleed_+_air_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blue_+_background_+_abs_+_0724_+_label_+_on_+_structure
*CAT: n
*SEM: unaryRel[rel=blue_+_background_+_abs_+_0724_+_label_+_on_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blue_+_background_+_abs_+_0724_+_label_+_on_+_structure
*CAT: n
*SEM: twoRel[rel=blue_+_background_+_abs_+_0724_+_label_+_on_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blue_+_background_+_abs_+_0724_+_label_+_on_+_structure
*CAT: n
*SEM: twoRel[rel=blue_+_background_+_abs_+_0724_+_label_+_on_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: blue_+_background_+_abs_+_0724_+_label_+_on_+_structure
*CAT: n
*SEM: orRel[rel=blue_+_background_+_abs_+_0724_+_label_+_on_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bobbin
*CAT: n
*SEM: unaryRel[rel=bobbin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bobbin
*CAT: n
*SEM: twoRel[rel=bobbin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bobbin
*CAT: n
*SEM: twoRel[rel=bobbin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bobbin
*CAT: n
*SEM: orRel[rel=bobbin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bobbin_+_configuration
*CAT: n
*SEM: unaryRel[rel=bobbin_+_configuration]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bobbin_+_configuration
*CAT: n
*SEM: twoRel[rel=bobbin_+_configuration]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bobbin_+_configuration
*CAT: n
*SEM: twoRel[rel=bobbin_+_configuration]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bobbin_+_configuration
*CAT: n
*SEM: orRel[rel=bobbin_+_configuration]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolt
*CAT: n
*SEM: unaryRel[rel=bolt]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolt
*CAT: n
*SEM: twoRel[rel=bolt]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolt
*CAT: n
*SEM: twoRel[rel=bolt]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolt
*CAT: n
*SEM: orRel[rel=bolt]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_brackets
*CAT: n
*SEM: unaryRel[rel=bonding_+_brackets]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_brackets
*CAT: n
*SEM: twoRel[rel=bonding_+_brackets]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_brackets
*CAT: n
*SEM: twoRel[rel=bonding_+_brackets]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_brackets
*CAT: n
*SEM: orRel[rel=bonding_+_brackets]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_brackets_+_supporting_+_an_+_intermediate_+_bracket
*CAT: n
*SEM: unaryRel[rel=bonding_+_brackets_+_supporting_+_an_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_brackets_+_supporting_+_an_+_intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=bonding_+_brackets_+_supporting_+_an_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_brackets_+_supporting_+_an_+_intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=bonding_+_brackets_+_supporting_+_an_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_brackets_+_supporting_+_an_+_intermediate_+_bracket
*CAT: n
*SEM: orRel[rel=bonding_+_brackets_+_supporting_+_an_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_lead
*CAT: n
*SEM: unaryRel[rel=bonding_+_lead]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_lead
*CAT: n
*SEM: twoRel[rel=bonding_+_lead]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_lead
*CAT: n
*SEM: twoRel[rel=bonding_+_lead]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_lead
*CAT: n
*SEM: orRel[rel=bonding_+_lead]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_link
*CAT: n
*SEM: unaryRel[rel=bonding_+_link]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_link
*CAT: n
*SEM: twoRel[rel=bonding_+_link]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_link
*CAT: n
*SEM: twoRel[rel=bonding_+_link]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_link
*CAT: n
*SEM: orRel[rel=bonding_+_link]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_backslash_+__+_grounding_+_bracket
*CAT: n
*SEM: unaryRel[rel=bonding_+_backslash_+__+_grounding_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_backslash_+__+_grounding_+_bracket
*CAT: n
*SEM: twoRel[rel=bonding_+_backslash_+__+_grounding_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_backslash_+__+_grounding_+_bracket
*CAT: n
*SEM: twoRel[rel=bonding_+_backslash_+__+_grounding_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_backslash_+__+_grounding_+_bracket
*CAT: n
*SEM: orRel[rel=bonding_+_backslash_+__+_grounding_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_backslash_+_grounding_+_bracket
*CAT: n
*SEM: unaryRel[rel=bonding_+_backslash_+_grounding_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_backslash_+_grounding_+_bracket
*CAT: n
*SEM: twoRel[rel=bonding_+_backslash_+_grounding_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_backslash_+_grounding_+_bracket
*CAT: n
*SEM: twoRel[rel=bonding_+_backslash_+_grounding_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bonding_+_backslash_+_grounding_+_bracket
*CAT: n
*SEM: orRel[rel=bonding_+_backslash_+_grounding_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_sides_+_of_+_interface_+_plate
*CAT: n
*SEM: unaryRel[rel=both_+_sides_+_of_+_interface_+_plate]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_sides_+_of_+_interface_+_plate
*CAT: n
*SEM: twoRel[rel=both_+_sides_+_of_+_interface_+_plate]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_sides_+_of_+_interface_+_plate
*CAT: n
*SEM: twoRel[rel=both_+_sides_+_of_+_interface_+_plate]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_sides_+_of_+_interface_+_plate
*CAT: n
*SEM: orRel[rel=both_+_sides_+_of_+_interface_+_plate]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_standard
*CAT: n
*SEM: unaryRel[rel=both_+_standard]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_standard
*CAT: n
*SEM: twoRel[rel=both_+_standard]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_standard
*CAT: n
*SEM: twoRel[rel=both_+_standard]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: both_+_standard
*CAT: n
*SEM: orRel[rel=both_+_standard]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: box
*CAT: n
*SEM: unaryRel[rel=box]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: box
*CAT: n
*SEM: twoRel[rel=box]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: box
*CAT: n
*SEM: twoRel[rel=box]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: box
*CAT: n
*SEM: orRel[rel=box]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: boxes
*CAT: n
*SEM: unaryRel[rel=boxes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: boxes
*CAT: n
*SEM: twoRel[rel=boxes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: boxes
*CAT: n
*SEM: twoRel[rel=boxes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: boxes
*CAT: n
*SEM: orRel[rel=boxes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: unaryRel[rel=bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: twoRel[rel=bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: twoRel[rel=bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: orRel[rel=bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: braided_+_backslash_+_screened_+_backslash_+_emi_+_open_+_backslash_+_split_+_conduit_+_backslash_+_sleeve
*CAT: n
*SEM: unaryRel[rel=braided_+_backslash_+_screened_+_backslash_+_emi_+_open_+_backslash_+_split_+_conduit_+_backslash_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: braided_+_backslash_+_screened_+_backslash_+_emi_+_open_+_backslash_+_split_+_conduit_+_backslash_+_sleeve
*CAT: n
*SEM: twoRel[rel=braided_+_backslash_+_screened_+_backslash_+_emi_+_open_+_backslash_+_split_+_conduit_+_backslash_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: braided_+_backslash_+_screened_+_backslash_+_emi_+_open_+_backslash_+_split_+_conduit_+_backslash_+_sleeve
*CAT: n
*SEM: twoRel[rel=braided_+_backslash_+_screened_+_backslash_+_emi_+_open_+_backslash_+_split_+_conduit_+_backslash_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: braided_+_backslash_+_screened_+_backslash_+_emi_+_open_+_backslash_+_split_+_conduit_+_backslash_+_sleeve
*CAT: n
*SEM: orRel[rel=braided_+_backslash_+_screened_+_backslash_+_emi_+_open_+_backslash_+_split_+_conduit_+_backslash_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: breakout_+_bracket
*CAT: n
*SEM: unaryRel[rel=breakout_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: breakout_+_bracket
*CAT: n
*SEM: twoRel[rel=breakout_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: breakout_+_bracket
*CAT: n
*SEM: twoRel[rel=breakout_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: breakout_+_bracket
*CAT: n
*SEM: orRel[rel=breakout_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead_+_connections
*CAT: n
*SEM: unaryRel[rel=bulkhead_+_connections]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead_+_connections
*CAT: n
*SEM: twoRel[rel=bulkhead_+_connections]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead_+_connections
*CAT: n
*SEM: twoRel[rel=bulkhead_+_connections]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead_+_connections
*CAT: n
*SEM: orRel[rel=bulkhead_+_connections]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead_+_unions
*CAT: n
*SEM: unaryRel[rel=bulkhead_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=bulkhead_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=bulkhead_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bulkhead_+_unions
*CAT: n
*SEM: orRel[rel=bulkhead_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bumpers
*CAT: n
*SEM: unaryRel[rel=bumpers]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bumpers
*CAT: n
*SEM: twoRel[rel=bumpers]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bumpers
*CAT: n
*SEM: twoRel[rel=bumpers]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bumpers
*CAT: n
*SEM: orRel[rel=bumpers]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: unaryRel[rel=bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: twoRel[rel=bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: twoRel[rel=bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: orRel[rel=bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_configuration
*CAT: n
*SEM: unaryRel[rel=bundle_+_configuration]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_configuration
*CAT: n
*SEM: twoRel[rel=bundle_+_configuration]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_configuration
*CAT: n
*SEM: twoRel[rel=bundle_+_configuration]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_configuration
*CAT: n
*SEM: orRel[rel=bundle_+_configuration]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_crossings
*CAT: n
*SEM: unaryRel[rel=bundle_+_crossings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_crossings
*CAT: n
*SEM: twoRel[rel=bundle_+_crossings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_crossings
*CAT: n
*SEM: twoRel[rel=bundle_+_crossings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_crossings
*CAT: n
*SEM: orRel[rel=bundle_+_crossings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_especially
*CAT: n
*SEM: unaryRel[rel=bundle_+_especially]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_especially
*CAT: n
*SEM: twoRel[rel=bundle_+_especially]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_especially
*CAT: n
*SEM: twoRel[rel=bundle_+_especially]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_especially
*CAT: n
*SEM: orRel[rel=bundle_+_especially]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_growth_+_potential
*CAT: n
*SEM: unaryRel[rel=bundle_+_growth_+_potential]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_growth_+_potential
*CAT: n
*SEM: twoRel[rel=bundle_+_growth_+_potential]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_growth_+_potential
*CAT: n
*SEM: twoRel[rel=bundle_+_growth_+_potential]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_growth_+_potential
*CAT: n
*SEM: orRel[rel=bundle_+_growth_+_potential]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_in_+_light_+_blue_+_background_+_with_+_black_+_line_+_pre_+_pronted
*CAT: n
*SEM: unaryRel[rel=bundle_+_in_+_light_+_blue_+_background_+_with_+_black_+_line_+_pre_+_pronted]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_in_+_light_+_blue_+_background_+_with_+_black_+_line_+_pre_+_pronted
*CAT: n
*SEM: twoRel[rel=bundle_+_in_+_light_+_blue_+_background_+_with_+_black_+_line_+_pre_+_pronted]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_in_+_light_+_blue_+_background_+_with_+_black_+_line_+_pre_+_pronted
*CAT: n
*SEM: twoRel[rel=bundle_+_in_+_light_+_blue_+_background_+_with_+_black_+_line_+_pre_+_pronted]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_in_+_light_+_blue_+_background_+_with_+_black_+_line_+_pre_+_pronted
*CAT: n
*SEM: orRel[rel=bundle_+_in_+_light_+_blue_+_background_+_with_+_black_+_line_+_pre_+_pronted]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_on_+_normal_+_installation_+_in_+_accordance_+_with_+_the_+_figure_+_below
*CAT: n
*SEM: unaryRel[rel=bundle_+_on_+_normal_+_installation_+_in_+_accordance_+_with_+_the_+_figure_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_on_+_normal_+_installation_+_in_+_accordance_+_with_+_the_+_figure_+_below
*CAT: n
*SEM: twoRel[rel=bundle_+_on_+_normal_+_installation_+_in_+_accordance_+_with_+_the_+_figure_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_on_+_normal_+_installation_+_in_+_accordance_+_with_+_the_+_figure_+_below
*CAT: n
*SEM: twoRel[rel=bundle_+_on_+_normal_+_installation_+_in_+_accordance_+_with_+_the_+_figure_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_on_+_normal_+_installation_+_in_+_accordance_+_with_+_the_+_figure_+_below
*CAT: n
*SEM: orRel[rel=bundle_+_on_+_normal_+_installation_+_in_+_accordance_+_with_+_the_+_figure_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_over_+_length
*CAT: n
*SEM: unaryRel[rel=bundle_+_over_+_length]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_over_+_length
*CAT: n
*SEM: twoRel[rel=bundle_+_over_+_length]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_over_+_length
*CAT: n
*SEM: twoRel[rel=bundle_+_over_+_length]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_over_+_length
*CAT: n
*SEM: orRel[rel=bundle_+_over_+_length]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_protected_+_with_+_heat_+_shrinking_+_sleeve
*CAT: n
*SEM: unaryRel[rel=bundle_+_protected_+_with_+_heat_+_shrinking_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_protected_+_with_+_heat_+_shrinking_+_sleeve
*CAT: n
*SEM: twoRel[rel=bundle_+_protected_+_with_+_heat_+_shrinking_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_protected_+_with_+_heat_+_shrinking_+_sleeve
*CAT: n
*SEM: twoRel[rel=bundle_+_protected_+_with_+_heat_+_shrinking_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_protected_+_with_+_heat_+_shrinking_+_sleeve
*CAT: n
*SEM: orRel[rel=bundle_+_protected_+_with_+_heat_+_shrinking_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_protection
*CAT: n
*SEM: unaryRel[rel=bundle_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_protection
*CAT: n
*SEM: twoRel[rel=bundle_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_protection
*CAT: n
*SEM: twoRel[rel=bundle_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_protection
*CAT: n
*SEM: orRel[rel=bundle_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_prrotected_+_with_+_nsa935805_+_convoluted_+_conduit
*CAT: n
*SEM: unaryRel[rel=bundle_+_prrotected_+_with_+_nsa935805_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_prrotected_+_with_+_nsa935805_+_convoluted_+_conduit
*CAT: n
*SEM: twoRel[rel=bundle_+_prrotected_+_with_+_nsa935805_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_prrotected_+_with_+_nsa935805_+_convoluted_+_conduit
*CAT: n
*SEM: twoRel[rel=bundle_+_prrotected_+_with_+_nsa935805_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_prrotected_+_with_+_nsa935805_+_convoluted_+_conduit
*CAT: n
*SEM: orRel[rel=bundle_+_prrotected_+_with_+_nsa935805_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_tying_+_device
*CAT: n
*SEM: unaryRel[rel=bundle_+_tying_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_tying_+_device
*CAT: n
*SEM: twoRel[rel=bundle_+_tying_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_tying_+_device
*CAT: n
*SEM: twoRel[rel=bundle_+_tying_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_tying_+_device
*CAT: n
*SEM: orRel[rel=bundle_+_tying_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_with_+_asne_+_0248_+_label_+_in_+_white_+_color
*CAT: n
*SEM: unaryRel[rel=bundle_+_with_+_asne_+_0248_+_label_+_in_+_white_+_color]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_with_+_asne_+_0248_+_label_+_in_+_white_+_color
*CAT: n
*SEM: twoRel[rel=bundle_+_with_+_asne_+_0248_+_label_+_in_+_white_+_color]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_with_+_asne_+_0248_+_label_+_in_+_white_+_color
*CAT: n
*SEM: twoRel[rel=bundle_+_with_+_asne_+_0248_+_label_+_in_+_white_+_color]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_with_+_asne_+_0248_+_label_+_in_+_white_+_color
*CAT: n
*SEM: orRel[rel=bundle_+_with_+_asne_+_0248_+_label_+_in_+_white_+_color]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_with_+_diamater_+_d_+__+_smallerthan_+__+_equalto_+__+_25mm
*CAT: n
*SEM: unaryRel[rel=bundle_+_with_+_diamater_+_d_+__+_smallerthan_+__+_equalto_+__+_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_with_+_diamater_+_d_+__+_smallerthan_+__+_equalto_+__+_25mm
*CAT: n
*SEM: twoRel[rel=bundle_+_with_+_diamater_+_d_+__+_smallerthan_+__+_equalto_+__+_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_with_+_diamater_+_d_+__+_smallerthan_+__+_equalto_+__+_25mm
*CAT: n
*SEM: twoRel[rel=bundle_+_with_+_diamater_+_d_+__+_smallerthan_+__+_equalto_+__+_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_with_+_diamater_+_d_+__+_smallerthan_+__+_equalto_+__+_25mm
*CAT: n
*SEM: orRel[rel=bundle_+_with_+_diamater_+_d_+__+_smallerthan_+__+_equalto_+__+_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_with_+_diamater_+_d_+_smallerthan_+_equalto_+_25mm
*CAT: n
*SEM: unaryRel[rel=bundle_+_with_+_diamater_+_d_+_smallerthan_+_equalto_+_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_with_+_diamater_+_d_+_smallerthan_+_equalto_+_25mm
*CAT: n
*SEM: twoRel[rel=bundle_+_with_+_diamater_+_d_+_smallerthan_+_equalto_+_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_with_+_diamater_+_d_+_smallerthan_+_equalto_+_25mm
*CAT: n
*SEM: twoRel[rel=bundle_+_with_+_diamater_+_d_+_smallerthan_+_equalto_+_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_with_+_diamater_+_d_+_smallerthan_+_equalto_+_25mm
*CAT: n
*SEM: orRel[rel=bundle_+_with_+_diamater_+_d_+_smallerthan_+_equalto_+_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bus_+_bar
*CAT: n
*SEM: unaryRel[rel=bus_+_bar]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bus_+_bar
*CAT: n
*SEM: twoRel[rel=bus_+_bar]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bus_+_bar
*CAT: n
*SEM: twoRel[rel=bus_+_bar]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bus_+_bar
*CAT: n
*SEM: orRel[rel=bus_+_bar]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bus_+_bar_+_fixation
*CAT: n
*SEM: unaryRel[rel=bus_+_bar_+_fixation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bus_+_bar_+_fixation
*CAT: n
*SEM: twoRel[rel=bus_+_bar_+_fixation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bus_+_bar_+_fixation
*CAT: n
*SEM: twoRel[rel=bus_+_bar_+_fixation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bus_+_bar_+_fixation
*CAT: n
*SEM: orRel[rel=bus_+_bar_+_fixation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: by_+_lock_+_wire
*CAT: n
*SEM: unaryRel[rel=by_+_lock_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: by_+_lock_+_wire
*CAT: n
*SEM: twoRel[rel=by_+_lock_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: by_+_lock_+_wire
*CAT: n
*SEM: twoRel[rel=by_+_lock_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: by_+_lock_+_wire
*CAT: n
*SEM: orRel[rel=by_+_lock_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: by_+_non_+_conductive_+_fixed_+_bracket_+__+_opensb_+_a_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=by_+_non_+_conductive_+_fixed_+_bracket_+__+_opensb_+_a_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: by_+_non_+_conductive_+_fixed_+_bracket_+__+_opensb_+_a_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=by_+_non_+_conductive_+_fixed_+_bracket_+__+_opensb_+_a_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: by_+_non_+_conductive_+_fixed_+_bracket_+__+_opensb_+_a_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=by_+_non_+_conductive_+_fixed_+_bracket_+__+_opensb_+_a_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: by_+_non_+_conductive_+_fixed_+_bracket_+__+_opensb_+_a_+_closesb_+_
*CAT: n
*SEM: orRel[rel=by_+_non_+_conductive_+_fixed_+_bracket_+__+_opensb_+_a_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: by_+_non_+_conductive_+_fixed_+_bracket_+_opensb_+_a_+_closesb_+_as_+_priority_+_2_+_solution_+_inside_+_fflz
*CAT: n
*SEM: unaryRel[rel=by_+_non_+_conductive_+_fixed_+_bracket_+_opensb_+_a_+_closesb_+_as_+_priority_+_2_+_solution_+_inside_+_fflz]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: by_+_non_+_conductive_+_fixed_+_bracket_+_opensb_+_a_+_closesb_+_as_+_priority_+_2_+_solution_+_inside_+_fflz
*CAT: n
*SEM: twoRel[rel=by_+_non_+_conductive_+_fixed_+_bracket_+_opensb_+_a_+_closesb_+_as_+_priority_+_2_+_solution_+_inside_+_fflz]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: by_+_non_+_conductive_+_fixed_+_bracket_+_opensb_+_a_+_closesb_+_as_+_priority_+_2_+_solution_+_inside_+_fflz
*CAT: n
*SEM: twoRel[rel=by_+_non_+_conductive_+_fixed_+_bracket_+_opensb_+_a_+_closesb_+_as_+_priority_+_2_+_solution_+_inside_+_fflz]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: by_+_non_+_conductive_+_fixed_+_bracket_+_opensb_+_a_+_closesb_+_as_+_priority_+_2_+_solution_+_inside_+_fflz
*CAT: n
*SEM: orRel[rel=by_+_non_+_conductive_+_fixed_+_bracket_+_opensb_+_a_+_closesb_+_as_+_priority_+_2_+_solution_+_inside_+_fflz]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: c_+_is
*CAT: n
*SEM: unaryRel[rel=c_+_is]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: c_+_is
*CAT: n
*SEM: twoRel[rel=c_+_is]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: c_+_is
*CAT: n
*SEM: twoRel[rel=c_+_is]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: c_+_is
*CAT: n
*SEM: orRel[rel=c_+_is]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cabin_+_furnishing_+_equipment
*CAT: n
*SEM: unaryRel[rel=cabin_+_furnishing_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cabin_+_furnishing_+_equipment
*CAT: n
*SEM: twoRel[rel=cabin_+_furnishing_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cabin_+_furnishing_+_equipment
*CAT: n
*SEM: twoRel[rel=cabin_+_furnishing_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cabin_+_furnishing_+_equipment
*CAT: n
*SEM: orRel[rel=cabin_+_furnishing_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable
*CAT: n
*SEM: unaryRel[rel=cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable
*CAT: n
*SEM: twoRel[rel=cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable
*CAT: n
*SEM: twoRel[rel=cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable
*CAT: n
*SEM: orRel[rel=cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_nsa935401_+_but_+_in_+_line_+_with_+_requirements_+_dp_92_7_+_.2.3_+___+_2356-2362
*CAT: n
*SEM: unaryRel[rel=cable_+_tie_+_nsa935401_+_but_+_in_+_line_+_with_+_requirements_+_dp_92_7_+_.2.3_+___+_2356-2362]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_nsa935401_+_but_+_in_+_line_+_with_+_requirements_+_dp_92_7_+_.2.3_+___+_2356-2362
*CAT: n
*SEM: twoRel[rel=cable_+_tie_+_nsa935401_+_but_+_in_+_line_+_with_+_requirements_+_dp_92_7_+_.2.3_+___+_2356-2362]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_nsa935401_+_but_+_in_+_line_+_with_+_requirements_+_dp_92_7_+_.2.3_+___+_2356-2362
*CAT: n
*SEM: twoRel[rel=cable_+_tie_+_nsa935401_+_but_+_in_+_line_+_with_+_requirements_+_dp_92_7_+_.2.3_+___+_2356-2362]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_nsa935401_+_but_+_in_+_line_+_with_+_requirements_+_dp_92_7_+_.2.3_+___+_2356-2362
*CAT: n
*SEM: orRel[rel=cable_+_tie_+_nsa935401_+_but_+_in_+_line_+_with_+_requirements_+_dp_92_7_+_.2.3_+___+_2356-2362]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_nsa935401_+_but_+_in_+_line_+_with_+_requirements_+_dp_92_7.2.3_2356-2362
*CAT: n
*SEM: unaryRel[rel=cable_+_tie_+_nsa935401_+_but_+_in_+_line_+_with_+_requirements_+_dp_92_7.2.3_2356-2362]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_nsa935401_+_but_+_in_+_line_+_with_+_requirements_+_dp_92_7.2.3_2356-2362
*CAT: n
*SEM: twoRel[rel=cable_+_tie_+_nsa935401_+_but_+_in_+_line_+_with_+_requirements_+_dp_92_7.2.3_2356-2362]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_nsa935401_+_but_+_in_+_line_+_with_+_requirements_+_dp_92_7.2.3_2356-2362
*CAT: n
*SEM: twoRel[rel=cable_+_tie_+_nsa935401_+_but_+_in_+_line_+_with_+_requirements_+_dp_92_7.2.3_2356-2362]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable_+_tie_+_nsa935401_+_but_+_in_+_line_+_with_+_requirements_+_dp_92_7.2.3_2356-2362
*CAT: n
*SEM: orRel[rel=cable_+_tie_+_nsa935401_+_but_+_in_+_line_+_with_+_requirements_+_dp_92_7.2.3_2356-2362]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cantilever_+_arm
*CAT: n
*SEM: unaryRel[rel=cantilever_+_arm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cantilever_+_arm
*CAT: n
*SEM: twoRel[rel=cantilever_+_arm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cantilever_+_arm
*CAT: n
*SEM: twoRel[rel=cantilever_+_arm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cantilever_+_arm
*CAT: n
*SEM: orRel[rel=cantilever_+_arm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: captive_+_quick_+_release_+_fastener
*CAT: n
*SEM: unaryRel[rel=captive_+_quick_+_release_+_fastener]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: captive_+_quick_+_release_+_fastener
*CAT: n
*SEM: twoRel[rel=captive_+_quick_+_release_+_fastener]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: captive_+_quick_+_release_+_fastener
*CAT: n
*SEM: twoRel[rel=captive_+_quick_+_release_+_fastener]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: captive_+_quick_+_release_+_fastener
*CAT: n
*SEM: orRel[rel=captive_+_quick_+_release_+_fastener]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cargo_+_floor
*CAT: n
*SEM: unaryRel[rel=cargo_+_floor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cargo_+_floor
*CAT: n
*SEM: twoRel[rel=cargo_+_floor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cargo_+_floor
*CAT: n
*SEM: twoRel[rel=cargo_+_floor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cargo_+_floor
*CAT: n
*SEM: orRel[rel=cargo_+_floor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_drain_+_pipes_+_which_+_are_+_fixed_+_directly
*CAT: n
*SEM: unaryRel[rel=case_+_drain_+_pipes_+_which_+_are_+_fixed_+_directly]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_drain_+_pipes_+_which_+_are_+_fixed_+_directly
*CAT: n
*SEM: twoRel[rel=case_+_drain_+_pipes_+_which_+_are_+_fixed_+_directly]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_drain_+_pipes_+_which_+_are_+_fixed_+_directly
*CAT: n
*SEM: twoRel[rel=case_+_drain_+_pipes_+_which_+_are_+_fixed_+_directly]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_drain_+_pipes_+_which_+_are_+_fixed_+_directly
*CAT: n
*SEM: orRel[rel=case_+_drain_+_pipes_+_which_+_are_+_fixed_+_directly]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route
*CAT: n
*SEM: unaryRel[rel=case_+_of_+_crossing-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route
*CAT: n
*SEM: twoRel[rel=case_+_of_+_crossing-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route
*CAT: n
*SEM: twoRel[rel=case_+_of_+_crossing-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route
*CAT: n
*SEM: orRel[rel=case_+_of_+_crossing-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route_+_with
*CAT: n
*SEM: unaryRel[rel=case_+_of_+_crossing-route_+_with]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route_+_with
*CAT: n
*SEM: twoRel[rel=case_+_of_+_crossing-route_+_with]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route_+_with
*CAT: n
*SEM: twoRel[rel=case_+_of_+_crossing-route_+_with]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route_+_with
*CAT: n
*SEM: orRel[rel=case_+_of_+_crossing-route_+_with]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+__+_equalto_+_50mm
*CAT: n
*SEM: unaryRel[rel=case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+__+_equalto_+_50mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+__+_equalto_+_50mm
*CAT: n
*SEM: twoRel[rel=case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+__+_equalto_+_50mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+__+_equalto_+_50mm
*CAT: n
*SEM: twoRel[rel=case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+__+_equalto_+_50mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+__+_equalto_+_50mm
*CAT: n
*SEM: orRel[rel=case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+__+_equalto_+_50mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+_equalto_+_25mm
*CAT: n
*SEM: unaryRel[rel=case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+_equalto_+_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+_equalto_+_25mm
*CAT: n
*SEM: twoRel[rel=case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+_equalto_+_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+_equalto_+_25mm
*CAT: n
*SEM: twoRel[rel=case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+_equalto_+_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+_equalto_+_25mm
*CAT: n
*SEM: orRel[rel=case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+_equalto_+_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+_equalto_+_50mm
*CAT: n
*SEM: unaryRel[rel=case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+_equalto_+_50mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+_equalto_+_50mm
*CAT: n
*SEM: twoRel[rel=case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+_equalto_+_50mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+_equalto_+_50mm
*CAT: n
*SEM: twoRel[rel=case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+_equalto_+_50mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+_equalto_+_50mm
*CAT: n
*SEM: orRel[rel=case_+_of_+_crossing-route_+_with_+_a_+_distance_+_d_+_greaterthan_+_equalto_+_50mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_repair
*CAT: n
*SEM: unaryRel[rel=case_+_of_+_repair]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_repair
*CAT: n
*SEM: twoRel[rel=case_+_of_+_repair]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_repair
*CAT: n
*SEM: twoRel[rel=case_+_of_+_repair]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_repair
*CAT: n
*SEM: orRel[rel=case_+_of_+_repair]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_repair.
*CAT: n
*SEM: unaryRel[rel=case_+_of_+_repair.]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_repair.
*CAT: n
*SEM: twoRel[rel=case_+_of_+_repair.]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_repair.
*CAT: n
*SEM: twoRel[rel=case_+_of_+_repair.]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: case_+_of_+_repair.
*CAT: n
*SEM: orRel[rel=case_+_of_+_repair.]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cavity
*CAT: n
*SEM: unaryRel[rel=cavity]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cavity
*CAT: n
*SEM: twoRel[rel=cavity]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cavity
*CAT: n
*SEM: twoRel[rel=cavity]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cavity
*CAT: n
*SEM: orRel[rel=cavity]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: centered_+_at_+_the_+_metallic_+_rigid_+_conduit_+_outlet
*CAT: n
*SEM: unaryRel[rel=centered_+_at_+_the_+_metallic_+_rigid_+_conduit_+_outlet]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: centered_+_at_+_the_+_metallic_+_rigid_+_conduit_+_outlet
*CAT: n
*SEM: twoRel[rel=centered_+_at_+_the_+_metallic_+_rigid_+_conduit_+_outlet]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: centered_+_at_+_the_+_metallic_+_rigid_+_conduit_+_outlet
*CAT: n
*SEM: twoRel[rel=centered_+_at_+_the_+_metallic_+_rigid_+_conduit_+_outlet]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: centered_+_at_+_the_+_metallic_+_rigid_+_conduit_+_outlet
*CAT: n
*SEM: orRel[rel=centered_+_at_+_the_+_metallic_+_rigid_+_conduit_+_outlet]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp_+_area
*CAT: n
*SEM: unaryRel[rel=cfrp_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp_+_area
*CAT: n
*SEM: twoRel[rel=cfrp_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp_+_area
*CAT: n
*SEM: twoRel[rel=cfrp_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cfrp_+_area
*CAT: n
*SEM: orRel[rel=cfrp_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chafing_+_sheath
*CAT: n
*SEM: unaryRel[rel=chafing_+_sheath]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chafing_+_sheath
*CAT: n
*SEM: twoRel[rel=chafing_+_sheath]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chafing_+_sheath
*CAT: n
*SEM: twoRel[rel=chafing_+_sheath]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chafing_+_sheath
*CAT: n
*SEM: orRel[rel=chafing_+_sheath]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chain
*CAT: n
*SEM: unaryRel[rel=chain]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chain
*CAT: n
*SEM: twoRel[rel=chain]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chain
*CAT: n
*SEM: twoRel[rel=chain]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: chain
*CAT: n
*SEM: orRel[rel=chain]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker
*CAT: n
*SEM: unaryRel[rel=circuit_+_breaker]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker
*CAT: n
*SEM: twoRel[rel=circuit_+_breaker]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker
*CAT: n
*SEM: twoRel[rel=circuit_+_breaker]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker
*CAT: n
*SEM: orRel[rel=circuit_+_breaker]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker_+_connection
*CAT: n
*SEM: unaryRel[rel=circuit_+_breaker_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker_+_connection
*CAT: n
*SEM: twoRel[rel=circuit_+_breaker_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker_+_connection
*CAT: n
*SEM: twoRel[rel=circuit_+_breaker_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circuit_+_breaker_+_connection
*CAT: n
*SEM: orRel[rel=circuit_+_breaker_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_connector
*CAT: n
*SEM: unaryRel[rel=circular_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_connector
*CAT: n
*SEM: twoRel[rel=circular_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_connector
*CAT: n
*SEM: twoRel[rel=circular_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_connector
*CAT: n
*SEM: orRel[rel=circular_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_rod
*CAT: n
*SEM: unaryRel[rel=circular_+_rod]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_rod
*CAT: n
*SEM: twoRel[rel=circular_+_rod]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_rod
*CAT: n
*SEM: twoRel[rel=circular_+_rod]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_rod
*CAT: n
*SEM: orRel[rel=circular_+_rod]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_rod_+_using_+_abs_+_1095_+_insulating_+_bracket_+_fixed_+_with_+_two_+_asna0033_+_metallic_+_clamps
*CAT: n
*SEM: unaryRel[rel=circular_+_rod_+_using_+_abs_+_1095_+_insulating_+_bracket_+_fixed_+_with_+_two_+_asna0033_+_metallic_+_clamps]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_rod_+_using_+_abs_+_1095_+_insulating_+_bracket_+_fixed_+_with_+_two_+_asna0033_+_metallic_+_clamps
*CAT: n
*SEM: twoRel[rel=circular_+_rod_+_using_+_abs_+_1095_+_insulating_+_bracket_+_fixed_+_with_+_two_+_asna0033_+_metallic_+_clamps]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_rod_+_using_+_abs_+_1095_+_insulating_+_bracket_+_fixed_+_with_+_two_+_asna0033_+_metallic_+_clamps
*CAT: n
*SEM: twoRel[rel=circular_+_rod_+_using_+_abs_+_1095_+_insulating_+_bracket_+_fixed_+_with_+_two_+_asna0033_+_metallic_+_clamps]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_rod_+_using_+_abs_+_1095_+_insulating_+_bracket_+_fixed_+_with_+_two_+_asna0033_+_metallic_+_clamps
*CAT: n
*SEM: orRel[rel=circular_+_rod_+_using_+_abs_+_1095_+_insulating_+_bracket_+_fixed_+_with_+_two_+_asna0033_+_metallic_+_clamps]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_rod_+_with_+_nsa_+_5516_+_p-clamp_+_type_+_b
*CAT: n
*SEM: unaryRel[rel=circular_+_rod_+_with_+_nsa_+_5516_+_p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_rod_+_with_+_nsa_+_5516_+_p-clamp_+_type_+_b
*CAT: n
*SEM: twoRel[rel=circular_+_rod_+_with_+_nsa_+_5516_+_p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_rod_+_with_+_nsa_+_5516_+_p-clamp_+_type_+_b
*CAT: n
*SEM: twoRel[rel=circular_+_rod_+_with_+_nsa_+_5516_+_p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: circular_+_rod_+_with_+_nsa_+_5516_+_p-clamp_+_type_+_b
*CAT: n
*SEM: orRel[rel=circular_+_rod_+_with_+_nsa_+_5516_+_p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp
*CAT: n
*SEM: unaryRel[rel=clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp
*CAT: n
*SEM: twoRel[rel=clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp
*CAT: n
*SEM: twoRel[rel=clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp
*CAT: n
*SEM: orRel[rel=clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp_+_with_+_a_+_maximum_+_distance
*CAT: n
*SEM: unaryRel[rel=clamp_+_with_+_a_+_maximum_+_distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp_+_with_+_a_+_maximum_+_distance
*CAT: n
*SEM: twoRel[rel=clamp_+_with_+_a_+_maximum_+_distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp_+_with_+_a_+_maximum_+_distance
*CAT: n
*SEM: twoRel[rel=clamp_+_with_+_a_+_maximum_+_distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp_+_with_+_a_+_maximum_+_distance
*CAT: n
*SEM: orRel[rel=clamp_+_with_+_a_+_maximum_+_distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block
*CAT: n
*SEM: unaryRel[rel=clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block
*CAT: n
*SEM: twoRel[rel=clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block
*CAT: n
*SEM: twoRel[rel=clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clamp-block
*CAT: n
*SEM: orRel[rel=clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: class_+_e_+_fire_+_compartment
*CAT: n
*SEM: unaryRel[rel=class_+_e_+_fire_+_compartment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: class_+_e_+_fire_+_compartment
*CAT: n
*SEM: twoRel[rel=class_+_e_+_fire_+_compartment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: class_+_e_+_fire_+_compartment
*CAT: n
*SEM: twoRel[rel=class_+_e_+_fire_+_compartment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: class_+_e_+_fire_+_compartment
*CAT: n
*SEM: orRel[rel=class_+_e_+_fire_+_compartment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: class_+_e_+_fire_+_compartment_+_with_+_fire_+_protection_+_means
*CAT: n
*SEM: unaryRel[rel=class_+_e_+_fire_+_compartment_+_with_+_fire_+_protection_+_means]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: class_+_e_+_fire_+_compartment_+_with_+_fire_+_protection_+_means
*CAT: n
*SEM: twoRel[rel=class_+_e_+_fire_+_compartment_+_with_+_fire_+_protection_+_means]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: class_+_e_+_fire_+_compartment_+_with_+_fire_+_protection_+_means
*CAT: n
*SEM: twoRel[rel=class_+_e_+_fire_+_compartment_+_with_+_fire_+_protection_+_means]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: class_+_e_+_fire_+_compartment_+_with_+_fire_+_protection_+_means
*CAT: n
*SEM: orRel[rel=class_+_e_+_fire_+_compartment_+_with_+_fire_+_protection_+_means]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance
*CAT: n
*SEM: unaryRel[rel=clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance
*CAT: n
*SEM: twoRel[rel=clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance
*CAT: n
*SEM: twoRel[rel=clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearance
*CAT: n
*SEM: orRel[rel=clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearly_+_define_+_the_+_p-clamp
*CAT: n
*SEM: unaryRel[rel=clearly_+_define_+_the_+_p-clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearly_+_define_+_the_+_p-clamp
*CAT: n
*SEM: twoRel[rel=clearly_+_define_+_the_+_p-clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearly_+_define_+_the_+_p-clamp
*CAT: n
*SEM: twoRel[rel=clearly_+_define_+_the_+_p-clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: clearly_+_define_+_the_+_p-clamp
*CAT: n
*SEM: orRel[rel=clearly_+_define_+_the_+_p-clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: close
*CAT: n
*SEM: unaryRel[rel=close]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: close
*CAT: n
*SEM: twoRel[rel=close]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: close
*CAT: n
*SEM: twoRel[rel=close]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: close
*CAT: n
*SEM: orRel[rel=close]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve
*CAT: n
*SEM: unaryRel[rel=closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve
*CAT: n
*SEM: twoRel[rel=closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve
*CAT: n
*SEM: twoRel[rel=closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve
*CAT: n
*SEM: orRel[rel=closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_with_+_at_+_least_+_one_+_removable_+_end_+__+_opensb_+_e.g._+_connector
*CAT: n
*SEM: unaryRel[rel=closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_with_+_at_+_least_+_one_+_removable_+_end_+__+_opensb_+_e.g._+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_with_+_at_+_least_+_one_+_removable_+_end_+__+_opensb_+_e.g._+_connector
*CAT: n
*SEM: twoRel[rel=closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_with_+_at_+_least_+_one_+_removable_+_end_+__+_opensb_+_e.g._+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_with_+_at_+_least_+_one_+_removable_+_end_+__+_opensb_+_e.g._+_connector
*CAT: n
*SEM: twoRel[rel=closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_with_+_at_+_least_+_one_+_removable_+_end_+__+_opensb_+_e.g._+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_with_+_at_+_least_+_one_+_removable_+_end_+__+_opensb_+_e.g._+_connector
*CAT: n
*SEM: orRel[rel=closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_with_+_at_+_least_+_one_+_removable_+_end_+__+_opensb_+_e.g._+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_with_+_at_+_least_+_one_+_removable_+_end_+_opensb_+_e.g._+_connector
*CAT: n
*SEM: unaryRel[rel=closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_with_+_at_+_least_+_one_+_removable_+_end_+_opensb_+_e.g._+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_with_+_at_+_least_+_one_+_removable_+_end_+_opensb_+_e.g._+_connector
*CAT: n
*SEM: twoRel[rel=closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_with_+_at_+_least_+_one_+_removable_+_end_+_opensb_+_e.g._+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_with_+_at_+_least_+_one_+_removable_+_end_+_opensb_+_e.g._+_connector
*CAT: n
*SEM: twoRel[rel=closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_with_+_at_+_least_+_one_+_removable_+_end_+_opensb_+_e.g._+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_with_+_at_+_least_+_one_+_removable_+_end_+_opensb_+_e.g._+_connector
*CAT: n
*SEM: orRel[rel=closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_with_+_at_+_least_+_one_+_removable_+_end_+_opensb_+_e.g._+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coaxial_+_cable
*CAT: n
*SEM: unaryRel[rel=coaxial_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coaxial_+_cable
*CAT: n
*SEM: twoRel[rel=coaxial_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coaxial_+_cable
*CAT: n
*SEM: twoRel[rel=coaxial_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coaxial_+_cable
*CAT: n
*SEM: orRel[rel=coaxial_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coaxial_+_wire
*CAT: n
*SEM: unaryRel[rel=coaxial_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coaxial_+_wire
*CAT: n
*SEM: twoRel[rel=coaxial_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coaxial_+_wire
*CAT: n
*SEM: twoRel[rel=coaxial_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coaxial_+_wire
*CAT: n
*SEM: orRel[rel=coaxial_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cockpit_+_vu_+_on_+_all_+_switch_+_guard
*CAT: n
*SEM: unaryRel[rel=cockpit_+_vu_+_on_+_all_+_switch_+_guard]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cockpit_+_vu_+_on_+_all_+_switch_+_guard
*CAT: n
*SEM: twoRel[rel=cockpit_+_vu_+_on_+_all_+_switch_+_guard]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cockpit_+_vu_+_on_+_all_+_switch_+_guard
*CAT: n
*SEM: twoRel[rel=cockpit_+_vu_+_on_+_all_+_switch_+_guard]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cockpit_+_vu_+_on_+_all_+_switch_+_guard
*CAT: n
*SEM: orRel[rel=cockpit_+_vu_+_on_+_all_+_switch_+_guard]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_c
*CAT: n
*SEM: unaryRel[rel=col_obj1_c]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_c
*CAT: n
*SEM: twoRel[rel=col_obj1_c]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_c
*CAT: n
*SEM: twoRel[rel=col_obj1_c]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_c
*CAT: n
*SEM: orRel[rel=col_obj1_c]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_d
*CAT: n
*SEM: unaryRel[rel=col_obj1_d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_d
*CAT: n
*SEM: twoRel[rel=col_obj1_d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_d
*CAT: n
*SEM: twoRel[rel=col_obj1_d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_d
*CAT: n
*SEM: orRel[rel=col_obj1_d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_e
*CAT: n
*SEM: unaryRel[rel=col_obj1_e]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_e
*CAT: n
*SEM: twoRel[rel=col_obj1_e]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_e
*CAT: n
*SEM: twoRel[rel=col_obj1_e]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_e
*CAT: n
*SEM: orRel[rel=col_obj1_e]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_f
*CAT: n
*SEM: unaryRel[rel=col_obj1_f]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_f
*CAT: n
*SEM: twoRel[rel=col_obj1_f]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_f
*CAT: n
*SEM: twoRel[rel=col_obj1_f]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_f
*CAT: n
*SEM: orRel[rel=col_obj1_f]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_g
*CAT: n
*SEM: unaryRel[rel=col_obj1_g]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_g
*CAT: n
*SEM: twoRel[rel=col_obj1_g]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_g
*CAT: n
*SEM: twoRel[rel=col_obj1_g]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_g
*CAT: n
*SEM: orRel[rel=col_obj1_g]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_h
*CAT: n
*SEM: unaryRel[rel=col_obj1_h]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_h
*CAT: n
*SEM: twoRel[rel=col_obj1_h]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_h
*CAT: n
*SEM: twoRel[rel=col_obj1_h]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_h
*CAT: n
*SEM: orRel[rel=col_obj1_h]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_i
*CAT: n
*SEM: unaryRel[rel=col_obj1_i]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_i
*CAT: n
*SEM: twoRel[rel=col_obj1_i]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_i
*CAT: n
*SEM: twoRel[rel=col_obj1_i]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_i
*CAT: n
*SEM: orRel[rel=col_obj1_i]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_j
*CAT: n
*SEM: unaryRel[rel=col_obj1_j]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_j
*CAT: n
*SEM: twoRel[rel=col_obj1_j]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_j
*CAT: n
*SEM: twoRel[rel=col_obj1_j]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: col_obj1_j
*CAT: n
*SEM: orRel[rel=col_obj1_j]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: combi_+_bracket
*CAT: n
*SEM: unaryRel[rel=combi_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: combi_+_bracket
*CAT: n
*SEM: twoRel[rel=combi_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: combi_+_bracket
*CAT: n
*SEM: twoRel[rel=combi_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: combi_+_bracket
*CAT: n
*SEM: orRel[rel=combi_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: combination_+_with_+_en_+_6049_+_split_+_conduit_+_directly_+_on_+_the_+_bundle
*CAT: n
*SEM: unaryRel[rel=combination_+_with_+_en_+_6049_+_split_+_conduit_+_directly_+_on_+_the_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: combination_+_with_+_en_+_6049_+_split_+_conduit_+_directly_+_on_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=combination_+_with_+_en_+_6049_+_split_+_conduit_+_directly_+_on_+_the_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: combination_+_with_+_en_+_6049_+_split_+_conduit_+_directly_+_on_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=combination_+_with_+_en_+_6049_+_split_+_conduit_+_directly_+_on_+_the_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: combination_+_with_+_en_+_6049_+_split_+_conduit_+_directly_+_on_+_the_+_bundle
*CAT: n
*SEM: orRel[rel=combination_+_with_+_en_+_6049_+_split_+_conduit_+_directly_+_on_+_the_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_m-route
*CAT: n
*SEM: unaryRel[rel=commercial_+_m-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_m-route
*CAT: n
*SEM: twoRel[rel=commercial_+_m-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_m-route
*CAT: n
*SEM: twoRel[rel=commercial_+_m-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_m-route
*CAT: n
*SEM: orRel[rel=commercial_+_m-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_p-route
*CAT: n
*SEM: unaryRel[rel=commercial_+_p-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_p-route
*CAT: n
*SEM: twoRel[rel=commercial_+_p-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_p-route
*CAT: n
*SEM: twoRel[rel=commercial_+_p-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: commercial_+_p-route
*CAT: n
*SEM: orRel[rel=commercial_+_p-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component
*CAT: n
*SEM: unaryRel[rel=component]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component
*CAT: n
*SEM: twoRel[rel=component]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component
*CAT: n
*SEM: twoRel[rel=component]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component
*CAT: n
*SEM: orRel[rel=component]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: unaryRel[rel=component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: twoRel[rel=component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: twoRel[rel=component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: orRel[rel=component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component_+_backslash_+_item_+_backslash_+_object_+_of_+_the_+_bleed_+_air_+_system
*CAT: n
*SEM: unaryRel[rel=component_+_backslash_+_item_+_backslash_+_object_+_of_+_the_+_bleed_+_air_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component_+_backslash_+_item_+_backslash_+_object_+_of_+_the_+_bleed_+_air_+_system
*CAT: n
*SEM: twoRel[rel=component_+_backslash_+_item_+_backslash_+_object_+_of_+_the_+_bleed_+_air_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component_+_backslash_+_item_+_backslash_+_object_+_of_+_the_+_bleed_+_air_+_system
*CAT: n
*SEM: twoRel[rel=component_+_backslash_+_item_+_backslash_+_object_+_of_+_the_+_bleed_+_air_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: component_+_backslash_+_item_+_backslash_+_object_+_of_+_the_+_bleed_+_air_+_system
*CAT: n
*SEM: orRel[rel=component_+_backslash_+_item_+_backslash_+_object_+_of_+_the_+_bleed_+_air_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: unaryRel[rel=conductive_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: twoRel[rel=conductive_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: twoRel[rel=conductive_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: orRel[rel=conductive_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_composite_+_structure
*CAT: n
*SEM: unaryRel[rel=conductive_+_composite_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_composite_+_structure
*CAT: n
*SEM: twoRel[rel=conductive_+_composite_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_composite_+_structure
*CAT: n
*SEM: twoRel[rel=conductive_+_composite_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_composite_+_structure
*CAT: n
*SEM: orRel[rel=conductive_+_composite_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_composite_+_structure_+_with_+_a_+_bonding_+_link
*CAT: n
*SEM: unaryRel[rel=conductive_+_composite_+_structure_+_with_+_a_+_bonding_+_link]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_composite_+_structure_+_with_+_a_+_bonding_+_link
*CAT: n
*SEM: twoRel[rel=conductive_+_composite_+_structure_+_with_+_a_+_bonding_+_link]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_composite_+_structure_+_with_+_a_+_bonding_+_link
*CAT: n
*SEM: twoRel[rel=conductive_+_composite_+_structure_+_with_+_a_+_bonding_+_link]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_composite_+_structure_+_with_+_a_+_bonding_+_link
*CAT: n
*SEM: orRel[rel=conductive_+_composite_+_structure_+_with_+_a_+_bonding_+_link]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_traverse
*CAT: n
*SEM: unaryRel[rel=conductive_+_traverse]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_traverse
*CAT: n
*SEM: twoRel[rel=conductive_+_traverse]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_traverse
*CAT: n
*SEM: twoRel[rel=conductive_+_traverse]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conductive_+_traverse
*CAT: n
*SEM: orRel[rel=conductive_+_traverse]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit
*CAT: n
*SEM: unaryRel[rel=conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit
*CAT: n
*SEM: twoRel[rel=conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit
*CAT: n
*SEM: twoRel[rel=conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit
*CAT: n
*SEM: orRel[rel=conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+_size
*CAT: n
*SEM: unaryRel[rel=conduit_+_size]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+_size
*CAT: n
*SEM: twoRel[rel=conduit_+_size]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+_size
*CAT: n
*SEM: twoRel[rel=conduit_+_size]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+_size
*CAT: n
*SEM: orRel[rel=conduit_+_size]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connections_+_on_+_pipes
*CAT: n
*SEM: unaryRel[rel=connections_+_on_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connections_+_on_+_pipes
*CAT: n
*SEM: twoRel[rel=connections_+_on_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connections_+_on_+_pipes
*CAT: n
*SEM: twoRel[rel=connections_+_on_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connections_+_on_+_pipes
*CAT: n
*SEM: orRel[rel=connections_+_on_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector
*CAT: n
*SEM: unaryRel[rel=connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector
*CAT: n
*SEM: twoRel[rel=connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector
*CAT: n
*SEM: twoRel[rel=connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector
*CAT: n
*SEM: orRel[rel=connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+__+_opensb_+_plug_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=connector_+__+_opensb_+_plug_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+__+_opensb_+_plug_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=connector_+__+_opensb_+_plug_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+__+_opensb_+_plug_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=connector_+__+_opensb_+_plug_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+__+_opensb_+_plug_+_closesb_+_
*CAT: n
*SEM: orRel[rel=connector_+__+_opensb_+_plug_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_dimensions
*CAT: n
*SEM: unaryRel[rel=connector_+_dimensions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_dimensions
*CAT: n
*SEM: twoRel[rel=connector_+_dimensions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_dimensions
*CAT: n
*SEM: twoRel[rel=connector_+_dimensions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_dimensions
*CAT: n
*SEM: orRel[rel=connector_+_dimensions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_for_+_arinc
*CAT: n
*SEM: unaryRel[rel=connector_+_for_+_arinc]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_for_+_arinc
*CAT: n
*SEM: twoRel[rel=connector_+_for_+_arinc]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_for_+_arinc
*CAT: n
*SEM: twoRel[rel=connector_+_for_+_arinc]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_for_+_arinc
*CAT: n
*SEM: orRel[rel=connector_+_for_+_arinc]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_plate
*CAT: n
*SEM: unaryRel[rel=connector_+_plate]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_plate
*CAT: n
*SEM: twoRel[rel=connector_+_plate]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_plate
*CAT: n
*SEM: twoRel[rel=connector_+_plate]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_plate
*CAT: n
*SEM: orRel[rel=connector_+_plate]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_segregation
*CAT: n
*SEM: unaryRel[rel=connector_+_segregation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_segregation
*CAT: n
*SEM: twoRel[rel=connector_+_segregation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_segregation
*CAT: n
*SEM: twoRel[rel=connector_+_segregation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_segregation
*CAT: n
*SEM: orRel[rel=connector_+_segregation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: considering_+_free_+_zones
*CAT: n
*SEM: unaryRel[rel=considering_+_free_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: considering_+_free_+_zones
*CAT: n
*SEM: twoRel[rel=considering_+_free_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: considering_+_free_+_zones
*CAT: n
*SEM: twoRel[rel=considering_+_free_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: considering_+_free_+_zones
*CAT: n
*SEM: orRel[rel=considering_+_free_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact
*CAT: n
*SEM: unaryRel[rel=contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact
*CAT: n
*SEM: twoRel[rel=contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact
*CAT: n
*SEM: twoRel[rel=contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact
*CAT: n
*SEM: orRel[rel=contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact_+_with_+_cable_+_with_+_insulating_+_material_+_like_+_paint_+_finish_+_inline_+_with_+_spec_+_tna00710003aa011
*CAT: n
*SEM: unaryRel[rel=contact_+_with_+_cable_+_with_+_insulating_+_material_+_like_+_paint_+_finish_+_inline_+_with_+_spec_+_tna00710003aa011]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact_+_with_+_cable_+_with_+_insulating_+_material_+_like_+_paint_+_finish_+_inline_+_with_+_spec_+_tna00710003aa011
*CAT: n
*SEM: twoRel[rel=contact_+_with_+_cable_+_with_+_insulating_+_material_+_like_+_paint_+_finish_+_inline_+_with_+_spec_+_tna00710003aa011]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact_+_with_+_cable_+_with_+_insulating_+_material_+_like_+_paint_+_finish_+_inline_+_with_+_spec_+_tna00710003aa011
*CAT: n
*SEM: twoRel[rel=contact_+_with_+_cable_+_with_+_insulating_+_material_+_like_+_paint_+_finish_+_inline_+_with_+_spec_+_tna00710003aa011]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact_+_with_+_cable_+_with_+_insulating_+_material_+_like_+_paint_+_finish_+_inline_+_with_+_spec_+_tna00710003aa011
*CAT: n
*SEM: orRel[rel=contact_+_with_+_cable_+_with_+_insulating_+_material_+_like_+_paint_+_finish_+_inline_+_with_+_spec_+_tna00710003aa011]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact_+_with_+_cable_+_with_+_insulating_+_material_+_ptfe
*CAT: n
*SEM: unaryRel[rel=contact_+_with_+_cable_+_with_+_insulating_+_material_+_ptfe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact_+_with_+_cable_+_with_+_insulating_+_material_+_ptfe
*CAT: n
*SEM: twoRel[rel=contact_+_with_+_cable_+_with_+_insulating_+_material_+_ptfe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact_+_with_+_cable_+_with_+_insulating_+_material_+_ptfe
*CAT: n
*SEM: twoRel[rel=contact_+_with_+_cable_+_with_+_insulating_+_material_+_ptfe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contact_+_with_+_cable_+_with_+_insulating_+_material_+_ptfe
*CAT: n
*SEM: orRel[rel=contact_+_with_+_cable_+_with_+_insulating_+_material_+_ptfe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contamination
*CAT: n
*SEM: unaryRel[rel=contamination]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contamination
*CAT: n
*SEM: twoRel[rel=contamination]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contamination
*CAT: n
*SEM: twoRel[rel=contamination]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: contamination
*CAT: n
*SEM: orRel[rel=contamination]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: continuous_+_fuel_+_immersion
*CAT: n
*SEM: unaryRel[rel=continuous_+_fuel_+_immersion]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: continuous_+_fuel_+_immersion
*CAT: n
*SEM: twoRel[rel=continuous_+_fuel_+_immersion]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: continuous_+_fuel_+_immersion
*CAT: n
*SEM: twoRel[rel=continuous_+_fuel_+_immersion]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: continuous_+_fuel_+_immersion
*CAT: n
*SEM: orRel[rel=continuous_+_fuel_+_immersion]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: controlled_+_relative_+_movement_+_a_+_device
*CAT: n
*SEM: unaryRel[rel=controlled_+_relative_+_movement_+_a_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: controlled_+_relative_+_movement_+_a_+_device
*CAT: n
*SEM: twoRel[rel=controlled_+_relative_+_movement_+_a_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: controlled_+_relative_+_movement_+_a_+_device
*CAT: n
*SEM: twoRel[rel=controlled_+_relative_+_movement_+_a_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: controlled_+_relative_+_movement_+_a_+_device
*CAT: n
*SEM: orRel[rel=controlled_+_relative_+_movement_+_a_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: convergent
*CAT: n
*SEM: unaryRel[rel=convergent]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: convergent
*CAT: n
*SEM: twoRel[rel=convergent]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: convergent
*CAT: n
*SEM: twoRel[rel=convergent]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: convergent
*CAT: n
*SEM: orRel[rel=convergent]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_bundle
*CAT: n
*SEM: unaryRel[rel=copper_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_bundle
*CAT: n
*SEM: twoRel[rel=copper_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_bundle
*CAT: n
*SEM: twoRel[rel=copper_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_bundle
*CAT: n
*SEM: orRel[rel=copper_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_cables_+__+_backslash_+__+_wires
*CAT: n
*SEM: unaryRel[rel=copper_+_cables_+__+_backslash_+__+_wires]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_cables_+__+_backslash_+__+_wires
*CAT: n
*SEM: twoRel[rel=copper_+_cables_+__+_backslash_+__+_wires]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_cables_+__+_backslash_+__+_wires
*CAT: n
*SEM: twoRel[rel=copper_+_cables_+__+_backslash_+__+_wires]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_cables_+__+_backslash_+__+_wires
*CAT: n
*SEM: orRel[rel=copper_+_cables_+__+_backslash_+__+_wires]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_cables_+_backslash_+_wires
*CAT: n
*SEM: unaryRel[rel=copper_+_cables_+_backslash_+_wires]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_cables_+_backslash_+_wires
*CAT: n
*SEM: twoRel[rel=copper_+_cables_+_backslash_+_wires]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_cables_+_backslash_+_wires
*CAT: n
*SEM: twoRel[rel=copper_+_cables_+_backslash_+_wires]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_cables_+_backslash_+_wires
*CAT: n
*SEM: orRel[rel=copper_+_cables_+_backslash_+_wires]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_terminal_+_lug
*CAT: n
*SEM: unaryRel[rel=copper_+_terminal_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=copper_+_terminal_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=copper_+_terminal_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_terminal_+_lug
*CAT: n
*SEM: orRel[rel=copper_+_terminal_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_wire
*CAT: n
*SEM: unaryRel[rel=copper_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_wire
*CAT: n
*SEM: twoRel[rel=copper_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_wire
*CAT: n
*SEM: twoRel[rel=copper_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: copper_+_wire
*CAT: n
*SEM: orRel[rel=copper_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coupling
*CAT: n
*SEM: unaryRel[rel=coupling]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coupling
*CAT: n
*SEM: twoRel[rel=coupling]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coupling
*CAT: n
*SEM: twoRel[rel=coupling]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: coupling
*CAT: n
*SEM: orRel[rel=coupling]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crew_+_rest_+_compartment
*CAT: n
*SEM: unaryRel[rel=crew_+_rest_+_compartment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crew_+_rest_+_compartment
*CAT: n
*SEM: twoRel[rel=crew_+_rest_+_compartment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crew_+_rest_+_compartment
*CAT: n
*SEM: twoRel[rel=crew_+_rest_+_compartment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crew_+_rest_+_compartment
*CAT: n
*SEM: orRel[rel=crew_+_rest_+_compartment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crimped_+_cap
*CAT: n
*SEM: unaryRel[rel=crimped_+_cap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crimped_+_cap
*CAT: n
*SEM: twoRel[rel=crimped_+_cap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crimped_+_cap
*CAT: n
*SEM: twoRel[rel=crimped_+_cap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crimped_+_cap
*CAT: n
*SEM: orRel[rel=crimped_+_cap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crimped_+_cap_+_nsa936601
*CAT: n
*SEM: unaryRel[rel=crimped_+_cap_+_nsa936601]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crimped_+_cap_+_nsa936601
*CAT: n
*SEM: twoRel[rel=crimped_+_cap_+_nsa936601]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crimped_+_cap_+_nsa936601
*CAT: n
*SEM: twoRel[rel=crimped_+_cap_+_nsa936601]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crimped_+_cap_+_nsa936601
*CAT: n
*SEM: orRel[rel=crimped_+_cap_+_nsa936601]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cross_+_-_+_junction
*CAT: n
*SEM: unaryRel[rel=cross_+_-_+_junction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cross_+_-_+_junction
*CAT: n
*SEM: twoRel[rel=cross_+_-_+_junction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cross_+_-_+_junction
*CAT: n
*SEM: twoRel[rel=cross_+_-_+_junction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cross_+_-_+_junction
*CAT: n
*SEM: orRel[rel=cross_+_-_+_junction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cross_+_connection
*CAT: n
*SEM: unaryRel[rel=cross_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cross_+_connection
*CAT: n
*SEM: twoRel[rel=cross_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cross_+_connection
*CAT: n
*SEM: twoRel[rel=cross_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cross_+_connection
*CAT: n
*SEM: orRel[rel=cross_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossbeams_+_in_+_confined_+_areas
*CAT: n
*SEM: unaryRel[rel=crossbeams_+_in_+_confined_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossbeams_+_in_+_confined_+_areas
*CAT: n
*SEM: twoRel[rel=crossbeams_+_in_+_confined_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossbeams_+_in_+_confined_+_areas
*CAT: n
*SEM: twoRel[rel=crossbeams_+_in_+_confined_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossbeams_+_in_+_confined_+_areas
*CAT: n
*SEM: orRel[rel=crossbeams_+_in_+_confined_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossing_+_routes
*CAT: n
*SEM: unaryRel[rel=crossing_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossing_+_routes
*CAT: n
*SEM: twoRel[rel=crossing_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossing_+_routes
*CAT: n
*SEM: twoRel[rel=crossing_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: crossing_+_routes
*CAT: n
*SEM: orRel[rel=crossing_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: current_+_carrying_+_screwed_+_fastener
*CAT: n
*SEM: unaryRel[rel=current_+_carrying_+_screwed_+_fastener]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: current_+_carrying_+_screwed_+_fastener
*CAT: n
*SEM: twoRel[rel=current_+_carrying_+_screwed_+_fastener]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: current_+_carrying_+_screwed_+_fastener
*CAT: n
*SEM: twoRel[rel=current_+_carrying_+_screwed_+_fastener]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: current_+_carrying_+_screwed_+_fastener
*CAT: n
*SEM: orRel[rel=current_+_carrying_+_screwed_+_fastener]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire
*CAT: n
*SEM: unaryRel[rel=cut_+_of_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire
*CAT: n
*SEM: twoRel[rel=cut_+_of_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire
*CAT: n
*SEM: twoRel[rel=cut_+_of_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire
*CAT: n
*SEM: orRel[rel=cut_+_of_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_a_+_clearance_+_of_+_l_+_+10_+_mm
*CAT: n
*SEM: unaryRel[rel=cut_+_of_+_wire_+_a_+_clearance_+_of_+_l_+_+10_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_a_+_clearance_+_of_+_l_+_+10_+_mm
*CAT: n
*SEM: twoRel[rel=cut_+_of_+_wire_+_a_+_clearance_+_of_+_l_+_+10_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_a_+_clearance_+_of_+_l_+_+10_+_mm
*CAT: n
*SEM: twoRel[rel=cut_+_of_+_wire_+_a_+_clearance_+_of_+_l_+_+10_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_a_+_clearance_+_of_+_l_+_+10_+_mm
*CAT: n
*SEM: orRel[rel=cut_+_of_+_wire_+_a_+_clearance_+_of_+_l_+_+10_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_a_+_clearance_+_of_+_l+10mm
*CAT: n
*SEM: unaryRel[rel=cut_+_of_+_wire_+_a_+_clearance_+_of_+_l+10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_a_+_clearance_+_of_+_l+10mm
*CAT: n
*SEM: twoRel[rel=cut_+_of_+_wire_+_a_+_clearance_+_of_+_l+10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_a_+_clearance_+_of_+_l+10mm
*CAT: n
*SEM: twoRel[rel=cut_+_of_+_wire_+_a_+_clearance_+_of_+_l+10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_a_+_clearance_+_of_+_l+10mm
*CAT: n
*SEM: orRel[rel=cut_+_of_+_wire_+_a_+_clearance_+_of_+_l+10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_in_+_horizontal_+_direction
*CAT: n
*SEM: unaryRel[rel=cut_+_of_+_wire_+_in_+_horizontal_+_direction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_in_+_horizontal_+_direction
*CAT: n
*SEM: twoRel[rel=cut_+_of_+_wire_+_in_+_horizontal_+_direction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_in_+_horizontal_+_direction
*CAT: n
*SEM: twoRel[rel=cut_+_of_+_wire_+_in_+_horizontal_+_direction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_in_+_horizontal_+_direction
*CAT: n
*SEM: orRel[rel=cut_+_of_+_wire_+_in_+_horizontal_+_direction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_in_+_vertical_+_direction
*CAT: n
*SEM: unaryRel[rel=cut_+_of_+_wire_+_in_+_vertical_+_direction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_in_+_vertical_+_direction
*CAT: n
*SEM: twoRel[rel=cut_+_of_+_wire_+_in_+_vertical_+_direction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_in_+_vertical_+_direction
*CAT: n
*SEM: twoRel[rel=cut_+_of_+_wire_+_in_+_vertical_+_direction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cut_+_of_+_wire_+_in_+_vertical_+_direction
*CAT: n
*SEM: orRel[rel=cut_+_of_+_wire_+_in_+_vertical_+_direction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__+_greaterthan_+__+_equalto_+__+_13mm
*CAT: n
*SEM: unaryRel[rel=d_+__+_greaterthan_+__+_equalto_+__+_13mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__+_greaterthan_+__+_equalto_+__+_13mm
*CAT: n
*SEM: twoRel[rel=d_+__+_greaterthan_+__+_equalto_+__+_13mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__+_greaterthan_+__+_equalto_+__+_13mm
*CAT: n
*SEM: twoRel[rel=d_+__+_greaterthan_+__+_equalto_+__+_13mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+__+_greaterthan_+__+_equalto_+__+_13mm
*CAT: n
*SEM: orRel[rel=d_+__+_greaterthan_+__+_equalto_+__+_13mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+__+_equalto_+__+_25mm
*CAT: n
*SEM: unaryRel[rel=d_+_greaterthan_+__+_equalto_+__+_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+__+_equalto_+__+_25mm
*CAT: n
*SEM: twoRel[rel=d_+_greaterthan_+__+_equalto_+__+_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+__+_equalto_+__+_25mm
*CAT: n
*SEM: twoRel[rel=d_+_greaterthan_+__+_equalto_+__+_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+__+_equalto_+__+_25mm
*CAT: n
*SEM: orRel[rel=d_+_greaterthan_+__+_equalto_+__+_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+__+_equalto_+_150mm
*CAT: n
*SEM: unaryRel[rel=d_+_greaterthan_+__+_equalto_+_150mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+__+_equalto_+_150mm
*CAT: n
*SEM: twoRel[rel=d_+_greaterthan_+__+_equalto_+_150mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+__+_equalto_+_150mm
*CAT: n
*SEM: twoRel[rel=d_+_greaterthan_+__+_equalto_+_150mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+__+_equalto_+_150mm
*CAT: n
*SEM: orRel[rel=d_+_greaterthan_+__+_equalto_+_150mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+__+_equalto_+_50mm
*CAT: n
*SEM: unaryRel[rel=d_+_greaterthan_+__+_equalto_+_50mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+__+_equalto_+_50mm
*CAT: n
*SEM: twoRel[rel=d_+_greaterthan_+__+_equalto_+_50mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+__+_equalto_+_50mm
*CAT: n
*SEM: twoRel[rel=d_+_greaterthan_+__+_equalto_+_50mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+__+_equalto_+_50mm
*CAT: n
*SEM: orRel[rel=d_+_greaterthan_+__+_equalto_+_50mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+_equalto_+_13mm
*CAT: n
*SEM: unaryRel[rel=d_+_greaterthan_+_equalto_+_13mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+_equalto_+_13mm
*CAT: n
*SEM: twoRel[rel=d_+_greaterthan_+_equalto_+_13mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+_equalto_+_13mm
*CAT: n
*SEM: twoRel[rel=d_+_greaterthan_+_equalto_+_13mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+_equalto_+_13mm
*CAT: n
*SEM: orRel[rel=d_+_greaterthan_+_equalto_+_13mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+_equalto_+_150mm
*CAT: n
*SEM: unaryRel[rel=d_+_greaterthan_+_equalto_+_150mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+_equalto_+_150mm
*CAT: n
*SEM: twoRel[rel=d_+_greaterthan_+_equalto_+_150mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+_equalto_+_150mm
*CAT: n
*SEM: twoRel[rel=d_+_greaterthan_+_equalto_+_150mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+_equalto_+_150mm
*CAT: n
*SEM: orRel[rel=d_+_greaterthan_+_equalto_+_150mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+_equalto_+_25mm
*CAT: n
*SEM: unaryRel[rel=d_+_greaterthan_+_equalto_+_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+_equalto_+_25mm
*CAT: n
*SEM: twoRel[rel=d_+_greaterthan_+_equalto_+_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+_equalto_+_25mm
*CAT: n
*SEM: twoRel[rel=d_+_greaterthan_+_equalto_+_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+_equalto_+_25mm
*CAT: n
*SEM: orRel[rel=d_+_greaterthan_+_equalto_+_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+_equalto_+_50mm
*CAT: n
*SEM: unaryRel[rel=d_+_greaterthan_+_equalto_+_50mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+_equalto_+_50mm
*CAT: n
*SEM: twoRel[rel=d_+_greaterthan_+_equalto_+_50mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+_equalto_+_50mm
*CAT: n
*SEM: twoRel[rel=d_+_greaterthan_+_equalto_+_50mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: d_+_greaterthan_+_equalto_+_50mm
*CAT: n
*SEM: orRel[rel=d_+_greaterthan_+_equalto_+_50mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dash_+_-20_+__+_ampersand_+__+_-24_+_sizes_+_where_+_high_+_deflection_+_levels
*CAT: n
*SEM: unaryRel[rel=dash_+_-20_+__+_ampersand_+__+_-24_+_sizes_+_where_+_high_+_deflection_+_levels]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dash_+_-20_+__+_ampersand_+__+_-24_+_sizes_+_where_+_high_+_deflection_+_levels
*CAT: n
*SEM: twoRel[rel=dash_+_-20_+__+_ampersand_+__+_-24_+_sizes_+_where_+_high_+_deflection_+_levels]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dash_+_-20_+__+_ampersand_+__+_-24_+_sizes_+_where_+_high_+_deflection_+_levels
*CAT: n
*SEM: twoRel[rel=dash_+_-20_+__+_ampersand_+__+_-24_+_sizes_+_where_+_high_+_deflection_+_levels]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dash_+_-20_+__+_ampersand_+__+_-24_+_sizes_+_where_+_high_+_deflection_+_levels
*CAT: n
*SEM: orRel[rel=dash_+_-20_+__+_ampersand_+__+_-24_+_sizes_+_where_+_high_+_deflection_+_levels]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dash_+_-20_+_ampersand_+_-24_+_sizes_+_where_+_high_+_deflection_+_levels
*CAT: n
*SEM: unaryRel[rel=dash_+_-20_+_ampersand_+_-24_+_sizes_+_where_+_high_+_deflection_+_levels]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dash_+_-20_+_ampersand_+_-24_+_sizes_+_where_+_high_+_deflection_+_levels
*CAT: n
*SEM: twoRel[rel=dash_+_-20_+_ampersand_+_-24_+_sizes_+_where_+_high_+_deflection_+_levels]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dash_+_-20_+_ampersand_+_-24_+_sizes_+_where_+_high_+_deflection_+_levels
*CAT: n
*SEM: twoRel[rel=dash_+_-20_+_ampersand_+_-24_+_sizes_+_where_+_high_+_deflection_+_levels]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dash_+_-20_+_ampersand_+_-24_+_sizes_+_where_+_high_+_deflection_+_levels
*CAT: n
*SEM: orRel[rel=dash_+_-20_+_ampersand_+_-24_+_sizes_+_where_+_high_+_deflection_+_levels]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: databus_+_wire
*CAT: n
*SEM: unaryRel[rel=databus_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: databus_+_wire
*CAT: n
*SEM: twoRel[rel=databus_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: databus_+_wire
*CAT: n
*SEM: twoRel[rel=databus_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: databus_+_wire
*CAT: n
*SEM: orRel[rel=databus_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point_+__+_opensb_+_network_+_1
*CAT: n
*SEM: unaryRel[rel=dedicated_+_attachment_+_point_+__+_opensb_+_network_+_1]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point_+__+_opensb_+_network_+_1
*CAT: n
*SEM: twoRel[rel=dedicated_+_attachment_+_point_+__+_opensb_+_network_+_1]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point_+__+_opensb_+_network_+_1
*CAT: n
*SEM: twoRel[rel=dedicated_+_attachment_+_point_+__+_opensb_+_network_+_1]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point_+__+_opensb_+_network_+_1
*CAT: n
*SEM: orRel[rel=dedicated_+_attachment_+_point_+__+_opensb_+_network_+_1]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point_+_opensb_+_network_+_1
*CAT: n
*SEM: unaryRel[rel=dedicated_+_attachment_+_point_+_opensb_+_network_+_1]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point_+_opensb_+_network_+_1
*CAT: n
*SEM: twoRel[rel=dedicated_+_attachment_+_point_+_opensb_+_network_+_1]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point_+_opensb_+_network_+_1
*CAT: n
*SEM: twoRel[rel=dedicated_+_attachment_+_point_+_opensb_+_network_+_1]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_attachment_+_point_+_opensb_+_network_+_1
*CAT: n
*SEM: orRel[rel=dedicated_+_attachment_+_point_+_opensb_+_network_+_1]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_connector_+_plate
*CAT: n
*SEM: unaryRel[rel=dedicated_+_connector_+_plate]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_connector_+_plate
*CAT: n
*SEM: twoRel[rel=dedicated_+_connector_+_plate]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_connector_+_plate
*CAT: n
*SEM: twoRel[rel=dedicated_+_connector_+_plate]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_connector_+_plate
*CAT: n
*SEM: orRel[rel=dedicated_+_connector_+_plate]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_nsa937901_+_virtual_+_modul_+_rail
*CAT: n
*SEM: unaryRel[rel=dedicated_+_nsa937901_+_virtual_+_modul_+_rail]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_nsa937901_+_virtual_+_modul_+_rail
*CAT: n
*SEM: twoRel[rel=dedicated_+_nsa937901_+_virtual_+_modul_+_rail]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_nsa937901_+_virtual_+_modul_+_rail
*CAT: n
*SEM: twoRel[rel=dedicated_+_nsa937901_+_virtual_+_modul_+_rail]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_nsa937901_+_virtual_+_modul_+_rail
*CAT: n
*SEM: orRel[rel=dedicated_+_nsa937901_+_virtual_+_modul_+_rail]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=dedicated_+_virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=dedicated_+_virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=dedicated_+_virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_
*CAT: n
*SEM: orRel[rel=dedicated_+_virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_for_+_each_+_route
*CAT: n
*SEM: unaryRel[rel=dedicated_+_virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_for_+_each_+_route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_for_+_each_+_route
*CAT: n
*SEM: twoRel[rel=dedicated_+_virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_for_+_each_+_route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_for_+_each_+_route
*CAT: n
*SEM: twoRel[rel=dedicated_+_virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_for_+_each_+_route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dedicated_+_virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_for_+_each_+_route
*CAT: n
*SEM: orRel[rel=dedicated_+_virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_for_+_each_+_route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier
*CAT: n
*SEM: unaryRel[rel=definition_+_dossier]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier
*CAT: n
*SEM: twoRel[rel=definition_+_dossier]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier
*CAT: n
*SEM: twoRel[rel=definition_+_dossier]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier
*CAT: n
*SEM: orRel[rel=definition_+_dossier]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: derivation
*CAT: n
*SEM: unaryRel[rel=derivation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: derivation
*CAT: n
*SEM: twoRel[rel=derivation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: derivation
*CAT: n
*SEM: twoRel[rel=derivation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: derivation
*CAT: n
*SEM: orRel[rel=derivation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detoriation
*CAT: n
*SEM: unaryRel[rel=detoriation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detoriation
*CAT: n
*SEM: twoRel[rel=detoriation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detoriation
*CAT: n
*SEM: twoRel[rel=detoriation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detoriation
*CAT: n
*SEM: orRel[rel=detoriation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: development_+_aircraft
*CAT: n
*SEM: unaryRel[rel=development_+_aircraft]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: development_+_aircraft
*CAT: n
*SEM: twoRel[rel=development_+_aircraft]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: development_+_aircraft
*CAT: n
*SEM: twoRel[rel=development_+_aircraft]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: development_+_aircraft
*CAT: n
*SEM: orRel[rel=development_+_aircraft]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_d_+_is_+_d_+_greaterthan_+__+_equalto_+__+_35mm
*CAT: n
*SEM: unaryRel[rel=diameter_+_d_+_is_+_d_+_greaterthan_+__+_equalto_+__+_35mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_d_+_is_+_d_+_greaterthan_+__+_equalto_+__+_35mm
*CAT: n
*SEM: twoRel[rel=diameter_+_d_+_is_+_d_+_greaterthan_+__+_equalto_+__+_35mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_d_+_is_+_d_+_greaterthan_+__+_equalto_+__+_35mm
*CAT: n
*SEM: twoRel[rel=diameter_+_d_+_is_+_d_+_greaterthan_+__+_equalto_+__+_35mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_d_+_is_+_d_+_greaterthan_+__+_equalto_+__+_35mm
*CAT: n
*SEM: orRel[rel=diameter_+_d_+_is_+_d_+_greaterthan_+__+_equalto_+__+_35mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_d_+_is_+_d_+_greaterthan_+_equalto_+_35mm
*CAT: n
*SEM: unaryRel[rel=diameter_+_d_+_is_+_d_+_greaterthan_+_equalto_+_35mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_d_+_is_+_d_+_greaterthan_+_equalto_+_35mm
*CAT: n
*SEM: twoRel[rel=diameter_+_d_+_is_+_d_+_greaterthan_+_equalto_+_35mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_d_+_is_+_d_+_greaterthan_+_equalto_+_35mm
*CAT: n
*SEM: twoRel[rel=diameter_+_d_+_is_+_d_+_greaterthan_+_equalto_+_35mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_d_+_is_+_d_+_greaterthan_+_equalto_+_35mm
*CAT: n
*SEM: orRel[rel=diameter_+_d_+_is_+_d_+_greaterthan_+_equalto_+_35mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_backslash_+_section
*CAT: n
*SEM: unaryRel[rel=diameter_+_backslash_+_section]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_backslash_+_section
*CAT: n
*SEM: twoRel[rel=diameter_+_backslash_+_section]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_backslash_+_section
*CAT: n
*SEM: twoRel[rel=diameter_+_backslash_+_section]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diameter_+_backslash_+_section
*CAT: n
*SEM: orRel[rel=diameter_+_backslash_+_section]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_bulkhead_+_unions
*CAT: n
*SEM: unaryRel[rel=different_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=different_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=different_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_bulkhead_+_unions
*CAT: n
*SEM: orRel[rel=different_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_sizes_+_of_+_flexible_+_hose_+_end_+_unions
*CAT: n
*SEM: unaryRel[rel=different_+_sizes_+_of_+_flexible_+_hose_+_end_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_sizes_+_of_+_flexible_+_hose_+_end_+_unions
*CAT: n
*SEM: twoRel[rel=different_+_sizes_+_of_+_flexible_+_hose_+_end_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_sizes_+_of_+_flexible_+_hose_+_end_+_unions
*CAT: n
*SEM: twoRel[rel=different_+_sizes_+_of_+_flexible_+_hose_+_end_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: different_+_sizes_+_of_+_flexible_+_hose_+_end_+_unions
*CAT: n
*SEM: orRel[rel=different_+_sizes_+_of_+_flexible_+_hose_+_end_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: differently_+_sized_+_pipes
*CAT: n
*SEM: unaryRel[rel=differently_+_sized_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: differently_+_sized_+_pipes
*CAT: n
*SEM: twoRel[rel=differently_+_sized_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: differently_+_sized_+_pipes
*CAT: n
*SEM: twoRel[rel=differently_+_sized_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: differently_+_sized_+_pipes
*CAT: n
*SEM: orRel[rel=differently_+_sized_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diode
*CAT: n
*SEM: unaryRel[rel=diode]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diode
*CAT: n
*SEM: twoRel[rel=diode]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diode
*CAT: n
*SEM: twoRel[rel=diode]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: diode
*CAT: n
*SEM: orRel[rel=diode]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance
*CAT: n
*SEM: unaryRel[rel=distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance
*CAT: n
*SEM: twoRel[rel=distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance
*CAT: n
*SEM: twoRel[rel=distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance
*CAT: n
*SEM: orRel[rel=distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distortion_+_areas
*CAT: n
*SEM: unaryRel[rel=distortion_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distortion_+_areas
*CAT: n
*SEM: twoRel[rel=distortion_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distortion_+_areas
*CAT: n
*SEM: twoRel[rel=distortion_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distortion_+_areas
*CAT: n
*SEM: orRel[rel=distortion_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: divergent_+_tapering
*CAT: n
*SEM: unaryRel[rel=divergent_+_tapering]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: divergent_+_tapering
*CAT: n
*SEM: twoRel[rel=divergent_+_tapering]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: divergent_+_tapering
*CAT: n
*SEM: twoRel[rel=divergent_+_tapering]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: divergent_+_tapering
*CAT: n
*SEM: orRel[rel=divergent_+_tapering]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_clamping
*CAT: n
*SEM: unaryRel[rel=double_+_clamping]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_clamping
*CAT: n
*SEM: twoRel[rel=double_+_clamping]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_clamping
*CAT: n
*SEM: twoRel[rel=double_+_clamping]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_clamping
*CAT: n
*SEM: orRel[rel=double_+_clamping]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_derivation
*CAT: n
*SEM: unaryRel[rel=double_+_derivation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_derivation
*CAT: n
*SEM: twoRel[rel=double_+_derivation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_derivation
*CAT: n
*SEM: twoRel[rel=double_+_derivation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_derivation
*CAT: n
*SEM: orRel[rel=double_+_derivation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_staging_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=double_+_staging_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_staging_+_clamp-block
*CAT: n
*SEM: twoRel[rel=double_+_staging_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_staging_+_clamp-block
*CAT: n
*SEM: twoRel[rel=double_+_staging_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_staging_+_clamp-block
*CAT: n
*SEM: orRel[rel=double_+_staging_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_thread_+_unions
*CAT: n
*SEM: unaryRel[rel=double_+_thread_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_thread_+_unions
*CAT: n
*SEM: twoRel[rel=double_+_thread_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_thread_+_unions
*CAT: n
*SEM: twoRel[rel=double_+_thread_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: double_+_thread_+_unions
*CAT: n
*SEM: orRel[rel=double_+_thread_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_bottle
*CAT: n
*SEM: unaryRel[rel=drain_+_bottle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_bottle
*CAT: n
*SEM: twoRel[rel=drain_+_bottle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_bottle
*CAT: n
*SEM: twoRel[rel=drain_+_bottle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_bottle
*CAT: n
*SEM: orRel[rel=drain_+_bottle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_holes
*CAT: n
*SEM: unaryRel[rel=drain_+_holes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_holes
*CAT: n
*SEM: twoRel[rel=drain_+_holes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_holes
*CAT: n
*SEM: twoRel[rel=drain_+_holes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_holes
*CAT: n
*SEM: orRel[rel=drain_+_holes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drained_+_hole
*CAT: n
*SEM: unaryRel[rel=drained_+_hole]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drained_+_hole
*CAT: n
*SEM: twoRel[rel=drained_+_hole]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drained_+_hole
*CAT: n
*SEM: twoRel[rel=drained_+_hole]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drained_+_hole
*CAT: n
*SEM: orRel[rel=drained_+_hole]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire
*CAT: n
*SEM: unaryRel[rel=draw_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire
*CAT: n
*SEM: twoRel[rel=draw_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire
*CAT: n
*SEM: twoRel[rel=draw_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire
*CAT: n
*SEM: orRel[rel=draw_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire_+_only_+_draw_+_wire
*CAT: n
*SEM: unaryRel[rel=draw_+_wire_+_only_+_draw_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire_+_only_+_draw_+_wire
*CAT: n
*SEM: twoRel[rel=draw_+_wire_+_only_+_draw_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire_+_only_+_draw_+_wire
*CAT: n
*SEM: twoRel[rel=draw_+_wire_+_only_+_draw_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: draw_+_wire_+_only_+_draw_+_wire
*CAT: n
*SEM: orRel[rel=draw_+_wire_+_only_+_draw_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawing
*CAT: n
*SEM: unaryRel[rel=drawing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawing
*CAT: n
*SEM: twoRel[rel=drawing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawing
*CAT: n
*SEM: twoRel[rel=drawing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawing
*CAT: n
*SEM: orRel[rel=drawing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawing_+_by_+_type
*CAT: n
*SEM: unaryRel[rel=drawing_+_by_+_type]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawing_+_by_+_type
*CAT: n
*SEM: twoRel[rel=drawing_+_by_+_type]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawing_+_by_+_type
*CAT: n
*SEM: twoRel[rel=drawing_+_by_+_type]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawing_+_by_+_type
*CAT: n
*SEM: orRel[rel=drawing_+_by_+_type]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drilled_+_nuts_+_with_+_lock_+_wire
*CAT: n
*SEM: unaryRel[rel=drilled_+_nuts_+_with_+_lock_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drilled_+_nuts_+_with_+_lock_+_wire
*CAT: n
*SEM: twoRel[rel=drilled_+_nuts_+_with_+_lock_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drilled_+_nuts_+_with_+_lock_+_wire
*CAT: n
*SEM: twoRel[rel=drilled_+_nuts_+_with_+_lock_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drilled_+_nuts_+_with_+_lock_+_wire
*CAT: n
*SEM: orRel[rel=drilled_+_nuts_+_with_+_lock_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop
*CAT: n
*SEM: unaryRel[rel=drip_+_loop]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop
*CAT: n
*SEM: twoRel[rel=drip_+_loop]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop
*CAT: n
*SEM: twoRel[rel=drip_+_loop]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop
*CAT: n
*SEM: orRel[rel=drip_+_loop]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop_+_at_+_both_+_sides_+_of_+_pressure
*CAT: n
*SEM: unaryRel[rel=drip_+_loop_+_at_+_both_+_sides_+_of_+_pressure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop_+_at_+_both_+_sides_+_of_+_pressure
*CAT: n
*SEM: twoRel[rel=drip_+_loop_+_at_+_both_+_sides_+_of_+_pressure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop_+_at_+_both_+_sides_+_of_+_pressure
*CAT: n
*SEM: twoRel[rel=drip_+_loop_+_at_+_both_+_sides_+_of_+_pressure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop_+_at_+_both_+_sides_+_of_+_pressure
*CAT: n
*SEM: orRel[rel=drip_+_loop_+_at_+_both_+_sides_+_of_+_pressure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop_+_inside_+_vu
*CAT: n
*SEM: unaryRel[rel=drip_+_loop_+_inside_+_vu]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop_+_inside_+_vu
*CAT: n
*SEM: twoRel[rel=drip_+_loop_+_inside_+_vu]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop_+_inside_+_vu
*CAT: n
*SEM: twoRel[rel=drip_+_loop_+_inside_+_vu]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drip_+_loop_+_inside_+_vu
*CAT: n
*SEM: orRel[rel=drip_+_loop_+_inside_+_vu]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: duct
*CAT: n
*SEM: unaryRel[rel=duct]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: duct
*CAT: n
*SEM: twoRel[rel=duct]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: duct
*CAT: n
*SEM: twoRel[rel=duct]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: duct
*CAT: n
*SEM: orRel[rel=duct]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dummy_+_contact
*CAT: n
*SEM: unaryRel[rel=dummy_+_contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dummy_+_contact
*CAT: n
*SEM: twoRel[rel=dummy_+_contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dummy_+_contact
*CAT: n
*SEM: twoRel[rel=dummy_+_contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dummy_+_contact
*CAT: n
*SEM: orRel[rel=dummy_+_contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dummy_+_plugs
*CAT: n
*SEM: unaryRel[rel=dummy_+_plugs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dummy_+_plugs
*CAT: n
*SEM: twoRel[rel=dummy_+_plugs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dummy_+_plugs
*CAT: n
*SEM: twoRel[rel=dummy_+_plugs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dummy_+_plugs
*CAT: n
*SEM: orRel[rel=dummy_+_plugs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dynamic_+_bundle
*CAT: n
*SEM: unaryRel[rel=dynamic_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dynamic_+_bundle
*CAT: n
*SEM: twoRel[rel=dynamic_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dynamic_+_bundle
*CAT: n
*SEM: twoRel[rel=dynamic_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: dynamic_+_bundle
*CAT: n
*SEM: orRel[rel=dynamic_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e_+_routes
*CAT: n
*SEM: unaryRel[rel=e_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e_+_routes
*CAT: n
*SEM: twoRel[rel=e_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e_+_routes
*CAT: n
*SEM: twoRel[rel=e_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e_+_routes
*CAT: n
*SEM: orRel[rel=e_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e-route
*CAT: n
*SEM: unaryRel[rel=e-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e-route
*CAT: n
*SEM: twoRel[rel=e-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e-route
*CAT: n
*SEM: twoRel[rel=e-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e-route
*CAT: n
*SEM: orRel[rel=e-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_stainless_+_steel_+_boxes
*CAT: n
*SEM: unaryRel[rel=e.g._+_stainless_+_steel_+_boxes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_stainless_+_steel_+_boxes
*CAT: n
*SEM: twoRel[rel=e.g._+_stainless_+_steel_+_boxes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_stainless_+_steel_+_boxes
*CAT: n
*SEM: twoRel[rel=e.g._+_stainless_+_steel_+_boxes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: e.g._+_stainless_+_steel_+_boxes
*CAT: n
*SEM: orRel[rel=e.g._+_stainless_+_steel_+_boxes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_braided_+_bundle
*CAT: n
*SEM: unaryRel[rel=each_+_braided_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_braided_+_bundle
*CAT: n
*SEM: twoRel[rel=each_+_braided_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_braided_+_bundle
*CAT: n
*SEM: twoRel[rel=each_+_braided_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_braided_+_bundle
*CAT: n
*SEM: orRel[rel=each_+_braided_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_cable
*CAT: n
*SEM: unaryRel[rel=each_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_cable
*CAT: n
*SEM: twoRel[rel=each_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_cable
*CAT: n
*SEM: twoRel[rel=each_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_cable
*CAT: n
*SEM: orRel[rel=each_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_e-route
*CAT: n
*SEM: unaryRel[rel=each_+_e-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_e-route
*CAT: n
*SEM: twoRel[rel=each_+_e-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_e-route
*CAT: n
*SEM: twoRel[rel=each_+_e-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_e-route
*CAT: n
*SEM: orRel[rel=each_+_e-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_electrical_+_network
*CAT: n
*SEM: unaryRel[rel=each_+_electrical_+_network]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_electrical_+_network
*CAT: n
*SEM: twoRel[rel=each_+_electrical_+_network]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_electrical_+_network
*CAT: n
*SEM: twoRel[rel=each_+_electrical_+_network]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_electrical_+_network
*CAT: n
*SEM: orRel[rel=each_+_electrical_+_network]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_feeder_+_wire
*CAT: n
*SEM: unaryRel[rel=each_+_feeder_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_feeder_+_wire
*CAT: n
*SEM: twoRel[rel=each_+_feeder_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_feeder_+_wire
*CAT: n
*SEM: twoRel[rel=each_+_feeder_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_feeder_+_wire
*CAT: n
*SEM: orRel[rel=each_+_feeder_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_g-route
*CAT: n
*SEM: unaryRel[rel=each_+_g-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_g-route
*CAT: n
*SEM: twoRel[rel=each_+_g-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_g-route
*CAT: n
*SEM: twoRel[rel=each_+_g-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_g-route
*CAT: n
*SEM: orRel[rel=each_+_g-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_metallic_+_part
*CAT: n
*SEM: unaryRel[rel=each_+_metallic_+_part]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_metallic_+_part
*CAT: n
*SEM: twoRel[rel=each_+_metallic_+_part]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_metallic_+_part
*CAT: n
*SEM: twoRel[rel=each_+_metallic_+_part]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_metallic_+_part
*CAT: n
*SEM: orRel[rel=each_+_metallic_+_part]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_route_+_category
*CAT: n
*SEM: unaryRel[rel=each_+_route_+_category]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_route_+_category
*CAT: n
*SEM: twoRel[rel=each_+_route_+_category]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_route_+_category
*CAT: n
*SEM: twoRel[rel=each_+_route_+_category]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_route_+_category
*CAT: n
*SEM: orRel[rel=each_+_route_+_category]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_single_+_wire
*CAT: n
*SEM: unaryRel[rel=each_+_single_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_single_+_wire
*CAT: n
*SEM: twoRel[rel=each_+_single_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_single_+_wire
*CAT: n
*SEM: twoRel[rel=each_+_single_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: each_+_single_+_wire
*CAT: n
*SEM: orRel[rel=each_+_single_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs
*CAT: n
*SEM: unaryRel[rel=efcs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs
*CAT: n
*SEM: twoRel[rel=efcs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs
*CAT: n
*SEM: twoRel[rel=efcs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs
*CAT: n
*SEM: orRel[rel=efcs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_circuits
*CAT: n
*SEM: unaryRel[rel=efcs_+_circuits]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_circuits
*CAT: n
*SEM: twoRel[rel=efcs_+_circuits]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_circuits
*CAT: n
*SEM: twoRel[rel=efcs_+_circuits]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_circuits
*CAT: n
*SEM: orRel[rel=efcs_+_circuits]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_connector
*CAT: n
*SEM: unaryRel[rel=efcs_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_connector
*CAT: n
*SEM: twoRel[rel=efcs_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_connector
*CAT: n
*SEM: twoRel[rel=efcs_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_connector
*CAT: n
*SEM: orRel[rel=efcs_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_moduls
*CAT: n
*SEM: unaryRel[rel=efcs_+_moduls]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_moduls
*CAT: n
*SEM: twoRel[rel=efcs_+_moduls]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_moduls
*CAT: n
*SEM: twoRel[rel=efcs_+_moduls]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_moduls
*CAT: n
*SEM: orRel[rel=efcs_+_moduls]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=efcs_+_virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=efcs_+_virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=efcs_+_virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: orRel[rel=efcs_+_virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=efcs_+_virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=efcs_+_virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=efcs_+_virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: efcs_+_virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: orRel[rel=efcs_+_virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ejection_+_port_+_tee_+_-_+_junction
*CAT: n
*SEM: unaryRel[rel=ejection_+_port_+_tee_+_-_+_junction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ejection_+_port_+_tee_+_-_+_junction
*CAT: n
*SEM: twoRel[rel=ejection_+_port_+_tee_+_-_+_junction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ejection_+_port_+_tee_+_-_+_junction
*CAT: n
*SEM: twoRel[rel=ejection_+_port_+_tee_+_-_+_junction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ejection_+_port_+_tee_+_-_+_junction
*CAT: n
*SEM: orRel[rel=ejection_+_port_+_tee_+_-_+_junction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ejection_+_port_+_tee-_+_junction
*CAT: n
*SEM: unaryRel[rel=ejection_+_port_+_tee-_+_junction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ejection_+_port_+_tee-_+_junction
*CAT: n
*SEM: twoRel[rel=ejection_+_port_+_tee-_+_junction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ejection_+_port_+_tee-_+_junction
*CAT: n
*SEM: twoRel[rel=ejection_+_port_+_tee-_+_junction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ejection_+_port_+_tee-_+_junction
*CAT: n
*SEM: orRel[rel=ejection_+_port_+_tee-_+_junction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elbow_+_back_+_shell_+_orientation
*CAT: n
*SEM: unaryRel[rel=elbow_+_back_+_shell_+_orientation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elbow_+_back_+_shell_+_orientation
*CAT: n
*SEM: twoRel[rel=elbow_+_back_+_shell_+_orientation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elbow_+_back_+_shell_+_orientation
*CAT: n
*SEM: twoRel[rel=elbow_+_back_+_shell_+_orientation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elbow_+_back_+_shell_+_orientation
*CAT: n
*SEM: orRel[rel=elbow_+_back_+_shell_+_orientation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elbow_+_unions
*CAT: n
*SEM: unaryRel[rel=elbow_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elbow_+_unions
*CAT: n
*SEM: twoRel[rel=elbow_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elbow_+_unions
*CAT: n
*SEM: twoRel[rel=elbow_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elbow_+_unions
*CAT: n
*SEM: orRel[rel=elbow_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_active_+_item
*CAT: n
*SEM: unaryRel[rel=electrical_+_active_+_item]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_active_+_item
*CAT: n
*SEM: twoRel[rel=electrical_+_active_+_item]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_active_+_item
*CAT: n
*SEM: twoRel[rel=electrical_+_active_+_item]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_active_+_item
*CAT: n
*SEM: orRel[rel=electrical_+_active_+_item]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle_+_without_+_additional_+_protection
*CAT: n
*SEM: unaryRel[rel=electrical_+_bundle_+_without_+_additional_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle_+_without_+_additional_+_protection
*CAT: n
*SEM: twoRel[rel=electrical_+_bundle_+_without_+_additional_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle_+_without_+_additional_+_protection
*CAT: n
*SEM: twoRel[rel=electrical_+_bundle_+_without_+_additional_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_bundle_+_without_+_additional_+_protection
*CAT: n
*SEM: orRel[rel=electrical_+_bundle_+_without_+_additional_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_component
*CAT: n
*SEM: unaryRel[rel=electrical_+_component]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_component
*CAT: n
*SEM: twoRel[rel=electrical_+_component]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_component
*CAT: n
*SEM: twoRel[rel=electrical_+_component]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_component
*CAT: n
*SEM: orRel[rel=electrical_+_component]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: unaryRel[rel=electrical_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: twoRel[rel=electrical_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: twoRel[rel=electrical_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: orRel[rel=electrical_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_installation
*CAT: n
*SEM: unaryRel[rel=electrical_+_installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_installation
*CAT: n
*SEM: twoRel[rel=electrical_+_installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_installation
*CAT: n
*SEM: twoRel[rel=electrical_+_installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_installation
*CAT: n
*SEM: orRel[rel=electrical_+_installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_item
*CAT: n
*SEM: unaryRel[rel=electrical_+_item]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_item
*CAT: n
*SEM: twoRel[rel=electrical_+_item]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_item
*CAT: n
*SEM: twoRel[rel=electrical_+_item]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_item
*CAT: n
*SEM: orRel[rel=electrical_+_item]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_network
*CAT: n
*SEM: unaryRel[rel=electrical_+_network]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_network
*CAT: n
*SEM: twoRel[rel=electrical_+_network]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_network
*CAT: n
*SEM: twoRel[rel=electrical_+_network]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_network
*CAT: n
*SEM: orRel[rel=electrical_+_network]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_protection
*CAT: n
*SEM: unaryRel[rel=electrical_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_protection
*CAT: n
*SEM: twoRel[rel=electrical_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_protection
*CAT: n
*SEM: twoRel[rel=electrical_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_protection
*CAT: n
*SEM: orRel[rel=electrical_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_shock_+_protection
*CAT: n
*SEM: unaryRel[rel=electrical_+_shock_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_shock_+_protection
*CAT: n
*SEM: twoRel[rel=electrical_+_shock_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_shock_+_protection
*CAT: n
*SEM: twoRel[rel=electrical_+_shock_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electrical_+_shock_+_protection
*CAT: n
*SEM: orRel[rel=electrical_+_shock_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electro-chemical_+_compatibility
*CAT: n
*SEM: unaryRel[rel=electro-chemical_+_compatibility]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electro-chemical_+_compatibility
*CAT: n
*SEM: twoRel[rel=electro-chemical_+_compatibility]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electro-chemical_+_compatibility
*CAT: n
*SEM: twoRel[rel=electro-chemical_+_compatibility]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: electro-chemical_+_compatibility
*CAT: n
*SEM: orRel[rel=electro-chemical_+_compatibility]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongated
*CAT: n
*SEM: unaryRel[rel=elongated]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongated
*CAT: n
*SEM: twoRel[rel=elongated]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongated
*CAT: n
*SEM: twoRel[rel=elongated]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongated
*CAT: n
*SEM: orRel[rel=elongated]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongated_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=elongated_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongated_+_clamp-block
*CAT: n
*SEM: twoRel[rel=elongated_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongated_+_clamp-block
*CAT: n
*SEM: twoRel[rel=elongated_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongated_+_clamp-block
*CAT: n
*SEM: orRel[rel=elongated_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: emi_+_protection
*CAT: n
*SEM: unaryRel[rel=emi_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: emi_+_protection
*CAT: n
*SEM: twoRel[rel=emi_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: emi_+_protection
*CAT: n
*SEM: twoRel[rel=emi_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: emi_+_protection
*CAT: n
*SEM: orRel[rel=emi_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_2997_+_connector
*CAT: n
*SEM: unaryRel[rel=en_+_2997_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_2997_+_connector
*CAT: n
*SEM: twoRel[rel=en_+_2997_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_2997_+_connector
*CAT: n
*SEM: twoRel[rel=en_+_2997_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_2997_+_connector
*CAT: n
*SEM: orRel[rel=en_+_2997_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3545_+_connector
*CAT: n
*SEM: unaryRel[rel=en_+_3545_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3545_+_connector
*CAT: n
*SEM: twoRel[rel=en_+_3545_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3545_+_connector
*CAT: n
*SEM: twoRel[rel=en_+_3545_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3545_+_connector
*CAT: n
*SEM: orRel[rel=en_+_3545_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3645
*CAT: n
*SEM: unaryRel[rel=en_+_3645]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3645
*CAT: n
*SEM: twoRel[rel=en_+_3645]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3645
*CAT: n
*SEM: twoRel[rel=en_+_3645]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3645
*CAT: n
*SEM: orRel[rel=en_+_3645]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646_+_connector
*CAT: n
*SEM: unaryRel[rel=en_+_3646_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646_+_connector
*CAT: n
*SEM: twoRel[rel=en_+_3646_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646_+_connector
*CAT: n
*SEM: twoRel[rel=en_+_3646_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646_+_connector
*CAT: n
*SEM: orRel[rel=en_+_3646_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646-11_+_stowage_+_receptable
*CAT: n
*SEM: unaryRel[rel=en_+_3646-11_+_stowage_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646-11_+_stowage_+_receptable
*CAT: n
*SEM: twoRel[rel=en_+_3646-11_+_stowage_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646-11_+_stowage_+_receptable
*CAT: n
*SEM: twoRel[rel=en_+_3646-11_+_stowage_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_3646-11_+_stowage_+_receptable
*CAT: n
*SEM: orRel[rel=en_+_3646-11_+_stowage_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_4674_+_emi_+_split_+_conduit
*CAT: n
*SEM: unaryRel[rel=en_+_4674_+_emi_+_split_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_4674_+_emi_+_split_+_conduit
*CAT: n
*SEM: twoRel[rel=en_+_4674_+_emi_+_split_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_4674_+_emi_+_split_+_conduit
*CAT: n
*SEM: twoRel[rel=en_+_4674_+_emi_+_split_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_4674_+_emi_+_split_+_conduit
*CAT: n
*SEM: orRel[rel=en_+_4674_+_emi_+_split_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049_+_split_+_conduit
*CAT: n
*SEM: unaryRel[rel=en_+_6049_+_split_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049_+_split_+_conduit
*CAT: n
*SEM: twoRel[rel=en_+_6049_+_split_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049_+_split_+_conduit
*CAT: n
*SEM: twoRel[rel=en_+_6049_+_split_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049_+_split_+_conduit
*CAT: n
*SEM: orRel[rel=en_+_6049_+_split_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049-009_+_open_+_sleeve
*CAT: n
*SEM: unaryRel[rel=en_+_6049-009_+_open_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049-009_+_open_+_sleeve
*CAT: n
*SEM: twoRel[rel=en_+_6049-009_+_open_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049-009_+_open_+_sleeve
*CAT: n
*SEM: twoRel[rel=en_+_6049-009_+_open_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_6049-009_+_open_+_sleeve
*CAT: n
*SEM: orRel[rel=en_+_6049-009_+_open_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_60498_+_closesb
*CAT: n
*SEM: unaryRel[rel=en_+_60498_+_closesb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_60498_+_closesb
*CAT: n
*SEM: twoRel[rel=en_+_60498_+_closesb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_60498_+_closesb
*CAT: n
*SEM: twoRel[rel=en_+_60498_+_closesb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en_+_60498_+_closesb
*CAT: n
*SEM: orRel[rel=en_+_60498_+_closesb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3646-009_+_protective_+_cap
*CAT: n
*SEM: unaryRel[rel=en3646-009_+_protective_+_cap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3646-009_+_protective_+_cap
*CAT: n
*SEM: twoRel[rel=en3646-009_+_protective_+_cap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3646-009_+_protective_+_cap
*CAT: n
*SEM: twoRel[rel=en3646-009_+_protective_+_cap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3646-009_+_protective_+_cap
*CAT: n
*SEM: orRel[rel=en3646-009_+_protective_+_cap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3660_+_backshell
*CAT: n
*SEM: unaryRel[rel=en3660_+_backshell]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3660_+_backshell
*CAT: n
*SEM: twoRel[rel=en3660_+_backshell]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3660_+_backshell
*CAT: n
*SEM: twoRel[rel=en3660_+_backshell]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3660_+_backshell
*CAT: n
*SEM: orRel[rel=en3660_+_backshell]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3739_+_rivet
*CAT: n
*SEM: unaryRel[rel=en3739_+_rivet]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3739_+_rivet
*CAT: n
*SEM: twoRel[rel=en3739_+_rivet]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3739_+_rivet
*CAT: n
*SEM: twoRel[rel=en3739_+_rivet]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en3739_+_rivet
*CAT: n
*SEM: orRel[rel=en3739_+_rivet]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en6049_+_split_+_conduit
*CAT: n
*SEM: unaryRel[rel=en6049_+_split_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en6049_+_split_+_conduit
*CAT: n
*SEM: twoRel[rel=en6049_+_split_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en6049_+_split_+_conduit
*CAT: n
*SEM: twoRel[rel=en6049_+_split_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: en6049_+_split_+_conduit
*CAT: n
*SEM: orRel[rel=en6049_+_split_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_caps
*CAT: n
*SEM: unaryRel[rel=end_+_caps]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_caps
*CAT: n
*SEM: twoRel[rel=end_+_caps]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_caps
*CAT: n
*SEM: twoRel[rel=end_+_caps]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_caps
*CAT: n
*SEM: orRel[rel=end_+_caps]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: endible_+_marking
*CAT: n
*SEM: unaryRel[rel=endible_+_marking]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: endible_+_marking
*CAT: n
*SEM: twoRel[rel=endible_+_marking]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: endible_+_marking
*CAT: n
*SEM: twoRel[rel=endible_+_marking]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: endible_+_marking
*CAT: n
*SEM: orRel[rel=endible_+_marking]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: english_+_language
*CAT: n
*SEM: unaryRel[rel=english_+_language]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: english_+_language
*CAT: n
*SEM: twoRel[rel=english_+_language]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: english_+_language
*CAT: n
*SEM: twoRel[rel=english_+_language]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: english_+_language
*CAT: n
*SEM: orRel[rel=english_+_language]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_2.5_+_mm_+_additional_+_clearance_+_between_+_the_+_bundle_+_and
*CAT: n
*SEM: unaryRel[rel=ensure_+_2.5_+_mm_+_additional_+_clearance_+_between_+_the_+_bundle_+_and]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_2.5_+_mm_+_additional_+_clearance_+_between_+_the_+_bundle_+_and
*CAT: n
*SEM: twoRel[rel=ensure_+_2.5_+_mm_+_additional_+_clearance_+_between_+_the_+_bundle_+_and]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_2.5_+_mm_+_additional_+_clearance_+_between_+_the_+_bundle_+_and
*CAT: n
*SEM: twoRel[rel=ensure_+_2.5_+_mm_+_additional_+_clearance_+_between_+_the_+_bundle_+_and]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_2.5_+_mm_+_additional_+_clearance_+_between_+_the_+_bundle_+_and
*CAT: n
*SEM: orRel[rel=ensure_+_2.5_+_mm_+_additional_+_clearance_+_between_+_the_+_bundle_+_and]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_insulation_+_tightness
*CAT: n
*SEM: unaryRel[rel=ensure_+_insulation_+_tightness]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_insulation_+_tightness
*CAT: n
*SEM: twoRel[rel=ensure_+_insulation_+_tightness]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_insulation_+_tightness
*CAT: n
*SEM: twoRel[rel=ensure_+_insulation_+_tightness]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ensure_+_insulation_+_tightness
*CAT: n
*SEM: orRel[rel=ensure_+_insulation_+_tightness]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: environmental_+_constrain
*CAT: n
*SEM: unaryRel[rel=environmental_+_constrain]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: environmental_+_constrain
*CAT: n
*SEM: twoRel[rel=environmental_+_constrain]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: environmental_+_constrain
*CAT: n
*SEM: twoRel[rel=environmental_+_constrain]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: environmental_+_constrain
*CAT: n
*SEM: orRel[rel=environmental_+_constrain]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment
*CAT: n
*SEM: unaryRel[rel=equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment
*CAT: n
*SEM: twoRel[rel=equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment
*CAT: n
*SEM: twoRel[rel=equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment
*CAT: n
*SEM: orRel[rel=equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_bundle_+_over_+_length
*CAT: n
*SEM: unaryRel[rel=equipment_+_bundle_+_over_+_length]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_bundle_+_over_+_length
*CAT: n
*SEM: twoRel[rel=equipment_+_bundle_+_over_+_length]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_bundle_+_over_+_length
*CAT: n
*SEM: twoRel[rel=equipment_+_bundle_+_over_+_length]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_bundle_+_over_+_length
*CAT: n
*SEM: orRel[rel=equipment_+_bundle_+_over_+_length]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_by_+_flange_+_standard_+_as-1895
*CAT: n
*SEM: unaryRel[rel=equipment_+_by_+_flange_+_standard_+_as-1895]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_by_+_flange_+_standard_+_as-1895
*CAT: n
*SEM: twoRel[rel=equipment_+_by_+_flange_+_standard_+_as-1895]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_by_+_flange_+_standard_+_as-1895
*CAT: n
*SEM: twoRel[rel=equipment_+_by_+_flange_+_standard_+_as-1895]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_by_+_flange_+_standard_+_as-1895
*CAT: n
*SEM: orRel[rel=equipment_+_by_+_flange_+_standard_+_as-1895]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_is_+_clearly_+_identified
*CAT: n
*SEM: unaryRel[rel=equipment_+_is_+_clearly_+_identified]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_is_+_clearly_+_identified
*CAT: n
*SEM: twoRel[rel=equipment_+_is_+_clearly_+_identified]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_is_+_clearly_+_identified
*CAT: n
*SEM: twoRel[rel=equipment_+_is_+_clearly_+_identified]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_is_+_clearly_+_identified
*CAT: n
*SEM: orRel[rel=equipment_+_is_+_clearly_+_identified]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_rack_+_beside_+_connector
*CAT: n
*SEM: unaryRel[rel=equipment_+_rack_+_beside_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_rack_+_beside_+_connector
*CAT: n
*SEM: twoRel[rel=equipment_+_rack_+_beside_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_rack_+_beside_+_connector
*CAT: n
*SEM: twoRel[rel=equipment_+_rack_+_beside_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_rack_+_beside_+_connector
*CAT: n
*SEM: orRel[rel=equipment_+_rack_+_beside_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_where_+_it_+_is_+_attached_+_to
*CAT: n
*SEM: unaryRel[rel=equipment_+_where_+_it_+_is_+_attached_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_where_+_it_+_is_+_attached_+_to
*CAT: n
*SEM: twoRel[rel=equipment_+_where_+_it_+_is_+_attached_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_where_+_it_+_is_+_attached_+_to
*CAT: n
*SEM: twoRel[rel=equipment_+_where_+_it_+_is_+_attached_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment_+_where_+_it_+_is_+_attached_+_to
*CAT: n
*SEM: orRel[rel=equipment_+_where_+_it_+_is_+_attached_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equivalent_+_alternative_+_standard
*CAT: n
*SEM: unaryRel[rel=equivalent_+_alternative_+_standard]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equivalent_+_alternative_+_standard
*CAT: n
*SEM: twoRel[rel=equivalent_+_alternative_+_standard]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equivalent_+_alternative_+_standard
*CAT: n
*SEM: twoRel[rel=equivalent_+_alternative_+_standard]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equivalent_+_alternative_+_standard
*CAT: n
*SEM: orRel[rel=equivalent_+_alternative_+_standard]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equivalent_+_reinforcement
*CAT: n
*SEM: unaryRel[rel=equivalent_+_reinforcement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equivalent_+_reinforcement
*CAT: n
*SEM: twoRel[rel=equivalent_+_reinforcement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equivalent_+_reinforcement
*CAT: n
*SEM: twoRel[rel=equivalent_+_reinforcement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equivalent_+_reinforcement
*CAT: n
*SEM: orRel[rel=equivalent_+_reinforcement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: etc.
*CAT: n
*SEM: unaryRel[rel=etc.]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: etc.
*CAT: n
*SEM: twoRel[rel=etc.]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: etc.
*CAT: n
*SEM: twoRel[rel=etc.]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: etc.
*CAT: n
*SEM: orRel[rel=etc.]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: etc._+_closesb
*CAT: n
*SEM: unaryRel[rel=etc._+_closesb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: etc._+_closesb
*CAT: n
*SEM: twoRel[rel=etc._+_closesb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: etc._+_closesb
*CAT: n
*SEM: twoRel[rel=etc._+_closesb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: etc._+_closesb
*CAT: n
*SEM: orRel[rel=etc._+_closesb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: except
*CAT: n
*SEM: unaryRel[rel=except]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: except
*CAT: n
*SEM: twoRel[rel=except]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: except
*CAT: n
*SEM: twoRel[rel=except]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: except
*CAT: n
*SEM: orRel[rel=except]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: existing_+_drawn_+_bracket
*CAT: n
*SEM: unaryRel[rel=existing_+_drawn_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: existing_+_drawn_+_bracket
*CAT: n
*SEM: twoRel[rel=existing_+_drawn_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: existing_+_drawn_+_bracket
*CAT: n
*SEM: twoRel[rel=existing_+_drawn_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: existing_+_drawn_+_bracket
*CAT: n
*SEM: orRel[rel=existing_+_drawn_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansion_+_zones
*CAT: n
*SEM: unaryRel[rel=expansion_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansion_+_zones
*CAT: n
*SEM: twoRel[rel=expansion_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansion_+_zones
*CAT: n
*SEM: twoRel[rel=expansion_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: expansion_+_zones
*CAT: n
*SEM: orRel[rel=expansion_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fasten_+_a_+_electrical_+_active_+_item_+_which_+_are_+_protuding_+_1
*CAT: n
*SEM: unaryRel[rel=fasten_+_a_+_electrical_+_active_+_item_+_which_+_are_+_protuding_+_1]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fasten_+_a_+_electrical_+_active_+_item_+_which_+_are_+_protuding_+_1
*CAT: n
*SEM: twoRel[rel=fasten_+_a_+_electrical_+_active_+_item_+_which_+_are_+_protuding_+_1]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fasten_+_a_+_electrical_+_active_+_item_+_which_+_are_+_protuding_+_1
*CAT: n
*SEM: twoRel[rel=fasten_+_a_+_electrical_+_active_+_item_+_which_+_are_+_protuding_+_1]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fasten_+_a_+_electrical_+_active_+_item_+_which_+_are_+_protuding_+_1
*CAT: n
*SEM: orRel[rel=fasten_+_a_+_electrical_+_active_+_item_+_which_+_are_+_protuding_+_1]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fastening_+_clamp
*CAT: n
*SEM: unaryRel[rel=fastening_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fastening_+_clamp
*CAT: n
*SEM: twoRel[rel=fastening_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fastening_+_clamp
*CAT: n
*SEM: twoRel[rel=fastening_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fastening_+_clamp
*CAT: n
*SEM: orRel[rel=fastening_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_lugs
*CAT: n
*SEM: unaryRel[rel=feeder_+_lugs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_lugs
*CAT: n
*SEM: twoRel[rel=feeder_+_lugs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_lugs
*CAT: n
*SEM: twoRel[rel=feeder_+_lugs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_lugs
*CAT: n
*SEM: orRel[rel=feeder_+_lugs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_of_+_g-route
*CAT: n
*SEM: unaryRel[rel=feeder_+_of_+_g-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_of_+_g-route
*CAT: n
*SEM: twoRel[rel=feeder_+_of_+_g-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_of_+_g-route
*CAT: n
*SEM: twoRel[rel=feeder_+_of_+_g-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_of_+_g-route
*CAT: n
*SEM: orRel[rel=feeder_+_of_+_g-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_wire
*CAT: n
*SEM: unaryRel[rel=feeder_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_wire
*CAT: n
*SEM: twoRel[rel=feeder_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_wire
*CAT: n
*SEM: twoRel[rel=feeder_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: feeder_+_wire
*CAT: n
*SEM: orRel[rel=feeder_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fflz
*CAT: n
*SEM: unaryRel[rel=fflz]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fflz
*CAT: n
*SEM: twoRel[rel=fflz]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fflz
*CAT: n
*SEM: twoRel[rel=fflz]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fflz
*CAT: n
*SEM: orRel[rel=fflz]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below
*CAT: n
*SEM: unaryRel[rel=figure_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below
*CAT: n
*SEM: twoRel[rel=figure_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below
*CAT: n
*SEM: twoRel[rel=figure_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below
*CAT: n
*SEM: orRel[rel=figure_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate
*CAT: n
*SEM: unaryRel[rel=fillingrate]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate
*CAT: n
*SEM: twoRel[rel=fillingrate]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate
*CAT: n
*SEM: twoRel[rel=fillingrate]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate
*CAT: n
*SEM: orRel[rel=fillingrate]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate_+_not_+_exceeding_+_60_+_percent_+_at_+_aircraft_+_delivery
*CAT: n
*SEM: unaryRel[rel=fillingrate_+_not_+_exceeding_+_60_+_percent_+_at_+_aircraft_+_delivery]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate_+_not_+_exceeding_+_60_+_percent_+_at_+_aircraft_+_delivery
*CAT: n
*SEM: twoRel[rel=fillingrate_+_not_+_exceeding_+_60_+_percent_+_at_+_aircraft_+_delivery]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate_+_not_+_exceeding_+_60_+_percent_+_at_+_aircraft_+_delivery
*CAT: n
*SEM: twoRel[rel=fillingrate_+_not_+_exceeding_+_60_+_percent_+_at_+_aircraft_+_delivery]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate_+_not_+_exceeding_+_60_+_percent_+_at_+_aircraft_+_delivery
*CAT: n
*SEM: orRel[rel=fillingrate_+_not_+_exceeding_+_60_+_percent_+_at_+_aircraft_+_delivery]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate_+_not_+_exceeding_+_80_+_percent_+_at_+_aircraft_+_delivery
*CAT: n
*SEM: unaryRel[rel=fillingrate_+_not_+_exceeding_+_80_+_percent_+_at_+_aircraft_+_delivery]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate_+_not_+_exceeding_+_80_+_percent_+_at_+_aircraft_+_delivery
*CAT: n
*SEM: twoRel[rel=fillingrate_+_not_+_exceeding_+_80_+_percent_+_at_+_aircraft_+_delivery]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate_+_not_+_exceeding_+_80_+_percent_+_at_+_aircraft_+_delivery
*CAT: n
*SEM: twoRel[rel=fillingrate_+_not_+_exceeding_+_80_+_percent_+_at_+_aircraft_+_delivery]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillingrate_+_not_+_exceeding_+_80_+_percent_+_at_+_aircraft_+_delivery
*CAT: n
*SEM: orRel[rel=fillingrate_+_not_+_exceeding_+_80_+_percent_+_at_+_aircraft_+_delivery]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillrate
*CAT: n
*SEM: unaryRel[rel=fillrate]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillrate
*CAT: n
*SEM: twoRel[rel=fillrate]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillrate
*CAT: n
*SEM: twoRel[rel=fillrate]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fillrate
*CAT: n
*SEM: orRel[rel=fillrate]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin_+_identification
*CAT: n
*SEM: unaryRel[rel=fin_+_identification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin_+_identification
*CAT: n
*SEM: twoRel[rel=fin_+_identification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin_+_identification
*CAT: n
*SEM: twoRel[rel=fin_+_identification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fin_+_identification
*CAT: n
*SEM: orRel[rel=fin_+_identification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_area
*CAT: n
*SEM: unaryRel[rel=fire_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_area
*CAT: n
*SEM: twoRel[rel=fire_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_area
*CAT: n
*SEM: twoRel[rel=fire_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_area
*CAT: n
*SEM: orRel[rel=fire_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_areas
*CAT: n
*SEM: unaryRel[rel=fire_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_areas
*CAT: n
*SEM: twoRel[rel=fire_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_areas
*CAT: n
*SEM: twoRel[rel=fire_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_areas
*CAT: n
*SEM: orRel[rel=fire_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_detection_+_sensing_+_circuit
*CAT: n
*SEM: unaryRel[rel=fire_+_detection_+_sensing_+_circuit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_detection_+_sensing_+_circuit
*CAT: n
*SEM: twoRel[rel=fire_+_detection_+_sensing_+_circuit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_detection_+_sensing_+_circuit
*CAT: n
*SEM: twoRel[rel=fire_+_detection_+_sensing_+_circuit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_detection_+_sensing_+_circuit
*CAT: n
*SEM: orRel[rel=fire_+_detection_+_sensing_+_circuit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_detector_+_assembly
*CAT: n
*SEM: unaryRel[rel=fire_+_detector_+_assembly]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_detector_+_assembly
*CAT: n
*SEM: twoRel[rel=fire_+_detector_+_assembly]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_detector_+_assembly
*CAT: n
*SEM: twoRel[rel=fire_+_detector_+_assembly]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_detector_+_assembly
*CAT: n
*SEM: orRel[rel=fire_+_detector_+_assembly]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_resistant_+_bundle
*CAT: n
*SEM: unaryRel[rel=fire_+_resistant_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_resistant_+_bundle
*CAT: n
*SEM: twoRel[rel=fire_+_resistant_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_resistant_+_bundle
*CAT: n
*SEM: twoRel[rel=fire_+_resistant_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_resistant_+_bundle
*CAT: n
*SEM: orRel[rel=fire_+_resistant_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal
*CAT: n
*SEM: unaryRel[rel=fire_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal
*CAT: n
*SEM: twoRel[rel=fire_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal
*CAT: n
*SEM: twoRel[rel=fire_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal
*CAT: n
*SEM: orRel[rel=fire_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_300_+_mm_+_away_+_from_+_fire_+_seal
*CAT: n
*SEM: unaryRel[rel=fire_+_seal_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_300_+_mm_+_away_+_from_+_fire_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_300_+_mm_+_away_+_from_+_fire_+_seal
*CAT: n
*SEM: twoRel[rel=fire_+_seal_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_300_+_mm_+_away_+_from_+_fire_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_300_+_mm_+_away_+_from_+_fire_+_seal
*CAT: n
*SEM: twoRel[rel=fire_+_seal_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_300_+_mm_+_away_+_from_+_fire_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_300_+_mm_+_away_+_from_+_fire_+_seal
*CAT: n
*SEM: orRel[rel=fire_+_seal_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_300_+_mm_+_away_+_from_+_fire_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_50mm_+_away_+_fromfire_+_seal
*CAT: n
*SEM: unaryRel[rel=fire_+_seal_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_50mm_+_away_+_fromfire_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_50mm_+_away_+_fromfire_+_seal
*CAT: n
*SEM: twoRel[rel=fire_+_seal_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_50mm_+_away_+_fromfire_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_50mm_+_away_+_fromfire_+_seal
*CAT: n
*SEM: twoRel[rel=fire_+_seal_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_50mm_+_away_+_fromfire_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seal_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_50mm_+_away_+_fromfire_+_seal
*CAT: n
*SEM: orRel[rel=fire_+_seal_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_50mm_+_away_+_fromfire_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seals
*CAT: n
*SEM: unaryRel[rel=fire_+_seals]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seals
*CAT: n
*SEM: twoRel[rel=fire_+_seals]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seals
*CAT: n
*SEM: twoRel[rel=fire_+_seals]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_seals
*CAT: n
*SEM: orRel[rel=fire_+_seals]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_zones
*CAT: n
*SEM: unaryRel[rel=fire_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_zones
*CAT: n
*SEM: twoRel[rel=fire_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_zones
*CAT: n
*SEM: twoRel[rel=fire_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_zones
*CAT: n
*SEM: orRel[rel=fire_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire-sensing_+_element
*CAT: n
*SEM: unaryRel[rel=fire-sensing_+_element]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire-sensing_+_element
*CAT: n
*SEM: twoRel[rel=fire-sensing_+_element]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire-sensing_+_element
*CAT: n
*SEM: twoRel[rel=fire-sensing_+_element]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire-sensing_+_element
*CAT: n
*SEM: orRel[rel=fire-sensing_+_element]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fireresistant_+_attachment_+_device
*CAT: n
*SEM: unaryRel[rel=fireresistant_+_attachment_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fireresistant_+_attachment_+_device
*CAT: n
*SEM: twoRel[rel=fireresistant_+_attachment_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fireresistant_+_attachment_+_device
*CAT: n
*SEM: twoRel[rel=fireresistant_+_attachment_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fireresistant_+_attachment_+_device
*CAT: n
*SEM: orRel[rel=fireresistant_+_attachment_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fireresistant_+_connector
*CAT: n
*SEM: unaryRel[rel=fireresistant_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fireresistant_+_connector
*CAT: n
*SEM: twoRel[rel=fireresistant_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fireresistant_+_connector
*CAT: n
*SEM: twoRel[rel=fireresistant_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fireresistant_+_connector
*CAT: n
*SEM: orRel[rel=fireresistant_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_clamp
*CAT: n
*SEM: unaryRel[rel=first_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_clamp
*CAT: n
*SEM: twoRel[rel=first_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_clamp
*CAT: n
*SEM: twoRel[rel=first_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_clamp
*CAT: n
*SEM: orRel[rel=first_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fix_+_pipes_+_onto_+_structure
*CAT: n
*SEM: unaryRel[rel=fix_+_pipes_+_onto_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fix_+_pipes_+_onto_+_structure
*CAT: n
*SEM: twoRel[rel=fix_+_pipes_+_onto_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fix_+_pipes_+_onto_+_structure
*CAT: n
*SEM: twoRel[rel=fix_+_pipes_+_onto_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fix_+_pipes_+_onto_+_structure
*CAT: n
*SEM: orRel[rel=fix_+_pipes_+_onto_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation
*CAT: n
*SEM: unaryRel[rel=fixation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation
*CAT: n
*SEM: twoRel[rel=fixation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation
*CAT: n
*SEM: twoRel[rel=fixation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation
*CAT: n
*SEM: orRel[rel=fixation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation_+_point
*CAT: n
*SEM: unaryRel[rel=fixation_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation_+_point
*CAT: n
*SEM: twoRel[rel=fixation_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation_+_point
*CAT: n
*SEM: twoRel[rel=fixation_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixation_+_point
*CAT: n
*SEM: orRel[rel=fixation_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_bracket
*CAT: n
*SEM: unaryRel[rel=fixed_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_bracket
*CAT: n
*SEM: twoRel[rel=fixed_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_bracket
*CAT: n
*SEM: twoRel[rel=fixed_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_bracket
*CAT: n
*SEM: orRel[rel=fixed_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_part
*CAT: n
*SEM: unaryRel[rel=fixed_+_part]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_part
*CAT: n
*SEM: twoRel[rel=fixed_+_part]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_part
*CAT: n
*SEM: twoRel[rel=fixed_+_part]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_part
*CAT: n
*SEM: orRel[rel=fixed_+_part]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure
*CAT: n
*SEM: unaryRel[rel=fixed_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure
*CAT: n
*SEM: twoRel[rel=fixed_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure
*CAT: n
*SEM: twoRel[rel=fixed_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure
*CAT: n
*SEM: orRel[rel=fixed_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_by_+_not_+_less_+_than_+_10_+_mm
*CAT: n
*SEM: unaryRel[rel=fixed_+_structure_+_by_+_not_+_less_+_than_+_10_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_by_+_not_+_less_+_than_+_10_+_mm
*CAT: n
*SEM: twoRel[rel=fixed_+_structure_+_by_+_not_+_less_+_than_+_10_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_by_+_not_+_less_+_than_+_10_+_mm
*CAT: n
*SEM: twoRel[rel=fixed_+_structure_+_by_+_not_+_less_+_than_+_10_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_by_+_not_+_less_+_than_+_10_+_mm
*CAT: n
*SEM: orRel[rel=fixed_+_structure_+_by_+_not_+_less_+_than_+_10_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_not_+_less_+_than_+_10_+_mm_+_unless_+_otherwise_+_specified
*CAT: n
*SEM: unaryRel[rel=fixed_+_structure_+_not_+_less_+_than_+_10_+_mm_+_unless_+_otherwise_+_specified]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_not_+_less_+_than_+_10_+_mm_+_unless_+_otherwise_+_specified
*CAT: n
*SEM: twoRel[rel=fixed_+_structure_+_not_+_less_+_than_+_10_+_mm_+_unless_+_otherwise_+_specified]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_not_+_less_+_than_+_10_+_mm_+_unless_+_otherwise_+_specified
*CAT: n
*SEM: twoRel[rel=fixed_+_structure_+_not_+_less_+_than_+_10_+_mm_+_unless_+_otherwise_+_specified]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_not_+_less_+_than_+_10_+_mm_+_unless_+_otherwise_+_specified
*CAT: n
*SEM: orRel[rel=fixed_+_structure_+_not_+_less_+_than_+_10_+_mm_+_unless_+_otherwise_+_specified]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_structure_+_not_+_less_+_than_+_20_+_mm_+_unless_+_otherwise_+_specified
*CAT: n
*SEM: unaryRel[rel=fixed_+_structure_+_structure_+_not_+_less_+_than_+_20_+_mm_+_unless_+_otherwise_+_specified]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_structure_+_not_+_less_+_than_+_20_+_mm_+_unless_+_otherwise_+_specified
*CAT: n
*SEM: twoRel[rel=fixed_+_structure_+_structure_+_not_+_less_+_than_+_20_+_mm_+_unless_+_otherwise_+_specified]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_structure_+_not_+_less_+_than_+_20_+_mm_+_unless_+_otherwise_+_specified
*CAT: n
*SEM: twoRel[rel=fixed_+_structure_+_structure_+_not_+_less_+_than_+_20_+_mm_+_unless_+_otherwise_+_specified]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fixed_+_structure_+_structure_+_not_+_less_+_than_+_20_+_mm_+_unless_+_otherwise_+_specified
*CAT: n
*SEM: orRel[rel=fixed_+_structure_+_structure_+_not_+_less_+_than_+_20_+_mm_+_unless_+_otherwise_+_specified]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_datum_+_marker
*CAT: n
*SEM: unaryRel[rel=flag_+_datum_+_marker]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_datum_+_marker
*CAT: n
*SEM: twoRel[rel=flag_+_datum_+_marker]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_datum_+_marker
*CAT: n
*SEM: twoRel[rel=flag_+_datum_+_marker]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_datum_+_marker
*CAT: n
*SEM: orRel[rel=flag_+_datum_+_marker]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_note
*CAT: n
*SEM: unaryRel[rel=flag_+_note]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_note
*CAT: n
*SEM: twoRel[rel=flag_+_note]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_note
*CAT: n
*SEM: twoRel[rel=flag_+_note]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flag_+_note
*CAT: n
*SEM: orRel[rel=flag_+_note]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluid_+_leackage_+_zones
*CAT: n
*SEM: unaryRel[rel=flammable_+_fluid_+_leackage_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluid_+_leackage_+_zones
*CAT: n
*SEM: twoRel[rel=flammable_+_fluid_+_leackage_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluid_+_leackage_+_zones
*CAT: n
*SEM: twoRel[rel=flammable_+_fluid_+_leackage_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluid_+_leackage_+_zones
*CAT: n
*SEM: orRel[rel=flammable_+_fluid_+_leackage_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluids
*CAT: n
*SEM: unaryRel[rel=flammable_+_fluids]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluids
*CAT: n
*SEM: twoRel[rel=flammable_+_fluids]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluids
*CAT: n
*SEM: twoRel[rel=flammable_+_fluids]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flammable_+_fluids
*CAT: n
*SEM: orRel[rel=flammable_+_fluids]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flanged_+_bulkhead_+_unions
*CAT: n
*SEM: unaryRel[rel=flanged_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flanged_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=flanged_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flanged_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=flanged_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flanged_+_bulkhead_+_unions
*CAT: n
*SEM: orRel[rel=flanged_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flare_+_less_+_hydraulic_+_junction
*CAT: n
*SEM: unaryRel[rel=flare_+_less_+_hydraulic_+_junction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flare_+_less_+_hydraulic_+_junction
*CAT: n
*SEM: twoRel[rel=flare_+_less_+_hydraulic_+_junction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flare_+_less_+_hydraulic_+_junction
*CAT: n
*SEM: twoRel[rel=flare_+_less_+_hydraulic_+_junction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flare_+_less_+_hydraulic_+_junction
*CAT: n
*SEM: orRel[rel=flare_+_less_+_hydraulic_+_junction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flareless_+_hydraulic_+_unions
*CAT: n
*SEM: unaryRel[rel=flareless_+_hydraulic_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flareless_+_hydraulic_+_unions
*CAT: n
*SEM: twoRel[rel=flareless_+_hydraulic_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flareless_+_hydraulic_+_unions
*CAT: n
*SEM: twoRel[rel=flareless_+_hydraulic_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flareless_+_hydraulic_+_unions
*CAT: n
*SEM: orRel[rel=flareless_+_hydraulic_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_bf_+_type_+_cable
*CAT: n
*SEM: unaryRel[rel=flexible_+_bf_+_type_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_bf_+_type_+_cable
*CAT: n
*SEM: twoRel[rel=flexible_+_bf_+_type_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_bf_+_type_+_cable
*CAT: n
*SEM: twoRel[rel=flexible_+_bf_+_type_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_bf_+_type_+_cable
*CAT: n
*SEM: orRel[rel=flexible_+_bf_+_type_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_bf_+_type_+_cablle
*CAT: n
*SEM: unaryRel[rel=flexible_+_bf_+_type_+_cablle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_bf_+_type_+_cablle
*CAT: n
*SEM: twoRel[rel=flexible_+_bf_+_type_+_cablle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_bf_+_type_+_cablle
*CAT: n
*SEM: twoRel[rel=flexible_+_bf_+_type_+_cablle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_bf_+_type_+_cablle
*CAT: n
*SEM: orRel[rel=flexible_+_bf_+_type_+_cablle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_coupling
*CAT: n
*SEM: unaryRel[rel=flexible_+_coupling]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_coupling
*CAT: n
*SEM: twoRel[rel=flexible_+_coupling]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_coupling
*CAT: n
*SEM: twoRel[rel=flexible_+_coupling]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_coupling
*CAT: n
*SEM: orRel[rel=flexible_+_coupling]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hose_+_end_+_unions
*CAT: n
*SEM: unaryRel[rel=flexible_+_hose_+_end_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hose_+_end_+_unions
*CAT: n
*SEM: twoRel[rel=flexible_+_hose_+_end_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hose_+_end_+_unions
*CAT: n
*SEM: twoRel[rel=flexible_+_hose_+_end_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hose_+_end_+_unions
*CAT: n
*SEM: orRel[rel=flexible_+_hose_+_end_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses
*CAT: n
*SEM: orRel[rel=flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: floating_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=floating_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: floating_+_clamp-block
*CAT: n
*SEM: twoRel[rel=floating_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: floating_+_clamp-block
*CAT: n
*SEM: twoRel[rel=floating_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: floating_+_clamp-block
*CAT: n
*SEM: orRel[rel=floating_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flying_+_tee_+_-_+_unions
*CAT: n
*SEM: unaryRel[rel=flying_+_tee_+_-_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flying_+_tee_+_-_+_unions
*CAT: n
*SEM: twoRel[rel=flying_+_tee_+_-_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flying_+_tee_+_-_+_unions
*CAT: n
*SEM: twoRel[rel=flying_+_tee_+_-_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flying_+_tee_+_-_+_unions
*CAT: n
*SEM: orRel[rel=flying_+_tee_+_-_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_standards
*CAT: n
*SEM: unaryRel[rel=following_+_standards]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_standards
*CAT: n
*SEM: twoRel[rel=following_+_standards]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_standards
*CAT: n
*SEM: twoRel[rel=following_+_standards]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_standards
*CAT: n
*SEM: orRel[rel=following_+_standards]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_diametrical_+_opposed_+_screw_+_in_+_un-pressurized_+_area
*CAT: n
*SEM: unaryRel[rel=four_+_diametrical_+_opposed_+_screw_+_in_+_un-pressurized_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_diametrical_+_opposed_+_screw_+_in_+_un-pressurized_+_area
*CAT: n
*SEM: twoRel[rel=four_+_diametrical_+_opposed_+_screw_+_in_+_un-pressurized_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_diametrical_+_opposed_+_screw_+_in_+_un-pressurized_+_area
*CAT: n
*SEM: twoRel[rel=four_+_diametrical_+_opposed_+_screw_+_in_+_un-pressurized_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_diametrical_+_opposed_+_screw_+_in_+_un-pressurized_+_area
*CAT: n
*SEM: orRel[rel=four_+_diametrical_+_opposed_+_screw_+_in_+_un-pressurized_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_possible_+_highly_+_resistive_+_unions
*CAT: n
*SEM: unaryRel[rel=four_+_possible_+_highly_+_resistive_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_possible_+_highly_+_resistive_+_unions
*CAT: n
*SEM: twoRel[rel=four_+_possible_+_highly_+_resistive_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_possible_+_highly_+_resistive_+_unions
*CAT: n
*SEM: twoRel[rel=four_+_possible_+_highly_+_resistive_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: four_+_possible_+_highly_+_resistive_+_unions
*CAT: n
*SEM: orRel[rel=four_+_possible_+_highly_+_resistive_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame
*CAT: n
*SEM: unaryRel[rel=frame]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame
*CAT: n
*SEM: twoRel[rel=frame]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame
*CAT: n
*SEM: twoRel[rel=frame]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame
*CAT: n
*SEM: orRel[rel=frame]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame_+_by_+_combi_+_bracket_+_e.g._+_asne0663
*CAT: n
*SEM: unaryRel[rel=frame_+_by_+_combi_+_bracket_+_e.g._+_asne0663]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame_+_by_+_combi_+_bracket_+_e.g._+_asne0663
*CAT: n
*SEM: twoRel[rel=frame_+_by_+_combi_+_bracket_+_e.g._+_asne0663]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame_+_by_+_combi_+_bracket_+_e.g._+_asne0663
*CAT: n
*SEM: twoRel[rel=frame_+_by_+_combi_+_bracket_+_e.g._+_asne0663]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame_+_by_+_combi_+_bracket_+_e.g._+_asne0663
*CAT: n
*SEM: orRel[rel=frame_+_by_+_combi_+_bracket_+_e.g._+_asne0663]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame_+_with_+_abs2083_+_combi_+_bracket_+_where_+_burn_+_through_+_resistance_+_is_+_needed
*CAT: n
*SEM: unaryRel[rel=frame_+_with_+_abs2083_+_combi_+_bracket_+_where_+_burn_+_through_+_resistance_+_is_+_needed]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame_+_with_+_abs2083_+_combi_+_bracket_+_where_+_burn_+_through_+_resistance_+_is_+_needed
*CAT: n
*SEM: twoRel[rel=frame_+_with_+_abs2083_+_combi_+_bracket_+_where_+_burn_+_through_+_resistance_+_is_+_needed]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame_+_with_+_abs2083_+_combi_+_bracket_+_where_+_burn_+_through_+_resistance_+_is_+_needed
*CAT: n
*SEM: twoRel[rel=frame_+_with_+_abs2083_+_combi_+_bracket_+_where_+_burn_+_through_+_resistance_+_is_+_needed]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame_+_with_+_abs2083_+_combi_+_bracket_+_where_+_burn_+_through_+_resistance_+_is_+_needed
*CAT: n
*SEM: orRel[rel=frame_+_with_+_abs2083_+_combi_+_bracket_+_where_+_burn_+_through_+_resistance_+_is_+_needed]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: friction
*CAT: n
*SEM: unaryRel[rel=friction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: friction
*CAT: n
*SEM: twoRel[rel=friction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: friction
*CAT: n
*SEM: twoRel[rel=friction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: friction
*CAT: n
*SEM: orRel[rel=friction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_of_+_arinc_+_600_+_connector_+_in_+_the_+_axis_+_of_+_the_+_of_+_the_+_cavity
*CAT: n
*SEM: unaryRel[rel=front_+_of_+_arinc_+_600_+_connector_+_in_+_the_+_axis_+_of_+_the_+_of_+_the_+_cavity]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_of_+_arinc_+_600_+_connector_+_in_+_the_+_axis_+_of_+_the_+_of_+_the_+_cavity
*CAT: n
*SEM: twoRel[rel=front_+_of_+_arinc_+_600_+_connector_+_in_+_the_+_axis_+_of_+_the_+_of_+_the_+_cavity]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_of_+_arinc_+_600_+_connector_+_in_+_the_+_axis_+_of_+_the_+_of_+_the_+_cavity
*CAT: n
*SEM: twoRel[rel=front_+_of_+_arinc_+_600_+_connector_+_in_+_the_+_axis_+_of_+_the_+_of_+_the_+_cavity]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_of_+_arinc_+_600_+_connector_+_in_+_the_+_axis_+_of_+_the_+_of_+_the_+_cavity
*CAT: n
*SEM: orRel[rel=front_+_of_+_arinc_+_600_+_connector_+_in_+_the_+_axis_+_of_+_the_+_of_+_the_+_cavity]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_of_+_fire_+_seal
*CAT: n
*SEM: unaryRel[rel=front_+_of_+_fire_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_of_+_fire_+_seal
*CAT: n
*SEM: twoRel[rel=front_+_of_+_fire_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_of_+_fire_+_seal
*CAT: n
*SEM: twoRel[rel=front_+_of_+_fire_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_of_+_fire_+_seal
*CAT: n
*SEM: orRel[rel=front_+_of_+_fire_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_of_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_as_+_shown_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: unaryRel[rel=front_+_of_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_as_+_shown_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_of_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_as_+_shown_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: twoRel[rel=front_+_of_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_as_+_shown_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_of_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_as_+_shown_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: twoRel[rel=front_+_of_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_as_+_shown_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: front_+_of_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_as_+_shown_+_in_+_the_+_picture_+_below
*CAT: n
*SEM: orRel[rel=front_+_of_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_as_+_shown_+_in_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_component_+_areas
*CAT: n
*SEM: unaryRel[rel=fuel_+_component_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_component_+_areas
*CAT: n
*SEM: twoRel[rel=fuel_+_component_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_component_+_areas
*CAT: n
*SEM: twoRel[rel=fuel_+_component_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_component_+_areas
*CAT: n
*SEM: orRel[rel=fuel_+_component_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_immersion_+_zones
*CAT: n
*SEM: unaryRel[rel=fuel_+_immersion_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_immersion_+_zones
*CAT: n
*SEM: twoRel[rel=fuel_+_immersion_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_immersion_+_zones
*CAT: n
*SEM: twoRel[rel=fuel_+_immersion_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_immersion_+_zones
*CAT: n
*SEM: orRel[rel=fuel_+_immersion_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_pipes
*CAT: n
*SEM: unaryRel[rel=fuel_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_pipes
*CAT: n
*SEM: twoRel[rel=fuel_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_pipes
*CAT: n
*SEM: twoRel[rel=fuel_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_pipes
*CAT: n
*SEM: orRel[rel=fuel_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_probe
*CAT: n
*SEM: unaryRel[rel=fuel_+_probe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_probe
*CAT: n
*SEM: twoRel[rel=fuel_+_probe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_probe
*CAT: n
*SEM: twoRel[rel=fuel_+_probe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_probe
*CAT: n
*SEM: orRel[rel=fuel_+_probe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank
*CAT: n
*SEM: unaryRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank
*CAT: n
*SEM: twoRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank
*CAT: n
*SEM: twoRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank
*CAT: n
*SEM: orRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank_+_boundaries
*CAT: n
*SEM: unaryRel[rel=fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank_+_boundaries
*CAT: n
*SEM: twoRel[rel=fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank_+_boundaries
*CAT: n
*SEM: twoRel[rel=fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank_+_boundaries
*CAT: n
*SEM: orRel[rel=fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tanks
*CAT: n
*SEM: unaryRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tanks
*CAT: n
*SEM: twoRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tanks
*CAT: n
*SEM: twoRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tanks
*CAT: n
*SEM: orRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fully_+_separable_+_flying_+_tee_+_-_+_unions
*CAT: n
*SEM: unaryRel[rel=fully_+_separable_+_flying_+_tee_+_-_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fully_+_separable_+_flying_+_tee_+_-_+_unions
*CAT: n
*SEM: twoRel[rel=fully_+_separable_+_flying_+_tee_+_-_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fully_+_separable_+_flying_+_tee_+_-_+_unions
*CAT: n
*SEM: twoRel[rel=fully_+_separable_+_flying_+_tee_+_-_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fully_+_separable_+_flying_+_tee_+_-_+_unions
*CAT: n
*SEM: orRel[rel=fully_+_separable_+_flying_+_tee_+_-_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fully_+_separable_+_flying_+_tee-_+_unions
*CAT: n
*SEM: unaryRel[rel=fully_+_separable_+_flying_+_tee-_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fully_+_separable_+_flying_+_tee-_+_unions
*CAT: n
*SEM: twoRel[rel=fully_+_separable_+_flying_+_tee-_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fully_+_separable_+_flying_+_tee-_+_unions
*CAT: n
*SEM: twoRel[rel=fully_+_separable_+_flying_+_tee-_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fully_+_separable_+_flying_+_tee-_+_unions
*CAT: n
*SEM: orRel[rel=fully_+_separable_+_flying_+_tee-_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage-htp_+_backslash_+_vtp_+_closesb
*CAT: n
*SEM: unaryRel[rel=fuselage-htp_+_backslash_+_vtp_+_closesb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage-htp_+_backslash_+_vtp_+_closesb
*CAT: n
*SEM: twoRel[rel=fuselage-htp_+_backslash_+_vtp_+_closesb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage-htp_+_backslash_+_vtp_+_closesb
*CAT: n
*SEM: twoRel[rel=fuselage-htp_+_backslash_+_vtp_+_closesb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage-htp_+_backslash_+_vtp_+_closesb
*CAT: n
*SEM: orRel[rel=fuselage-htp_+_backslash_+_vtp_+_closesb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage-htp_+_backslash_+_vtp_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=fuselage-htp_+_backslash_+_vtp_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage-htp_+_backslash_+_vtp_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=fuselage-htp_+_backslash_+_vtp_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage-htp_+_backslash_+_vtp_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=fuselage-htp_+_backslash_+_vtp_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuselage-htp_+_backslash_+_vtp_+_closesb_+_
*CAT: n
*SEM: orRel[rel=fuselage-htp_+_backslash_+_vtp_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+_route
*CAT: n
*SEM: unaryRel[rel=g_+_route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+_route
*CAT: n
*SEM: twoRel[rel=g_+_route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+_route
*CAT: n
*SEM: twoRel[rel=g_+_route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+_route
*CAT: n
*SEM: orRel[rel=g_+_route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+_routes
*CAT: n
*SEM: unaryRel[rel=g_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+_routes
*CAT: n
*SEM: twoRel[rel=g_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+_routes
*CAT: n
*SEM: twoRel[rel=g_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g_+_routes
*CAT: n
*SEM: orRel[rel=g_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-_+_route_+_attachment_+_backslash_+_fixation_+_point
*CAT: n
*SEM: unaryRel[rel=g-_+_route_+_attachment_+_backslash_+_fixation_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-_+_route_+_attachment_+_backslash_+_fixation_+_point
*CAT: n
*SEM: twoRel[rel=g-_+_route_+_attachment_+_backslash_+_fixation_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-_+_route_+_attachment_+_backslash_+_fixation_+_point
*CAT: n
*SEM: twoRel[rel=g-_+_route_+_attachment_+_backslash_+_fixation_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-_+_route_+_attachment_+_backslash_+_fixation_+_point
*CAT: n
*SEM: orRel[rel=g-_+_route_+_attachment_+_backslash_+_fixation_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route
*CAT: n
*SEM: unaryRel[rel=g-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route
*CAT: n
*SEM: twoRel[rel=g-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route
*CAT: n
*SEM: twoRel[rel=g-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route
*CAT: n
*SEM: orRel[rel=g-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_attachment_+_backslash_+_fixation_+_point
*CAT: n
*SEM: unaryRel[rel=g-route_+_attachment_+_backslash_+_fixation_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_attachment_+_backslash_+_fixation_+_point
*CAT: n
*SEM: twoRel[rel=g-route_+_attachment_+_backslash_+_fixation_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_attachment_+_backslash_+_fixation_+_point
*CAT: n
*SEM: twoRel[rel=g-route_+_attachment_+_backslash_+_fixation_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_attachment_+_backslash_+_fixation_+_point
*CAT: n
*SEM: orRel[rel=g-route_+_attachment_+_backslash_+_fixation_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_installation
*CAT: n
*SEM: unaryRel[rel=g-route_+_installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_installation
*CAT: n
*SEM: twoRel[rel=g-route_+_installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_installation
*CAT: n
*SEM: twoRel[rel=g-route_+_installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_installation
*CAT: n
*SEM: orRel[rel=g-route_+_installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_with
*CAT: n
*SEM: unaryRel[rel=g-route_+_with]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_with
*CAT: n
*SEM: twoRel[rel=g-route_+_with]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_with
*CAT: n
*SEM: twoRel[rel=g-route_+_with]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: g-route_+_with
*CAT: n
*SEM: orRel[rel=g-route_+_with]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gaseous_+_oxygen
*CAT: n
*SEM: unaryRel[rel=gaseous_+_oxygen]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gaseous_+_oxygen
*CAT: n
*SEM: twoRel[rel=gaseous_+_oxygen]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gaseous_+_oxygen
*CAT: n
*SEM: twoRel[rel=gaseous_+_oxygen]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gaseous_+_oxygen
*CAT: n
*SEM: orRel[rel=gaseous_+_oxygen]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gases
*CAT: n
*SEM: unaryRel[rel=gases]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gases
*CAT: n
*SEM: twoRel[rel=gases]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gases
*CAT: n
*SEM: twoRel[rel=gases]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gases
*CAT: n
*SEM: orRel[rel=gases]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gases_+_by_+_d_+_greaterthan_+_equalto_+_50mm
*CAT: n
*SEM: unaryRel[rel=gases_+_by_+_d_+_greaterthan_+_equalto_+_50mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gases_+_by_+_d_+_greaterthan_+_equalto_+_50mm
*CAT: n
*SEM: twoRel[rel=gases_+_by_+_d_+_greaterthan_+_equalto_+_50mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gases_+_by_+_d_+_greaterthan_+_equalto_+_50mm
*CAT: n
*SEM: twoRel[rel=gases_+_by_+_d_+_greaterthan_+_equalto_+_50mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gases_+_by_+_d_+_greaterthan_+_equalto_+_50mm
*CAT: n
*SEM: orRel[rel=gases_+_by_+_d_+_greaterthan_+_equalto_+_50mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_24
*CAT: n
*SEM: unaryRel[rel=gauge_+_24]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_24
*CAT: n
*SEM: twoRel[rel=gauge_+_24]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_24
*CAT: n
*SEM: twoRel[rel=gauge_+_24]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gauge_+_24
*CAT: n
*SEM: orRel[rel=gauge_+_24]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+_definintion_+_for_+_support
*CAT: n
*SEM: unaryRel[rel=geometry_+_definintion_+_for_+_support]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+_definintion_+_for_+_support
*CAT: n
*SEM: twoRel[rel=geometry_+_definintion_+_for_+_support]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+_definintion_+_for_+_support
*CAT: n
*SEM: twoRel[rel=geometry_+_definintion_+_for_+_support]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: geometry_+_definintion_+_for_+_support
*CAT: n
*SEM: orRel[rel=geometry_+_definintion_+_for_+_support]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: given_+_in_+_the_+_installation_+_drawing
*CAT: n
*SEM: unaryRel[rel=given_+_in_+_the_+_installation_+_drawing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: given_+_in_+_the_+_installation_+_drawing
*CAT: n
*SEM: twoRel[rel=given_+_in_+_the_+_installation_+_drawing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: given_+_in_+_the_+_installation_+_drawing
*CAT: n
*SEM: twoRel[rel=given_+_in_+_the_+_installation_+_drawing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: given_+_in_+_the_+_installation_+_drawing
*CAT: n
*SEM: orRel[rel=given_+_in_+_the_+_installation_+_drawing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: glued_+_label
*CAT: n
*SEM: unaryRel[rel=glued_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: glued_+_label
*CAT: n
*SEM: twoRel[rel=glued_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: glued_+_label
*CAT: n
*SEM: twoRel[rel=glued_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: glued_+_label
*CAT: n
*SEM: orRel[rel=glued_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic_+_below
*CAT: n
*SEM: unaryRel[rel=graphic_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic_+_below
*CAT: n
*SEM: twoRel[rel=graphic_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic_+_below
*CAT: n
*SEM: twoRel[rel=graphic_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: graphic_+_below
*CAT: n
*SEM: orRel[rel=graphic_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grey_+_colour
*CAT: n
*SEM: unaryRel[rel=grey_+_colour]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grey_+_colour
*CAT: n
*SEM: twoRel[rel=grey_+_colour]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grey_+_colour
*CAT: n
*SEM: twoRel[rel=grey_+_colour]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grey_+_colour
*CAT: n
*SEM: orRel[rel=grey_+_colour]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grommet
*CAT: n
*SEM: unaryRel[rel=grommet]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grommet
*CAT: n
*SEM: twoRel[rel=grommet]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grommet
*CAT: n
*SEM: twoRel[rel=grommet]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grommet
*CAT: n
*SEM: orRel[rel=grommet]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grommet_+_at_+_a_+_90_+_angle
*CAT: n
*SEM: unaryRel[rel=grommet_+_at_+_a_+_90_+_angle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grommet_+_at_+_a_+_90_+_angle
*CAT: n
*SEM: twoRel[rel=grommet_+_at_+_a_+_90_+_angle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grommet_+_at_+_a_+_90_+_angle
*CAT: n
*SEM: twoRel[rel=grommet_+_at_+_a_+_90_+_angle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grommet_+_at_+_a_+_90_+_angle
*CAT: n
*SEM: orRel[rel=grommet_+_at_+_a_+_90_+_angle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grommet_+_at_+_a_+_90â°_+_angle
*CAT: n
*SEM: unaryRel[rel=grommet_+_at_+_a_+_90â°_+_angle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grommet_+_at_+_a_+_90â°_+_angle
*CAT: n
*SEM: twoRel[rel=grommet_+_at_+_a_+_90â°_+_angle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grommet_+_at_+_a_+_90â°_+_angle
*CAT: n
*SEM: twoRel[rel=grommet_+_at_+_a_+_90â°_+_angle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: grommet_+_at_+_a_+_90â°_+_angle
*CAT: n
*SEM: orRel[rel=grommet_+_at_+_a_+_90â°_+_angle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ground_+_power_+_plug
*CAT: n
*SEM: unaryRel[rel=ground_+_power_+_plug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ground_+_power_+_plug
*CAT: n
*SEM: twoRel[rel=ground_+_power_+_plug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ground_+_power_+_plug
*CAT: n
*SEM: twoRel[rel=ground_+_power_+_plug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ground_+_power_+_plug
*CAT: n
*SEM: orRel[rel=ground_+_power_+_plug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: groups_+_of_+_four_+__+_opensb_+_maximum_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=groups_+_of_+_four_+__+_opensb_+_maximum_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: groups_+_of_+_four_+__+_opensb_+_maximum_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=groups_+_of_+_four_+__+_opensb_+_maximum_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: groups_+_of_+_four_+__+_opensb_+_maximum_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=groups_+_of_+_four_+__+_opensb_+_maximum_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: groups_+_of_+_four_+__+_opensb_+_maximum_+_closesb_+_
*CAT: n
*SEM: orRel[rel=groups_+_of_+_four_+__+_opensb_+_maximum_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: groups_+_of_+_four_+_opensb_+_maximum_+_closesb_+_comma
*CAT: n
*SEM: unaryRel[rel=groups_+_of_+_four_+_opensb_+_maximum_+_closesb_+_comma]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: groups_+_of_+_four_+_opensb_+_maximum_+_closesb_+_comma
*CAT: n
*SEM: twoRel[rel=groups_+_of_+_four_+_opensb_+_maximum_+_closesb_+_comma]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: groups_+_of_+_four_+_opensb_+_maximum_+_closesb_+_comma
*CAT: n
*SEM: twoRel[rel=groups_+_of_+_four_+_opensb_+_maximum_+_closesb_+_comma]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: groups_+_of_+_four_+_opensb_+_maximum_+_closesb_+_comma
*CAT: n
*SEM: orRel[rel=groups_+_of_+_four_+_opensb_+_maximum_+_closesb_+_comma]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guarantee_+_the_+_two_+_independent_+_parallels_+_detection_+_loops
*CAT: n
*SEM: unaryRel[rel=guarantee_+_the_+_two_+_independent_+_parallels_+_detection_+_loops]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guarantee_+_the_+_two_+_independent_+_parallels_+_detection_+_loops
*CAT: n
*SEM: twoRel[rel=guarantee_+_the_+_two_+_independent_+_parallels_+_detection_+_loops]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guarantee_+_the_+_two_+_independent_+_parallels_+_detection_+_loops
*CAT: n
*SEM: twoRel[rel=guarantee_+_the_+_two_+_independent_+_parallels_+_detection_+_loops]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guarantee_+_the_+_two_+_independent_+_parallels_+_detection_+_loops
*CAT: n
*SEM: orRel[rel=guarantee_+_the_+_two_+_independent_+_parallels_+_detection_+_loops]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guide_+_identification
*CAT: n
*SEM: unaryRel[rel=guide_+_identification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guide_+_identification
*CAT: n
*SEM: twoRel[rel=guide_+_identification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guide_+_identification
*CAT: n
*SEM: twoRel[rel=guide_+_identification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guide_+_identification
*CAT: n
*SEM: orRel[rel=guide_+_identification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guiding_+_device
*CAT: n
*SEM: unaryRel[rel=guiding_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guiding_+_device
*CAT: n
*SEM: twoRel[rel=guiding_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guiding_+_device
*CAT: n
*SEM: twoRel[rel=guiding_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: guiding_+_device
*CAT: n
*SEM: orRel[rel=guiding_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness
*CAT: n
*SEM: unaryRel[rel=harness]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness
*CAT: n
*SEM: twoRel[rel=harness]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness
*CAT: n
*SEM: twoRel[rel=harness]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness
*CAT: n
*SEM: orRel[rel=harness]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_twisting
*CAT: n
*SEM: unaryRel[rel=harness_+_twisting]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_twisting
*CAT: n
*SEM: twoRel[rel=harness_+_twisting]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_twisting
*CAT: n
*SEM: twoRel[rel=harness_+_twisting]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_twisting
*CAT: n
*SEM: orRel[rel=harness_+_twisting]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: heat_+_shrinkable_+_cap
*CAT: n
*SEM: unaryRel[rel=heat_+_shrinkable_+_cap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: heat_+_shrinkable_+_cap
*CAT: n
*SEM: twoRel[rel=heat_+_shrinkable_+_cap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: heat_+_shrinkable_+_cap
*CAT: n
*SEM: twoRel[rel=heat_+_shrinkable_+_cap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: heat_+_shrinkable_+_cap
*CAT: n
*SEM: orRel[rel=heat_+_shrinkable_+_cap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: heat_+_shrinkable_+_cap_+_placed_+_on_+_each_+_end_+_nsa936603_+__+_opensb_+_recommended_+_solution_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=heat_+_shrinkable_+_cap_+_placed_+_on_+_each_+_end_+_nsa936603_+__+_opensb_+_recommended_+_solution_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: heat_+_shrinkable_+_cap_+_placed_+_on_+_each_+_end_+_nsa936603_+__+_opensb_+_recommended_+_solution_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=heat_+_shrinkable_+_cap_+_placed_+_on_+_each_+_end_+_nsa936603_+__+_opensb_+_recommended_+_solution_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: heat_+_shrinkable_+_cap_+_placed_+_on_+_each_+_end_+_nsa936603_+__+_opensb_+_recommended_+_solution_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=heat_+_shrinkable_+_cap_+_placed_+_on_+_each_+_end_+_nsa936603_+__+_opensb_+_recommended_+_solution_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: heat_+_shrinkable_+_cap_+_placed_+_on_+_each_+_end_+_nsa936603_+__+_opensb_+_recommended_+_solution_+_closesb_+_
*CAT: n
*SEM: orRel[rel=heat_+_shrinkable_+_cap_+_placed_+_on_+_each_+_end_+_nsa936603_+__+_opensb_+_recommended_+_solution_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: heat_+_shrinkable_+_cap_+_placed_+_on_+_each_+_end_+_nsa936603_+_opensb_+_recommended_+_solution_+_closesb
*CAT: n
*SEM: unaryRel[rel=heat_+_shrinkable_+_cap_+_placed_+_on_+_each_+_end_+_nsa936603_+_opensb_+_recommended_+_solution_+_closesb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: heat_+_shrinkable_+_cap_+_placed_+_on_+_each_+_end_+_nsa936603_+_opensb_+_recommended_+_solution_+_closesb
*CAT: n
*SEM: twoRel[rel=heat_+_shrinkable_+_cap_+_placed_+_on_+_each_+_end_+_nsa936603_+_opensb_+_recommended_+_solution_+_closesb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: heat_+_shrinkable_+_cap_+_placed_+_on_+_each_+_end_+_nsa936603_+_opensb_+_recommended_+_solution_+_closesb
*CAT: n
*SEM: twoRel[rel=heat_+_shrinkable_+_cap_+_placed_+_on_+_each_+_end_+_nsa936603_+_opensb_+_recommended_+_solution_+_closesb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: heat_+_shrinkable_+_cap_+_placed_+_on_+_each_+_end_+_nsa936603_+_opensb_+_recommended_+_solution_+_closesb
*CAT: n
*SEM: orRel[rel=heat_+_shrinkable_+_cap_+_placed_+_on_+_each_+_end_+_nsa936603_+_opensb_+_recommended_+_solution_+_closesb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hexagonal_+_bolt
*CAT: n
*SEM: unaryRel[rel=hexagonal_+_bolt]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hexagonal_+_bolt
*CAT: n
*SEM: twoRel[rel=hexagonal_+_bolt]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hexagonal_+_bolt
*CAT: n
*SEM: twoRel[rel=hexagonal_+_bolt]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hexagonal_+_bolt
*CAT: n
*SEM: orRel[rel=hexagonal_+_bolt]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hidden_+_zones
*CAT: n
*SEM: unaryRel[rel=hidden_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hidden_+_zones
*CAT: n
*SEM: twoRel[rel=hidden_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hidden_+_zones
*CAT: n
*SEM: twoRel[rel=hidden_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hidden_+_zones
*CAT: n
*SEM: orRel[rel=hidden_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_t_+_bobbin
*CAT: n
*SEM: unaryRel[rel=high_+_t_+_bobbin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_t_+_bobbin
*CAT: n
*SEM: twoRel[rel=high_+_t_+_bobbin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_t_+_bobbin
*CAT: n
*SEM: twoRel[rel=high_+_t_+_bobbin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_t_+_bobbin
*CAT: n
*SEM: orRel[rel=high_+_t_+_bobbin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_tâ°_+_bobbin
*CAT: n
*SEM: unaryRel[rel=high_+_tâ°_+_bobbin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_tâ°_+_bobbin
*CAT: n
*SEM: twoRel[rel=high_+_tâ°_+_bobbin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_tâ°_+_bobbin
*CAT: n
*SEM: twoRel[rel=high_+_tâ°_+_bobbin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_tâ°_+_bobbin
*CAT: n
*SEM: orRel[rel=high_+_tâ°_+_bobbin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_vibration_+_level_+_installation_+_areas
*CAT: n
*SEM: unaryRel[rel=high_+_vibration_+_level_+_installation_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_vibration_+_level_+_installation_+_areas
*CAT: n
*SEM: twoRel[rel=high_+_vibration_+_level_+_installation_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_vibration_+_level_+_installation_+_areas
*CAT: n
*SEM: twoRel[rel=high_+_vibration_+_level_+_installation_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: high_+_vibration_+_level_+_installation_+_areas
*CAT: n
*SEM: orRel[rel=high_+_vibration_+_level_+_installation_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: highly_+_resistive_+_unions
*CAT: n
*SEM: unaryRel[rel=highly_+_resistive_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: highly_+_resistive_+_unions
*CAT: n
*SEM: twoRel[rel=highly_+_resistive_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: highly_+_resistive_+_unions
*CAT: n
*SEM: twoRel[rel=highly_+_resistive_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: highly_+_resistive_+_unions
*CAT: n
*SEM: orRel[rel=highly_+_resistive_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hinge
*CAT: n
*SEM: unaryRel[rel=hinge]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hinge
*CAT: n
*SEM: twoRel[rel=hinge]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hinge
*CAT: n
*SEM: twoRel[rel=hinge]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hinge
*CAT: n
*SEM: orRel[rel=hinge]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: holes
*CAT: n
*SEM: unaryRel[rel=holes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: holes
*CAT: n
*SEM: twoRel[rel=holes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: holes
*CAT: n
*SEM: twoRel[rel=holes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: holes
*CAT: n
*SEM: orRel[rel=holes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_bundle_+_following_+_this_+_picture
*CAT: n
*SEM: unaryRel[rel=horizontal_+_bundle_+_following_+_this_+_picture]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_bundle_+_following_+_this_+_picture
*CAT: n
*SEM: twoRel[rel=horizontal_+_bundle_+_following_+_this_+_picture]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_bundle_+_following_+_this_+_picture
*CAT: n
*SEM: twoRel[rel=horizontal_+_bundle_+_following_+_this_+_picture]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_bundle_+_following_+_this_+_picture
*CAT: n
*SEM: orRel[rel=horizontal_+_bundle_+_following_+_this_+_picture]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_orientation
*CAT: n
*SEM: unaryRel[rel=horizontal_+_orientation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_orientation
*CAT: n
*SEM: twoRel[rel=horizontal_+_orientation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_orientation
*CAT: n
*SEM: twoRel[rel=horizontal_+_orientation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_orientation
*CAT: n
*SEM: orRel[rel=horizontal_+_orientation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_routing
*CAT: n
*SEM: unaryRel[rel=horizontal_+_routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_routing
*CAT: n
*SEM: twoRel[rel=horizontal_+_routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_routing
*CAT: n
*SEM: twoRel[rel=horizontal_+_routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_routing
*CAT: n
*SEM: orRel[rel=horizontal_+_routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_routing.
*CAT: n
*SEM: unaryRel[rel=horizontal_+_routing.]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_routing.
*CAT: n
*SEM: twoRel[rel=horizontal_+_routing.]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_routing.
*CAT: n
*SEM: twoRel[rel=horizontal_+_routing.]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: horizontal_+_routing.
*CAT: n
*SEM: orRel[rel=horizontal_+_routing.]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot
*CAT: n
*SEM: unaryRel[rel=hot]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot
*CAT: n
*SEM: twoRel[rel=hot]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot
*CAT: n
*SEM: twoRel[rel=hot]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot
*CAT: n
*SEM: orRel[rel=hot]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+__+_ampersand_+__+_fire_+_area
*CAT: n
*SEM: unaryRel[rel=hot_+__+_ampersand_+__+_fire_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+__+_ampersand_+__+_fire_+_area
*CAT: n
*SEM: twoRel[rel=hot_+__+_ampersand_+__+_fire_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+__+_ampersand_+__+_fire_+_area
*CAT: n
*SEM: twoRel[rel=hot_+__+_ampersand_+__+_fire_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+__+_ampersand_+__+_fire_+_area
*CAT: n
*SEM: orRel[rel=hot_+__+_ampersand_+__+_fire_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_zones
*CAT: n
*SEM: unaryRel[rel=hot_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_zones
*CAT: n
*SEM: twoRel[rel=hot_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_zones
*CAT: n
*SEM: twoRel[rel=hot_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_zones
*CAT: n
*SEM: orRel[rel=hot_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_ampersand_+_fire_+_area
*CAT: n
*SEM: unaryRel[rel=hot_+_ampersand_+_fire_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_ampersand_+_fire_+_area
*CAT: n
*SEM: twoRel[rel=hot_+_ampersand_+_fire_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_ampersand_+_fire_+_area
*CAT: n
*SEM: twoRel[rel=hot_+_ampersand_+_fire_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hot_+_ampersand_+_fire_+_area
*CAT: n
*SEM: orRel[rel=hot_+_ampersand_+_fire_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_areas
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_areas
*CAT: n
*SEM: twoRel[rel=hydraulic_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_areas
*CAT: n
*SEM: twoRel[rel=hydraulic_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_areas
*CAT: n
*SEM: orRel[rel=hydraulic_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_compartment
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_compartment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_compartment
*CAT: n
*SEM: twoRel[rel=hydraulic_+_compartment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_compartment
*CAT: n
*SEM: twoRel[rel=hydraulic_+_compartment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_compartment
*CAT: n
*SEM: orRel[rel=hydraulic_+_compartment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=hydraulic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=hydraulic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=hydraulic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_fluid
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_fluid]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_fluid
*CAT: n
*SEM: twoRel[rel=hydraulic_+_fluid]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_fluid
*CAT: n
*SEM: twoRel[rel=hydraulic_+_fluid]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_fluid
*CAT: n
*SEM: orRel[rel=hydraulic_+_fluid]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_pipes
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_pipes
*CAT: n
*SEM: twoRel[rel=hydraulic_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_pipes
*CAT: n
*SEM: twoRel[rel=hydraulic_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_pipes
*CAT: n
*SEM: orRel[rel=hydraulic_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_system_+_routings
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_system_+_routings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_system_+_routings
*CAT: n
*SEM: twoRel[rel=hydraulic_+_system_+_routings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_system_+_routings
*CAT: n
*SEM: twoRel[rel=hydraulic_+_system_+_routings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_system_+_routings
*CAT: n
*SEM: orRel[rel=hydraulic_+_system_+_routings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_zones
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_zones
*CAT: n
*SEM: twoRel[rel=hydraulic_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_zones
*CAT: n
*SEM: twoRel[rel=hydraulic_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: hydraulic_+_zones
*CAT: n
*SEM: orRel[rel=hydraulic_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification
*CAT: n
*SEM: unaryRel[rel=identification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification
*CAT: n
*SEM: twoRel[rel=identification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification
*CAT: n
*SEM: twoRel[rel=identification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification
*CAT: n
*SEM: orRel[rel=identification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_label
*CAT: n
*SEM: unaryRel[rel=identification_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_label
*CAT: n
*SEM: twoRel[rel=identification_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_label
*CAT: n
*SEM: twoRel[rel=identification_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_label
*CAT: n
*SEM: orRel[rel=identification_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_sleeve
*CAT: n
*SEM: unaryRel[rel=identification_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_sleeve
*CAT: n
*SEM: twoRel[rel=identification_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_sleeve
*CAT: n
*SEM: twoRel[rel=identification_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_sleeve
*CAT: n
*SEM: orRel[rel=identification_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_sleeve_+_marqued_+_with_+_spare_+_wire_+_at_+_each_+_end
*CAT: n
*SEM: unaryRel[rel=identification_+_sleeve_+_marqued_+_with_+_spare_+_wire_+_at_+_each_+_end]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_sleeve_+_marqued_+_with_+_spare_+_wire_+_at_+_each_+_end
*CAT: n
*SEM: twoRel[rel=identification_+_sleeve_+_marqued_+_with_+_spare_+_wire_+_at_+_each_+_end]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_sleeve_+_marqued_+_with_+_spare_+_wire_+_at_+_each_+_end
*CAT: n
*SEM: twoRel[rel=identification_+_sleeve_+_marqued_+_with_+_spare_+_wire_+_at_+_each_+_end]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification_+_sleeve_+_marqued_+_with_+_spare_+_wire_+_at_+_each_+_end
*CAT: n
*SEM: orRel[rel=identification_+_sleeve_+_marqued_+_with_+_spare_+_wire_+_at_+_each_+_end]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identify_+_bundle_+_in_+_small_+_vu
*CAT: n
*SEM: unaryRel[rel=identify_+_bundle_+_in_+_small_+_vu]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identify_+_bundle_+_in_+_small_+_vu
*CAT: n
*SEM: twoRel[rel=identify_+_bundle_+_in_+_small_+_vu]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identify_+_bundle_+_in_+_small_+_vu
*CAT: n
*SEM: twoRel[rel=identify_+_bundle_+_in_+_small_+_vu]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identify_+_bundle_+_in_+_small_+_vu
*CAT: n
*SEM: orRel[rel=identify_+_bundle_+_in_+_small_+_vu]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: if_+_bracket
*CAT: n
*SEM: unaryRel[rel=if_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: if_+_bracket
*CAT: n
*SEM: twoRel[rel=if_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: if_+_bracket
*CAT: n
*SEM: twoRel[rel=if_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: if_+_bracket
*CAT: n
*SEM: orRel[rel=if_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_general
*CAT: n
*SEM: unaryRel[rel=in_+_general]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_general
*CAT: n
*SEM: twoRel[rel=in_+_general]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_general
*CAT: n
*SEM: twoRel[rel=in_+_general]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_general
*CAT: n
*SEM: orRel[rel=in_+_general]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_pink_+_color
*CAT: n
*SEM: unaryRel[rel=in_+_pink_+_color]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_pink_+_color
*CAT: n
*SEM: twoRel[rel=in_+_pink_+_color]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_pink_+_color
*CAT: n
*SEM: twoRel[rel=in_+_pink_+_color]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_pink_+_color
*CAT: n
*SEM: orRel[rel=in_+_pink_+_color]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_red_+_color
*CAT: n
*SEM: unaryRel[rel=in_+_red_+_color]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_red_+_color
*CAT: n
*SEM: twoRel[rel=in_+_red_+_color]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_red_+_color
*CAT: n
*SEM: twoRel[rel=in_+_red_+_color]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_red_+_color
*CAT: n
*SEM: orRel[rel=in_+_red_+_color]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_siri_+_application
*CAT: n
*SEM: unaryRel[rel=in_+_siri_+_application]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_siri_+_application
*CAT: n
*SEM: twoRel[rel=in_+_siri_+_application]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_siri_+_application
*CAT: n
*SEM: twoRel[rel=in_+_siri_+_application]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_siri_+_application
*CAT: n
*SEM: orRel[rel=in_+_siri_+_application]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaged_+_pipes
*CAT: n
*SEM: unaryRel[rel=in-situ_+_swaged_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaged_+_pipes
*CAT: n
*SEM: twoRel[rel=in-situ_+_swaged_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaged_+_pipes
*CAT: n
*SEM: twoRel[rel=in-situ_+_swaged_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaged_+_pipes
*CAT: n
*SEM: orRel[rel=in-situ_+_swaged_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaged_+_unions
*CAT: n
*SEM: unaryRel[rel=in-situ_+_swaged_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaged_+_unions
*CAT: n
*SEM: twoRel[rel=in-situ_+_swaged_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaged_+_unions
*CAT: n
*SEM: twoRel[rel=in-situ_+_swaged_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaged_+_unions
*CAT: n
*SEM: orRel[rel=in-situ_+_swaged_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaging
*CAT: n
*SEM: unaryRel[rel=in-situ_+_swaging]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaging
*CAT: n
*SEM: twoRel[rel=in-situ_+_swaging]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaging
*CAT: n
*SEM: twoRel[rel=in-situ_+_swaging]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in-situ_+_swaging
*CAT: n
*SEM: orRel[rel=in-situ_+_swaging]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: incisions
*CAT: n
*SEM: unaryRel[rel=incisions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: incisions
*CAT: n
*SEM: twoRel[rel=incisions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: incisions
*CAT: n
*SEM: twoRel[rel=incisions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: incisions
*CAT: n
*SEM: orRel[rel=incisions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: independant_+_bracket
*CAT: n
*SEM: unaryRel[rel=independant_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: independant_+_bracket
*CAT: n
*SEM: twoRel[rel=independant_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: independant_+_bracket
*CAT: n
*SEM: twoRel[rel=independant_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: independant_+_bracket
*CAT: n
*SEM: orRel[rel=independant_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: independent_+_parallel_+_detection_+_loops
*CAT: n
*SEM: unaryRel[rel=independent_+_parallel_+_detection_+_loops]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: independent_+_parallel_+_detection_+_loops
*CAT: n
*SEM: twoRel[rel=independent_+_parallel_+_detection_+_loops]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: independent_+_parallel_+_detection_+_loops
*CAT: n
*SEM: twoRel[rel=independent_+_parallel_+_detection_+_loops]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: independent_+_parallel_+_detection_+_loops
*CAT: n
*SEM: orRel[rel=independent_+_parallel_+_detection_+_loops]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: information
*CAT: n
*SEM: unaryRel[rel=information]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: information
*CAT: n
*SEM: twoRel[rel=information]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: information
*CAT: n
*SEM: twoRel[rel=information]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: information
*CAT: n
*SEM: orRel[rel=information]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_equipment
*CAT: n
*SEM: unaryRel[rel=inside_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_equipment
*CAT: n
*SEM: twoRel[rel=inside_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_equipment
*CAT: n
*SEM: twoRel[rel=inside_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_equipment
*CAT: n
*SEM: orRel[rel=inside_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_fluel_+_tank_+_or
*CAT: n
*SEM: unaryRel[rel=inside_+_fluel_+_tank_+_or]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_fluel_+_tank_+_or
*CAT: n
*SEM: twoRel[rel=inside_+_fluel_+_tank_+_or]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_fluel_+_tank_+_or
*CAT: n
*SEM: twoRel[rel=inside_+_fluel_+_tank_+_or]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside_+_fluel_+_tank_+_or
*CAT: n
*SEM: orRel[rel=inside_+_fluel_+_tank_+_or]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulated_+_bracket
*CAT: n
*SEM: unaryRel[rel=insulated_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulated_+_bracket
*CAT: n
*SEM: twoRel[rel=insulated_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulated_+_bracket
*CAT: n
*SEM: twoRel[rel=insulated_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulated_+_bracket
*CAT: n
*SEM: orRel[rel=insulated_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation
*CAT: n
*SEM: unaryRel[rel=insulation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation
*CAT: n
*SEM: twoRel[rel=insulation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation
*CAT: n
*SEM: twoRel[rel=insulation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation
*CAT: n
*SEM: orRel[rel=insulation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface
*CAT: n
*SEM: unaryRel[rel=interface]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface
*CAT: n
*SEM: twoRel[rel=interface]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface
*CAT: n
*SEM: twoRel[rel=interface]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface
*CAT: n
*SEM: orRel[rel=interface]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_areas
*CAT: n
*SEM: unaryRel[rel=interface_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_areas
*CAT: n
*SEM: twoRel[rel=interface_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_areas
*CAT: n
*SEM: twoRel[rel=interface_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_areas
*CAT: n
*SEM: orRel[rel=interface_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_plate
*CAT: n
*SEM: unaryRel[rel=interface_+_plate]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_plate
*CAT: n
*SEM: twoRel[rel=interface_+_plate]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_plate
*CAT: n
*SEM: twoRel[rel=interface_+_plate]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_plate
*CAT: n
*SEM: orRel[rel=interface_+_plate]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_bobbin
*CAT: n
*SEM: unaryRel[rel=intermediate_+_bobbin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_bobbin
*CAT: n
*SEM: twoRel[rel=intermediate_+_bobbin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_bobbin
*CAT: n
*SEM: twoRel[rel=intermediate_+_bobbin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_bobbin
*CAT: n
*SEM: orRel[rel=intermediate_+_bobbin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_bracket
*CAT: n
*SEM: unaryRel[rel=intermediate_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=intermediate_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=intermediate_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_bracket
*CAT: n
*SEM: orRel[rel=intermediate_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_p-clamp
*CAT: n
*SEM: unaryRel[rel=intermediate_+_p-clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_p-clamp
*CAT: n
*SEM: twoRel[rel=intermediate_+_p-clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_p-clamp
*CAT: n
*SEM: twoRel[rel=intermediate_+_p-clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: intermediate_+_p-clamp
*CAT: n
*SEM: orRel[rel=intermediate_+_p-clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interrupted_+_closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_at_+_nsa_+_934710_+_pressure_+_seal
*CAT: n
*SEM: unaryRel[rel=interrupted_+_closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_at_+_nsa_+_934710_+_pressure_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interrupted_+_closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_at_+_nsa_+_934710_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=interrupted_+_closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_at_+_nsa_+_934710_+_pressure_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interrupted_+_closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_at_+_nsa_+_934710_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=interrupted_+_closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_at_+_nsa_+_934710_+_pressure_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interrupted_+_closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_at_+_nsa_+_934710_+_pressure_+_seal
*CAT: n
*SEM: orRel[rel=interrupted_+_closed_+_backslash_+_convoluted_+_conduit_+_backslash_+_sleeve_+_at_+_nsa_+_934710_+_pressure_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: item
*CAT: n
*SEM: unaryRel[rel=item]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: item
*CAT: n
*SEM: twoRel[rel=item]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: item
*CAT: n
*SEM: twoRel[rel=item]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: item
*CAT: n
*SEM: orRel[rel=item]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: jam_+_nut_+_connector
*CAT: n
*SEM: unaryRel[rel=jam_+_nut_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: jam_+_nut_+_connector
*CAT: n
*SEM: twoRel[rel=jam_+_nut_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: jam_+_nut_+_connector
*CAT: n
*SEM: twoRel[rel=jam_+_nut_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: jam_+_nut_+_connector
*CAT: n
*SEM: orRel[rel=jam_+_nut_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction
*CAT: n
*SEM: unaryRel[rel=junction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction
*CAT: n
*SEM: twoRel[rel=junction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction
*CAT: n
*SEM: twoRel[rel=junction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction
*CAT: n
*SEM: orRel[rel=junction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction_+_zones
*CAT: n
*SEM: unaryRel[rel=junction_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction_+_zones
*CAT: n
*SEM: twoRel[rel=junction_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction_+_zones
*CAT: n
*SEM: twoRel[rel=junction_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: junction_+_zones
*CAT: n
*SEM: orRel[rel=junction_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: kevlar_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=kevlar_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: kevlar_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=kevlar_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: kevlar_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=kevlar_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: kevlar_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=kevlar_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label
*CAT: n
*SEM: unaryRel[rel=label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label
*CAT: n
*SEM: twoRel[rel=label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label
*CAT: n
*SEM: twoRel[rel=label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label
*CAT: n
*SEM: orRel[rel=label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_according
*CAT: n
*SEM: unaryRel[rel=label_+_according]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_according
*CAT: n
*SEM: twoRel[rel=label_+_according]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_according
*CAT: n
*SEM: twoRel[rel=label_+_according]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_according
*CAT: n
*SEM: orRel[rel=label_+_according]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_fitted_+_near_+_that_+_receptable_+_with_+_white_+_background_+_printed_+_in_+_black
*CAT: n
*SEM: unaryRel[rel=label_+_fitted_+_near_+_that_+_receptable_+_with_+_white_+_background_+_printed_+_in_+_black]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_fitted_+_near_+_that_+_receptable_+_with_+_white_+_background_+_printed_+_in_+_black
*CAT: n
*SEM: twoRel[rel=label_+_fitted_+_near_+_that_+_receptable_+_with_+_white_+_background_+_printed_+_in_+_black]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_fitted_+_near_+_that_+_receptable_+_with_+_white_+_background_+_printed_+_in_+_black
*CAT: n
*SEM: twoRel[rel=label_+_fitted_+_near_+_that_+_receptable_+_with_+_white_+_background_+_printed_+_in_+_black]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label_+_fitted_+_near_+_that_+_receptable_+_with_+_white_+_background_+_printed_+_in_+_black
*CAT: n
*SEM: orRel[rel=label_+_fitted_+_near_+_that_+_receptable_+_with_+_white_+_background_+_printed_+_in_+_black]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lacing_+_tape
*CAT: n
*SEM: unaryRel[rel=lacing_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lacing_+_tape
*CAT: n
*SEM: twoRel[rel=lacing_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lacing_+_tape
*CAT: n
*SEM: twoRel[rel=lacing_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lacing_+_tape
*CAT: n
*SEM: orRel[rel=lacing_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: landing_+_gear_+_bay
*CAT: n
*SEM: unaryRel[rel=landing_+_gear_+_bay]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: landing_+_gear_+_bay
*CAT: n
*SEM: twoRel[rel=landing_+_gear_+_bay]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: landing_+_gear_+_bay
*CAT: n
*SEM: twoRel[rel=landing_+_gear_+_bay]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: landing_+_gear_+_bay
*CAT: n
*SEM: orRel[rel=landing_+_gear_+_bay]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lanyard
*CAT: n
*SEM: unaryRel[rel=lanyard]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lanyard
*CAT: n
*SEM: twoRel[rel=lanyard]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lanyard
*CAT: n
*SEM: twoRel[rel=lanyard]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lanyard
*CAT: n
*SEM: orRel[rel=lanyard]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_gauge_+_contact
*CAT: n
*SEM: unaryRel[rel=large_+_gauge_+_contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_gauge_+_contact
*CAT: n
*SEM: twoRel[rel=large_+_gauge_+_contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_gauge_+_contact
*CAT: n
*SEM: twoRel[rel=large_+_gauge_+_contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_gauge_+_contact
*CAT: n
*SEM: orRel[rel=large_+_gauge_+_contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_vu
*CAT: n
*SEM: unaryRel[rel=large_+_vu]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_vu
*CAT: n
*SEM: twoRel[rel=large_+_vu]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_vu
*CAT: n
*SEM: twoRel[rel=large_+_vu]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_vu
*CAT: n
*SEM: orRel[rel=large_+_vu]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_vu_+_following_+_the_+_rules
*CAT: n
*SEM: unaryRel[rel=large_+_vu_+_following_+_the_+_rules]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_vu_+_following_+_the_+_rules
*CAT: n
*SEM: twoRel[rel=large_+_vu_+_following_+_the_+_rules]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_vu_+_following_+_the_+_rules
*CAT: n
*SEM: twoRel[rel=large_+_vu_+_following_+_the_+_rules]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: large_+_vu_+_following_+_the_+_rules
*CAT: n
*SEM: orRel[rel=large_+_vu_+_following_+_the_+_rules]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: leaky_+_line
*CAT: n
*SEM: unaryRel[rel=leaky_+_line]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: leaky_+_line
*CAT: n
*SEM: twoRel[rel=leaky_+_line]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: leaky_+_line
*CAT: n
*SEM: twoRel[rel=leaky_+_line]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: leaky_+_line
*CAT: n
*SEM: orRel[rel=leaky_+_line]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_removable_+_end_+_opensb_+_e.g._+_connector
*CAT: n
*SEM: unaryRel[rel=least_+_one_+_removable_+_end_+_opensb_+_e.g._+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_removable_+_end_+_opensb_+_e.g._+_connector
*CAT: n
*SEM: twoRel[rel=least_+_one_+_removable_+_end_+_opensb_+_e.g._+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_removable_+_end_+_opensb_+_e.g._+_connector
*CAT: n
*SEM: twoRel[rel=least_+_one_+_removable_+_end_+_opensb_+_e.g._+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: least_+_one_+_removable_+_end_+_opensb_+_e.g._+_connector
*CAT: n
*SEM: orRel[rel=least_+_one_+_removable_+_end_+_opensb_+_e.g._+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l_+_greaterthan_+_3
*CAT: n
*SEM: unaryRel[rel=length_+_l_+_greaterthan_+_3]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l_+_greaterthan_+_3
*CAT: n
*SEM: twoRel[rel=length_+_l_+_greaterthan_+_3]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l_+_greaterthan_+_3
*CAT: n
*SEM: twoRel[rel=length_+_l_+_greaterthan_+_3]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: length_+_l_+_greaterthan_+_3
*CAT: n
*SEM: orRel[rel=length_+_l_+_greaterthan_+_3]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line_+_with_+_bundle
*CAT: n
*SEM: unaryRel[rel=line_+_with_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line_+_with_+_bundle
*CAT: n
*SEM: twoRel[rel=line_+_with_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line_+_with_+_bundle
*CAT: n
*SEM: twoRel[rel=line_+_with_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line_+_with_+_bundle
*CAT: n
*SEM: orRel[rel=line_+_with_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line_+_with_+_electrical_+_bundle
*CAT: n
*SEM: unaryRel[rel=line_+_with_+_electrical_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line_+_with_+_electrical_+_bundle
*CAT: n
*SEM: twoRel[rel=line_+_with_+_electrical_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line_+_with_+_electrical_+_bundle
*CAT: n
*SEM: twoRel[rel=line_+_with_+_electrical_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line_+_with_+_electrical_+_bundle
*CAT: n
*SEM: orRel[rel=line_+_with_+_electrical_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line_+_with_+_electrical_+_bundle_+_ensuring_+_that_+_they_+_are
*CAT: n
*SEM: unaryRel[rel=line_+_with_+_electrical_+_bundle_+_ensuring_+_that_+_they_+_are]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line_+_with_+_electrical_+_bundle_+_ensuring_+_that_+_they_+_are
*CAT: n
*SEM: twoRel[rel=line_+_with_+_electrical_+_bundle_+_ensuring_+_that_+_they_+_are]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line_+_with_+_electrical_+_bundle_+_ensuring_+_that_+_they_+_are
*CAT: n
*SEM: twoRel[rel=line_+_with_+_electrical_+_bundle_+_ensuring_+_that_+_they_+_are]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line_+_with_+_electrical_+_bundle_+_ensuring_+_that_+_they_+_are
*CAT: n
*SEM: orRel[rel=line_+_with_+_electrical_+_bundle_+_ensuring_+_that_+_they_+_are]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line_+_with_+_the_+_table_+_below
*CAT: n
*SEM: unaryRel[rel=line_+_with_+_the_+_table_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line_+_with_+_the_+_table_+_below
*CAT: n
*SEM: twoRel[rel=line_+_with_+_the_+_table_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line_+_with_+_the_+_table_+_below
*CAT: n
*SEM: twoRel[rel=line_+_with_+_the_+_table_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: line_+_with_+_the_+_table_+_below
*CAT: n
*SEM: orRel[rel=line_+_with_+_the_+_table_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap
*CAT: n
*SEM: unaryRel[rel=loap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap
*CAT: n
*SEM: twoRel[rel=loap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap
*CAT: n
*SEM: twoRel[rel=loap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap
*CAT: n
*SEM: orRel[rel=loap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_from_+_0
*CAT: n
*SEM: unaryRel[rel=loap_+_from_+_0]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_from_+_0
*CAT: n
*SEM: twoRel[rel=loap_+_from_+_0]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_from_+_0
*CAT: n
*SEM: twoRel[rel=loap_+_from_+_0]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_from_+_0
*CAT: n
*SEM: orRel[rel=loap_+_from_+_0]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_from_+_0â°
*CAT: n
*SEM: unaryRel[rel=loap_+_from_+_0â°]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_from_+_0â°
*CAT: n
*SEM: twoRel[rel=loap_+_from_+_0â°]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_from_+_0â°
*CAT: n
*SEM: twoRel[rel=loap_+_from_+_0â°]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_from_+_0â°
*CAT: n
*SEM: orRel[rel=loap_+_from_+_0â°]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_with_+_a_+_clearance
*CAT: n
*SEM: unaryRel[rel=loap_+_with_+_a_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_with_+_a_+_clearance
*CAT: n
*SEM: twoRel[rel=loap_+_with_+_a_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_with_+_a_+_clearance
*CAT: n
*SEM: twoRel[rel=loap_+_with_+_a_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_with_+_a_+_clearance
*CAT: n
*SEM: orRel[rel=loap_+_with_+_a_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_with_+_a_+_clearance_+_of_+_d_+_greaterthan_+__+_equalto_+__+_10mm_+_after_+_loss_+_of_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=loap_+_with_+_a_+_clearance_+_of_+_d_+_greaterthan_+__+_equalto_+__+_10mm_+_after_+_loss_+_of_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_with_+_a_+_clearance_+_of_+_d_+_greaterthan_+__+_equalto_+__+_10mm_+_after_+_loss_+_of_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=loap_+_with_+_a_+_clearance_+_of_+_d_+_greaterthan_+__+_equalto_+__+_10mm_+_after_+_loss_+_of_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_with_+_a_+_clearance_+_of_+_d_+_greaterthan_+__+_equalto_+__+_10mm_+_after_+_loss_+_of_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=loap_+_with_+_a_+_clearance_+_of_+_d_+_greaterthan_+__+_equalto_+__+_10mm_+_after_+_loss_+_of_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_with_+_a_+_clearance_+_of_+_d_+_greaterthan_+__+_equalto_+__+_10mm_+_after_+_loss_+_of_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=loap_+_with_+_a_+_clearance_+_of_+_d_+_greaterthan_+__+_equalto_+__+_10mm_+_after_+_loss_+_of_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_with_+_a_+_clearance_+_of_+_d_+_greaterthan_+_equalto_+_10mm_+_after_+_loss_+_of_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=loap_+_with_+_a_+_clearance_+_of_+_d_+_greaterthan_+_equalto_+_10mm_+_after_+_loss_+_of_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_with_+_a_+_clearance_+_of_+_d_+_greaterthan_+_equalto_+_10mm_+_after_+_loss_+_of_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=loap_+_with_+_a_+_clearance_+_of_+_d_+_greaterthan_+_equalto_+_10mm_+_after_+_loss_+_of_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_with_+_a_+_clearance_+_of_+_d_+_greaterthan_+_equalto_+_10mm_+_after_+_loss_+_of_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=loap_+_with_+_a_+_clearance_+_of_+_d_+_greaterthan_+_equalto_+_10mm_+_after_+_loss_+_of_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_with_+_a_+_clearance_+_of_+_d_+_greaterthan_+_equalto_+_10mm_+_after_+_loss_+_of_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=loap_+_with_+_a_+_clearance_+_of_+_d_+_greaterthan_+_equalto_+_10mm_+_after_+_loss_+_of_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_with_+_clearance
*CAT: n
*SEM: unaryRel[rel=loap_+_with_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_with_+_clearance
*CAT: n
*SEM: twoRel[rel=loap_+_with_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_with_+_clearance
*CAT: n
*SEM: twoRel[rel=loap_+_with_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loap_+_with_+_clearance
*CAT: n
*SEM: orRel[rel=loap_+_with_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: local_+_protection_+_without_+_derivation
*CAT: n
*SEM: unaryRel[rel=local_+_protection_+_without_+_derivation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: local_+_protection_+_without_+_derivation
*CAT: n
*SEM: twoRel[rel=local_+_protection_+_without_+_derivation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: local_+_protection_+_without_+_derivation
*CAT: n
*SEM: twoRel[rel=local_+_protection_+_without_+_derivation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: local_+_protection_+_without_+_derivation
*CAT: n
*SEM: orRel[rel=local_+_protection_+_without_+_derivation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: location
*CAT: n
*SEM: unaryRel[rel=location]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: location
*CAT: n
*SEM: twoRel[rel=location]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: location
*CAT: n
*SEM: twoRel[rel=location]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: location
*CAT: n
*SEM: orRel[rel=location]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: location_+_of_+_a_+_bracket
*CAT: n
*SEM: unaryRel[rel=location_+_of_+_a_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: location_+_of_+_a_+_bracket
*CAT: n
*SEM: twoRel[rel=location_+_of_+_a_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: location_+_of_+_a_+_bracket
*CAT: n
*SEM: twoRel[rel=location_+_of_+_a_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: location_+_of_+_a_+_bracket
*CAT: n
*SEM: orRel[rel=location_+_of_+_a_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lock_+_wire
*CAT: n
*SEM: unaryRel[rel=lock_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lock_+_wire
*CAT: n
*SEM: twoRel[rel=lock_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lock_+_wire
*CAT: n
*SEM: twoRel[rel=lock_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: lock_+_wire
*CAT: n
*SEM: orRel[rel=lock_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locking
*CAT: n
*SEM: unaryRel[rel=locking]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locking
*CAT: n
*SEM: twoRel[rel=locking]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locking
*CAT: n
*SEM: twoRel[rel=locking]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: locking
*CAT: n
*SEM: orRel[rel=locking]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: long_+_straight_+_pipes
*CAT: n
*SEM: unaryRel[rel=long_+_straight_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: long_+_straight_+_pipes
*CAT: n
*SEM: twoRel[rel=long_+_straight_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: long_+_straight_+_pipes
*CAT: n
*SEM: twoRel[rel=long_+_straight_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: long_+_straight_+_pipes
*CAT: n
*SEM: orRel[rel=long_+_straight_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: looking_+_at_+_the_+_fixed_+_connector_+_from_+_the_+_front_+_view_+_comma
*CAT: n
*SEM: unaryRel[rel=looking_+_at_+_the_+_fixed_+_connector_+_from_+_the_+_front_+_view_+_comma]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: looking_+_at_+_the_+_fixed_+_connector_+_from_+_the_+_front_+_view_+_comma
*CAT: n
*SEM: twoRel[rel=looking_+_at_+_the_+_fixed_+_connector_+_from_+_the_+_front_+_view_+_comma]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: looking_+_at_+_the_+_fixed_+_connector_+_from_+_the_+_front_+_view_+_comma
*CAT: n
*SEM: twoRel[rel=looking_+_at_+_the_+_fixed_+_connector_+_from_+_the_+_front_+_view_+_comma]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: looking_+_at_+_the_+_fixed_+_connector_+_from_+_the_+_front_+_view_+_comma
*CAT: n
*SEM: orRel[rel=looking_+_at_+_the_+_fixed_+_connector_+_from_+_the_+_front_+_view_+_comma]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_point
*CAT: n
*SEM: unaryRel[rel=low_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_point
*CAT: n
*SEM: twoRel[rel=low_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_point
*CAT: n
*SEM: twoRel[rel=low_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_point
*CAT: n
*SEM: orRel[rel=low_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_t_+_bobbin
*CAT: n
*SEM: unaryRel[rel=low_+_t_+_bobbin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_t_+_bobbin
*CAT: n
*SEM: twoRel[rel=low_+_t_+_bobbin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_t_+_bobbin
*CAT: n
*SEM: twoRel[rel=low_+_t_+_bobbin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_t_+_bobbin
*CAT: n
*SEM: orRel[rel=low_+_t_+_bobbin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_tâ°_+_bobbin
*CAT: n
*SEM: unaryRel[rel=low_+_tâ°_+_bobbin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_tâ°_+_bobbin
*CAT: n
*SEM: twoRel[rel=low_+_tâ°_+_bobbin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_tâ°_+_bobbin
*CAT: n
*SEM: twoRel[rel=low_+_tâ°_+_bobbin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: low_+_tâ°_+_bobbin
*CAT: n
*SEM: orRel[rel=low_+_tâ°_+_bobbin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m
*CAT: n
*SEM: unaryRel[rel=m]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m
*CAT: n
*SEM: twoRel[rel=m]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m
*CAT: n
*SEM: twoRel[rel=m]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m
*CAT: n
*SEM: orRel[rel=m]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m_+_routes
*CAT: n
*SEM: unaryRel[rel=m_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m_+_routes
*CAT: n
*SEM: twoRel[rel=m_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m_+_routes
*CAT: n
*SEM: twoRel[rel=m_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m_+_routes
*CAT: n
*SEM: orRel[rel=m_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m-route
*CAT: n
*SEM: unaryRel[rel=m-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m-route
*CAT: n
*SEM: twoRel[rel=m-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m-route
*CAT: n
*SEM: twoRel[rel=m-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: m-route
*CAT: n
*SEM: orRel[rel=m-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: male_+_end_+_union
*CAT: n
*SEM: unaryRel[rel=male_+_end_+_union]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: male_+_end_+_union
*CAT: n
*SEM: twoRel[rel=male_+_end_+_union]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: male_+_end_+_union
*CAT: n
*SEM: twoRel[rel=male_+_end_+_union]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: male_+_end_+_union
*CAT: n
*SEM: orRel[rel=male_+_end_+_union]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_key_+_way
*CAT: n
*SEM: unaryRel[rel=master_+_key_+_way]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_key_+_way
*CAT: n
*SEM: twoRel[rel=master_+_key_+_way]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_key_+_way
*CAT: n
*SEM: twoRel[rel=master_+_key_+_way]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_key_+_way
*CAT: n
*SEM: orRel[rel=master_+_key_+_way]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: material
*CAT: n
*SEM: unaryRel[rel=material]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: material
*CAT: n
*SEM: twoRel[rel=material]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: material
*CAT: n
*SEM: twoRel[rel=material]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: material
*CAT: n
*SEM: orRel[rel=material]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_65_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge
*CAT: n
*SEM: unaryRel[rel=max_+_65_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_65_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge
*CAT: n
*SEM: twoRel[rel=max_+_65_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_65_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge
*CAT: n
*SEM: twoRel[rel=max_+_65_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_65_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge
*CAT: n
*SEM: orRel[rel=max_+_65_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_65_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge
*CAT: n
*SEM: unaryRel[rel=max_+_65_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_65_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge
*CAT: n
*SEM: twoRel[rel=max_+_65_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_65_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge
*CAT: n
*SEM: twoRel[rel=max_+_65_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_65_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge
*CAT: n
*SEM: orRel[rel=max_+_65_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_wing_+_trailing_+_edge]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_fuselage
*CAT: n
*SEM: unaryRel[rel=max_+_80_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_fuselage]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_fuselage
*CAT: n
*SEM: twoRel[rel=max_+_80_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_fuselage]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_fuselage
*CAT: n
*SEM: twoRel[rel=max_+_80_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_fuselage]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_fuselage
*CAT: n
*SEM: orRel[rel=max_+_80_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_fuselage]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge
*CAT: n
*SEM: unaryRel[rel=max_+_80_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge
*CAT: n
*SEM: twoRel[rel=max_+_80_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge
*CAT: n
*SEM: twoRel[rel=max_+_80_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge
*CAT: n
*SEM: orRel[rel=max_+_80_+_percent_+__+_fillrate_+_including_+_20_+_percent_+__+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_fuselage
*CAT: n
*SEM: unaryRel[rel=max_+_80_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_fuselage]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_fuselage
*CAT: n
*SEM: twoRel[rel=max_+_80_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_fuselage]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_fuselage
*CAT: n
*SEM: twoRel[rel=max_+_80_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_fuselage]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_fuselage
*CAT: n
*SEM: orRel[rel=max_+_80_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_fuselage]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge
*CAT: n
*SEM: unaryRel[rel=max_+_80_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge
*CAT: n
*SEM: twoRel[rel=max_+_80_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge
*CAT: n
*SEM: twoRel[rel=max_+_80_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: max_+_80_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge
*CAT: n
*SEM: orRel[rel=max_+_80_+_percent_+_fillrate_+_including_+_20_+_percent_+_capacity_+_of_+_growth_+_in_+_wing_+_leading_+_edge]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_5_+_pipes
*CAT: n
*SEM: unaryRel[rel=maximum_+_5_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_5_+_pipes
*CAT: n
*SEM: twoRel[rel=maximum_+_5_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_5_+_pipes
*CAT: n
*SEM: twoRel[rel=maximum_+_5_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_5_+_pipes
*CAT: n
*SEM: orRel[rel=maximum_+_5_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_one_+_elbow_+_fitting
*CAT: n
*SEM: unaryRel[rel=maximum_+_one_+_elbow_+_fitting]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_one_+_elbow_+_fitting
*CAT: n
*SEM: twoRel[rel=maximum_+_one_+_elbow_+_fitting]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_one_+_elbow_+_fitting
*CAT: n
*SEM: twoRel[rel=maximum_+_one_+_elbow_+_fitting]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_one_+_elbow_+_fitting
*CAT: n
*SEM: orRel[rel=maximum_+_one_+_elbow_+_fitting]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch
*CAT: n
*SEM: unaryRel[rel=maximum_+_pitch]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch
*CAT: n
*SEM: twoRel[rel=maximum_+_pitch]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch
*CAT: n
*SEM: twoRel[rel=maximum_+_pitch]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_pitch
*CAT: n
*SEM: orRel[rel=maximum_+_pitch]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_three_+_derivation_+_at_+_a_+_single_+_position
*CAT: n
*SEM: unaryRel[rel=maximum_+_three_+_derivation_+_at_+_a_+_single_+_position]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_three_+_derivation_+_at_+_a_+_single_+_position
*CAT: n
*SEM: twoRel[rel=maximum_+_three_+_derivation_+_at_+_a_+_single_+_position]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_three_+_derivation_+_at_+_a_+_single_+_position
*CAT: n
*SEM: twoRel[rel=maximum_+_three_+_derivation_+_at_+_a_+_single_+_position]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_three_+_derivation_+_at_+_a_+_single_+_position
*CAT: n
*SEM: orRel[rel=maximum_+_three_+_derivation_+_at_+_a_+_single_+_position]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_three_+_terminal_+_lug
*CAT: n
*SEM: unaryRel[rel=maximum_+_three_+_terminal_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_three_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=maximum_+_three_+_terminal_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_three_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=maximum_+_three_+_terminal_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: maximum_+_three_+_terminal_+_lug
*CAT: n
*SEM: orRel[rel=maximum_+_three_+_terminal_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_ata
*CAT: n
*SEM: unaryRel[rel=mechanical_+_ata]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_ata
*CAT: n
*SEM: twoRel[rel=mechanical_+_ata]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_ata
*CAT: n
*SEM: twoRel[rel=mechanical_+_ata]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_ata
*CAT: n
*SEM: orRel[rel=mechanical_+_ata]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_cable
*CAT: n
*SEM: unaryRel[rel=mechanical_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_cable
*CAT: n
*SEM: twoRel[rel=mechanical_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_cable
*CAT: n
*SEM: twoRel[rel=mechanical_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_cable
*CAT: n
*SEM: orRel[rel=mechanical_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_loads
*CAT: n
*SEM: unaryRel[rel=mechanical_+_loads]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_loads
*CAT: n
*SEM: twoRel[rel=mechanical_+_loads]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_loads
*CAT: n
*SEM: twoRel[rel=mechanical_+_loads]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_loads
*CAT: n
*SEM: orRel[rel=mechanical_+_loads]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection
*CAT: n
*SEM: unaryRel[rel=mechanical_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection
*CAT: n
*SEM: twoRel[rel=mechanical_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection
*CAT: n
*SEM: twoRel[rel=mechanical_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection
*CAT: n
*SEM: orRel[rel=mechanical_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_between_+_the_+_two_+_fixpoints
*CAT: n
*SEM: unaryRel[rel=mechanical_+_protection_+_between_+_the_+_two_+_fixpoints]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_between_+_the_+_two_+_fixpoints
*CAT: n
*SEM: twoRel[rel=mechanical_+_protection_+_between_+_the_+_two_+_fixpoints]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_between_+_the_+_two_+_fixpoints
*CAT: n
*SEM: twoRel[rel=mechanical_+_protection_+_between_+_the_+_two_+_fixpoints]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_between_+_the_+_two_+_fixpoints
*CAT: n
*SEM: orRel[rel=mechanical_+_protection_+_between_+_the_+_two_+_fixpoints]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_from_+_the_+_last_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=mechanical_+_protection_+_from_+_the_+_last_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_from_+_the_+_last_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=mechanical_+_protection_+_from_+_the_+_last_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_from_+_the_+_last_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=mechanical_+_protection_+_from_+_the_+_last_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_from_+_the_+_last_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=mechanical_+_protection_+_from_+_the_+_last_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_in_+_the_+_dynaomic_+_section_+_of_+_a_+_bundle
*CAT: n
*SEM: unaryRel[rel=mechanical_+_protection_+_in_+_the_+_dynaomic_+_section_+_of_+_a_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_in_+_the_+_dynaomic_+_section_+_of_+_a_+_bundle
*CAT: n
*SEM: twoRel[rel=mechanical_+_protection_+_in_+_the_+_dynaomic_+_section_+_of_+_a_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_in_+_the_+_dynaomic_+_section_+_of_+_a_+_bundle
*CAT: n
*SEM: twoRel[rel=mechanical_+_protection_+_in_+_the_+_dynaomic_+_section_+_of_+_a_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_protection_+_in_+_the_+_dynaomic_+_section_+_of_+_a_+_bundle
*CAT: n
*SEM: orRel[rel=mechanical_+_protection_+_in_+_the_+_dynaomic_+_section_+_of_+_a_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_stress
*CAT: n
*SEM: unaryRel[rel=mechanical_+_stress]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_stress
*CAT: n
*SEM: twoRel[rel=mechanical_+_stress]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_stress
*CAT: n
*SEM: twoRel[rel=mechanical_+_stress]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mechanical_+_stress
*CAT: n
*SEM: orRel[rel=mechanical_+_stress]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_clamp_+_asne_+_0033_+___+_x000d_+__
*CAT: n
*SEM: unaryRel[rel=metallic_+_clamp_+_asne_+_0033_+___+_x000d_+__]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_clamp_+_asne_+_0033_+___+_x000d_+__
*CAT: n
*SEM: twoRel[rel=metallic_+_clamp_+_asne_+_0033_+___+_x000d_+__]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_clamp_+_asne_+_0033_+___+_x000d_+__
*CAT: n
*SEM: twoRel[rel=metallic_+_clamp_+_asne_+_0033_+___+_x000d_+__]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_clamp_+_asne_+_0033_+___+_x000d_+__
*CAT: n
*SEM: orRel[rel=metallic_+_clamp_+_asne_+_0033_+___+_x000d_+__]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_clamp_+_asne_+_0033_+__x000d_
*CAT: n
*SEM: unaryRel[rel=metallic_+_clamp_+_asne_+_0033_+__x000d_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_clamp_+_asne_+_0033_+__x000d_
*CAT: n
*SEM: twoRel[rel=metallic_+_clamp_+_asne_+_0033_+__x000d_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_clamp_+_asne_+_0033_+__x000d_
*CAT: n
*SEM: twoRel[rel=metallic_+_clamp_+_asne_+_0033_+__x000d_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_clamp_+_asne_+_0033_+__x000d_
*CAT: n
*SEM: orRel[rel=metallic_+_clamp_+_asne_+_0033_+__x000d_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_label
*CAT: n
*SEM: unaryRel[rel=metallic_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_label
*CAT: n
*SEM: twoRel[rel=metallic_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_label
*CAT: n
*SEM: twoRel[rel=metallic_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_label
*CAT: n
*SEM: orRel[rel=metallic_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_label_+_on_+_a_+_backslash_+_c_+_structure
*CAT: n
*SEM: unaryRel[rel=metallic_+_label_+_on_+_a_+_backslash_+_c_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_label_+_on_+_a_+_backslash_+_c_+_structure
*CAT: n
*SEM: twoRel[rel=metallic_+_label_+_on_+_a_+_backslash_+_c_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_label_+_on_+_a_+_backslash_+_c_+_structure
*CAT: n
*SEM: twoRel[rel=metallic_+_label_+_on_+_a_+_backslash_+_c_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_label_+_on_+_a_+_backslash_+_c_+_structure
*CAT: n
*SEM: orRel[rel=metallic_+_label_+_on_+_a_+_backslash_+_c_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_part
*CAT: n
*SEM: unaryRel[rel=metallic_+_part]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_part
*CAT: n
*SEM: twoRel[rel=metallic_+_part]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_part
*CAT: n
*SEM: twoRel[rel=metallic_+_part]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_part
*CAT: n
*SEM: orRel[rel=metallic_+_part]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_rigid_+_conduit
*CAT: n
*SEM: unaryRel[rel=metallic_+_rigid_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_rigid_+_conduit
*CAT: n
*SEM: twoRel[rel=metallic_+_rigid_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_rigid_+_conduit
*CAT: n
*SEM: twoRel[rel=metallic_+_rigid_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_rigid_+_conduit
*CAT: n
*SEM: orRel[rel=metallic_+_rigid_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_spacer
*CAT: n
*SEM: unaryRel[rel=metallic_+_spacer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_spacer
*CAT: n
*SEM: twoRel[rel=metallic_+_spacer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_spacer
*CAT: n
*SEM: twoRel[rel=metallic_+_spacer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_spacer
*CAT: n
*SEM: orRel[rel=metallic_+_spacer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_spacer_+_in_+_hot
*CAT: n
*SEM: unaryRel[rel=metallic_+_spacer_+_in_+_hot]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_spacer_+_in_+_hot
*CAT: n
*SEM: twoRel[rel=metallic_+_spacer_+_in_+_hot]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_spacer_+_in_+_hot
*CAT: n
*SEM: twoRel[rel=metallic_+_spacer_+_in_+_hot]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_spacer_+_in_+_hot
*CAT: n
*SEM: orRel[rel=metallic_+_spacer_+_in_+_hot]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asna2328_+_backslash_+_asna_+_2327_+_closesb
*CAT: n
*SEM: unaryRel[rel=metallic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asna2328_+_backslash_+_asna_+_2327_+_closesb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asna2328_+_backslash_+_asna_+_2327_+_closesb
*CAT: n
*SEM: twoRel[rel=metallic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asna2328_+_backslash_+_asna_+_2327_+_closesb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asna2328_+_backslash_+_asna_+_2327_+_closesb
*CAT: n
*SEM: twoRel[rel=metallic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asna2328_+_backslash_+_asna_+_2327_+_closesb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asna2328_+_backslash_+_asna_+_2327_+_closesb
*CAT: n
*SEM: orRel[rel=metallic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asna2328_+_backslash_+_asna_+_2327_+_closesb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asna2328_+_backslash_+_asna_+_2327_+_closesb_+_in_+_hot
*CAT: n
*SEM: unaryRel[rel=metallic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asna2328_+_backslash_+_asna_+_2327_+_closesb_+_in_+_hot]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asna2328_+_backslash_+_asna_+_2327_+_closesb_+_in_+_hot
*CAT: n
*SEM: twoRel[rel=metallic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asna2328_+_backslash_+_asna_+_2327_+_closesb_+_in_+_hot]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asna2328_+_backslash_+_asna_+_2327_+_closesb_+_in_+_hot
*CAT: n
*SEM: twoRel[rel=metallic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asna2328_+_backslash_+_asna_+_2327_+_closesb_+_in_+_hot]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asna2328_+_backslash_+_asna_+_2327_+_closesb_+_in_+_hot
*CAT: n
*SEM: orRel[rel=metallic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asna2328_+_backslash_+_asna_+_2327_+_closesb_+_in_+_hot]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_structure
*CAT: n
*SEM: unaryRel[rel=metallic_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_structure
*CAT: n
*SEM: twoRel[rel=metallic_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_structure
*CAT: n
*SEM: twoRel[rel=metallic_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: metallic_+_structure
*CAT: n
*SEM: orRel[rel=metallic_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_10mm_+_in_+_case_+_of_+_colon
*CAT: n
*SEM: unaryRel[rel=minimum_+_10mm_+_in_+_case_+_of_+_colon]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_10mm_+_in_+_case_+_of_+_colon
*CAT: n
*SEM: twoRel[rel=minimum_+_10mm_+_in_+_case_+_of_+_colon]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_10mm_+_in_+_case_+_of_+_colon
*CAT: n
*SEM: twoRel[rel=minimum_+_10mm_+_in_+_case_+_of_+_colon]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_10mm_+_in_+_case_+_of_+_colon
*CAT: n
*SEM: orRel[rel=minimum_+_10mm_+_in_+_case_+_of_+_colon]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mlgb
*CAT: n
*SEM: unaryRel[rel=mlgb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mlgb
*CAT: n
*SEM: twoRel[rel=mlgb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mlgb
*CAT: n
*SEM: twoRel[rel=mlgb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mlgb
*CAT: n
*SEM: orRel[rel=mlgb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modification_+_kid
*CAT: n
*SEM: unaryRel[rel=modification_+_kid]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modification_+_kid
*CAT: n
*SEM: twoRel[rel=modification_+_kid]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modification_+_kid
*CAT: n
*SEM: twoRel[rel=modification_+_kid]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modification_+_kid
*CAT: n
*SEM: orRel[rel=modification_+_kid]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modules
*CAT: n
*SEM: unaryRel[rel=modules]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modules
*CAT: n
*SEM: twoRel[rel=modules]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modules
*CAT: n
*SEM: twoRel[rel=modules]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: modules
*CAT: n
*SEM: orRel[rel=modules]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_bundle
*CAT: n
*SEM: unaryRel[rel=more_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_bundle
*CAT: n
*SEM: twoRel[rel=more_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_bundle
*CAT: n
*SEM: twoRel[rel=more_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_bundle
*CAT: n
*SEM: orRel[rel=more_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_then
*CAT: n
*SEM: unaryRel[rel=more_+_then]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_then
*CAT: n
*SEM: twoRel[rel=more_+_then]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_then
*CAT: n
*SEM: twoRel[rel=more_+_then]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: more_+_then
*CAT: n
*SEM: orRel[rel=more_+_then]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate
*CAT: n
*SEM: unaryRel[rel=mounting_+_plate]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate
*CAT: n
*SEM: twoRel[rel=mounting_+_plate]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate
*CAT: n
*SEM: twoRel[rel=mounting_+_plate]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate
*CAT: n
*SEM: orRel[rel=mounting_+_plate]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate_+_straight_+_at_+_the_+_exits
*CAT: n
*SEM: unaryRel[rel=mounting_+_plate_+_straight_+_at_+_the_+_exits]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate_+_straight_+_at_+_the_+_exits
*CAT: n
*SEM: twoRel[rel=mounting_+_plate_+_straight_+_at_+_the_+_exits]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate_+_straight_+_at_+_the_+_exits
*CAT: n
*SEM: twoRel[rel=mounting_+_plate_+_straight_+_at_+_the_+_exits]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate_+_straight_+_at_+_the_+_exits
*CAT: n
*SEM: orRel[rel=mounting_+_plate_+_straight_+_at_+_the_+_exits]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate_+_with_+_a_+_distance_+_d_+__+_equalto_+__+_smallerthan_+__+_100mm_+_from_+_the_+_circular_+_grommet
*CAT: n
*SEM: unaryRel[rel=mounting_+_plate_+_with_+_a_+_distance_+_d_+__+_equalto_+__+_smallerthan_+__+_100mm_+_from_+_the_+_circular_+_grommet]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate_+_with_+_a_+_distance_+_d_+__+_equalto_+__+_smallerthan_+__+_100mm_+_from_+_the_+_circular_+_grommet
*CAT: n
*SEM: twoRel[rel=mounting_+_plate_+_with_+_a_+_distance_+_d_+__+_equalto_+__+_smallerthan_+__+_100mm_+_from_+_the_+_circular_+_grommet]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate_+_with_+_a_+_distance_+_d_+__+_equalto_+__+_smallerthan_+__+_100mm_+_from_+_the_+_circular_+_grommet
*CAT: n
*SEM: twoRel[rel=mounting_+_plate_+_with_+_a_+_distance_+_d_+__+_equalto_+__+_smallerthan_+__+_100mm_+_from_+_the_+_circular_+_grommet]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate_+_with_+_a_+_distance_+_d_+__+_equalto_+__+_smallerthan_+__+_100mm_+_from_+_the_+_circular_+_grommet
*CAT: n
*SEM: orRel[rel=mounting_+_plate_+_with_+_a_+_distance_+_d_+__+_equalto_+__+_smallerthan_+__+_100mm_+_from_+_the_+_circular_+_grommet]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate_+_with_+_a_+_distance_+_d_+_equalto_+_smallerthan_+_100mm_+_from_+_the_+_circular_+_grommet
*CAT: n
*SEM: unaryRel[rel=mounting_+_plate_+_with_+_a_+_distance_+_d_+_equalto_+_smallerthan_+_100mm_+_from_+_the_+_circular_+_grommet]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate_+_with_+_a_+_distance_+_d_+_equalto_+_smallerthan_+_100mm_+_from_+_the_+_circular_+_grommet
*CAT: n
*SEM: twoRel[rel=mounting_+_plate_+_with_+_a_+_distance_+_d_+_equalto_+_smallerthan_+_100mm_+_from_+_the_+_circular_+_grommet]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate_+_with_+_a_+_distance_+_d_+_equalto_+_smallerthan_+_100mm_+_from_+_the_+_circular_+_grommet
*CAT: n
*SEM: twoRel[rel=mounting_+_plate_+_with_+_a_+_distance_+_d_+_equalto_+_smallerthan_+_100mm_+_from_+_the_+_circular_+_grommet]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: mounting_+_plate_+_with_+_a_+_distance_+_d_+_equalto_+_smallerthan_+_100mm_+_from_+_the_+_circular_+_grommet
*CAT: n
*SEM: orRel[rel=mounting_+_plate_+_with_+_a_+_distance_+_d_+_equalto_+_smallerthan_+_100mm_+_from_+_the_+_circular_+_grommet]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_+_-_+_type_+_a
*CAT: n
*SEM: unaryRel[rel=movable_+_component_+_-_+_type_+_a]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_+_-_+_type_+_a
*CAT: n
*SEM: twoRel[rel=movable_+_component_+_-_+_type_+_a]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_+_-_+_type_+_a
*CAT: n
*SEM: twoRel[rel=movable_+_component_+_-_+_type_+_a]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_+_-_+_type_+_a
*CAT: n
*SEM: orRel[rel=movable_+_component_+_-_+_type_+_a]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_10_+_mm
*CAT: n
*SEM: unaryRel[rel=movable_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_10_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_10_+_mm
*CAT: n
*SEM: twoRel[rel=movable_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_10_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_10_+_mm
*CAT: n
*SEM: twoRel[rel=movable_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_10_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_10_+_mm
*CAT: n
*SEM: orRel[rel=movable_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_10_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_25_+_mm
*CAT: n
*SEM: unaryRel[rel=movable_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_25_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_25_+_mm
*CAT: n
*SEM: twoRel[rel=movable_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_25_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_25_+_mm
*CAT: n
*SEM: twoRel[rel=movable_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_25_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_25_+_mm
*CAT: n
*SEM: orRel[rel=movable_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_25_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_components
*CAT: n
*SEM: unaryRel[rel=movable_+_components]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_components
*CAT: n
*SEM: twoRel[rel=movable_+_components]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_components
*CAT: n
*SEM: twoRel[rel=movable_+_components]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_components
*CAT: n
*SEM: orRel[rel=movable_+_components]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_components_+_not_+_less_+_than_+_25_+_mm_+_unless_+_otherwise_+_specified
*CAT: n
*SEM: unaryRel[rel=movable_+_components_+_not_+_less_+_than_+_25_+_mm_+_unless_+_otherwise_+_specified]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_components_+_not_+_less_+_than_+_25_+_mm_+_unless_+_otherwise_+_specified
*CAT: n
*SEM: twoRel[rel=movable_+_components_+_not_+_less_+_than_+_25_+_mm_+_unless_+_otherwise_+_specified]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_components_+_not_+_less_+_than_+_25_+_mm_+_unless_+_otherwise_+_specified
*CAT: n
*SEM: twoRel[rel=movable_+_components_+_not_+_less_+_than_+_25_+_mm_+_unless_+_otherwise_+_specified]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_components_+_not_+_less_+_than_+_25_+_mm_+_unless_+_otherwise_+_specified
*CAT: n
*SEM: orRel[rel=movable_+_components_+_not_+_less_+_than_+_25_+_mm_+_unless_+_otherwise_+_specified]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=movable_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=movable_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=movable_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=movable_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_part_+_of_+_connector_+_on_+_fixed_+_part_+_of_+_connector_+_in_+_unpressurized_+_areas
*CAT: n
*SEM: unaryRel[rel=movable_+_part_+_of_+_connector_+_on_+_fixed_+_part_+_of_+_connector_+_in_+_unpressurized_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_part_+_of_+_connector_+_on_+_fixed_+_part_+_of_+_connector_+_in_+_unpressurized_+_areas
*CAT: n
*SEM: twoRel[rel=movable_+_part_+_of_+_connector_+_on_+_fixed_+_part_+_of_+_connector_+_in_+_unpressurized_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_part_+_of_+_connector_+_on_+_fixed_+_part_+_of_+_connector_+_in_+_unpressurized_+_areas
*CAT: n
*SEM: twoRel[rel=movable_+_part_+_of_+_connector_+_on_+_fixed_+_part_+_of_+_connector_+_in_+_unpressurized_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: movable_+_part_+_of_+_connector_+_on_+_fixed_+_part_+_of_+_connector_+_in_+_unpressurized_+_areas
*CAT: n
*SEM: orRel[rel=movable_+_part_+_of_+_connector_+_on_+_fixed_+_part_+_of_+_connector_+_in_+_unpressurized_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: moving_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: unaryRel[rel=moving_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: moving_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: twoRel[rel=moving_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: moving_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: twoRel[rel=moving_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: moving_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: orRel[rel=moving_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: moving_+_components
*CAT: n
*SEM: unaryRel[rel=moving_+_components]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: moving_+_components
*CAT: n
*SEM: twoRel[rel=moving_+_components]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: moving_+_components
*CAT: n
*SEM: twoRel[rel=moving_+_components]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: moving_+_components
*CAT: n
*SEM: orRel[rel=moving_+_components]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi_+_branch_+_single_+_derivation
*CAT: n
*SEM: unaryRel[rel=multi_+_branch_+_single_+_derivation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi_+_branch_+_single_+_derivation
*CAT: n
*SEM: twoRel[rel=multi_+_branch_+_single_+_derivation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi_+_branch_+_single_+_derivation
*CAT: n
*SEM: twoRel[rel=multi_+_branch_+_single_+_derivation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi_+_branch_+_single_+_derivation
*CAT: n
*SEM: orRel[rel=multi_+_branch_+_single_+_derivation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi_+_core_+_wire
*CAT: n
*SEM: unaryRel[rel=multi_+_core_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi_+_core_+_wire
*CAT: n
*SEM: twoRel[rel=multi_+_core_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi_+_core_+_wire
*CAT: n
*SEM: twoRel[rel=multi_+_core_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi_+_core_+_wire
*CAT: n
*SEM: orRel[rel=multi_+_core_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi-braid_+_stainless_+_steel
*CAT: n
*SEM: unaryRel[rel=multi-braid_+_stainless_+_steel]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi-braid_+_stainless_+_steel
*CAT: n
*SEM: twoRel[rel=multi-braid_+_stainless_+_steel]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi-braid_+_stainless_+_steel
*CAT: n
*SEM: twoRel[rel=multi-braid_+_stainless_+_steel]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi-braid_+_stainless_+_steel
*CAT: n
*SEM: orRel[rel=multi-braid_+_stainless_+_steel]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi-functional_+_label
*CAT: n
*SEM: unaryRel[rel=multi-functional_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi-functional_+_label
*CAT: n
*SEM: twoRel[rel=multi-functional_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi-functional_+_label
*CAT: n
*SEM: twoRel[rel=multi-functional_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multi-functional_+_label
*CAT: n
*SEM: orRel[rel=multi-functional_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multicore_+_cable
*CAT: n
*SEM: unaryRel[rel=multicore_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multicore_+_cable
*CAT: n
*SEM: twoRel[rel=multicore_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multicore_+_cable
*CAT: n
*SEM: twoRel[rel=multicore_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: multicore_+_cable
*CAT: n
*SEM: orRel[rel=multicore_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: n_+_polarization
*CAT: n
*SEM: unaryRel[rel=n_+_polarization]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: n_+_polarization
*CAT: n
*SEM: twoRel[rel=n_+_polarization]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: n_+_polarization
*CAT: n
*SEM: twoRel[rel=n_+_polarization]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: n_+_polarization
*CAT: n
*SEM: orRel[rel=n_+_polarization]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: n_+_polarization_+_in_+_relation
*CAT: n
*SEM: unaryRel[rel=n_+_polarization_+_in_+_relation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: n_+_polarization_+_in_+_relation
*CAT: n
*SEM: twoRel[rel=n_+_polarization_+_in_+_relation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: n_+_polarization_+_in_+_relation
*CAT: n
*SEM: twoRel[rel=n_+_polarization_+_in_+_relation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: n_+_polarization_+_in_+_relation
*CAT: n
*SEM: orRel[rel=n_+_polarization_+_in_+_relation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_2_+_closesb
*CAT: n
*SEM: unaryRel[rel=network_+_2_+_closesb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_2_+_closesb
*CAT: n
*SEM: twoRel[rel=network_+_2_+_closesb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_2_+_closesb
*CAT: n
*SEM: twoRel[rel=network_+_2_+_closesb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_2_+_closesb
*CAT: n
*SEM: orRel[rel=network_+_2_+_closesb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_2_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=network_+_2_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_2_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=network_+_2_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_2_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=network_+_2_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: network_+_2_+_closesb_+_
*CAT: n
*SEM: orRel[rel=network_+_2_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_bracket
*CAT: n
*SEM: unaryRel[rel=new_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_bracket
*CAT: n
*SEM: twoRel[rel=new_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_bracket
*CAT: n
*SEM: twoRel[rel=new_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_bracket
*CAT: n
*SEM: orRel[rel=new_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_design
*CAT: n
*SEM: unaryRel[rel=new_+_design]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_design
*CAT: n
*SEM: twoRel[rel=new_+_design]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_design
*CAT: n
*SEM: twoRel[rel=new_+_design]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_design
*CAT: n
*SEM: orRel[rel=new_+_design]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_design_+_of_+_bracket
*CAT: n
*SEM: unaryRel[rel=new_+_design_+_of_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_design_+_of_+_bracket
*CAT: n
*SEM: twoRel[rel=new_+_design_+_of_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_design_+_of_+_bracket
*CAT: n
*SEM: twoRel[rel=new_+_design_+_of_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_design_+_of_+_bracket
*CAT: n
*SEM: orRel[rel=new_+_design_+_of_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_designed_+_bracket
*CAT: n
*SEM: unaryRel[rel=new_+_designed_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_designed_+_bracket
*CAT: n
*SEM: twoRel[rel=new_+_designed_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_designed_+_bracket
*CAT: n
*SEM: twoRel[rel=new_+_designed_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: new_+_designed_+_bracket
*CAT: n
*SEM: orRel[rel=new_+_designed_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_aluminium_+_cables_+_backslash_+_wires
*CAT: n
*SEM: unaryRel[rel=non_+_aluminium_+_cables_+_backslash_+_wires]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_aluminium_+_cables_+_backslash_+_wires
*CAT: n
*SEM: twoRel[rel=non_+_aluminium_+_cables_+_backslash_+_wires]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_aluminium_+_cables_+_backslash_+_wires
*CAT: n
*SEM: twoRel[rel=non_+_aluminium_+_cables_+_backslash_+_wires]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_aluminium_+_cables_+_backslash_+_wires
*CAT: n
*SEM: orRel[rel=non_+_aluminium_+_cables_+_backslash_+_wires]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_ata36_+_hot_+_pipes
*CAT: n
*SEM: unaryRel[rel=non_+_ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_ata36_+_hot_+_pipes
*CAT: n
*SEM: twoRel[rel=non_+_ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_ata36_+_hot_+_pipes
*CAT: n
*SEM: twoRel[rel=non_+_ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_ata36_+_hot_+_pipes
*CAT: n
*SEM: orRel[rel=non_+_ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_coded_+_electrical_+_component
*CAT: n
*SEM: unaryRel[rel=non_+_coded_+_electrical_+_component]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_coded_+_electrical_+_component
*CAT: n
*SEM: twoRel[rel=non_+_coded_+_electrical_+_component]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_coded_+_electrical_+_component
*CAT: n
*SEM: twoRel[rel=non_+_coded_+_electrical_+_component]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_coded_+_electrical_+_component
*CAT: n
*SEM: orRel[rel=non_+_coded_+_electrical_+_component]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure
*CAT: n
*SEM: unaryRel[rel=non_+_conductive_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure
*CAT: n
*SEM: orRel[rel=non_+_conductive_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_below_+_route
*CAT: n
*SEM: unaryRel[rel=non_+_conductive_+_structure_+_below_+_route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_below_+_route
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure_+_below_+_route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_below_+_route
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure_+_below_+_route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_below_+_route
*CAT: n
*SEM: orRel[rel=non_+_conductive_+_structure_+_below_+_route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_below_+_the_+_route
*CAT: n
*SEM: unaryRel[rel=non_+_conductive_+_structure_+_below_+_the_+_route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_below_+_the_+_route
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure_+_below_+_the_+_route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_below_+_the_+_route
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure_+_below_+_the_+_route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_below_+_the_+_route
*CAT: n
*SEM: orRel[rel=non_+_conductive_+_structure_+_below_+_the_+_route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_beside_+_opensb_+_horizontal_+_closesb_+_or_+_above
*CAT: n
*SEM: unaryRel[rel=non_+_conductive_+_structure_+_beside_+_opensb_+_horizontal_+_closesb_+_or_+_above]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_beside_+_opensb_+_horizontal_+_closesb_+_or_+_above
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure_+_beside_+_opensb_+_horizontal_+_closesb_+_or_+_above]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_beside_+_opensb_+_horizontal_+_closesb_+_or_+_above
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure_+_beside_+_opensb_+_horizontal_+_closesb_+_or_+_above]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_beside_+_opensb_+_horizontal_+_closesb_+_or_+_above
*CAT: n
*SEM: orRel[rel=non_+_conductive_+_structure_+_beside_+_opensb_+_horizontal_+_closesb_+_or_+_above]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_by_+_10mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_0mm
*CAT: n
*SEM: unaryRel[rel=non_+_conductive_+_structure_+_by_+_10mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_0mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_by_+_10mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_0mm
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure_+_by_+_10mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_0mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_by_+_10mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_0mm
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure_+_by_+_10mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_0mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_by_+_10mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_0mm
*CAT: n
*SEM: orRel[rel=non_+_conductive_+_structure_+_by_+_10mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_0mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_by_+_20mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_10mm
*CAT: n
*SEM: unaryRel[rel=non_+_conductive_+_structure_+_by_+_20mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_by_+_20mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_10mm
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure_+_by_+_20mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_by_+_20mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_10mm
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure_+_by_+_20mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_structure_+_by_+_20mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_10mm
*CAT: n
*SEM: orRel[rel=non_+_conductive_+_structure_+_by_+_20mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_traverse
*CAT: n
*SEM: unaryRel[rel=non_+_conductive_+_traverse]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_traverse
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_traverse]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_traverse
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_traverse]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_conductive_+_traverse
*CAT: n
*SEM: orRel[rel=non_+_conductive_+_traverse]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_fire_+_resistant_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: unaryRel[rel=non_+_fire_+_resistant_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_fire_+_resistant_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: twoRel[rel=non_+_fire_+_resistant_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_fire_+_resistant_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: twoRel[rel=non_+_fire_+_resistant_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_fire_+_resistant_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: orRel[rel=non_+_fire_+_resistant_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_flammable_+_fluids
*CAT: n
*SEM: unaryRel[rel=non_+_flammable_+_fluids]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_flammable_+_fluids
*CAT: n
*SEM: twoRel[rel=non_+_flammable_+_fluids]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_flammable_+_fluids
*CAT: n
*SEM: twoRel[rel=non_+_flammable_+_fluids]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_flammable_+_fluids
*CAT: n
*SEM: orRel[rel=non_+_flammable_+_fluids]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_metallic_+_material_+_with_+_dimensions_+_shown_+_in_+_the_+_figure_+_below
*CAT: n
*SEM: unaryRel[rel=non_+_metallic_+_material_+_with_+_dimensions_+_shown_+_in_+_the_+_figure_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_metallic_+_material_+_with_+_dimensions_+_shown_+_in_+_the_+_figure_+_below
*CAT: n
*SEM: twoRel[rel=non_+_metallic_+_material_+_with_+_dimensions_+_shown_+_in_+_the_+_figure_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_metallic_+_material_+_with_+_dimensions_+_shown_+_in_+_the_+_figure_+_below
*CAT: n
*SEM: twoRel[rel=non_+_metallic_+_material_+_with_+_dimensions_+_shown_+_in_+_the_+_figure_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_metallic_+_material_+_with_+_dimensions_+_shown_+_in_+_the_+_figure_+_below
*CAT: n
*SEM: orRel[rel=non_+_metallic_+_material_+_with_+_dimensions_+_shown_+_in_+_the_+_figure_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_m-route
*CAT: n
*SEM: unaryRel[rel=non_+_pre_+_stressed_+_m-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_m-route
*CAT: n
*SEM: twoRel[rel=non_+_pre_+_stressed_+_m-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_m-route
*CAT: n
*SEM: twoRel[rel=non_+_pre_+_stressed_+_m-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_m-route
*CAT: n
*SEM: orRel[rel=non_+_pre_+_stressed_+_m-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_p-route
*CAT: n
*SEM: unaryRel[rel=non_+_pre_+_stressed_+_p-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_p-route
*CAT: n
*SEM: twoRel[rel=non_+_pre_+_stressed_+_p-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_p-route
*CAT: n
*SEM: twoRel[rel=non_+_pre_+_stressed_+_p-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_p-route
*CAT: n
*SEM: orRel[rel=non_+_pre_+_stressed_+_p-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_r-route_+__+_opensb_+_optical_+_closesb_+__+_
*CAT: n
*SEM: unaryRel[rel=non_+_pre_+_stressed_+_r-route_+__+_opensb_+_optical_+_closesb_+__+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_r-route_+__+_opensb_+_optical_+_closesb_+__+_
*CAT: n
*SEM: twoRel[rel=non_+_pre_+_stressed_+_r-route_+__+_opensb_+_optical_+_closesb_+__+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_r-route_+__+_opensb_+_optical_+_closesb_+__+_
*CAT: n
*SEM: twoRel[rel=non_+_pre_+_stressed_+_r-route_+__+_opensb_+_optical_+_closesb_+__+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_r-route_+__+_opensb_+_optical_+_closesb_+__+_
*CAT: n
*SEM: orRel[rel=non_+_pre_+_stressed_+_r-route_+__+_opensb_+_optical_+_closesb_+__+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_r-route_+_opensb_+_optical_+_closesb
*CAT: n
*SEM: unaryRel[rel=non_+_pre_+_stressed_+_r-route_+_opensb_+_optical_+_closesb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_r-route_+_opensb_+_optical_+_closesb
*CAT: n
*SEM: twoRel[rel=non_+_pre_+_stressed_+_r-route_+_opensb_+_optical_+_closesb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_r-route_+_opensb_+_optical_+_closesb
*CAT: n
*SEM: twoRel[rel=non_+_pre_+_stressed_+_r-route_+_opensb_+_optical_+_closesb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_r-route_+_opensb_+_optical_+_closesb
*CAT: n
*SEM: orRel[rel=non_+_pre_+_stressed_+_r-route_+_opensb_+_optical_+_closesb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_s-route
*CAT: n
*SEM: unaryRel[rel=non_+_pre_+_stressed_+_s-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_s-route
*CAT: n
*SEM: twoRel[rel=non_+_pre_+_stressed_+_s-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_s-route
*CAT: n
*SEM: twoRel[rel=non_+_pre_+_stressed_+_s-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_pre_+_stressed_+_s-route
*CAT: n
*SEM: orRel[rel=non_+_pre_+_stressed_+_s-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_remobale
*CAT: n
*SEM: unaryRel[rel=non_+_remobale]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_remobale
*CAT: n
*SEM: twoRel[rel=non_+_remobale]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_remobale
*CAT: n
*SEM: twoRel[rel=non_+_remobale]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non_+_remobale
*CAT: n
*SEM: orRel[rel=non_+_remobale]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-ata36_+_hot_+_pipes
*CAT: n
*SEM: unaryRel[rel=non-ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-ata36_+_hot_+_pipes
*CAT: n
*SEM: twoRel[rel=non-ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-ata36_+_hot_+_pipes
*CAT: n
*SEM: twoRel[rel=non-ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-ata36_+_hot_+_pipes
*CAT: n
*SEM: orRel[rel=non-ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: unaryRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: twoRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: twoRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: orRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-pre-stressed_+_bundle
*CAT: n
*SEM: unaryRel[rel=non-pre-stressed_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-pre-stressed_+_bundle
*CAT: n
*SEM: twoRel[rel=non-pre-stressed_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-pre-stressed_+_bundle
*CAT: n
*SEM: twoRel[rel=non-pre-stressed_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: non-pre-stressed_+_bundle
*CAT: n
*SEM: orRel[rel=non-pre-stressed_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_installation
*CAT: n
*SEM: unaryRel[rel=normal_+_installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_installation
*CAT: n
*SEM: twoRel[rel=normal_+_installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_installation
*CAT: n
*SEM: twoRel[rel=normal_+_installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_installation
*CAT: n
*SEM: orRel[rel=normal_+_installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_swaged_+_unions
*CAT: n
*SEM: unaryRel[rel=normal_+_swaged_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_swaged_+_unions
*CAT: n
*SEM: twoRel[rel=normal_+_swaged_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_swaged_+_unions
*CAT: n
*SEM: twoRel[rel=normal_+_swaged_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: normal_+_swaged_+_unions
*CAT: n
*SEM: orRel[rel=normal_+_swaged_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_be_+_group_+_together_+_the_+_other-route
*CAT: n
*SEM: unaryRel[rel=not_+_be_+_group_+_together_+_the_+_other-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_be_+_group_+_together_+_the_+_other-route
*CAT: n
*SEM: twoRel[rel=not_+_be_+_group_+_together_+_the_+_other-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_be_+_group_+_together_+_the_+_other-route
*CAT: n
*SEM: twoRel[rel=not_+_be_+_group_+_together_+_the_+_other-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: not_+_be_+_group_+_together_+_the_+_other-route
*CAT: n
*SEM: orRel[rel=not_+_be_+_group_+_together_+_the_+_other-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_col_obj2
*CAT: n
*SEM: unaryRel[rel=np_col_obj2]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_col_obj2
*CAT: n
*SEM: twoRel[rel=np_col_obj2]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_col_obj2
*CAT: n
*SEM: twoRel[rel=np_col_obj2]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_col_obj2
*CAT: n
*SEM: orRel[rel=np_col_obj2]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_col_obj3
*CAT: n
*SEM: unaryRel[rel=np_col_obj3]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_col_obj3
*CAT: n
*SEM: twoRel[rel=np_col_obj3]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_col_obj3
*CAT: n
*SEM: twoRel[rel=np_col_obj3]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_col_obj3
*CAT: n
*SEM: orRel[rel=np_col_obj3]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_obj1_a
*CAT: n
*SEM: unaryRel[rel=np_obj1_a]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_obj1_a
*CAT: n
*SEM: twoRel[rel=np_obj1_a]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_obj1_a
*CAT: n
*SEM: twoRel[rel=np_obj1_a]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_obj1_a
*CAT: n
*SEM: orRel[rel=np_obj1_a]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_obj1_b
*CAT: n
*SEM: unaryRel[rel=np_obj1_b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_obj1_b
*CAT: n
*SEM: twoRel[rel=np_obj1_b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_obj1_b
*CAT: n
*SEM: twoRel[rel=np_obj1_b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: np_obj1_b
*CAT: n
*SEM: orRel[rel=np_obj1_b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5107-b_+_black_+_tape
*CAT: n
*SEM: unaryRel[rel=nsa_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5107-b_+_black_+_tape
*CAT: n
*SEM: twoRel[rel=nsa_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5107-b_+_black_+_tape
*CAT: n
*SEM: twoRel[rel=nsa_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5107-b_+_black_+_tape
*CAT: n
*SEM: orRel[rel=nsa_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5515_+_in_+_carbon_+_tank
*CAT: n
*SEM: unaryRel[rel=nsa_+_5515_+_in_+_carbon_+_tank]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5515_+_in_+_carbon_+_tank
*CAT: n
*SEM: twoRel[rel=nsa_+_5515_+_in_+_carbon_+_tank]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5515_+_in_+_carbon_+_tank
*CAT: n
*SEM: twoRel[rel=nsa_+_5515_+_in_+_carbon_+_tank]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5515_+_in_+_carbon_+_tank
*CAT: n
*SEM: orRel[rel=nsa_+_5515_+_in_+_carbon_+_tank]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516_+_p-clamp_+_type_+_b
*CAT: n
*SEM: unaryRel[rel=nsa_+_5516_+_p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516_+_p-clamp_+_type_+_b
*CAT: n
*SEM: twoRel[rel=nsa_+_5516_+_p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516_+_p-clamp_+_type_+_b
*CAT: n
*SEM: twoRel[rel=nsa_+_5516_+_p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516_+_p-clamp_+_type_+_b
*CAT: n
*SEM: orRel[rel=nsa_+_5516_+_p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516bd
*CAT: n
*SEM: unaryRel[rel=nsa_+_5516bd]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516bd
*CAT: n
*SEM: twoRel[rel=nsa_+_5516bd]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516bd
*CAT: n
*SEM: twoRel[rel=nsa_+_5516bd]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516bd
*CAT: n
*SEM: orRel[rel=nsa_+_5516bd]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516bd_+_beside_+_the_+_main_+_routing
*CAT: n
*SEM: unaryRel[rel=nsa_+_5516bd_+_beside_+_the_+_main_+_routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516bd_+_beside_+_the_+_main_+_routing
*CAT: n
*SEM: twoRel[rel=nsa_+_5516bd_+_beside_+_the_+_main_+_routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516bd_+_beside_+_the_+_main_+_routing
*CAT: n
*SEM: twoRel[rel=nsa_+_5516bd_+_beside_+_the_+_main_+_routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5516bd_+_beside_+_the_+_main_+_routing
*CAT: n
*SEM: orRel[rel=nsa_+_5516bd_+_beside_+_the_+_main_+_routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539
*CAT: n
*SEM: unaryRel[rel=nsa_+_5539]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539
*CAT: n
*SEM: twoRel[rel=nsa_+_5539]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539
*CAT: n
*SEM: twoRel[rel=nsa_+_5539]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539
*CAT: n
*SEM: orRel[rel=nsa_+_5539]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539_+_protective_+_bobbin
*CAT: n
*SEM: unaryRel[rel=nsa_+_5539_+_protective_+_bobbin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539_+_protective_+_bobbin
*CAT: n
*SEM: twoRel[rel=nsa_+_5539_+_protective_+_bobbin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539_+_protective_+_bobbin
*CAT: n
*SEM: twoRel[rel=nsa_+_5539_+_protective_+_bobbin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_5539_+_protective_+_bobbin
*CAT: n
*SEM: orRel[rel=nsa_+_5539_+_protective_+_bobbin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_8420_+_lacing_+_tape
*CAT: n
*SEM: unaryRel[rel=nsa_+_8420_+_lacing_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_8420_+_lacing_+_tape
*CAT: n
*SEM: twoRel[rel=nsa_+_8420_+_lacing_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_8420_+_lacing_+_tape
*CAT: n
*SEM: twoRel[rel=nsa_+_8420_+_lacing_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_8420_+_lacing_+_tape
*CAT: n
*SEM: orRel[rel=nsa_+_8420_+_lacing_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_8420-9_+_lacing_+_tape
*CAT: n
*SEM: unaryRel[rel=nsa_+_8420-9_+_lacing_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_8420-9_+_lacing_+_tape
*CAT: n
*SEM: twoRel[rel=nsa_+_8420-9_+_lacing_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_8420-9_+_lacing_+_tape
*CAT: n
*SEM: twoRel[rel=nsa_+_8420-9_+_lacing_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_8420-9_+_lacing_+_tape
*CAT: n
*SEM: orRel[rel=nsa_+_8420-9_+_lacing_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_931025_+_metallic_+_label
*CAT: n
*SEM: unaryRel[rel=nsa_+_931025_+_metallic_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_931025_+_metallic_+_label
*CAT: n
*SEM: twoRel[rel=nsa_+_931025_+_metallic_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_931025_+_metallic_+_label
*CAT: n
*SEM: twoRel[rel=nsa_+_931025_+_metallic_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_931025_+_metallic_+_label
*CAT: n
*SEM: orRel[rel=nsa_+_931025_+_metallic_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_934710_+_pressure_+_seal
*CAT: n
*SEM: unaryRel[rel=nsa_+_934710_+_pressure_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_934710_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=nsa_+_934710_+_pressure_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_934710_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=nsa_+_934710_+_pressure_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_934710_+_pressure_+_seal
*CAT: n
*SEM: orRel[rel=nsa_+_934710_+_pressure_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401
*CAT: n
*SEM: unaryRel[rel=nsa_+_935401]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401
*CAT: n
*SEM: twoRel[rel=nsa_+_935401]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401
*CAT: n
*SEM: twoRel[rel=nsa_+_935401]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401
*CAT: n
*SEM: orRel[rel=nsa_+_935401]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie
*CAT: n
*SEM: unaryRel[rel=nsa_+_935401_+_cable_+_tie]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie
*CAT: n
*SEM: twoRel[rel=nsa_+_935401_+_cable_+_tie]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie
*CAT: n
*SEM: twoRel[rel=nsa_+_935401_+_cable_+_tie]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie
*CAT: n
*SEM: orRel[rel=nsa_+_935401_+_cable_+_tie]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie_+_cable_+_tie_+_with_+_the_+_with_+_of_+_4.8_+_mm
*CAT: n
*SEM: unaryRel[rel=nsa_+_935401_+_cable_+_tie_+_cable_+_tie_+_with_+_the_+_with_+_of_+_4.8_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie_+_cable_+_tie_+_with_+_the_+_with_+_of_+_4.8_+_mm
*CAT: n
*SEM: twoRel[rel=nsa_+_935401_+_cable_+_tie_+_cable_+_tie_+_with_+_the_+_with_+_of_+_4.8_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie_+_cable_+_tie_+_with_+_the_+_with_+_of_+_4.8_+_mm
*CAT: n
*SEM: twoRel[rel=nsa_+_935401_+_cable_+_tie_+_cable_+_tie_+_with_+_the_+_with_+_of_+_4.8_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie_+_cable_+_tie_+_with_+_the_+_with_+_of_+_4.8_+_mm
*CAT: n
*SEM: orRel[rel=nsa_+_935401_+_cable_+_tie_+_cable_+_tie_+_with_+_the_+_with_+_of_+_4.8_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie_+_cable_+_tie_+_with_+_the_+_with_+_of_+_4.8mm
*CAT: n
*SEM: unaryRel[rel=nsa_+_935401_+_cable_+_tie_+_cable_+_tie_+_with_+_the_+_with_+_of_+_4.8mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie_+_cable_+_tie_+_with_+_the_+_with_+_of_+_4.8mm
*CAT: n
*SEM: twoRel[rel=nsa_+_935401_+_cable_+_tie_+_cable_+_tie_+_with_+_the_+_with_+_of_+_4.8mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie_+_cable_+_tie_+_with_+_the_+_with_+_of_+_4.8mm
*CAT: n
*SEM: twoRel[rel=nsa_+_935401_+_cable_+_tie_+_cable_+_tie_+_with_+_the_+_with_+_of_+_4.8mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935401_+_cable_+_tie_+_cable_+_tie_+_with_+_the_+_with_+_of_+_4.8mm
*CAT: n
*SEM: orRel[rel=nsa_+_935401_+_cable_+_tie_+_cable_+_tie_+_with_+_the_+_with_+_of_+_4.8mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935510_+_protective_+_bobbin
*CAT: n
*SEM: unaryRel[rel=nsa_+_935510_+_protective_+_bobbin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935510_+_protective_+_bobbin
*CAT: n
*SEM: twoRel[rel=nsa_+_935510_+_protective_+_bobbin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935510_+_protective_+_bobbin
*CAT: n
*SEM: twoRel[rel=nsa_+_935510_+_protective_+_bobbin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935510_+_protective_+_bobbin
*CAT: n
*SEM: orRel[rel=nsa_+_935510_+_protective_+_bobbin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935805tshielded_+_convoluted_+_conduit
*CAT: n
*SEM: unaryRel[rel=nsa_+_935805tshielded_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935805tshielded_+_convoluted_+_conduit
*CAT: n
*SEM: twoRel[rel=nsa_+_935805tshielded_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935805tshielded_+_convoluted_+_conduit
*CAT: n
*SEM: twoRel[rel=nsa_+_935805tshielded_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935805tshielded_+_convoluted_+_conduit
*CAT: n
*SEM: orRel[rel=nsa_+_935805tshielded_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935829_+_end_+_fitting
*CAT: n
*SEM: unaryRel[rel=nsa_+_935829_+_end_+_fitting]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935829_+_end_+_fitting
*CAT: n
*SEM: twoRel[rel=nsa_+_935829_+_end_+_fitting]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935829_+_end_+_fitting
*CAT: n
*SEM: twoRel[rel=nsa_+_935829_+_end_+_fitting]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_935829_+_end_+_fitting
*CAT: n
*SEM: orRel[rel=nsa_+_935829_+_end_+_fitting]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936601_+_crimped_+_cap
*CAT: n
*SEM: unaryRel[rel=nsa_+_936601_+_crimped_+_cap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936601_+_crimped_+_cap
*CAT: n
*SEM: twoRel[rel=nsa_+_936601_+_crimped_+_cap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936601_+_crimped_+_cap
*CAT: n
*SEM: twoRel[rel=nsa_+_936601_+_crimped_+_cap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936601_+_crimped_+_cap
*CAT: n
*SEM: orRel[rel=nsa_+_936601_+_crimped_+_cap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas
*CAT: n
*SEM: unaryRel[rel=nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas
*CAT: n
*SEM: twoRel[rel=nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas
*CAT: n
*SEM: twoRel[rel=nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas
*CAT: n
*SEM: orRel[rel=nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas_+_comma
*CAT: n
*SEM: unaryRel[rel=nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas_+_comma]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas_+_comma
*CAT: n
*SEM: twoRel[rel=nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas_+_comma]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas_+_comma
*CAT: n
*SEM: twoRel[rel=nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas_+_comma]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas_+_comma
*CAT: n
*SEM: orRel[rel=nsa_+_936601_+_crimped_+_cap_+_in_+_hot_+_areas_+_comma]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936603_+_shrincable_+_cap
*CAT: n
*SEM: unaryRel[rel=nsa_+_936603_+_shrincable_+_cap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936603_+_shrincable_+_cap
*CAT: n
*SEM: twoRel[rel=nsa_+_936603_+_shrincable_+_cap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936603_+_shrincable_+_cap
*CAT: n
*SEM: twoRel[rel=nsa_+_936603_+_shrincable_+_cap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936603_+_shrincable_+_cap
*CAT: n
*SEM: orRel[rel=nsa_+_936603_+_shrincable_+_cap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936603_+_shrincable_+_cap_+_in_+_all_+_areas
*CAT: n
*SEM: unaryRel[rel=nsa_+_936603_+_shrincable_+_cap_+_in_+_all_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936603_+_shrincable_+_cap_+_in_+_all_+_areas
*CAT: n
*SEM: twoRel[rel=nsa_+_936603_+_shrincable_+_cap_+_in_+_all_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936603_+_shrincable_+_cap_+_in_+_all_+_areas
*CAT: n
*SEM: twoRel[rel=nsa_+_936603_+_shrincable_+_cap_+_in_+_all_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_936603_+_shrincable_+_cap_+_in_+_all_+_areas
*CAT: n
*SEM: orRel[rel=nsa_+_936603_+_shrincable_+_cap_+_in_+_all_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve
*CAT: n
*SEM: unaryRel[rel=nsa_+_937201_+_identification_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve
*CAT: n
*SEM: orRel[rel=nsa_+_937201_+_identification_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_each_+_core_+_after_+_untwisting_+_over_+_a_+_length_+_of_+_l_+_greaterthan_+_20cm
*CAT: n
*SEM: unaryRel[rel=nsa_+_937201_+_identification_+_sleeve_+_each_+_core_+_after_+_untwisting_+_over_+_a_+_length_+_of_+_l_+_greaterthan_+_20cm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_each_+_core_+_after_+_untwisting_+_over_+_a_+_length_+_of_+_l_+_greaterthan_+_20cm
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve_+_each_+_core_+_after_+_untwisting_+_over_+_a_+_length_+_of_+_l_+_greaterthan_+_20cm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_each_+_core_+_after_+_untwisting_+_over_+_a_+_length_+_of_+_l_+_greaterthan_+_20cm
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve_+_each_+_core_+_after_+_untwisting_+_over_+_a_+_length_+_of_+_l_+_greaterthan_+_20cm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_each_+_core_+_after_+_untwisting_+_over_+_a_+_length_+_of_+_l_+_greaterthan_+_20cm
*CAT: n
*SEM: orRel[rel=nsa_+_937201_+_identification_+_sleeve_+_each_+_core_+_after_+_untwisting_+_over_+_a_+_length_+_of_+_l_+_greaterthan_+_20cm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_in_+_pink_+_color
*CAT: n
*SEM: unaryRel[rel=nsa_+_937201_+_identification_+_sleeve_+_in_+_pink_+_color]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_in_+_pink_+_color
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve_+_in_+_pink_+_color]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_in_+_pink_+_color
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve_+_in_+_pink_+_color]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_in_+_pink_+_color
*CAT: n
*SEM: orRel[rel=nsa_+_937201_+_identification_+_sleeve_+_in_+_pink_+_color]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_placed_+_behind_+_the_+_lug_+_not_+_on_+_the_+_crimped_+_area
*CAT: n
*SEM: unaryRel[rel=nsa_+_937201_+_identification_+_sleeve_+_placed_+_behind_+_the_+_lug_+_not_+_on_+_the_+_crimped_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_placed_+_behind_+_the_+_lug_+_not_+_on_+_the_+_crimped_+_area
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve_+_placed_+_behind_+_the_+_lug_+_not_+_on_+_the_+_crimped_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_placed_+_behind_+_the_+_lug_+_not_+_on_+_the_+_crimped_+_area
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve_+_placed_+_behind_+_the_+_lug_+_not_+_on_+_the_+_crimped_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_placed_+_behind_+_the_+_lug_+_not_+_on_+_the_+_crimped_+_area
*CAT: n
*SEM: orRel[rel=nsa_+_937201_+_identification_+_sleeve_+_placed_+_behind_+_the_+_lug_+_not_+_on_+_the_+_crimped_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_printed_+_black_+_on_+_white_+_background
*CAT: n
*SEM: unaryRel[rel=nsa_+_937201_+_identification_+_sleeve_+_printed_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_printed_+_black_+_on_+_white_+_background
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve_+_printed_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_printed_+_black_+_on_+_white_+_background
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve_+_printed_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_printed_+_black_+_on_+_white_+_background
*CAT: n
*SEM: orRel[rel=nsa_+_937201_+_identification_+_sleeve_+_printed_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_with_+_a_+_white_+_background_+_printed_+_in_+_black
*CAT: n
*SEM: unaryRel[rel=nsa_+_937201_+_identification_+_sleeve_+_with_+_a_+_white_+_background_+_printed_+_in_+_black]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_with_+_a_+_white_+_background_+_printed_+_in_+_black
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve_+_with_+_a_+_white_+_background_+_printed_+_in_+_black]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_with_+_a_+_white_+_background_+_printed_+_in_+_black
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve_+_with_+_a_+_white_+_background_+_printed_+_in_+_black]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve_+_with_+_a_+_white_+_background_+_printed_+_in_+_black
*CAT: n
*SEM: orRel[rel=nsa_+_937201_+_identification_+_sleeve_+_with_+_a_+_white_+_background_+_printed_+_in_+_black]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937210_+_shrink_+_sleeve
*CAT: n
*SEM: unaryRel[rel=nsa_+_937210_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937210_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa_+_937210_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937210_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa_+_937210_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937210_+_shrink_+_sleeve
*CAT: n
*SEM: orRel[rel=nsa_+_937210_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937210_+_shrink_+_sleeve_+_25mm
*CAT: n
*SEM: unaryRel[rel=nsa_+_937210_+_shrink_+_sleeve_+_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937210_+_shrink_+_sleeve_+_25mm
*CAT: n
*SEM: twoRel[rel=nsa_+_937210_+_shrink_+_sleeve_+_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937210_+_shrink_+_sleeve_+_25mm
*CAT: n
*SEM: twoRel[rel=nsa_+_937210_+_shrink_+_sleeve_+_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937210_+_shrink_+_sleeve_+_25mm
*CAT: n
*SEM: orRel[rel=nsa_+_937210_+_shrink_+_sleeve_+_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937502_+_shrink_+_sleeve
*CAT: n
*SEM: unaryRel[rel=nsa_+_937502_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937502_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa_+_937502_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937502_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa_+_937502_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937502_+_shrink_+_sleeve
*CAT: n
*SEM: orRel[rel=nsa_+_937502_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937901_+_clipped_+_label
*CAT: n
*SEM: unaryRel[rel=nsa_+_937901_+_clipped_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937901_+_clipped_+_label
*CAT: n
*SEM: twoRel[rel=nsa_+_937901_+_clipped_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937901_+_clipped_+_label
*CAT: n
*SEM: twoRel[rel=nsa_+_937901_+_clipped_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937901_+_clipped_+_label
*CAT: n
*SEM: orRel[rel=nsa_+_937901_+_clipped_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_9504_+_boot
*CAT: n
*SEM: unaryRel[rel=nsa_+_9504_+_boot]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_9504_+_boot
*CAT: n
*SEM: twoRel[rel=nsa_+_9504_+_boot]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_9504_+_boot
*CAT: n
*SEM: twoRel[rel=nsa_+_9504_+_boot]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_9504_+_boot
*CAT: n
*SEM: orRel[rel=nsa_+_9504_+_boot]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa0141_+_with_+_a_+_location
*CAT: n
*SEM: unaryRel[rel=nsa0141_+_with_+_a_+_location]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa0141_+_with_+_a_+_location
*CAT: n
*SEM: twoRel[rel=nsa0141_+_with_+_a_+_location]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa0141_+_with_+_a_+_location
*CAT: n
*SEM: twoRel[rel=nsa0141_+_with_+_a_+_location]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa0141_+_with_+_a_+_location
*CAT: n
*SEM: orRel[rel=nsa0141_+_with_+_a_+_location]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbd_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle
*CAT: n
*SEM: unaryRel[rel=nsa5516_+_cbd_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbd_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=nsa5516_+_cbd_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbd_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=nsa5516_+_cbd_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbd_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle
*CAT: n
*SEM: orRel[rel=nsa5516_+_cbd_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbj_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle
*CAT: n
*SEM: unaryRel[rel=nsa5516_+_cbj_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbj_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=nsa5516_+_cbj_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbj_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=nsa5516_+_cbj_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_cbj_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle
*CAT: n
*SEM: orRel[rel=nsa5516_+_cbj_+_+_+_mechanical_+_protection_+_on_+_the_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_p-clamp_+_type_+_b
*CAT: n
*SEM: unaryRel[rel=nsa5516_+_p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_p-clamp_+_type_+_b
*CAT: n
*SEM: twoRel[rel=nsa5516_+_p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_p-clamp_+_type_+_b
*CAT: n
*SEM: twoRel[rel=nsa5516_+_p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516_+_p-clamp_+_type_+_b
*CAT: n
*SEM: orRel[rel=nsa5516_+_p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516j_+_p-clamp
*CAT: n
*SEM: unaryRel[rel=nsa5516j_+_p-clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516j_+_p-clamp
*CAT: n
*SEM: twoRel[rel=nsa5516j_+_p-clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516j_+_p-clamp
*CAT: n
*SEM: twoRel[rel=nsa5516j_+_p-clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5516j_+_p-clamp
*CAT: n
*SEM: orRel[rel=nsa5516j_+_p-clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5527_+_spacer
*CAT: n
*SEM: unaryRel[rel=nsa5527_+_spacer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5527_+_spacer
*CAT: n
*SEM: twoRel[rel=nsa5527_+_spacer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5527_+_spacer
*CAT: n
*SEM: twoRel[rel=nsa5527_+_spacer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5527_+_spacer
*CAT: n
*SEM: orRel[rel=nsa5527_+_spacer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5569_+_double_+_clamp
*CAT: n
*SEM: unaryRel[rel=nsa5569_+_double_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5569_+_double_+_clamp
*CAT: n
*SEM: twoRel[rel=nsa5569_+_double_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5569_+_double_+_clamp
*CAT: n
*SEM: twoRel[rel=nsa5569_+_double_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5569_+_double_+_clamp
*CAT: n
*SEM: orRel[rel=nsa5569_+_double_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5590
*CAT: n
*SEM: unaryRel[rel=nsa5590]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5590
*CAT: n
*SEM: twoRel[rel=nsa5590]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5590
*CAT: n
*SEM: twoRel[rel=nsa5590]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa5590
*CAT: n
*SEM: orRel[rel=nsa5590]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420_+_lacing_+_tape
*CAT: n
*SEM: unaryRel[rel=nsa8420_+_lacing_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420_+_lacing_+_tape
*CAT: n
*SEM: twoRel[rel=nsa8420_+_lacing_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420_+_lacing_+_tape
*CAT: n
*SEM: twoRel[rel=nsa8420_+_lacing_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420_+_lacing_+_tape
*CAT: n
*SEM: orRel[rel=nsa8420_+_lacing_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420-7
*CAT: n
*SEM: unaryRel[rel=nsa8420-7]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420-7
*CAT: n
*SEM: twoRel[rel=nsa8420-7]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420-7
*CAT: n
*SEM: twoRel[rel=nsa8420-7]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420-7
*CAT: n
*SEM: orRel[rel=nsa8420-7]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420-7_+_lacing_+_tape
*CAT: n
*SEM: unaryRel[rel=nsa8420-7_+_lacing_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420-7_+_lacing_+_tape
*CAT: n
*SEM: twoRel[rel=nsa8420-7_+_lacing_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420-7_+_lacing_+_tape
*CAT: n
*SEM: twoRel[rel=nsa8420-7_+_lacing_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa8420-7_+_lacing_+_tape
*CAT: n
*SEM: orRel[rel=nsa8420-7_+_lacing_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa9117_+_identification_+_label
*CAT: n
*SEM: unaryRel[rel=nsa9117_+_identification_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa9117_+_identification_+_label
*CAT: n
*SEM: twoRel[rel=nsa9117_+_identification_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa9117_+_identification_+_label
*CAT: n
*SEM: twoRel[rel=nsa9117_+_identification_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa9117_+_identification_+_label
*CAT: n
*SEM: orRel[rel=nsa9117_+_identification_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935403_+_silicon_+_tape
*CAT: n
*SEM: unaryRel[rel=nsa935403_+_silicon_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935403_+_silicon_+_tape
*CAT: n
*SEM: twoRel[rel=nsa935403_+_silicon_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935403_+_silicon_+_tape
*CAT: n
*SEM: twoRel[rel=nsa935403_+_silicon_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935403_+_silicon_+_tape
*CAT: n
*SEM: orRel[rel=nsa935403_+_silicon_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_condiut
*CAT: n
*SEM: unaryRel[rel=nsa935805_+_convoluted_+_condiut]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_condiut
*CAT: n
*SEM: twoRel[rel=nsa935805_+_convoluted_+_condiut]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_condiut
*CAT: n
*SEM: twoRel[rel=nsa935805_+_convoluted_+_condiut]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_condiut
*CAT: n
*SEM: orRel[rel=nsa935805_+_convoluted_+_condiut]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit
*CAT: n
*SEM: unaryRel[rel=nsa935805_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit
*CAT: n
*SEM: twoRel[rel=nsa935805_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit
*CAT: n
*SEM: twoRel[rel=nsa935805_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit
*CAT: n
*SEM: orRel[rel=nsa935805_+_convoluted_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit_+_behind_+_cabin_+_monuments_+_such
*CAT: n
*SEM: unaryRel[rel=nsa935805_+_convoluted_+_conduit_+_behind_+_cabin_+_monuments_+_such]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit_+_behind_+_cabin_+_monuments_+_such
*CAT: n
*SEM: twoRel[rel=nsa935805_+_convoluted_+_conduit_+_behind_+_cabin_+_monuments_+_such]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit_+_behind_+_cabin_+_monuments_+_such
*CAT: n
*SEM: twoRel[rel=nsa935805_+_convoluted_+_conduit_+_behind_+_cabin_+_monuments_+_such]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit_+_behind_+_cabin_+_monuments_+_such
*CAT: n
*SEM: orRel[rel=nsa935805_+_convoluted_+_conduit_+_behind_+_cabin_+_monuments_+_such]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit_+_in_+_any_+_area_+_where_+_electrical_+_routing_+_modification_+_leads
*CAT: n
*SEM: unaryRel[rel=nsa935805_+_convoluted_+_conduit_+_in_+_any_+_area_+_where_+_electrical_+_routing_+_modification_+_leads]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit_+_in_+_any_+_area_+_where_+_electrical_+_routing_+_modification_+_leads
*CAT: n
*SEM: twoRel[rel=nsa935805_+_convoluted_+_conduit_+_in_+_any_+_area_+_where_+_electrical_+_routing_+_modification_+_leads]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit_+_in_+_any_+_area_+_where_+_electrical_+_routing_+_modification_+_leads
*CAT: n
*SEM: twoRel[rel=nsa935805_+_convoluted_+_conduit_+_in_+_any_+_area_+_where_+_electrical_+_routing_+_modification_+_leads]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit_+_in_+_any_+_area_+_where_+_electrical_+_routing_+_modification_+_leads
*CAT: n
*SEM: orRel[rel=nsa935805_+_convoluted_+_conduit_+_in_+_any_+_area_+_where_+_electrical_+_routing_+_modification_+_leads]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit_+_under_+_pax_+_floor
*CAT: n
*SEM: unaryRel[rel=nsa935805_+_convoluted_+_conduit_+_under_+_pax_+_floor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit_+_under_+_pax_+_floor
*CAT: n
*SEM: twoRel[rel=nsa935805_+_convoluted_+_conduit_+_under_+_pax_+_floor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit_+_under_+_pax_+_floor
*CAT: n
*SEM: twoRel[rel=nsa935805_+_convoluted_+_conduit_+_under_+_pax_+_floor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa935805_+_convoluted_+_conduit_+_under_+_pax_+_floor
*CAT: n
*SEM: orRel[rel=nsa935805_+_convoluted_+_conduit_+_under_+_pax_+_floor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937210_+_heat_+_shrink_+_sleeve
*CAT: n
*SEM: unaryRel[rel=nsa937210_+_heat_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937210_+_heat_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa937210_+_heat_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937210_+_heat_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa937210_+_heat_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937210_+_heat_+_shrink_+_sleeve
*CAT: n
*SEM: orRel[rel=nsa937210_+_heat_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937493_+_insulating_+_sleeve
*CAT: n
*SEM: unaryRel[rel=nsa937493_+_insulating_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937493_+_insulating_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa937493_+_insulating_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937493_+_insulating_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa937493_+_insulating_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937493_+_insulating_+_sleeve
*CAT: n
*SEM: orRel[rel=nsa937493_+_insulating_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937901_+_virtual_+_modul_+_rail
*CAT: n
*SEM: unaryRel[rel=nsa937901_+_virtual_+_modul_+_rail]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937901_+_virtual_+_modul_+_rail
*CAT: n
*SEM: twoRel[rel=nsa937901_+_virtual_+_modul_+_rail]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937901_+_virtual_+_modul_+_rail
*CAT: n
*SEM: twoRel[rel=nsa937901_+_virtual_+_modul_+_rail]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937901_+_virtual_+_modul_+_rail
*CAT: n
*SEM: orRel[rel=nsa937901_+_virtual_+_modul_+_rail]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937901_+_virtual_+_modul_+_rail_+_module_+_1_+_located_+_at_+_one_+_rail_+_extremity
*CAT: n
*SEM: unaryRel[rel=nsa937901_+_virtual_+_modul_+_rail_+_module_+_1_+_located_+_at_+_one_+_rail_+_extremity]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937901_+_virtual_+_modul_+_rail_+_module_+_1_+_located_+_at_+_one_+_rail_+_extremity
*CAT: n
*SEM: twoRel[rel=nsa937901_+_virtual_+_modul_+_rail_+_module_+_1_+_located_+_at_+_one_+_rail_+_extremity]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937901_+_virtual_+_modul_+_rail_+_module_+_1_+_located_+_at_+_one_+_rail_+_extremity
*CAT: n
*SEM: twoRel[rel=nsa937901_+_virtual_+_modul_+_rail_+_module_+_1_+_located_+_at_+_one_+_rail_+_extremity]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa937901_+_virtual_+_modul_+_rail_+_module_+_1_+_located_+_at_+_one_+_rail_+_extremity
*CAT: n
*SEM: orRel[rel=nsa937901_+_virtual_+_modul_+_rail_+_module_+_1_+_located_+_at_+_one_+_rail_+_extremity]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nut
*CAT: n
*SEM: unaryRel[rel=nut]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nut
*CAT: n
*SEM: twoRel[rel=nut]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nut
*CAT: n
*SEM: twoRel[rel=nut]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nut
*CAT: n
*SEM: orRel[rel=nut]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_component
*CAT: n
*SEM: unaryRel[rel=obstructive_+_component]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_component
*CAT: n
*SEM: twoRel[rel=obstructive_+_component]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_component
*CAT: n
*SEM: twoRel[rel=obstructive_+_component]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_component
*CAT: n
*SEM: orRel[rel=obstructive_+_component]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: unaryRel[rel=obstructive_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: twoRel[rel=obstructive_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: twoRel[rel=obstructive_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: orRel[rel=obstructive_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_object
*CAT: n
*SEM: unaryRel[rel=obstructive_+_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_object
*CAT: n
*SEM: twoRel[rel=obstructive_+_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_object
*CAT: n
*SEM: twoRel[rel=obstructive_+_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: obstructive_+_object
*CAT: n
*SEM: orRel[rel=obstructive_+_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_attachment_+_device_+_asne0664_+_type
*CAT: n
*SEM: unaryRel[rel=on_+_attachment_+_device_+_asne0664_+_type]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_attachment_+_device_+_asne0664_+_type
*CAT: n
*SEM: twoRel[rel=on_+_attachment_+_device_+_asne0664_+_type]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_attachment_+_device_+_asne0664_+_type
*CAT: n
*SEM: twoRel[rel=on_+_attachment_+_device_+_asne0664_+_type]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_attachment_+_device_+_asne0664_+_type
*CAT: n
*SEM: orRel[rel=on_+_attachment_+_device_+_asne0664_+_type]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_hole_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=on_+_hole_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_hole_+_clamp-block
*CAT: n
*SEM: twoRel[rel=on_+_hole_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_hole_+_clamp-block
*CAT: n
*SEM: twoRel[rel=on_+_hole_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_hole_+_clamp-block
*CAT: n
*SEM: orRel[rel=on_+_hole_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one
*CAT: n
*SEM: unaryRel[rel=one]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one
*CAT: n
*SEM: twoRel[rel=one]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one
*CAT: n
*SEM: twoRel[rel=one]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one
*CAT: n
*SEM: orRel[rel=one]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=one_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=one_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=one_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=one_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_fixation_+_point
*CAT: n
*SEM: unaryRel[rel=one_+_fixation_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_fixation_+_point
*CAT: n
*SEM: twoRel[rel=one_+_fixation_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_fixation_+_point
*CAT: n
*SEM: twoRel[rel=one_+_fixation_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_fixation_+_point
*CAT: n
*SEM: orRel[rel=one_+_fixation_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_single_+_contact
*CAT: n
*SEM: unaryRel[rel=one_+_single_+_contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_single_+_contact
*CAT: n
*SEM: twoRel[rel=one_+_single_+_contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_single_+_contact
*CAT: n
*SEM: twoRel[rel=one_+_single_+_contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_single_+_contact
*CAT: n
*SEM: orRel[rel=one_+_single_+_contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_terminal_+_lug
*CAT: n
*SEM: unaryRel[rel=one_+_terminal_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=one_+_terminal_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=one_+_terminal_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_terminal_+_lug
*CAT: n
*SEM: orRel[rel=one_+_terminal_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_v-support
*CAT: n
*SEM: unaryRel[rel=one_+_v-support]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_v-support
*CAT: n
*SEM: twoRel[rel=one_+_v-support]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_v-support
*CAT: n
*SEM: twoRel[rel=one_+_v-support]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_v-support
*CAT: n
*SEM: orRel[rel=one_+_v-support]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_vn
*CAT: n
*SEM: unaryRel[rel=one_+_vn]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_vn
*CAT: n
*SEM: twoRel[rel=one_+_vn]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_vn
*CAT: n
*SEM: twoRel[rel=one_+_vn]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: one_+_vn
*CAT: n
*SEM: orRel[rel=one_+_vn]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: open_+_backshell
*CAT: n
*SEM: unaryRel[rel=open_+_backshell]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: open_+_backshell
*CAT: n
*SEM: twoRel[rel=open_+_backshell]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: open_+_backshell
*CAT: n
*SEM: twoRel[rel=open_+_backshell]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: open_+_backshell
*CAT: n
*SEM: orRel[rel=open_+_backshell]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: open_+_backslash_+_split_+_conduit_+_backslash_+_sleeve
*CAT: n
*SEM: unaryRel[rel=open_+_backslash_+_split_+_conduit_+_backslash_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: open_+_backslash_+_split_+_conduit_+_backslash_+_sleeve
*CAT: n
*SEM: twoRel[rel=open_+_backslash_+_split_+_conduit_+_backslash_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: open_+_backslash_+_split_+_conduit_+_backslash_+_sleeve
*CAT: n
*SEM: twoRel[rel=open_+_backslash_+_split_+_conduit_+_backslash_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: open_+_backslash_+_split_+_conduit_+_backslash_+_sleeve
*CAT: n
*SEM: orRel[rel=open_+_backslash_+_split_+_conduit_+_backslash_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_cable
*CAT: n
*SEM: unaryRel[rel=optical_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_cable
*CAT: n
*SEM: twoRel[rel=optical_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_cable
*CAT: n
*SEM: twoRel[rel=optical_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_cable
*CAT: n
*SEM: orRel[rel=optical_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_cable_+_with_+_lacing_+_tape_+_printed_+_in_+_black_+_on_+_white_+_background
*CAT: n
*SEM: unaryRel[rel=optical_+_cable_+_with_+_lacing_+_tape_+_printed_+_in_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_cable_+_with_+_lacing_+_tape_+_printed_+_in_+_black_+_on_+_white_+_background
*CAT: n
*SEM: twoRel[rel=optical_+_cable_+_with_+_lacing_+_tape_+_printed_+_in_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_cable_+_with_+_lacing_+_tape_+_printed_+_in_+_black_+_on_+_white_+_background
*CAT: n
*SEM: twoRel[rel=optical_+_cable_+_with_+_lacing_+_tape_+_printed_+_in_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_cable_+_with_+_lacing_+_tape_+_printed_+_in_+_black_+_on_+_white_+_background
*CAT: n
*SEM: orRel[rel=optical_+_cable_+_with_+_lacing_+_tape_+_printed_+_in_+_black_+_on_+_white_+_background]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_connector
*CAT: n
*SEM: unaryRel[rel=optical_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_connector
*CAT: n
*SEM: twoRel[rel=optical_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_connector
*CAT: n
*SEM: twoRel[rel=optical_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_connector
*CAT: n
*SEM: orRel[rel=optical_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_dummy_+_receptable
*CAT: n
*SEM: unaryRel[rel=optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_dummy_+_receptable
*CAT: n
*SEM: twoRel[rel=optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_dummy_+_receptable
*CAT: n
*SEM: twoRel[rel=optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_dummy_+_receptable
*CAT: n
*SEM: orRel[rel=optical_+_dummy_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_multiway_+_connector
*CAT: n
*SEM: unaryRel[rel=optical_+_multiway_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_multiway_+_connector
*CAT: n
*SEM: twoRel[rel=optical_+_multiway_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_multiway_+_connector
*CAT: n
*SEM: twoRel[rel=optical_+_multiway_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_multiway_+_connector
*CAT: n
*SEM: orRel[rel=optical_+_multiway_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_wire
*CAT: n
*SEM: unaryRel[rel=optical_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_wire
*CAT: n
*SEM: twoRel[rel=optical_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_wire
*CAT: n
*SEM: twoRel[rel=optical_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optical_+_wire
*CAT: n
*SEM: orRel[rel=optical_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_harness_+_m-route
*CAT: n
*SEM: unaryRel[rel=optional_+_harness_+_m-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_harness_+_m-route
*CAT: n
*SEM: twoRel[rel=optional_+_harness_+_m-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_harness_+_m-route
*CAT: n
*SEM: twoRel[rel=optional_+_harness_+_m-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_harness_+_m-route
*CAT: n
*SEM: orRel[rel=optional_+_harness_+_m-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_part_+_of_+_p-route
*CAT: n
*SEM: unaryRel[rel=optional_+_part_+_of_+_p-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_part_+_of_+_p-route
*CAT: n
*SEM: twoRel[rel=optional_+_part_+_of_+_p-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_part_+_of_+_p-route
*CAT: n
*SEM: twoRel[rel=optional_+_part_+_of_+_p-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_part_+_of_+_p-route
*CAT: n
*SEM: orRel[rel=optional_+_part_+_of_+_p-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_technical
*CAT: n
*SEM: unaryRel[rel=optional_+_technical]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_technical
*CAT: n
*SEM: twoRel[rel=optional_+_technical]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_technical
*CAT: n
*SEM: twoRel[rel=optional_+_technical]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: optional_+_technical
*CAT: n
*SEM: orRel[rel=optional_+_technical]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_equivalent_+_reinforcement
*CAT: n
*SEM: unaryRel[rel=or_+_equivalent_+_reinforcement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_equivalent_+_reinforcement
*CAT: n
*SEM: twoRel[rel=or_+_equivalent_+_reinforcement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_equivalent_+_reinforcement
*CAT: n
*SEM: twoRel[rel=or_+_equivalent_+_reinforcement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_equivalent_+_reinforcement
*CAT: n
*SEM: orRel[rel=or_+_equivalent_+_reinforcement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_pa6_+_.6_+_finish
*CAT: n
*SEM: unaryRel[rel=or_+_pa6_+_.6_+_finish]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_pa6_+_.6_+_finish
*CAT: n
*SEM: twoRel[rel=or_+_pa6_+_.6_+_finish]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_pa6_+_.6_+_finish
*CAT: n
*SEM: twoRel[rel=or_+_pa6_+_.6_+_finish]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_pa6_+_.6_+_finish
*CAT: n
*SEM: orRel[rel=or_+_pa6_+_.6_+_finish]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_without_+_spacer
*CAT: n
*SEM: unaryRel[rel=or_+_without_+_spacer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_without_+_spacer
*CAT: n
*SEM: twoRel[rel=or_+_without_+_spacer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_without_+_spacer
*CAT: n
*SEM: twoRel[rel=or_+_without_+_spacer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or_+_without_+_spacer
*CAT: n
*SEM: orRel[rel=or_+_without_+_spacer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: order
*CAT: n
*SEM: unaryRel[rel=order]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: order
*CAT: n
*SEM: twoRel[rel=order]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: order
*CAT: n
*SEM: twoRel[rel=order]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: order
*CAT: n
*SEM: orRel[rel=order]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: orientation
*CAT: n
*SEM: unaryRel[rel=orientation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: orientation
*CAT: n
*SEM: twoRel[rel=orientation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: orientation
*CAT: n
*SEM: twoRel[rel=orientation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: orientation
*CAT: n
*SEM: orRel[rel=orientation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_areas
*CAT: n
*SEM: unaryRel[rel=other_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_areas
*CAT: n
*SEM: twoRel[rel=other_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_areas
*CAT: n
*SEM: twoRel[rel=other_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_areas
*CAT: n
*SEM: orRel[rel=other_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_bundle
*CAT: n
*SEM: unaryRel[rel=other_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_bundle
*CAT: n
*SEM: twoRel[rel=other_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_bundle
*CAT: n
*SEM: twoRel[rel=other_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_bundle
*CAT: n
*SEM: orRel[rel=other_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_items_+_during_+_movement
*CAT: n
*SEM: unaryRel[rel=other_+_items_+_during_+_movement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_items_+_during_+_movement
*CAT: n
*SEM: twoRel[rel=other_+_items_+_during_+_movement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_items_+_during_+_movement
*CAT: n
*SEM: twoRel[rel=other_+_items_+_during_+_movement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_items_+_during_+_movement
*CAT: n
*SEM: orRel[rel=other_+_items_+_during_+_movement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_main_+_routing
*CAT: n
*SEM: unaryRel[rel=other_+_main_+_routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_main_+_routing
*CAT: n
*SEM: twoRel[rel=other_+_main_+_routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_main_+_routing
*CAT: n
*SEM: twoRel[rel=other_+_main_+_routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_main_+_routing
*CAT: n
*SEM: orRel[rel=other_+_main_+_routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_systems
*CAT: n
*SEM: unaryRel[rel=other_+_systems]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_systems
*CAT: n
*SEM: twoRel[rel=other_+_systems]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_systems
*CAT: n
*SEM: twoRel[rel=other_+_systems]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: other_+_systems
*CAT: n
*SEM: orRel[rel=other_+_systems]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraided_+_bundle
*CAT: n
*SEM: unaryRel[rel=overbraided_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraided_+_bundle
*CAT: n
*SEM: twoRel[rel=overbraided_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraided_+_bundle
*CAT: n
*SEM: twoRel[rel=overbraided_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraided_+_bundle
*CAT: n
*SEM: orRel[rel=overbraided_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraided_+_bundle_+_with_+_a_+_maximum_+_of_+_four_+_kits_+_per_+_bundle
*CAT: n
*SEM: unaryRel[rel=overbraided_+_bundle_+_with_+_a_+_maximum_+_of_+_four_+_kits_+_per_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraided_+_bundle_+_with_+_a_+_maximum_+_of_+_four_+_kits_+_per_+_bundle
*CAT: n
*SEM: twoRel[rel=overbraided_+_bundle_+_with_+_a_+_maximum_+_of_+_four_+_kits_+_per_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraided_+_bundle_+_with_+_a_+_maximum_+_of_+_four_+_kits_+_per_+_bundle
*CAT: n
*SEM: twoRel[rel=overbraided_+_bundle_+_with_+_a_+_maximum_+_of_+_four_+_kits_+_per_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraided_+_bundle_+_with_+_a_+_maximum_+_of_+_four_+_kits_+_per_+_bundle
*CAT: n
*SEM: orRel[rel=overbraided_+_bundle_+_with_+_a_+_maximum_+_of_+_four_+_kits_+_per_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraiding
*CAT: n
*SEM: unaryRel[rel=overbraiding]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraiding
*CAT: n
*SEM: twoRel[rel=overbraiding]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraiding
*CAT: n
*SEM: twoRel[rel=overbraiding]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overbraiding
*CAT: n
*SEM: orRel[rel=overbraiding]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overlength_+_management
*CAT: n
*SEM: unaryRel[rel=overlength_+_management]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overlength_+_management
*CAT: n
*SEM: twoRel[rel=overlength_+_management]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overlength_+_management
*CAT: n
*SEM: twoRel[rel=overlength_+_management]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: overlength_+_management
*CAT: n
*SEM: orRel[rel=overlength_+_management]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: oxygen
*CAT: n
*SEM: unaryRel[rel=oxygen]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: oxygen
*CAT: n
*SEM: twoRel[rel=oxygen]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: oxygen
*CAT: n
*SEM: twoRel[rel=oxygen]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: oxygen
*CAT: n
*SEM: orRel[rel=oxygen]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p_+_routes
*CAT: n
*SEM: unaryRel[rel=p_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p_+_routes
*CAT: n
*SEM: twoRel[rel=p_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p_+_routes
*CAT: n
*SEM: twoRel[rel=p_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p_+_routes
*CAT: n
*SEM: orRel[rel=p_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp
*CAT: n
*SEM: unaryRel[rel=p-clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp
*CAT: n
*SEM: twoRel[rel=p-clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp
*CAT: n
*SEM: twoRel[rel=p-clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp
*CAT: n
*SEM: orRel[rel=p-clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339_+_-_+_f
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_abs1339_+_-_+_f]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339_+_-_+_f
*CAT: n
*SEM: twoRel[rel=p-clamp_+_abs1339_+_-_+_f]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339_+_-_+_f
*CAT: n
*SEM: twoRel[rel=p-clamp_+_abs1339_+_-_+_f]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339_+_-_+_f
*CAT: n
*SEM: orRel[rel=p-clamp_+_abs1339_+_-_+_f]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339_+_-f
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_abs1339_+_-f]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339_+_-f
*CAT: n
*SEM: twoRel[rel=p-clamp_+_abs1339_+_-f]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339_+_-f
*CAT: n
*SEM: twoRel[rel=p-clamp_+_abs1339_+_-f]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339_+_-f
*CAT: n
*SEM: orRel[rel=p-clamp_+_abs1339_+_-f]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339-f
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_abs1339-f]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339-f
*CAT: n
*SEM: twoRel[rel=p-clamp_+_abs1339-f]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339-f
*CAT: n
*SEM: twoRel[rel=p-clamp_+_abs1339-f]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_abs1339-f
*CAT: n
*SEM: orRel[rel=p-clamp_+_abs1339-f]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_as_+_62200
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_as_+_62200]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_as_+_62200
*CAT: n
*SEM: twoRel[rel=p-clamp_+_as_+_62200]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_as_+_62200
*CAT: n
*SEM: twoRel[rel=p-clamp_+_as_+_62200]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_as_+_62200
*CAT: n
*SEM: orRel[rel=p-clamp_+_as_+_62200]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_e.g._+_nsa_+_5516bd
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_e.g._+_nsa_+_5516bd]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_e.g._+_nsa_+_5516bd
*CAT: n
*SEM: twoRel[rel=p-clamp_+_e.g._+_nsa_+_5516bd]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_e.g._+_nsa_+_5516bd
*CAT: n
*SEM: twoRel[rel=p-clamp_+_e.g._+_nsa_+_5516bd]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_e.g._+_nsa_+_5516bd
*CAT: n
*SEM: orRel[rel=p-clamp_+_e.g._+_nsa_+_5516bd]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_nsa5516_+_cbd_+_in_+_swamp_+_areas
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_nsa5516_+_cbd_+_in_+_swamp_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_nsa5516_+_cbd_+_in_+_swamp_+_areas
*CAT: n
*SEM: twoRel[rel=p-clamp_+_nsa5516_+_cbd_+_in_+_swamp_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_nsa5516_+_cbd_+_in_+_swamp_+_areas
*CAT: n
*SEM: twoRel[rel=p-clamp_+_nsa5516_+_cbd_+_in_+_swamp_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_nsa5516_+_cbd_+_in_+_swamp_+_areas
*CAT: n
*SEM: orRel[rel=p-clamp_+_nsa5516_+_cbd_+_in_+_swamp_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_a
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_type_+_a]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_a
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_a]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_a
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_a]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_a
*CAT: n
*SEM: orRel[rel=p-clamp_+_type_+_a]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_b
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_b
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_b
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_b
*CAT: n
*SEM: orRel[rel=p-clamp_+_type_+_b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_b_+_e.g._+_nsa_+_5516_+_cbf
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_type_+_b_+_e.g._+_nsa_+_5516_+_cbf]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_b_+_e.g._+_nsa_+_5516_+_cbf
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_b_+_e.g._+_nsa_+_5516_+_cbf]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_b_+_e.g._+_nsa_+_5516_+_cbf
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_b_+_e.g._+_nsa_+_5516_+_cbf]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_b_+_e.g._+_nsa_+_5516_+_cbf
*CAT: n
*SEM: orRel[rel=p-clamp_+_type_+_b_+_e.g._+_nsa_+_5516_+_cbf]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_c
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_type_+_c]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_c
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_c]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_c
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_c]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_c
*CAT: n
*SEM: orRel[rel=p-clamp_+_type_+_c]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_c_+_0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd_+_with_+_mechanical_+_protection
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_type_+_c_+_0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd_+_with_+_mechanical_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_c_+_0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd_+_with_+_mechanical_+_protection
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_c_+_0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd_+_with_+_mechanical_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_c_+_0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd_+_with_+_mechanical_+_protection
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_c_+_0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd_+_with_+_mechanical_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-clamp_+_type_+_c_+_0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd_+_with_+_mechanical_+_protection
*CAT: n
*SEM: orRel[rel=p-clamp_+_type_+_c_+_0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd_+_with_+_mechanical_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-route
*CAT: n
*SEM: unaryRel[rel=p-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-route
*CAT: n
*SEM: twoRel[rel=p-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-route
*CAT: n
*SEM: twoRel[rel=p-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p-route
*CAT: n
*SEM: orRel[rel=p-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p0
*CAT: n
*SEM: unaryRel[rel=p0]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p0
*CAT: n
*SEM: twoRel[rel=p0]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p0
*CAT: n
*SEM: twoRel[rel=p0]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p0
*CAT: n
*SEM: orRel[rel=p0]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p15
*CAT: n
*SEM: unaryRel[rel=p15]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p15
*CAT: n
*SEM: twoRel[rel=p15]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p15
*CAT: n
*SEM: twoRel[rel=p15]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p15
*CAT: n
*SEM: orRel[rel=p15]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p5_+_'
*CAT: n
*SEM: unaryRel[rel=p5_+_']
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p5_+_'
*CAT: n
*SEM: twoRel[rel=p5_+_']
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p5_+_'
*CAT: n
*SEM: twoRel[rel=p5_+_']
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p5_+_'
*CAT: n
*SEM: orRel[rel=p5_+_']
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p5'
*CAT: n
*SEM: unaryRel[rel=p5']
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p5'
*CAT: n
*SEM: twoRel[rel=p5']
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p5'
*CAT: n
*SEM: twoRel[rel=p5']
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: p5'
*CAT: n
*SEM: orRel[rel=p5']
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: panel
*CAT: n
*SEM: unaryRel[rel=panel]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: panel
*CAT: n
*SEM: twoRel[rel=panel]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: panel
*CAT: n
*SEM: twoRel[rel=panel]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: panel
*CAT: n
*SEM: orRel[rel=panel]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: para-aramid_+_braided_+_non-metallic_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=para-aramid_+_braided_+_non-metallic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: para-aramid_+_braided_+_non-metallic_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=para-aramid_+_braided_+_non-metallic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: para-aramid_+_braided_+_non-metallic_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=para-aramid_+_braided_+_non-metallic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: para-aramid_+_braided_+_non-metallic_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=para-aramid_+_braided_+_non-metallic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: para-aramid_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=para-aramid_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: para-aramid_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=para-aramid_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: para-aramid_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=para-aramid_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: para-aramid_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=para-aramid_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parallel_+_splice
*CAT: n
*SEM: unaryRel[rel=parallel_+_splice]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parallel_+_splice
*CAT: n
*SEM: twoRel[rel=parallel_+_splice]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parallel_+_splice
*CAT: n
*SEM: twoRel[rel=parallel_+_splice]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: parallel_+_splice
*CAT: n
*SEM: orRel[rel=parallel_+_splice]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: peek
*CAT: n
*SEM: unaryRel[rel=peek]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: peek
*CAT: n
*SEM: twoRel[rel=peek]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: peek
*CAT: n
*SEM: twoRel[rel=peek]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: peek
*CAT: n
*SEM: orRel[rel=peek]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permanent_+_unions
*CAT: n
*SEM: unaryRel[rel=permanent_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permanent_+_unions
*CAT: n
*SEM: twoRel[rel=permanent_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permanent_+_unions
*CAT: n
*SEM: twoRel[rel=permanent_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permanent_+_unions
*CAT: n
*SEM: orRel[rel=permanent_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permit_+_free_+_pass_+_of_+_connector
*CAT: n
*SEM: unaryRel[rel=permit_+_free_+_pass_+_of_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permit_+_free_+_pass_+_of_+_connector
*CAT: n
*SEM: twoRel[rel=permit_+_free_+_pass_+_of_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permit_+_free_+_pass_+_of_+_connector
*CAT: n
*SEM: twoRel[rel=permit_+_free_+_pass_+_of_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: permit_+_free_+_pass_+_of_+_connector
*CAT: n
*SEM: orRel[rel=permit_+_free_+_pass_+_of_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_below
*CAT: n
*SEM: unaryRel[rel=picture_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_below
*CAT: n
*SEM: twoRel[rel=picture_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_below
*CAT: n
*SEM: twoRel[rel=picture_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_below
*CAT: n
*SEM: orRel[rel=picture_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_locking_+_of_+_connector
*CAT: n
*SEM: unaryRel[rel=pin_+_locking_+_of_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_locking_+_of_+_connector
*CAT: n
*SEM: twoRel[rel=pin_+_locking_+_of_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_locking_+_of_+_connector
*CAT: n
*SEM: twoRel[rel=pin_+_locking_+_of_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pin_+_locking_+_of_+_connector
*CAT: n
*SEM: orRel[rel=pin_+_locking_+_of_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_background
*CAT: n
*SEM: unaryRel[rel=pink_+_background]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_background
*CAT: n
*SEM: twoRel[rel=pink_+_background]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_background
*CAT: n
*SEM: twoRel[rel=pink_+_background]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_background
*CAT: n
*SEM: orRel[rel=pink_+_background]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_colour
*CAT: n
*SEM: unaryRel[rel=pink_+_colour]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_colour
*CAT: n
*SEM: twoRel[rel=pink_+_colour]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_colour
*CAT: n
*SEM: twoRel[rel=pink_+_colour]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pink_+_colour
*CAT: n
*SEM: orRel[rel=pink_+_colour]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe
*CAT: n
*SEM: unaryRel[rel=pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe
*CAT: n
*SEM: twoRel[rel=pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe
*CAT: n
*SEM: twoRel[rel=pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe
*CAT: n
*SEM: orRel[rel=pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_end_+_extremities
*CAT: n
*SEM: unaryRel[rel=pipe_+_end_+_extremities]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_end_+_extremities
*CAT: n
*SEM: twoRel[rel=pipe_+_end_+_extremities]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_end_+_extremities
*CAT: n
*SEM: twoRel[rel=pipe_+_end_+_extremities]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_end_+_extremities
*CAT: n
*SEM: orRel[rel=pipe_+_end_+_extremities]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_fixation
*CAT: n
*SEM: unaryRel[rel=pipe_+_fixation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_fixation
*CAT: n
*SEM: twoRel[rel=pipe_+_fixation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_fixation
*CAT: n
*SEM: twoRel[rel=pipe_+_fixation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_fixation
*CAT: n
*SEM: orRel[rel=pipe_+_fixation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings_+_through_+_all_+_other_+_tank_+_ribs_+_opensb_+_within_+_fuel_+_tanks_+_closesb_+_comma
*CAT: n
*SEM: unaryRel[rel=pipe_+_routings_+_through_+_all_+_other_+_tank_+_ribs_+_opensb_+_within_+_fuel_+_tanks_+_closesb_+_comma]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings_+_through_+_all_+_other_+_tank_+_ribs_+_opensb_+_within_+_fuel_+_tanks_+_closesb_+_comma
*CAT: n
*SEM: twoRel[rel=pipe_+_routings_+_through_+_all_+_other_+_tank_+_ribs_+_opensb_+_within_+_fuel_+_tanks_+_closesb_+_comma]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings_+_through_+_all_+_other_+_tank_+_ribs_+_opensb_+_within_+_fuel_+_tanks_+_closesb_+_comma
*CAT: n
*SEM: twoRel[rel=pipe_+_routings_+_through_+_all_+_other_+_tank_+_ribs_+_opensb_+_within_+_fuel_+_tanks_+_closesb_+_comma]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipe_+_routings_+_through_+_all_+_other_+_tank_+_ribs_+_opensb_+_within_+_fuel_+_tanks_+_closesb_+_comma
*CAT: n
*SEM: orRel[rel=pipe_+_routings_+_through_+_all_+_other_+_tank_+_ribs_+_opensb_+_within_+_fuel_+_tanks_+_closesb_+_comma]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes
*CAT: n
*SEM: unaryRel[rel=pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes
*CAT: n
*SEM: twoRel[rel=pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes
*CAT: n
*SEM: twoRel[rel=pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes
*CAT: n
*SEM: orRel[rel=pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_at_+_alternating_+_positions
*CAT: n
*SEM: unaryRel[rel=pipes_+_at_+_alternating_+_positions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_at_+_alternating_+_positions
*CAT: n
*SEM: twoRel[rel=pipes_+_at_+_alternating_+_positions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_at_+_alternating_+_positions
*CAT: n
*SEM: twoRel[rel=pipes_+_at_+_alternating_+_positions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes_+_at_+_alternating_+_positions
*CAT: n
*SEM: orRel[rel=pipes_+_at_+_alternating_+_positions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: piping
*CAT: n
*SEM: unaryRel[rel=piping]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: piping
*CAT: n
*SEM: twoRel[rel=piping]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: piping
*CAT: n
*SEM: twoRel[rel=piping]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: piping
*CAT: n
*SEM: orRel[rel=piping]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch
*CAT: n
*SEM: unaryRel[rel=pitch]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch
*CAT: n
*SEM: twoRel[rel=pitch]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch
*CAT: n
*SEM: twoRel[rel=pitch]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pitch
*CAT: n
*SEM: orRel[rel=pitch]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: placed_+_on_+_either_+_side_+_of_+_the_+_end_+_plate_+_nsa_+_936809
*CAT: n
*SEM: unaryRel[rel=placed_+_on_+_either_+_side_+_of_+_the_+_end_+_plate_+_nsa_+_936809]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: placed_+_on_+_either_+_side_+_of_+_the_+_end_+_plate_+_nsa_+_936809
*CAT: n
*SEM: twoRel[rel=placed_+_on_+_either_+_side_+_of_+_the_+_end_+_plate_+_nsa_+_936809]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: placed_+_on_+_either_+_side_+_of_+_the_+_end_+_plate_+_nsa_+_936809
*CAT: n
*SEM: twoRel[rel=placed_+_on_+_either_+_side_+_of_+_the_+_end_+_plate_+_nsa_+_936809]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: placed_+_on_+_either_+_side_+_of_+_the_+_end_+_plate_+_nsa_+_936809
*CAT: n
*SEM: orRel[rel=placed_+_on_+_either_+_side_+_of_+_the_+_end_+_plate_+_nsa_+_936809]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic
*CAT: n
*SEM: unaryRel[rel=plastic]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic
*CAT: n
*SEM: twoRel[rel=plastic]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic
*CAT: n
*SEM: twoRel[rel=plastic]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic
*CAT: n
*SEM: orRel[rel=plastic]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_spacer
*CAT: n
*SEM: unaryRel[rel=plastic_+_spacer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_spacer
*CAT: n
*SEM: twoRel[rel=plastic_+_spacer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_spacer
*CAT: n
*SEM: twoRel[rel=plastic_+_spacer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_spacer
*CAT: n
*SEM: orRel[rel=plastic_+_spacer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_spacer_+_in_+_hot
*CAT: n
*SEM: unaryRel[rel=plastic_+_spacer_+_in_+_hot]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_spacer_+_in_+_hot
*CAT: n
*SEM: twoRel[rel=plastic_+_spacer_+_in_+_hot]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_spacer_+_in_+_hot
*CAT: n
*SEM: twoRel[rel=plastic_+_spacer_+_in_+_hot]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_spacer_+_in_+_hot
*CAT: n
*SEM: orRel[rel=plastic_+_spacer_+_in_+_hot]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asb1423_+_abs1424_+_closesb_+_exept_+_in_+_hot
*CAT: n
*SEM: unaryRel[rel=plastic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asb1423_+_abs1424_+_closesb_+_exept_+_in_+_hot]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asb1423_+_abs1424_+_closesb_+_exept_+_in_+_hot
*CAT: n
*SEM: twoRel[rel=plastic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asb1423_+_abs1424_+_closesb_+_exept_+_in_+_hot]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asb1423_+_abs1424_+_closesb_+_exept_+_in_+_hot
*CAT: n
*SEM: twoRel[rel=plastic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asb1423_+_abs1424_+_closesb_+_exept_+_in_+_hot]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asb1423_+_abs1424_+_closesb_+_exept_+_in_+_hot
*CAT: n
*SEM: orRel[rel=plastic_+_stand-off_+_backslash_+_colonettes_+_opensb_+_asb1423_+_abs1424_+_closesb_+_exept_+_in_+_hot]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_version
*CAT: n
*SEM: unaryRel[rel=plastic_+_version]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_version
*CAT: n
*SEM: twoRel[rel=plastic_+_version]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_version
*CAT: n
*SEM: twoRel[rel=plastic_+_version]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plastic_+_version
*CAT: n
*SEM: orRel[rel=plastic_+_version]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plug
*CAT: n
*SEM: unaryRel[rel=plug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plug
*CAT: n
*SEM: twoRel[rel=plug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plug
*CAT: n
*SEM: twoRel[rel=plug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plug
*CAT: n
*SEM: orRel[rel=plug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pneumatic_+_system
*CAT: n
*SEM: unaryRel[rel=pneumatic_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pneumatic_+_system
*CAT: n
*SEM: twoRel[rel=pneumatic_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pneumatic_+_system
*CAT: n
*SEM: twoRel[rel=pneumatic_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pneumatic_+_system
*CAT: n
*SEM: orRel[rel=pneumatic_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_b
*CAT: n
*SEM: unaryRel[rel=position_+_b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_b
*CAT: n
*SEM: twoRel[rel=position_+_b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_b
*CAT: n
*SEM: twoRel[rel=position_+_b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_b
*CAT: n
*SEM: orRel[rel=position_+_b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_of_+_derivation
*CAT: n
*SEM: unaryRel[rel=position_+_of_+_derivation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_of_+_derivation
*CAT: n
*SEM: twoRel[rel=position_+_of_+_derivation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_of_+_derivation
*CAT: n
*SEM: twoRel[rel=position_+_of_+_derivation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: position_+_of_+_derivation
*CAT: n
*SEM: orRel[rel=position_+_of_+_derivation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_center
*CAT: n
*SEM: unaryRel[rel=power_+_center]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_center
*CAT: n
*SEM: twoRel[rel=power_+_center]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_center
*CAT: n
*SEM: twoRel[rel=power_+_center]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_center
*CAT: n
*SEM: orRel[rel=power_+_center]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_center_+_which_+_are_+_non_+_loosable
*CAT: n
*SEM: unaryRel[rel=power_+_center_+_which_+_are_+_non_+_loosable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_center_+_which_+_are_+_non_+_loosable
*CAT: n
*SEM: twoRel[rel=power_+_center_+_which_+_are_+_non_+_loosable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_center_+_which_+_are_+_non_+_loosable
*CAT: n
*SEM: twoRel[rel=power_+_center_+_which_+_are_+_non_+_loosable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_center_+_which_+_are_+_non_+_loosable
*CAT: n
*SEM: orRel[rel=power_+_center_+_which_+_are_+_non_+_loosable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_supply
*CAT: n
*SEM: unaryRel[rel=power_+_supply]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_supply
*CAT: n
*SEM: twoRel[rel=power_+_supply]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_supply
*CAT: n
*SEM: twoRel[rel=power_+_supply]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_supply
*CAT: n
*SEM: orRel[rel=power_+_supply]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=power_+_virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=power_+_virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=power_+_virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: orRel[rel=power_+_virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=power_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=power_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=power_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: power_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: orRel[rel=power_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pra_+__+_opensb_+_particular_+_risk_+_analysis_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=pra_+__+_opensb_+_particular_+_risk_+_analysis_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pra_+__+_opensb_+_particular_+_risk_+_analysis_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=pra_+__+_opensb_+_particular_+_risk_+_analysis_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pra_+__+_opensb_+_particular_+_risk_+_analysis_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=pra_+__+_opensb_+_particular_+_risk_+_analysis_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pra_+__+_opensb_+_particular_+_risk_+_analysis_+_closesb_+_
*CAT: n
*SEM: orRel[rel=pra_+__+_opensb_+_particular_+_risk_+_analysis_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pra_+_opensb_+_particular_+_risk_+_analysis_+_closesb
*CAT: n
*SEM: unaryRel[rel=pra_+_opensb_+_particular_+_risk_+_analysis_+_closesb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pra_+_opensb_+_particular_+_risk_+_analysis_+_closesb
*CAT: n
*SEM: twoRel[rel=pra_+_opensb_+_particular_+_risk_+_analysis_+_closesb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pra_+_opensb_+_particular_+_risk_+_analysis_+_closesb
*CAT: n
*SEM: twoRel[rel=pra_+_opensb_+_particular_+_risk_+_analysis_+_closesb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pra_+_opensb_+_particular_+_risk_+_analysis_+_closesb
*CAT: n
*SEM: orRel[rel=pra_+_opensb_+_particular_+_risk_+_analysis_+_closesb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_g-route
*CAT: n
*SEM: unaryRel[rel=pre_+_stressed_+_g-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_g-route
*CAT: n
*SEM: twoRel[rel=pre_+_stressed_+_g-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_g-route
*CAT: n
*SEM: twoRel[rel=pre_+_stressed_+_g-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_g-route
*CAT: n
*SEM: orRel[rel=pre_+_stressed_+_g-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_m-route
*CAT: n
*SEM: unaryRel[rel=pre_+_stressed_+_m-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_m-route
*CAT: n
*SEM: twoRel[rel=pre_+_stressed_+_m-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_m-route
*CAT: n
*SEM: twoRel[rel=pre_+_stressed_+_m-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_m-route
*CAT: n
*SEM: orRel[rel=pre_+_stressed_+_m-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_r-route
*CAT: n
*SEM: unaryRel[rel=pre_+_stressed_+_r-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_r-route
*CAT: n
*SEM: twoRel[rel=pre_+_stressed_+_r-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_r-route
*CAT: n
*SEM: twoRel[rel=pre_+_stressed_+_r-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_r-route
*CAT: n
*SEM: orRel[rel=pre_+_stressed_+_r-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_s-route
*CAT: n
*SEM: unaryRel[rel=pre_+_stressed_+_s-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_s-route
*CAT: n
*SEM: twoRel[rel=pre_+_stressed_+_s-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_s-route
*CAT: n
*SEM: twoRel[rel=pre_+_stressed_+_s-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre_+_stressed_+_s-route
*CAT: n
*SEM: orRel[rel=pre_+_stressed_+_s-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre-stressed_+_bundle
*CAT: n
*SEM: unaryRel[rel=pre-stressed_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre-stressed_+_bundle
*CAT: n
*SEM: twoRel[rel=pre-stressed_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre-stressed_+_bundle
*CAT: n
*SEM: twoRel[rel=pre-stressed_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pre-stressed_+_bundle
*CAT: n
*SEM: orRel[rel=pre-stressed_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurization_+_variation
*CAT: n
*SEM: unaryRel[rel=pressurization_+_variation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurization_+_variation
*CAT: n
*SEM: twoRel[rel=pressurization_+_variation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurization_+_variation
*CAT: n
*SEM: twoRel[rel=pressurization_+_variation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurization_+_variation
*CAT: n
*SEM: orRel[rel=pressurization_+_variation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized
*CAT: n
*SEM: unaryRel[rel=pressurized]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized
*CAT: n
*SEM: twoRel[rel=pressurized]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized
*CAT: n
*SEM: twoRel[rel=pressurized]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressurized
*CAT: n
*SEM: orRel[rel=pressurized]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_damage
*CAT: n
*SEM: unaryRel[rel=prevent_+_damage]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_damage
*CAT: n
*SEM: twoRel[rel=prevent_+_damage]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_damage
*CAT: n
*SEM: twoRel[rel=prevent_+_damage]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: prevent_+_damage
*CAT: n
*SEM: orRel[rel=prevent_+_damage]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_structure
*CAT: n
*SEM: unaryRel[rel=primary_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_structure
*CAT: n
*SEM: twoRel[rel=primary_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_structure
*CAT: n
*SEM: twoRel[rel=primary_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_structure
*CAT: n
*SEM: orRel[rel=primary_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_structure_+_by_+_10mm_+_minimum
*CAT: n
*SEM: unaryRel[rel=primary_+_structure_+_by_+_10mm_+_minimum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_structure_+_by_+_10mm_+_minimum
*CAT: n
*SEM: twoRel[rel=primary_+_structure_+_by_+_10mm_+_minimum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_structure_+_by_+_10mm_+_minimum
*CAT: n
*SEM: twoRel[rel=primary_+_structure_+_by_+_10mm_+_minimum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_structure_+_by_+_10mm_+_minimum
*CAT: n
*SEM: orRel[rel=primary_+_structure_+_by_+_10mm_+_minimum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_structure_+_by_+_20mm_+_minimum
*CAT: n
*SEM: unaryRel[rel=primary_+_structure_+_by_+_20mm_+_minimum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_structure_+_by_+_20mm_+_minimum
*CAT: n
*SEM: twoRel[rel=primary_+_structure_+_by_+_20mm_+_minimum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_structure_+_by_+_20mm_+_minimum
*CAT: n
*SEM: twoRel[rel=primary_+_structure_+_by_+_20mm_+_minimum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: primary_+_structure_+_by_+_20mm_+_minimum
*CAT: n
*SEM: orRel[rel=primary_+_structure_+_by_+_20mm_+_minimum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: printable_+_wire
*CAT: n
*SEM: unaryRel[rel=printable_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: printable_+_wire
*CAT: n
*SEM: twoRel[rel=printable_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: printable_+_wire
*CAT: n
*SEM: twoRel[rel=printable_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: printable_+_wire
*CAT: n
*SEM: orRel[rel=printable_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: profile
*CAT: n
*SEM: unaryRel[rel=profile]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: profile
*CAT: n
*SEM: twoRel[rel=profile]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: profile
*CAT: n
*SEM: twoRel[rel=profile]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: profile
*CAT: n
*SEM: orRel[rel=profile]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protect_+_hydraulic_+_pipes_+_passing_+_through_+_structure
*CAT: n
*SEM: unaryRel[rel=protect_+_hydraulic_+_pipes_+_passing_+_through_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protect_+_hydraulic_+_pipes_+_passing_+_through_+_structure
*CAT: n
*SEM: twoRel[rel=protect_+_hydraulic_+_pipes_+_passing_+_through_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protect_+_hydraulic_+_pipes_+_passing_+_through_+_structure
*CAT: n
*SEM: twoRel[rel=protect_+_hydraulic_+_pipes_+_passing_+_through_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protect_+_hydraulic_+_pipes_+_passing_+_through_+_structure
*CAT: n
*SEM: orRel[rel=protect_+_hydraulic_+_pipes_+_passing_+_through_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protected_+_bundle
*CAT: n
*SEM: unaryRel[rel=protected_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protected_+_bundle
*CAT: n
*SEM: twoRel[rel=protected_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protected_+_bundle
*CAT: n
*SEM: twoRel[rel=protected_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protected_+_bundle
*CAT: n
*SEM: orRel[rel=protected_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection_+_means
*CAT: n
*SEM: unaryRel[rel=protection_+_means]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection_+_means
*CAT: n
*SEM: twoRel[rel=protection_+_means]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection_+_means
*CAT: n
*SEM: twoRel[rel=protection_+_means]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: protection_+_means
*CAT: n
*SEM: orRel[rel=protection_+_means]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: q_+_routes
*CAT: n
*SEM: unaryRel[rel=q_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: q_+_routes
*CAT: n
*SEM: twoRel[rel=q_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: q_+_routes
*CAT: n
*SEM: twoRel[rel=q_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: q_+_routes
*CAT: n
*SEM: orRel[rel=q_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: q-route
*CAT: n
*SEM: unaryRel[rel=q-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: q-route
*CAT: n
*SEM: twoRel[rel=q-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: q-route
*CAT: n
*SEM: twoRel[rel=q-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: q-route
*CAT: n
*SEM: orRel[rel=q-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: quick_+_release_+_fastener
*CAT: n
*SEM: unaryRel[rel=quick_+_release_+_fastener]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: quick_+_release_+_fastener
*CAT: n
*SEM: twoRel[rel=quick_+_release_+_fastener]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: quick_+_release_+_fastener
*CAT: n
*SEM: twoRel[rel=quick_+_release_+_fastener]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: quick_+_release_+_fastener
*CAT: n
*SEM: orRel[rel=quick_+_release_+_fastener]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+_routes
*CAT: n
*SEM: unaryRel[rel=r_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+_routes
*CAT: n
*SEM: twoRel[rel=r_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+_routes
*CAT: n
*SEM: twoRel[rel=r_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+_routes
*CAT: n
*SEM: orRel[rel=r_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+_opensb_+_optical_+_closesb_+__+_routes
*CAT: n
*SEM: unaryRel[rel=r_+_opensb_+_optical_+_closesb_+__+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+_opensb_+_optical_+_closesb_+__+_routes
*CAT: n
*SEM: twoRel[rel=r_+_opensb_+_optical_+_closesb_+__+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+_opensb_+_optical_+_closesb_+__+_routes
*CAT: n
*SEM: twoRel[rel=r_+_opensb_+_optical_+_closesb_+__+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+_opensb_+_optical_+_closesb_+__+_routes
*CAT: n
*SEM: orRel[rel=r_+_opensb_+_optical_+_closesb_+__+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+_opensb_+_optical_+_closesb_+_routes
*CAT: n
*SEM: unaryRel[rel=r_+_opensb_+_optical_+_closesb_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+_opensb_+_optical_+_closesb_+_routes
*CAT: n
*SEM: twoRel[rel=r_+_opensb_+_optical_+_closesb_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+_opensb_+_optical_+_closesb_+_routes
*CAT: n
*SEM: twoRel[rel=r_+_opensb_+_optical_+_closesb_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r_+_opensb_+_optical_+_closesb_+_routes
*CAT: n
*SEM: orRel[rel=r_+_opensb_+_optical_+_closesb_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route
*CAT: n
*SEM: unaryRel[rel=r-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route
*CAT: n
*SEM: twoRel[rel=r-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route
*CAT: n
*SEM: twoRel[rel=r-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route
*CAT: n
*SEM: orRel[rel=r-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route_+__+_opensb_+_optical_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=r-route_+__+_opensb_+_optical_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route_+__+_opensb_+_optical_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=r-route_+__+_opensb_+_optical_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route_+__+_opensb_+_optical_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=r-route_+__+_opensb_+_optical_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route_+__+_opensb_+_optical_+_closesb_+_
*CAT: n
*SEM: orRel[rel=r-route_+__+_opensb_+_optical_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route_+_opensb_+_optical_+_closesb
*CAT: n
*SEM: unaryRel[rel=r-route_+_opensb_+_optical_+_closesb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route_+_opensb_+_optical_+_closesb
*CAT: n
*SEM: twoRel[rel=r-route_+_opensb_+_optical_+_closesb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route_+_opensb_+_optical_+_closesb
*CAT: n
*SEM: twoRel[rel=r-route_+_opensb_+_optical_+_closesb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route_+_opensb_+_optical_+_closesb
*CAT: n
*SEM: orRel[rel=r-route_+_opensb_+_optical_+_closesb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route_+_opensb_+_optical_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=r-route_+_opensb_+_optical_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route_+_opensb_+_optical_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=r-route_+_opensb_+_optical_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route_+_opensb_+_optical_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=r-route_+_opensb_+_optical_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: r-route_+_opensb_+_optical_+_closesb_+_
*CAT: n
*SEM: orRel[rel=r-route_+_opensb_+_optical_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway
*CAT: n
*SEM: unaryRel[rel=raceway]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway
*CAT: n
*SEM: twoRel[rel=raceway]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway
*CAT: n
*SEM: twoRel[rel=raceway]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway
*CAT: n
*SEM: orRel[rel=raceway]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway_+_breakout
*CAT: n
*SEM: unaryRel[rel=raceway_+_breakout]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway_+_breakout
*CAT: n
*SEM: twoRel[rel=raceway_+_breakout]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway_+_breakout
*CAT: n
*SEM: twoRel[rel=raceway_+_breakout]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway_+_breakout
*CAT: n
*SEM: orRel[rel=raceway_+_breakout]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway_+_either_+_by_+_cable_+_retainer_+_system
*CAT: n
*SEM: unaryRel[rel=raceway_+_either_+_by_+_cable_+_retainer_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway_+_either_+_by_+_cable_+_retainer_+_system
*CAT: n
*SEM: twoRel[rel=raceway_+_either_+_by_+_cable_+_retainer_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway_+_either_+_by_+_cable_+_retainer_+_system
*CAT: n
*SEM: twoRel[rel=raceway_+_either_+_by_+_cable_+_retainer_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway_+_either_+_by_+_cable_+_retainer_+_system
*CAT: n
*SEM: orRel[rel=raceway_+_either_+_by_+_cable_+_retainer_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rack
*CAT: n
*SEM: unaryRel[rel=rack]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rack
*CAT: n
*SEM: twoRel[rel=rack]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rack
*CAT: n
*SEM: twoRel[rel=rack]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rack
*CAT: n
*SEM: orRel[rel=rack]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rack_+_laid_+_out_+_from_+_left
*CAT: n
*SEM: unaryRel[rel=rack_+_laid_+_out_+_from_+_left]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rack_+_laid_+_out_+_from_+_left
*CAT: n
*SEM: twoRel[rel=rack_+_laid_+_out_+_from_+_left]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rack_+_laid_+_out_+_from_+_left
*CAT: n
*SEM: twoRel[rel=rack_+_laid_+_out_+_from_+_left]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rack_+_laid_+_out_+_from_+_left
*CAT: n
*SEM: orRel[rel=rack_+_laid_+_out_+_from_+_left]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rainwater
*CAT: n
*SEM: unaryRel[rel=rainwater]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rainwater
*CAT: n
*SEM: twoRel[rel=rainwater]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rainwater
*CAT: n
*SEM: twoRel[rel=rainwater]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rainwater
*CAT: n
*SEM: orRel[rel=rainwater]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp
*CAT: n
*SEM: unaryRel[rel=ramp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp
*CAT: n
*SEM: twoRel[rel=ramp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp
*CAT: n
*SEM: twoRel[rel=ramp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp
*CAT: n
*SEM: orRel[rel=ramp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp_+_by_+_adding_+_abs1576-f01
*CAT: n
*SEM: unaryRel[rel=ramp_+_by_+_adding_+_abs1576-f01]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp_+_by_+_adding_+_abs1576-f01
*CAT: n
*SEM: twoRel[rel=ramp_+_by_+_adding_+_abs1576-f01]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp_+_by_+_adding_+_abs1576-f01
*CAT: n
*SEM: twoRel[rel=ramp_+_by_+_adding_+_abs1576-f01]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp_+_by_+_adding_+_abs1576-f01
*CAT: n
*SEM: orRel[rel=ramp_+_by_+_adding_+_abs1576-f01]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp_+_or
*CAT: n
*SEM: unaryRel[rel=ramp_+_or]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp_+_or
*CAT: n
*SEM: twoRel[rel=ramp_+_or]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp_+_or
*CAT: n
*SEM: twoRel[rel=ramp_+_or]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramp_+_or
*CAT: n
*SEM: orRel[rel=ramp_+_or]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramps
*CAT: n
*SEM: unaryRel[rel=ramps]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramps
*CAT: n
*SEM: twoRel[rel=ramps]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramps
*CAT: n
*SEM: twoRel[rel=ramps]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ramps
*CAT: n
*SEM: orRel[rel=ramps]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptable
*CAT: n
*SEM: unaryRel[rel=receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptable
*CAT: n
*SEM: twoRel[rel=receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptable
*CAT: n
*SEM: twoRel[rel=receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptable
*CAT: n
*SEM: orRel[rel=receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system
*CAT: n
*SEM: unaryRel[rel=receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system
*CAT: n
*SEM: twoRel[rel=receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system
*CAT: n
*SEM: twoRel[rel=receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system
*CAT: n
*SEM: orRel[rel=receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system.
*CAT: n
*SEM: unaryRel[rel=receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system.]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system.
*CAT: n
*SEM: twoRel[rel=receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system.]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system.
*CAT: n
*SEM: twoRel[rel=receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system.]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system.
*CAT: n
*SEM: orRel[rel=receptacles_+_of_+_a_+_self-locking_+_type_+_throughout_+_the_+_entire_+_pneumatic_+_system.]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rectangular_+_connector
*CAT: n
*SEM: unaryRel[rel=rectangular_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rectangular_+_connector
*CAT: n
*SEM: twoRel[rel=rectangular_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rectangular_+_connector
*CAT: n
*SEM: twoRel[rel=rectangular_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rectangular_+_connector
*CAT: n
*SEM: orRel[rel=rectangular_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_colour
*CAT: n
*SEM: unaryRel[rel=red_+_colour]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_colour
*CAT: n
*SEM: twoRel[rel=red_+_colour]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_colour
*CAT: n
*SEM: twoRel[rel=red_+_colour]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_colour
*CAT: n
*SEM: orRel[rel=red_+_colour]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_frangible_+_paint
*CAT: n
*SEM: unaryRel[rel=red_+_frangible_+_paint]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_frangible_+_paint
*CAT: n
*SEM: twoRel[rel=red_+_frangible_+_paint]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_frangible_+_paint
*CAT: n
*SEM: twoRel[rel=red_+_frangible_+_paint]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_frangible_+_paint
*CAT: n
*SEM: orRel[rel=red_+_frangible_+_paint]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_frangible_+_paint_+_after_+_tightening
*CAT: n
*SEM: unaryRel[rel=red_+_frangible_+_paint_+_after_+_tightening]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_frangible_+_paint_+_after_+_tightening
*CAT: n
*SEM: twoRel[rel=red_+_frangible_+_paint_+_after_+_tightening]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_frangible_+_paint_+_after_+_tightening
*CAT: n
*SEM: twoRel[rel=red_+_frangible_+_paint_+_after_+_tightening]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: red_+_frangible_+_paint_+_after_+_tightening
*CAT: n
*SEM: orRel[rel=red_+_frangible_+_paint_+_after_+_tightening]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduce_+_cuttings
*CAT: n
*SEM: unaryRel[rel=reduce_+_cuttings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduce_+_cuttings
*CAT: n
*SEM: twoRel[rel=reduce_+_cuttings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduce_+_cuttings
*CAT: n
*SEM: twoRel[rel=reduce_+_cuttings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduce_+_cuttings
*CAT: n
*SEM: orRel[rel=reduce_+_cuttings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduce_+_relative_+_movement
*CAT: n
*SEM: unaryRel[rel=reduce_+_relative_+_movement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduce_+_relative_+_movement
*CAT: n
*SEM: twoRel[rel=reduce_+_relative_+_movement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduce_+_relative_+_movement
*CAT: n
*SEM: twoRel[rel=reduce_+_relative_+_movement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reduce_+_relative_+_movement
*CAT: n
*SEM: orRel[rel=reduce_+_relative_+_movement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: regards
*CAT: n
*SEM: unaryRel[rel=regards]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: regards
*CAT: n
*SEM: twoRel[rel=regards]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: regards
*CAT: n
*SEM: twoRel[rel=regards]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: regards
*CAT: n
*SEM: orRel[rel=regards]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reinforced_+_saddle_+_clamp
*CAT: n
*SEM: unaryRel[rel=reinforced_+_saddle_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reinforced_+_saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=reinforced_+_saddle_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reinforced_+_saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=reinforced_+_saddle_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: reinforced_+_saddle_+_clamp
*CAT: n
*SEM: orRel[rel=reinforced_+_saddle_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relative_+_movement
*CAT: n
*SEM: unaryRel[rel=relative_+_movement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relative_+_movement
*CAT: n
*SEM: twoRel[rel=relative_+_movement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relative_+_movement
*CAT: n
*SEM: twoRel[rel=relative_+_movement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relative_+_movement
*CAT: n
*SEM: orRel[rel=relative_+_movement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relay
*CAT: n
*SEM: unaryRel[rel=relay]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relay
*CAT: n
*SEM: twoRel[rel=relay]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relay
*CAT: n
*SEM: twoRel[rel=relay]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: relay
*CAT: n
*SEM: orRel[rel=relay]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_blanket
*CAT: n
*SEM: unaryRel[rel=removable_+_blanket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_blanket
*CAT: n
*SEM: twoRel[rel=removable_+_blanket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_blanket
*CAT: n
*SEM: twoRel[rel=removable_+_blanket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_blanket
*CAT: n
*SEM: orRel[rel=removable_+_blanket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_equipment
*CAT: n
*SEM: unaryRel[rel=removable_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_equipment
*CAT: n
*SEM: twoRel[rel=removable_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_equipment
*CAT: n
*SEM: twoRel[rel=removable_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_equipment
*CAT: n
*SEM: orRel[rel=removable_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_part_+_of_+_connector_+_in_+_pressurized_+_areas
*CAT: n
*SEM: unaryRel[rel=removable_+_part_+_of_+_connector_+_in_+_pressurized_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_part_+_of_+_connector_+_in_+_pressurized_+_areas
*CAT: n
*SEM: twoRel[rel=removable_+_part_+_of_+_connector_+_in_+_pressurized_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_part_+_of_+_connector_+_in_+_pressurized_+_areas
*CAT: n
*SEM: twoRel[rel=removable_+_part_+_of_+_connector_+_in_+_pressurized_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: removable_+_part_+_of_+_connector_+_in_+_pressurized_+_areas
*CAT: n
*SEM: orRel[rel=removable_+_part_+_of_+_connector_+_in_+_pressurized_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_over_+_length
*CAT: n
*SEM: unaryRel[rel=repair_+_over_+_length]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_over_+_length
*CAT: n
*SEM: twoRel[rel=repair_+_over_+_length]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_over_+_length
*CAT: n
*SEM: twoRel[rel=repair_+_over_+_length]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_over_+_length
*CAT: n
*SEM: orRel[rel=repair_+_over_+_length]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_over_+_length_+_in_+_drip_+_loop
*CAT: n
*SEM: unaryRel[rel=repair_+_over_+_length_+_in_+_drip_+_loop]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_over_+_length_+_in_+_drip_+_loop
*CAT: n
*SEM: twoRel[rel=repair_+_over_+_length_+_in_+_drip_+_loop]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_over_+_length_+_in_+_drip_+_loop
*CAT: n
*SEM: twoRel[rel=repair_+_over_+_length_+_in_+_drip_+_loop]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_over_+_length_+_in_+_drip_+_loop
*CAT: n
*SEM: orRel[rel=repair_+_over_+_length_+_in_+_drip_+_loop]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_zones
*CAT: n
*SEM: unaryRel[rel=repair_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_zones
*CAT: n
*SEM: twoRel[rel=repair_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_zones
*CAT: n
*SEM: twoRel[rel=repair_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: repair_+_zones
*CAT: n
*SEM: orRel[rel=repair_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: resist_+_applied_+_mechanical_+_loads
*CAT: n
*SEM: unaryRel[rel=resist_+_applied_+_mechanical_+_loads]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: resist_+_applied_+_mechanical_+_loads
*CAT: n
*SEM: twoRel[rel=resist_+_applied_+_mechanical_+_loads]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: resist_+_applied_+_mechanical_+_loads
*CAT: n
*SEM: twoRel[rel=resist_+_applied_+_mechanical_+_loads]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: resist_+_applied_+_mechanical_+_loads
*CAT: n
*SEM: orRel[rel=resist_+_applied_+_mechanical_+_loads]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: resistor
*CAT: n
*SEM: unaryRel[rel=resistor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: resistor
*CAT: n
*SEM: twoRel[rel=resistor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: resistor
*CAT: n
*SEM: twoRel[rel=resistor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: resistor
*CAT: n
*SEM: orRel[rel=resistor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restricted_+_access_+_areas_+__+_opensb_+_e.g._+_in_+_pylon_+_zone_+_in_+_order
*CAT: n
*SEM: unaryRel[rel=restricted_+_access_+_areas_+__+_opensb_+_e.g._+_in_+_pylon_+_zone_+_in_+_order]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restricted_+_access_+_areas_+__+_opensb_+_e.g._+_in_+_pylon_+_zone_+_in_+_order
*CAT: n
*SEM: twoRel[rel=restricted_+_access_+_areas_+__+_opensb_+_e.g._+_in_+_pylon_+_zone_+_in_+_order]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restricted_+_access_+_areas_+__+_opensb_+_e.g._+_in_+_pylon_+_zone_+_in_+_order
*CAT: n
*SEM: twoRel[rel=restricted_+_access_+_areas_+__+_opensb_+_e.g._+_in_+_pylon_+_zone_+_in_+_order]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restricted_+_access_+_areas_+__+_opensb_+_e.g._+_in_+_pylon_+_zone_+_in_+_order
*CAT: n
*SEM: orRel[rel=restricted_+_access_+_areas_+__+_opensb_+_e.g._+_in_+_pylon_+_zone_+_in_+_order]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restricted_+_access_+_areas_+_opensb_+_e.g._+_in_+_pylon_+_zone_+_in_+_order
*CAT: n
*SEM: unaryRel[rel=restricted_+_access_+_areas_+_opensb_+_e.g._+_in_+_pylon_+_zone_+_in_+_order]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restricted_+_access_+_areas_+_opensb_+_e.g._+_in_+_pylon_+_zone_+_in_+_order
*CAT: n
*SEM: twoRel[rel=restricted_+_access_+_areas_+_opensb_+_e.g._+_in_+_pylon_+_zone_+_in_+_order]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restricted_+_access_+_areas_+_opensb_+_e.g._+_in_+_pylon_+_zone_+_in_+_order
*CAT: n
*SEM: twoRel[rel=restricted_+_access_+_areas_+_opensb_+_e.g._+_in_+_pylon_+_zone_+_in_+_order]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restricted_+_access_+_areas_+_opensb_+_e.g._+_in_+_pylon_+_zone_+_in_+_order
*CAT: n
*SEM: orRel[rel=restricted_+_access_+_areas_+_opensb_+_e.g._+_in_+_pylon_+_zone_+_in_+_order]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restrictor
*CAT: n
*SEM: unaryRel[rel=restrictor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restrictor
*CAT: n
*SEM: twoRel[rel=restrictor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restrictor
*CAT: n
*SEM: twoRel[rel=restrictor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: restrictor
*CAT: n
*SEM: orRel[rel=restrictor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_20_+_mm
*CAT: n
*SEM: unaryRel[rel=rigid_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_20_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_20_+_mm
*CAT: n
*SEM: twoRel[rel=rigid_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_20_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_20_+_mm
*CAT: n
*SEM: twoRel[rel=rigid_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_20_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_20_+_mm
*CAT: n
*SEM: orRel[rel=rigid_+_component_+_backslash_+_item_+_backslash_+_object_+_by_+_not_+_less_+_than_+_20_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_coupling
*CAT: n
*SEM: unaryRel[rel=rigid_+_coupling]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_coupling
*CAT: n
*SEM: twoRel[rel=rigid_+_coupling]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_coupling
*CAT: n
*SEM: twoRel[rel=rigid_+_coupling]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_coupling
*CAT: n
*SEM: orRel[rel=rigid_+_coupling]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_pipes
*CAT: n
*SEM: unaryRel[rel=rigid_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_pipes
*CAT: n
*SEM: twoRel[rel=rigid_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_pipes
*CAT: n
*SEM: twoRel[rel=rigid_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rigid_+_pipes
*CAT: n
*SEM: orRel[rel=rigid_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rod
*CAT: n
*SEM: unaryRel[rel=rod]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rod
*CAT: n
*SEM: twoRel[rel=rod]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rod
*CAT: n
*SEM: twoRel[rel=rod]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rod
*CAT: n
*SEM: orRel[rel=rod]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rotation_+_center_+_closesb
*CAT: n
*SEM: unaryRel[rel=rotation_+_center_+_closesb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rotation_+_center_+_closesb
*CAT: n
*SEM: twoRel[rel=rotation_+_center_+_closesb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rotation_+_center_+_closesb
*CAT: n
*SEM: twoRel[rel=rotation_+_center_+_closesb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rotation_+_center_+_closesb
*CAT: n
*SEM: orRel[rel=rotation_+_center_+_closesb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rotation_+_center_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=rotation_+_center_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rotation_+_center_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=rotation_+_center_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rotation_+_center_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=rotation_+_center_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: rotation_+_center_+_closesb_+_
*CAT: n
*SEM: orRel[rel=rotation_+_center_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_category
*CAT: n
*SEM: unaryRel[rel=route_+_category]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_category
*CAT: n
*SEM: twoRel[rel=route_+_category]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_category
*CAT: n
*SEM: twoRel[rel=route_+_category]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_category
*CAT: n
*SEM: orRel[rel=route_+_category]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_identification_+_marker
*CAT: n
*SEM: unaryRel[rel=route_+_identification_+_marker]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_identification_+_marker
*CAT: n
*SEM: twoRel[rel=route_+_identification_+_marker]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_identification_+_marker
*CAT: n
*SEM: twoRel[rel=route_+_identification_+_marker]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_identification_+_marker
*CAT: n
*SEM: orRel[rel=route_+_identification_+_marker]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_segregation
*CAT: n
*SEM: unaryRel[rel=route_+_segregation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_segregation
*CAT: n
*SEM: twoRel[rel=route_+_segregation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_segregation
*CAT: n
*SEM: twoRel[rel=route_+_segregation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: route_+_segregation
*CAT: n
*SEM: orRel[rel=route_+_segregation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing
*CAT: n
*SEM: unaryRel[rel=routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing
*CAT: n
*SEM: twoRel[rel=routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing
*CAT: n
*SEM: twoRel[rel=routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routing
*CAT: n
*SEM: orRel[rel=routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings
*CAT: n
*SEM: unaryRel[rel=routings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings
*CAT: n
*SEM: twoRel[rel=routings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings
*CAT: n
*SEM: twoRel[rel=routings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings
*CAT: n
*SEM: orRel[rel=routings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_passing_+_from_+_pressurised_+_zones
*CAT: n
*SEM: unaryRel[rel=routings_+_passing_+_from_+_pressurised_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_passing_+_from_+_pressurised_+_zones
*CAT: n
*SEM: twoRel[rel=routings_+_passing_+_from_+_pressurised_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_passing_+_from_+_pressurised_+_zones
*CAT: n
*SEM: twoRel[rel=routings_+_passing_+_from_+_pressurised_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_passing_+_from_+_pressurised_+_zones
*CAT: n
*SEM: orRel[rel=routings_+_passing_+_from_+_pressurised_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s_+_routes
*CAT: n
*SEM: unaryRel[rel=s_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s_+_routes
*CAT: n
*SEM: twoRel[rel=s_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s_+_routes
*CAT: n
*SEM: twoRel[rel=s_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s_+_routes
*CAT: n
*SEM: orRel[rel=s_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s-route
*CAT: n
*SEM: unaryRel[rel=s-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s-route
*CAT: n
*SEM: twoRel[rel=s-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s-route
*CAT: n
*SEM: twoRel[rel=s-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s-route
*CAT: n
*SEM: orRel[rel=s-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s-routes
*CAT: n
*SEM: unaryRel[rel=s-routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s-routes
*CAT: n
*SEM: twoRel[rel=s-routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s-routes
*CAT: n
*SEM: twoRel[rel=s-routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: s-routes
*CAT: n
*SEM: orRel[rel=s-routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamp
*CAT: n
*SEM: unaryRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamp
*CAT: n
*SEM: orRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sagging
*CAT: n
*SEM: unaryRel[rel=sagging]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sagging
*CAT: n
*SEM: twoRel[rel=sagging]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sagging
*CAT: n
*SEM: twoRel[rel=sagging]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sagging
*CAT: n
*SEM: orRel[rel=sagging]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sagging_+_following_+_this_+_picture
*CAT: n
*SEM: unaryRel[rel=sagging_+_following_+_this_+_picture]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sagging_+_following_+_this_+_picture
*CAT: n
*SEM: twoRel[rel=sagging_+_following_+_this_+_picture]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sagging_+_following_+_this_+_picture
*CAT: n
*SEM: twoRel[rel=sagging_+_following_+_this_+_picture]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sagging_+_following_+_this_+_picture
*CAT: n
*SEM: orRel[rel=sagging_+_following_+_this_+_picture]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: screw
*CAT: n
*SEM: unaryRel[rel=screw]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: screw
*CAT: n
*SEM: twoRel[rel=screw]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: screw
*CAT: n
*SEM: twoRel[rel=screw]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: screw
*CAT: n
*SEM: orRel[rel=screw]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: screwing_+_different_+_sizes
*CAT: n
*SEM: unaryRel[rel=screwing_+_different_+_sizes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: screwing_+_different_+_sizes
*CAT: n
*SEM: twoRel[rel=screwing_+_different_+_sizes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: screwing_+_different_+_sizes
*CAT: n
*SEM: twoRel[rel=screwing_+_different_+_sizes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: screwing_+_different_+_sizes
*CAT: n
*SEM: orRel[rel=screwing_+_different_+_sizes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_modules
*CAT: n
*SEM: unaryRel[rel=sealed_+_modules]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_modules
*CAT: n
*SEM: twoRel[rel=sealed_+_modules]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_modules
*CAT: n
*SEM: twoRel[rel=sealed_+_modules]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sealed_+_modules
*CAT: n
*SEM: orRel[rel=sealed_+_modules]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: secured_+_with_+_cable_+_ties
*CAT: n
*SEM: unaryRel[rel=secured_+_with_+_cable_+_ties]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: secured_+_with_+_cable_+_ties
*CAT: n
*SEM: twoRel[rel=secured_+_with_+_cable_+_ties]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: secured_+_with_+_cable_+_ties
*CAT: n
*SEM: twoRel[rel=secured_+_with_+_cable_+_ties]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: secured_+_with_+_cable_+_ties
*CAT: n
*SEM: orRel[rel=secured_+_with_+_cable_+_ties]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see
*CAT: n
*SEM: unaryRel[rel=see]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see
*CAT: n
*SEM: twoRel[rel=see]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see
*CAT: n
*SEM: twoRel[rel=see]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see
*CAT: n
*SEM: orRel[rel=see]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see_+_atatched_+_figure
*CAT: n
*SEM: unaryRel[rel=see_+_atatched_+_figure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see_+_atatched_+_figure
*CAT: n
*SEM: twoRel[rel=see_+_atatched_+_figure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see_+_atatched_+_figure
*CAT: n
*SEM: twoRel[rel=see_+_atatched_+_figure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see_+_atatched_+_figure
*CAT: n
*SEM: orRel[rel=see_+_atatched_+_figure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see_+_figure_+_below
*CAT: n
*SEM: unaryRel[rel=see_+_figure_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see_+_figure_+_below
*CAT: n
*SEM: twoRel[rel=see_+_figure_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see_+_figure_+_below
*CAT: n
*SEM: twoRel[rel=see_+_figure_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see_+_figure_+_below
*CAT: n
*SEM: orRel[rel=see_+_figure_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see_+_picture_+_below
*CAT: n
*SEM: unaryRel[rel=see_+_picture_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see_+_picture_+_below
*CAT: n
*SEM: twoRel[rel=see_+_picture_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see_+_picture_+_below
*CAT: n
*SEM: twoRel[rel=see_+_picture_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: see_+_picture_+_below
*CAT: n
*SEM: orRel[rel=see_+_picture_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: segregation
*CAT: n
*SEM: unaryRel[rel=segregation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: segregation
*CAT: n
*SEM: twoRel[rel=segregation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: segregation
*CAT: n
*SEM: twoRel[rel=segregation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: segregation
*CAT: n
*SEM: orRel[rel=segregation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: seletion_+_of_+_separators
*CAT: n
*SEM: unaryRel[rel=seletion_+_of_+_separators]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: seletion_+_of_+_separators
*CAT: n
*SEM: twoRel[rel=seletion_+_of_+_separators]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: seletion_+_of_+_separators
*CAT: n
*SEM: twoRel[rel=seletion_+_of_+_separators]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: seletion_+_of_+_separators
*CAT: n
*SEM: orRel[rel=seletion_+_of_+_separators]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-adhesive_+_fin_+_label
*CAT: n
*SEM: unaryRel[rel=self-adhesive_+_fin_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-adhesive_+_fin_+_label
*CAT: n
*SEM: twoRel[rel=self-adhesive_+_fin_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-adhesive_+_fin_+_label
*CAT: n
*SEM: twoRel[rel=self-adhesive_+_fin_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-adhesive_+_fin_+_label
*CAT: n
*SEM: orRel[rel=self-adhesive_+_fin_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_component
*CAT: n
*SEM: unaryRel[rel=self-locking_+_component]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_component
*CAT: n
*SEM: twoRel[rel=self-locking_+_component]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_component
*CAT: n
*SEM: twoRel[rel=self-locking_+_component]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_component
*CAT: n
*SEM: orRel[rel=self-locking_+_component]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: unaryRel[rel=self-locking_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: twoRel[rel=self-locking_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: twoRel[rel=self-locking_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_component_+_backslash_+_item_+_backslash_+_object
*CAT: n
*SEM: orRel[rel=self-locking_+_component_+_backslash_+_item_+_backslash_+_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_object
*CAT: n
*SEM: unaryRel[rel=self-locking_+_object]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_object
*CAT: n
*SEM: twoRel[rel=self-locking_+_object]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_object
*CAT: n
*SEM: twoRel[rel=self-locking_+_object]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: self-locking_+_object
*CAT: n
*SEM: orRel[rel=self-locking_+_object]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=sense_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=sense_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=sense_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=sense_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_line
*CAT: n
*SEM: unaryRel[rel=sense_+_line]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_line
*CAT: n
*SEM: twoRel[rel=sense_+_line]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_line
*CAT: n
*SEM: twoRel[rel=sense_+_line]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_line
*CAT: n
*SEM: orRel[rel=sense_+_line]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_pipes
*CAT: n
*SEM: unaryRel[rel=sense_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_pipes
*CAT: n
*SEM: twoRel[rel=sense_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_pipes
*CAT: n
*SEM: twoRel[rel=sense_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense_+_pipes
*CAT: n
*SEM: orRel[rel=sense_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separable_+_hydraulic_+_unions
*CAT: n
*SEM: unaryRel[rel=separable_+_hydraulic_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separable_+_hydraulic_+_unions
*CAT: n
*SEM: twoRel[rel=separable_+_hydraulic_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separable_+_hydraulic_+_unions
*CAT: n
*SEM: twoRel[rel=separable_+_hydraulic_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separable_+_hydraulic_+_unions
*CAT: n
*SEM: orRel[rel=separable_+_hydraulic_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separable_+_unions
*CAT: n
*SEM: unaryRel[rel=separable_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separable_+_unions
*CAT: n
*SEM: twoRel[rel=separable_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separable_+_unions
*CAT: n
*SEM: twoRel[rel=separable_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separable_+_unions
*CAT: n
*SEM: orRel[rel=separable_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separators
*CAT: n
*SEM: unaryRel[rel=separators]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separators
*CAT: n
*SEM: twoRel[rel=separators]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separators
*CAT: n
*SEM: twoRel[rel=separators]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: separators
*CAT: n
*SEM: orRel[rel=separators]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sharp_+_edge
*CAT: n
*SEM: unaryRel[rel=sharp_+_edge]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sharp_+_edge
*CAT: n
*SEM: twoRel[rel=sharp_+_edge]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sharp_+_edge
*CAT: n
*SEM: twoRel[rel=sharp_+_edge]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sharp_+_edge
*CAT: n
*SEM: orRel[rel=sharp_+_edge]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sharp_+_edges
*CAT: n
*SEM: unaryRel[rel=sharp_+_edges]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sharp_+_edges
*CAT: n
*SEM: twoRel[rel=sharp_+_edges]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sharp_+_edges
*CAT: n
*SEM: twoRel[rel=sharp_+_edges]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sharp_+_edges
*CAT: n
*SEM: orRel[rel=sharp_+_edges]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_bundle
*CAT: n
*SEM: unaryRel[rel=shielded_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_bundle
*CAT: n
*SEM: twoRel[rel=shielded_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_bundle
*CAT: n
*SEM: twoRel[rel=shielded_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_bundle
*CAT: n
*SEM: orRel[rel=shielded_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_conduit
*CAT: n
*SEM: unaryRel[rel=shielded_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_conduit
*CAT: n
*SEM: twoRel[rel=shielded_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_conduit
*CAT: n
*SEM: twoRel[rel=shielded_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_conduit
*CAT: n
*SEM: orRel[rel=shielded_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_harness
*CAT: n
*SEM: unaryRel[rel=shielded_+_harness]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_harness
*CAT: n
*SEM: twoRel[rel=shielded_+_harness]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_harness
*CAT: n
*SEM: twoRel[rel=shielded_+_harness]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielded_+_harness
*CAT: n
*SEM: orRel[rel=shielded_+_harness]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielding_+_continuity_+_connection
*CAT: n
*SEM: unaryRel[rel=shielding_+_continuity_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielding_+_continuity_+_connection
*CAT: n
*SEM: twoRel[rel=shielding_+_continuity_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielding_+_continuity_+_connection
*CAT: n
*SEM: twoRel[rel=shielding_+_continuity_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielding_+_continuity_+_connection
*CAT: n
*SEM: orRel[rel=shielding_+_continuity_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielding_+_ocntinuity_+_connection
*CAT: n
*SEM: unaryRel[rel=shielding_+_ocntinuity_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielding_+_ocntinuity_+_connection
*CAT: n
*SEM: twoRel[rel=shielding_+_ocntinuity_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielding_+_ocntinuity_+_connection
*CAT: n
*SEM: twoRel[rel=shielding_+_ocntinuity_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: shielding_+_ocntinuity_+_connection
*CAT: n
*SEM: orRel[rel=shielding_+_ocntinuity_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: silicon_+_seal
*CAT: n
*SEM: unaryRel[rel=silicon_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: silicon_+_seal
*CAT: n
*SEM: twoRel[rel=silicon_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: silicon_+_seal
*CAT: n
*SEM: twoRel[rel=silicon_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: silicon_+_seal
*CAT: n
*SEM: orRel[rel=silicon_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_clamp-block
*CAT: n
*SEM: twoRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_clamp-block
*CAT: n
*SEM: twoRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_clamp-block
*CAT: n
*SEM: orRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_nsa_+_935401_+_cable_+_tie
*CAT: n
*SEM: unaryRel[rel=single_+_nsa_+_935401_+_cable_+_tie]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_nsa_+_935401_+_cable_+_tie
*CAT: n
*SEM: twoRel[rel=single_+_nsa_+_935401_+_cable_+_tie]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_nsa_+_935401_+_cable_+_tie
*CAT: n
*SEM: twoRel[rel=single_+_nsa_+_935401_+_cable_+_tie]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_nsa_+_935401_+_cable_+_tie
*CAT: n
*SEM: orRel[rel=single_+_nsa_+_935401_+_cable_+_tie]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_optical_+_cable
*CAT: n
*SEM: unaryRel[rel=single_+_optical_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_optical_+_cable
*CAT: n
*SEM: twoRel[rel=single_+_optical_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_optical_+_cable
*CAT: n
*SEM: twoRel[rel=single_+_optical_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_optical_+_cable
*CAT: n
*SEM: orRel[rel=single_+_optical_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_tee_+_-_+_junction
*CAT: n
*SEM: unaryRel[rel=single_+_tee_+_-_+_junction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_tee_+_-_+_junction
*CAT: n
*SEM: twoRel[rel=single_+_tee_+_-_+_junction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_tee_+_-_+_junction
*CAT: n
*SEM: twoRel[rel=single_+_tee_+_-_+_junction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: single_+_tee_+_-_+_junction
*CAT: n
*SEM: orRel[rel=single_+_tee_+_-_+_junction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size
*CAT: n
*SEM: unaryRel[rel=size]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size
*CAT: n
*SEM: twoRel[rel=size]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size
*CAT: n
*SEM: twoRel[rel=size]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size
*CAT: n
*SEM: orRel[rel=size]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size_+_-04_+_to_+_-32_+_pipes
*CAT: n
*SEM: unaryRel[rel=size_+_-04_+_to_+_-32_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size_+_-04_+_to_+_-32_+_pipes
*CAT: n
*SEM: twoRel[rel=size_+_-04_+_to_+_-32_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size_+_-04_+_to_+_-32_+_pipes
*CAT: n
*SEM: twoRel[rel=size_+_-04_+_to_+_-32_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size_+_-04_+_to_+_-32_+_pipes
*CAT: n
*SEM: orRel[rel=size_+_-04_+_to_+_-32_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: skin
*CAT: n
*SEM: unaryRel[rel=skin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: skin
*CAT: n
*SEM: twoRel[rel=skin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: skin
*CAT: n
*SEM: twoRel[rel=skin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: skin
*CAT: n
*SEM: orRel[rel=skin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sliding_+_between_+_the_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=sliding_+_between_+_the_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sliding_+_between_+_the_+_clamp-block
*CAT: n
*SEM: twoRel[rel=sliding_+_between_+_the_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sliding_+_between_+_the_+_clamp-block
*CAT: n
*SEM: twoRel[rel=sliding_+_between_+_the_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sliding_+_between_+_the_+_clamp-block
*CAT: n
*SEM: orRel[rel=sliding_+_between_+_the_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: smal_+_gauge_+_wire
*CAT: n
*SEM: unaryRel[rel=smal_+_gauge_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: smal_+_gauge_+_wire
*CAT: n
*SEM: twoRel[rel=smal_+_gauge_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: smal_+_gauge_+_wire
*CAT: n
*SEM: twoRel[rel=smal_+_gauge_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: smal_+_gauge_+_wire
*CAT: n
*SEM: orRel[rel=smal_+_gauge_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_vu
*CAT: n
*SEM: unaryRel[rel=small_+_vu]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_vu
*CAT: n
*SEM: twoRel[rel=small_+_vu]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_vu
*CAT: n
*SEM: twoRel[rel=small_+_vu]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_vu
*CAT: n
*SEM: orRel[rel=small_+_vu]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_opensb_+_dash_+_number_+_-04_+_to_+_-08_+_closesb_+_pipes
*CAT: n
*SEM: unaryRel[rel=small_+_opensb_+_dash_+_number_+_-04_+_to_+_-08_+_closesb_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_opensb_+_dash_+_number_+_-04_+_to_+_-08_+_closesb_+_pipes
*CAT: n
*SEM: twoRel[rel=small_+_opensb_+_dash_+_number_+_-04_+_to_+_-08_+_closesb_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_opensb_+_dash_+_number_+_-04_+_to_+_-08_+_closesb_+_pipes
*CAT: n
*SEM: twoRel[rel=small_+_opensb_+_dash_+_number_+_-04_+_to_+_-08_+_closesb_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: small_+_opensb_+_dash_+_number_+_-04_+_to_+_-08_+_closesb_+_pipes
*CAT: n
*SEM: orRel[rel=small_+_opensb_+_dash_+_number_+_-04_+_to_+_-08_+_closesb_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: snap_+_technology
*CAT: n
*SEM: unaryRel[rel=snap_+_technology]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: snap_+_technology
*CAT: n
*SEM: twoRel[rel=snap_+_technology]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: snap_+_technology
*CAT: n
*SEM: twoRel[rel=snap_+_technology]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: snap_+_technology
*CAT: n
*SEM: orRel[rel=snap_+_technology]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket
*CAT: n
*SEM: unaryRel[rel=socket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket
*CAT: n
*SEM: twoRel[rel=socket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket
*CAT: n
*SEM: twoRel[rel=socket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket
*CAT: n
*SEM: orRel[rel=socket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contact
*CAT: n
*SEM: unaryRel[rel=socket_+_contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contact
*CAT: n
*SEM: twoRel[rel=socket_+_contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contact
*CAT: n
*SEM: twoRel[rel=socket_+_contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contact
*CAT: n
*SEM: orRel[rel=socket_+_contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_on_+_the_+_plug
*CAT: n
*SEM: unaryRel[rel=socket_+_on_+_the_+_plug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_on_+_the_+_plug
*CAT: n
*SEM: twoRel[rel=socket_+_on_+_the_+_plug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_on_+_the_+_plug
*CAT: n
*SEM: twoRel[rel=socket_+_on_+_the_+_plug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_on_+_the_+_plug
*CAT: n
*SEM: orRel[rel=socket_+_on_+_the_+_plug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: soldered_+_connection
*CAT: n
*SEM: unaryRel[rel=soldered_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: soldered_+_connection
*CAT: n
*SEM: twoRel[rel=soldered_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: soldered_+_connection
*CAT: n
*SEM: twoRel[rel=soldered_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: soldered_+_connection
*CAT: n
*SEM: orRel[rel=soldered_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: solver_+_sleeve
*CAT: n
*SEM: unaryRel[rel=solver_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: solver_+_sleeve
*CAT: n
*SEM: twoRel[rel=solver_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: solver_+_sleeve
*CAT: n
*SEM: twoRel[rel=solver_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: solver_+_sleeve
*CAT: n
*SEM: orRel[rel=solver_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer
*CAT: n
*SEM: unaryRel[rel=spacer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer
*CAT: n
*SEM: twoRel[rel=spacer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer
*CAT: n
*SEM: twoRel[rel=spacer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spacer
*CAT: n
*SEM: orRel[rel=spacer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_conduit
*CAT: n
*SEM: unaryRel[rel=spare_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_conduit
*CAT: n
*SEM: twoRel[rel=spare_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_conduit
*CAT: n
*SEM: twoRel[rel=spare_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_conduit
*CAT: n
*SEM: orRel[rel=spare_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_conduit_+_with_+_a_+_minimum_+_of_+_20_+_percent_+__+_of_+_spare_+_provision
*CAT: n
*SEM: unaryRel[rel=spare_+_conduit_+_with_+_a_+_minimum_+_of_+_20_+_percent_+__+_of_+_spare_+_provision]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_conduit_+_with_+_a_+_minimum_+_of_+_20_+_percent_+__+_of_+_spare_+_provision
*CAT: n
*SEM: twoRel[rel=spare_+_conduit_+_with_+_a_+_minimum_+_of_+_20_+_percent_+__+_of_+_spare_+_provision]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_conduit_+_with_+_a_+_minimum_+_of_+_20_+_percent_+__+_of_+_spare_+_provision
*CAT: n
*SEM: twoRel[rel=spare_+_conduit_+_with_+_a_+_minimum_+_of_+_20_+_percent_+__+_of_+_spare_+_provision]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_conduit_+_with_+_a_+_minimum_+_of_+_20_+_percent_+__+_of_+_spare_+_provision
*CAT: n
*SEM: orRel[rel=spare_+_conduit_+_with_+_a_+_minimum_+_of_+_20_+_percent_+__+_of_+_spare_+_provision]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_conduit_+_with_+_a_+_minimum_+_of_+_20_+_percent_+_of_+_spare_+_provision
*CAT: n
*SEM: unaryRel[rel=spare_+_conduit_+_with_+_a_+_minimum_+_of_+_20_+_percent_+_of_+_spare_+_provision]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_conduit_+_with_+_a_+_minimum_+_of_+_20_+_percent_+_of_+_spare_+_provision
*CAT: n
*SEM: twoRel[rel=spare_+_conduit_+_with_+_a_+_minimum_+_of_+_20_+_percent_+_of_+_spare_+_provision]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_conduit_+_with_+_a_+_minimum_+_of_+_20_+_percent_+_of_+_spare_+_provision
*CAT: n
*SEM: twoRel[rel=spare_+_conduit_+_with_+_a_+_minimum_+_of_+_20_+_percent_+_of_+_spare_+_provision]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_conduit_+_with_+_a_+_minimum_+_of_+_20_+_percent_+_of_+_spare_+_provision
*CAT: n
*SEM: orRel[rel=spare_+_conduit_+_with_+_a_+_minimum_+_of_+_20_+_percent_+_of_+_spare_+_provision]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_provision
*CAT: n
*SEM: unaryRel[rel=spare_+_provision]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_provision
*CAT: n
*SEM: twoRel[rel=spare_+_provision]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_provision
*CAT: n
*SEM: twoRel[rel=spare_+_provision]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_provision
*CAT: n
*SEM: orRel[rel=spare_+_provision]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_wire
*CAT: n
*SEM: unaryRel[rel=spare_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_wire
*CAT: n
*SEM: twoRel[rel=spare_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_wire
*CAT: n
*SEM: twoRel[rel=spare_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_wire
*CAT: n
*SEM: orRel[rel=spare_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_wire_+_with_+_only_+_spare_+_wire_+_printed_+_on_+_the_+_sleeve
*CAT: n
*SEM: unaryRel[rel=spare_+_wire_+_with_+_only_+_spare_+_wire_+_printed_+_on_+_the_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_wire_+_with_+_only_+_spare_+_wire_+_printed_+_on_+_the_+_sleeve
*CAT: n
*SEM: twoRel[rel=spare_+_wire_+_with_+_only_+_spare_+_wire_+_printed_+_on_+_the_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_wire_+_with_+_only_+_spare_+_wire_+_printed_+_on_+_the_+_sleeve
*CAT: n
*SEM: twoRel[rel=spare_+_wire_+_with_+_only_+_spare_+_wire_+_printed_+_on_+_the_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spare_+_wire_+_with_+_only_+_spare_+_wire_+_printed_+_on_+_the_+_sleeve
*CAT: n
*SEM: orRel[rel=spare_+_wire_+_with_+_only_+_spare_+_wire_+_printed_+_on_+_the_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=special_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_clamp-block
*CAT: n
*SEM: twoRel[rel=special_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_clamp-block
*CAT: n
*SEM: twoRel[rel=special_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_clamp-block
*CAT: n
*SEM: orRel[rel=special_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_grommet
*CAT: n
*SEM: unaryRel[rel=special_+_grommet]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_grommet
*CAT: n
*SEM: twoRel[rel=special_+_grommet]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_grommet
*CAT: n
*SEM: twoRel[rel=special_+_grommet]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_grommet
*CAT: n
*SEM: orRel[rel=special_+_grommet]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_unions
*CAT: n
*SEM: unaryRel[rel=special_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_unions
*CAT: n
*SEM: twoRel[rel=special_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_unions
*CAT: n
*SEM: twoRel[rel=special_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: special_+_unions
*CAT: n
*SEM: orRel[rel=special_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_cases
*CAT: n
*SEM: unaryRel[rel=specific_+_cases]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_cases
*CAT: n
*SEM: twoRel[rel=specific_+_cases]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_cases
*CAT: n
*SEM: twoRel[rel=specific_+_cases]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: specific_+_cases
*CAT: n
*SEM: orRel[rel=specific_+_cases]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: splice
*CAT: n
*SEM: unaryRel[rel=splice]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: splice
*CAT: n
*SEM: twoRel[rel=splice]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: splice
*CAT: n
*SEM: twoRel[rel=splice]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: splice
*CAT: n
*SEM: orRel[rel=splice]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: split_+_pins
*CAT: n
*SEM: unaryRel[rel=split_+_pins]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: split_+_pins
*CAT: n
*SEM: twoRel[rel=split_+_pins]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: split_+_pins
*CAT: n
*SEM: twoRel[rel=split_+_pins]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: split_+_pins
*CAT: n
*SEM: orRel[rel=split_+_pins]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover
*CAT: n
*SEM: unaryRel[rel=spray_+_cover]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover
*CAT: n
*SEM: twoRel[rel=spray_+_cover]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover
*CAT: n
*SEM: twoRel[rel=spray_+_cover]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover
*CAT: n
*SEM: orRel[rel=spray_+_cover]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover_+_in_+_pressurized_+_areas
*CAT: n
*SEM: unaryRel[rel=spray_+_cover_+_in_+_pressurized_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover_+_in_+_pressurized_+_areas
*CAT: n
*SEM: twoRel[rel=spray_+_cover_+_in_+_pressurized_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover_+_in_+_pressurized_+_areas
*CAT: n
*SEM: twoRel[rel=spray_+_cover_+_in_+_pressurized_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: spray_+_cover_+_in_+_pressurized_+_areas
*CAT: n
*SEM: orRel[rel=spray_+_cover_+_in_+_pressurized_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stainless_+_steel_+_en_+_2997_+_connector
*CAT: n
*SEM: unaryRel[rel=stainless_+_steel_+_en_+_2997_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stainless_+_steel_+_en_+_2997_+_connector
*CAT: n
*SEM: twoRel[rel=stainless_+_steel_+_en_+_2997_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stainless_+_steel_+_en_+_2997_+_connector
*CAT: n
*SEM: twoRel[rel=stainless_+_steel_+_en_+_2997_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stainless_+_steel_+_en_+_2997_+_connector
*CAT: n
*SEM: orRel[rel=stainless_+_steel_+_en_+_2997_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+__+_backslash_+__+_colonettes
*CAT: n
*SEM: unaryRel[rel=stand-off_+__+_backslash_+__+_colonettes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+__+_backslash_+__+_colonettes
*CAT: n
*SEM: twoRel[rel=stand-off_+__+_backslash_+__+_colonettes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+__+_backslash_+__+_colonettes
*CAT: n
*SEM: twoRel[rel=stand-off_+__+_backslash_+__+_colonettes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+__+_backslash_+__+_colonettes
*CAT: n
*SEM: orRel[rel=stand-off_+__+_backslash_+__+_colonettes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+_backslash_+_colonettes
*CAT: n
*SEM: unaryRel[rel=stand-off_+_backslash_+_colonettes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+_backslash_+_colonettes
*CAT: n
*SEM: twoRel[rel=stand-off_+_backslash_+_colonettes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+_backslash_+_colonettes
*CAT: n
*SEM: twoRel[rel=stand-off_+_backslash_+_colonettes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stand-off_+_backslash_+_colonettes
*CAT: n
*SEM: orRel[rel=stand-off_+_backslash_+_colonettes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_connector
*CAT: n
*SEM: unaryRel[rel=standard_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_connector
*CAT: n
*SEM: twoRel[rel=standard_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_connector
*CAT: n
*SEM: twoRel[rel=standard_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standard_+_connector
*CAT: n
*SEM: orRel[rel=standard_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standards
*CAT: n
*SEM: unaryRel[rel=standards]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standards
*CAT: n
*SEM: twoRel[rel=standards]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standards
*CAT: n
*SEM: twoRel[rel=standards]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: standards
*CAT: n
*SEM: orRel[rel=standards]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stirr_+_up
*CAT: n
*SEM: unaryRel[rel=stirr_+_up]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stirr_+_up
*CAT: n
*SEM: twoRel[rel=stirr_+_up]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stirr_+_up
*CAT: n
*SEM: twoRel[rel=stirr_+_up]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stirr_+_up
*CAT: n
*SEM: orRel[rel=stirr_+_up]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stowage_+_receptable
*CAT: n
*SEM: unaryRel[rel=stowage_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stowage_+_receptable
*CAT: n
*SEM: twoRel[rel=stowage_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stowage_+_receptable
*CAT: n
*SEM: twoRel[rel=stowage_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stowage_+_receptable
*CAT: n
*SEM: orRel[rel=stowage_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_angle_+_junction
*CAT: n
*SEM: unaryRel[rel=straight_+_angle_+_junction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_angle_+_junction
*CAT: n
*SEM: twoRel[rel=straight_+_angle_+_junction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_angle_+_junction
*CAT: n
*SEM: twoRel[rel=straight_+_angle_+_junction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_angle_+_junction
*CAT: n
*SEM: orRel[rel=straight_+_angle_+_junction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_parts
*CAT: n
*SEM: unaryRel[rel=straight_+_parts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_parts
*CAT: n
*SEM: twoRel[rel=straight_+_parts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_parts
*CAT: n
*SEM: twoRel[rel=straight_+_parts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_parts
*CAT: n
*SEM: orRel[rel=straight_+_parts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_pipes
*CAT: n
*SEM: unaryRel[rel=straight_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_pipes
*CAT: n
*SEM: twoRel[rel=straight_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_pipes
*CAT: n
*SEM: twoRel[rel=straight_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: straight_+_pipes
*CAT: n
*SEM: orRel[rel=straight_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: strain_+_relief
*CAT: n
*SEM: unaryRel[rel=strain_+_relief]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: strain_+_relief
*CAT: n
*SEM: twoRel[rel=strain_+_relief]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: strain_+_relief
*CAT: n
*SEM: twoRel[rel=strain_+_relief]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: strain_+_relief
*CAT: n
*SEM: orRel[rel=strain_+_relief]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer
*CAT: n
*SEM: unaryRel[rel=stringer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer
*CAT: n
*SEM: twoRel[rel=stringer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer
*CAT: n
*SEM: twoRel[rel=stringer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer
*CAT: n
*SEM: orRel[rel=stringer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer_+_p0
*CAT: n
*SEM: unaryRel[rel=stringer_+_p0]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer_+_p0
*CAT: n
*SEM: twoRel[rel=stringer_+_p0]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer_+_p0
*CAT: n
*SEM: twoRel[rel=stringer_+_p0]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stringer_+_p0
*CAT: n
*SEM: orRel[rel=stringer_+_p0]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_deformation
*CAT: n
*SEM: unaryRel[rel=structural_+_deformation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_deformation
*CAT: n
*SEM: twoRel[rel=structural_+_deformation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_deformation
*CAT: n
*SEM: twoRel[rel=structural_+_deformation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_deformation
*CAT: n
*SEM: orRel[rel=structural_+_deformation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part
*CAT: n
*SEM: unaryRel[rel=structural_+_part]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part
*CAT: n
*SEM: twoRel[rel=structural_+_part]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part
*CAT: n
*SEM: twoRel[rel=structural_+_part]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part
*CAT: n
*SEM: orRel[rel=structural_+_part]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_25mm_+_greaterthan_+__+_equalto_+_d_+_greaterthan_+__+_equalto_+_10mm_+_with_+_an_+_electrical_+_protection
*CAT: n
*SEM: unaryRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_25mm_+_greaterthan_+__+_equalto_+_d_+_greaterthan_+__+_equalto_+_10mm_+_with_+_an_+_electrical_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_25mm_+_greaterthan_+__+_equalto_+_d_+_greaterthan_+__+_equalto_+_10mm_+_with_+_an_+_electrical_+_protection
*CAT: n
*SEM: twoRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_25mm_+_greaterthan_+__+_equalto_+_d_+_greaterthan_+__+_equalto_+_10mm_+_with_+_an_+_electrical_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_25mm_+_greaterthan_+__+_equalto_+_d_+_greaterthan_+__+_equalto_+_10mm_+_with_+_an_+_electrical_+_protection
*CAT: n
*SEM: twoRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_25mm_+_greaterthan_+__+_equalto_+_d_+_greaterthan_+__+_equalto_+_10mm_+_with_+_an_+_electrical_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_25mm_+_greaterthan_+__+_equalto_+_d_+_greaterthan_+__+_equalto_+_10mm_+_with_+_an_+_electrical_+_protection
*CAT: n
*SEM: orRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_25mm_+_greaterthan_+__+_equalto_+_d_+_greaterthan_+__+_equalto_+_10mm_+_with_+_an_+_electrical_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_25mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_10mm_+_with_+_an_+_electrical_+_protection
*CAT: n
*SEM: unaryRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_25mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_10mm_+_with_+_an_+_electrical_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_25mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_10mm_+_with_+_an_+_electrical_+_protection
*CAT: n
*SEM: twoRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_25mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_10mm_+_with_+_an_+_electrical_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_25mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_10mm_+_with_+_an_+_electrical_+_protection
*CAT: n
*SEM: twoRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_25mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_10mm_+_with_+_an_+_electrical_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_25mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_10mm_+_with_+_an_+_electrical_+_protection
*CAT: n
*SEM: orRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_25mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_10mm_+_with_+_an_+_electrical_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_50mm_+_greaterthan_+__+_equalto_+_d_+_greaterthan_+__+_equalto_+_25mm_+_with_+_an_+_electrical_+_protection
*CAT: n
*SEM: unaryRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_50mm_+_greaterthan_+__+_equalto_+_d_+_greaterthan_+__+_equalto_+_25mm_+_with_+_an_+_electrical_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_50mm_+_greaterthan_+__+_equalto_+_d_+_greaterthan_+__+_equalto_+_25mm_+_with_+_an_+_electrical_+_protection
*CAT: n
*SEM: twoRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_50mm_+_greaterthan_+__+_equalto_+_d_+_greaterthan_+__+_equalto_+_25mm_+_with_+_an_+_electrical_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_50mm_+_greaterthan_+__+_equalto_+_d_+_greaterthan_+__+_equalto_+_25mm_+_with_+_an_+_electrical_+_protection
*CAT: n
*SEM: twoRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_50mm_+_greaterthan_+__+_equalto_+_d_+_greaterthan_+__+_equalto_+_25mm_+_with_+_an_+_electrical_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_50mm_+_greaterthan_+__+_equalto_+_d_+_greaterthan_+__+_equalto_+_25mm_+_with_+_an_+_electrical_+_protection
*CAT: n
*SEM: orRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_50mm_+_greaterthan_+__+_equalto_+_d_+_greaterthan_+__+_equalto_+_25mm_+_with_+_an_+_electrical_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_50mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_25mm_+_with_+_an_+_electrical_+_protection
*CAT: n
*SEM: unaryRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_50mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_25mm_+_with_+_an_+_electrical_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_50mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_25mm_+_with_+_an_+_electrical_+_protection
*CAT: n
*SEM: twoRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_50mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_25mm_+_with_+_an_+_electrical_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_50mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_25mm_+_with_+_an_+_electrical_+_protection
*CAT: n
*SEM: twoRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_50mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_25mm_+_with_+_an_+_electrical_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_50mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_25mm_+_with_+_an_+_electrical_+_protection
*CAT: n
*SEM: orRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_50mm_+_greaterthan_+_equalto_+_d_+_greaterthan_+_equalto_+_25mm_+_with_+_an_+_electrical_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+__+_equalto_+__+_25mm
*CAT: n
*SEM: unaryRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+__+_equalto_+__+_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+__+_equalto_+__+_25mm
*CAT: n
*SEM: twoRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+__+_equalto_+__+_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+__+_equalto_+__+_25mm
*CAT: n
*SEM: twoRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+__+_equalto_+__+_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+__+_equalto_+__+_25mm
*CAT: n
*SEM: orRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+__+_equalto_+__+_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+__+_equalto_+__+_50mm
*CAT: n
*SEM: unaryRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+__+_equalto_+__+_50mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+__+_equalto_+__+_50mm
*CAT: n
*SEM: twoRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+__+_equalto_+__+_50mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+__+_equalto_+__+_50mm
*CAT: n
*SEM: twoRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+__+_equalto_+__+_50mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+__+_equalto_+__+_50mm
*CAT: n
*SEM: orRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+__+_equalto_+__+_50mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+_equalto_+_25mm
*CAT: n
*SEM: unaryRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+_equalto_+_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+_equalto_+_25mm
*CAT: n
*SEM: twoRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+_equalto_+_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+_equalto_+_25mm
*CAT: n
*SEM: twoRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+_equalto_+_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+_equalto_+_25mm
*CAT: n
*SEM: orRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+_equalto_+_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+_equalto_+_50mm
*CAT: n
*SEM: unaryRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+_equalto_+_50mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+_equalto_+_50mm
*CAT: n
*SEM: twoRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+_equalto_+_50mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+_equalto_+_50mm
*CAT: n
*SEM: twoRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+_equalto_+_50mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+_equalto_+_50mm
*CAT: n
*SEM: orRel[rel=structural_+_part_+_in_+_fuel_+_vapor_+_area_+_by_+_d_+_greaterthan_+_equalto_+_50mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure
*CAT: n
*SEM: unaryRel[rel=structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure
*CAT: n
*SEM: twoRel[rel=structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure
*CAT: n
*SEM: twoRel[rel=structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure
*CAT: n
*SEM: orRel[rel=structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_by_+_clipping
*CAT: n
*SEM: unaryRel[rel=structure_+_by_+_clipping]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_by_+_clipping
*CAT: n
*SEM: twoRel[rel=structure_+_by_+_clipping]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_by_+_clipping
*CAT: n
*SEM: twoRel[rel=structure_+_by_+_clipping]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_by_+_clipping
*CAT: n
*SEM: orRel[rel=structure_+_by_+_clipping]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_by_+_using_+_asne0470_+_label_+_near_+_each_+_electrical_+_item
*CAT: n
*SEM: unaryRel[rel=structure_+_by_+_using_+_asne0470_+_label_+_near_+_each_+_electrical_+_item]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_by_+_using_+_asne0470_+_label_+_near_+_each_+_electrical_+_item
*CAT: n
*SEM: twoRel[rel=structure_+_by_+_using_+_asne0470_+_label_+_near_+_each_+_electrical_+_item]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_by_+_using_+_asne0470_+_label_+_near_+_each_+_electrical_+_item
*CAT: n
*SEM: twoRel[rel=structure_+_by_+_using_+_asne0470_+_label_+_near_+_each_+_electrical_+_item]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_by_+_using_+_asne0470_+_label_+_near_+_each_+_electrical_+_item
*CAT: n
*SEM: orRel[rel=structure_+_by_+_using_+_asne0470_+_label_+_near_+_each_+_electrical_+_item]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_in_+_a_+_way_+_that_+_they_+_stay_+_in_+_position
*CAT: n
*SEM: unaryRel[rel=structure_+_in_+_a_+_way_+_that_+_they_+_stay_+_in_+_position]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_in_+_a_+_way_+_that_+_they_+_stay_+_in_+_position
*CAT: n
*SEM: twoRel[rel=structure_+_in_+_a_+_way_+_that_+_they_+_stay_+_in_+_position]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_in_+_a_+_way_+_that_+_they_+_stay_+_in_+_position
*CAT: n
*SEM: twoRel[rel=structure_+_in_+_a_+_way_+_that_+_they_+_stay_+_in_+_position]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_in_+_a_+_way_+_that_+_they_+_stay_+_in_+_position
*CAT: n
*SEM: orRel[rel=structure_+_in_+_a_+_way_+_that_+_they_+_stay_+_in_+_position]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_is_+_possible
*CAT: n
*SEM: unaryRel[rel=structure_+_is_+_possible]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_is_+_possible
*CAT: n
*SEM: twoRel[rel=structure_+_is_+_possible]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_is_+_possible
*CAT: n
*SEM: twoRel[rel=structure_+_is_+_possible]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_is_+_possible
*CAT: n
*SEM: orRel[rel=structure_+_is_+_possible]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_like_+_in_+_the_+_figure_+_below
*CAT: n
*SEM: unaryRel[rel=structure_+_like_+_in_+_the_+_figure_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_like_+_in_+_the_+_figure_+_below
*CAT: n
*SEM: twoRel[rel=structure_+_like_+_in_+_the_+_figure_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_like_+_in_+_the_+_figure_+_below
*CAT: n
*SEM: twoRel[rel=structure_+_like_+_in_+_the_+_figure_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_like_+_in_+_the_+_figure_+_below
*CAT: n
*SEM: orRel[rel=structure_+_like_+_in_+_the_+_figure_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_with_+_asne0470_+_label
*CAT: n
*SEM: unaryRel[rel=structure_+_with_+_asne0470_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_with_+_asne0470_+_label
*CAT: n
*SEM: twoRel[rel=structure_+_with_+_asne0470_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_with_+_asne0470_+_label
*CAT: n
*SEM: twoRel[rel=structure_+_with_+_asne0470_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_with_+_asne0470_+_label
*CAT: n
*SEM: orRel[rel=structure_+_with_+_asne0470_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_with_+_no_+_contect
*CAT: n
*SEM: unaryRel[rel=structure_+_with_+_no_+_contect]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_with_+_no_+_contect
*CAT: n
*SEM: twoRel[rel=structure_+_with_+_no_+_contect]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_with_+_no_+_contect
*CAT: n
*SEM: twoRel[rel=structure_+_with_+_no_+_contect]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_with_+_no_+_contect
*CAT: n
*SEM: orRel[rel=structure_+_with_+_no_+_contect]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_with_+_nsa_+_931025_+_metallic_+_label_+_in_+_white_+_color
*CAT: n
*SEM: unaryRel[rel=structure_+_with_+_nsa_+_931025_+_metallic_+_label_+_in_+_white_+_color]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_with_+_nsa_+_931025_+_metallic_+_label_+_in_+_white_+_color
*CAT: n
*SEM: twoRel[rel=structure_+_with_+_nsa_+_931025_+_metallic_+_label_+_in_+_white_+_color]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_with_+_nsa_+_931025_+_metallic_+_label_+_in_+_white_+_color
*CAT: n
*SEM: twoRel[rel=structure_+_with_+_nsa_+_931025_+_metallic_+_label_+_in_+_white_+_color]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_with_+_nsa_+_931025_+_metallic_+_label_+_in_+_white_+_color
*CAT: n
*SEM: orRel[rel=structure_+_with_+_nsa_+_931025_+_metallic_+_label_+_in_+_white_+_color]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_with_+_two_+_attachment_+_backslash_+_fixation_+_point_+_minimum
*CAT: n
*SEM: unaryRel[rel=structure_+_with_+_two_+_attachment_+_backslash_+_fixation_+_point_+_minimum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_with_+_two_+_attachment_+_backslash_+_fixation_+_point_+_minimum
*CAT: n
*SEM: twoRel[rel=structure_+_with_+_two_+_attachment_+_backslash_+_fixation_+_point_+_minimum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_with_+_two_+_attachment_+_backslash_+_fixation_+_point_+_minimum
*CAT: n
*SEM: twoRel[rel=structure_+_with_+_two_+_attachment_+_backslash_+_fixation_+_point_+_minimum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure_+_with_+_two_+_attachment_+_backslash_+_fixation_+_point_+_minimum
*CAT: n
*SEM: orRel[rel=structure_+_with_+_two_+_attachment_+_backslash_+_fixation_+_point_+_minimum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: suction_+_pipes
*CAT: n
*SEM: unaryRel[rel=suction_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: suction_+_pipes
*CAT: n
*SEM: twoRel[rel=suction_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: suction_+_pipes
*CAT: n
*SEM: twoRel[rel=suction_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: suction_+_pipes
*CAT: n
*SEM: orRel[rel=suction_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_bracket
*CAT: n
*SEM: unaryRel[rel=sufficient_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_bracket
*CAT: n
*SEM: twoRel[rel=sufficient_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_bracket
*CAT: n
*SEM: twoRel[rel=sufficient_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_bracket
*CAT: n
*SEM: orRel[rel=sufficient_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_space
*CAT: n
*SEM: unaryRel[rel=sufficient_+_space]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_space
*CAT: n
*SEM: twoRel[rel=sufficient_+_space]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_space
*CAT: n
*SEM: twoRel[rel=sufficient_+_space]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sufficient_+_space
*CAT: n
*SEM: orRel[rel=sufficient_+_space]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support
*CAT: n
*SEM: unaryRel[rel=support]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support
*CAT: n
*SEM: twoRel[rel=support]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support
*CAT: n
*SEM: twoRel[rel=support]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support
*CAT: n
*SEM: orRel[rel=support]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_tubes
*CAT: n
*SEM: unaryRel[rel=support_+_tubes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_tubes
*CAT: n
*SEM: twoRel[rel=support_+_tubes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_tubes
*CAT: n
*SEM: twoRel[rel=support_+_tubes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_tubes
*CAT: n
*SEM: orRel[rel=support_+_tubes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness
*CAT: n
*SEM: unaryRel[rel=surface_+_roughness]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness
*CAT: n
*SEM: twoRel[rel=surface_+_roughness]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness
*CAT: n
*SEM: twoRel[rel=surface_+_roughness]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: surface_+_roughness
*CAT: n
*SEM: orRel[rel=surface_+_roughness]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swaged_+_unions
*CAT: n
*SEM: unaryRel[rel=swaged_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swaged_+_unions
*CAT: n
*SEM: twoRel[rel=swaged_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swaged_+_unions
*CAT: n
*SEM: twoRel[rel=swaged_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swaged_+_unions
*CAT: n
*SEM: orRel[rel=swaged_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp
*CAT: n
*SEM: unaryRel[rel=swamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp
*CAT: n
*SEM: twoRel[rel=swamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp
*CAT: n
*SEM: twoRel[rel=swamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp
*CAT: n
*SEM: orRel[rel=swamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_area
*CAT: n
*SEM: unaryRel[rel=swamp_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_area
*CAT: n
*SEM: twoRel[rel=swamp_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_area
*CAT: n
*SEM: twoRel[rel=swamp_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: swamp_+_area
*CAT: n
*SEM: orRel[rel=swamp_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: switch
*CAT: n
*SEM: unaryRel[rel=switch]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: switch
*CAT: n
*SEM: twoRel[rel=switch]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: switch
*CAT: n
*SEM: twoRel[rel=switch]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: switch
*CAT: n
*SEM: orRel[rel=switch]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: switch_+_guard
*CAT: n
*SEM: unaryRel[rel=switch_+_guard]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: switch_+_guard
*CAT: n
*SEM: twoRel[rel=switch_+_guard]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: switch_+_guard
*CAT: n
*SEM: twoRel[rel=switch_+_guard]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: switch_+_guard
*CAT: n
*SEM: orRel[rel=switch_+_guard]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: system
*CAT: n
*SEM: unaryRel[rel=system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: system
*CAT: n
*SEM: twoRel[rel=system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: system
*CAT: n
*SEM: twoRel[rel=system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: system
*CAT: n
*SEM: orRel[rel=system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: t
*CAT: n
*SEM: unaryRel[rel=t]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: t
*CAT: n
*SEM: twoRel[rel=t]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: t
*CAT: n
*SEM: twoRel[rel=t]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: t
*CAT: n
*SEM: orRel[rel=t]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: table
*CAT: n
*SEM: unaryRel[rel=table]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: table
*CAT: n
*SEM: twoRel[rel=table]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: table
*CAT: n
*SEM: twoRel[rel=table]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: table
*CAT: n
*SEM: orRel[rel=table]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account
*CAT: n
*SEM: unaryRel[rel=taking_+_into_+_account]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account
*CAT: n
*SEM: twoRel[rel=taking_+_into_+_account]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account
*CAT: n
*SEM: twoRel[rel=taking_+_into_+_account]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account
*CAT: n
*SEM: orRel[rel=taking_+_into_+_account]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_25mm
*CAT: n
*SEM: unaryRel[rel=taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_25mm
*CAT: n
*SEM: twoRel[rel=taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_25mm
*CAT: n
*SEM: twoRel[rel=taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_25mm
*CAT: n
*SEM: orRel[rel=taking_+_into_+_account_+_a_+_minimum_+_straight_+_distance_+_between_+_two_+_successive_+_bends_+_of_+_25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_the_+_following_+_rules_+_colon
*CAT: n
*SEM: unaryRel[rel=taking_+_into_+_account_+_the_+_following_+_rules_+_colon]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_the_+_following_+_rules_+_colon
*CAT: n
*SEM: twoRel[rel=taking_+_into_+_account_+_the_+_following_+_rules_+_colon]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_the_+_following_+_rules_+_colon
*CAT: n
*SEM: twoRel[rel=taking_+_into_+_account_+_the_+_following_+_rules_+_colon]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_into_+_account_+_the_+_following_+_rules_+_colon
*CAT: n
*SEM: orRel[rel=taking_+_into_+_account_+_the_+_following_+_rules_+_colon]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_zone_+_specific_+_parameters_+_into_+_account
*CAT: n
*SEM: unaryRel[rel=taking_+_zone_+_specific_+_parameters_+_into_+_account]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_zone_+_specific_+_parameters_+_into_+_account
*CAT: n
*SEM: twoRel[rel=taking_+_zone_+_specific_+_parameters_+_into_+_account]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_zone_+_specific_+_parameters_+_into_+_account
*CAT: n
*SEM: twoRel[rel=taking_+_zone_+_specific_+_parameters_+_into_+_account]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: taking_+_zone_+_specific_+_parameters_+_into_+_account
*CAT: n
*SEM: orRel[rel=taking_+_zone_+_specific_+_parameters_+_into_+_account]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee_+_-_+_unions
*CAT: n
*SEM: unaryRel[rel=tee_+_-_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee_+_-_+_unions
*CAT: n
*SEM: twoRel[rel=tee_+_-_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee_+_-_+_unions
*CAT: n
*SEM: twoRel[rel=tee_+_-_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee_+_-_+_unions
*CAT: n
*SEM: orRel[rel=tee_+_-_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee-unions
*CAT: n
*SEM: unaryRel[rel=tee-unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee-unions
*CAT: n
*SEM: twoRel[rel=tee-unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee-unions
*CAT: n
*SEM: twoRel[rel=tee-unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tee-unions
*CAT: n
*SEM: orRel[rel=tee-unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature
*CAT: n
*SEM: unaryRel[rel=temperature]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature
*CAT: n
*SEM: twoRel[rel=temperature]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature
*CAT: n
*SEM: twoRel[rel=temperature]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature
*CAT: n
*SEM: orRel[rel=temperature]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_areas_+__+_opensb_+_e.g._+_fan_+_area_+_closesb_+_._+_cushion_+_material_+_colon_+__+_silicone_+_rubber
*CAT: n
*SEM: unaryRel[rel=temperature_+_areas_+__+_opensb_+_e.g._+_fan_+_area_+_closesb_+_._+_cushion_+_material_+_colon_+__+_silicone_+_rubber]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_areas_+__+_opensb_+_e.g._+_fan_+_area_+_closesb_+_._+_cushion_+_material_+_colon_+__+_silicone_+_rubber
*CAT: n
*SEM: twoRel[rel=temperature_+_areas_+__+_opensb_+_e.g._+_fan_+_area_+_closesb_+_._+_cushion_+_material_+_colon_+__+_silicone_+_rubber]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_areas_+__+_opensb_+_e.g._+_fan_+_area_+_closesb_+_._+_cushion_+_material_+_colon_+__+_silicone_+_rubber
*CAT: n
*SEM: twoRel[rel=temperature_+_areas_+__+_opensb_+_e.g._+_fan_+_area_+_closesb_+_._+_cushion_+_material_+_colon_+__+_silicone_+_rubber]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_areas_+__+_opensb_+_e.g._+_fan_+_area_+_closesb_+_._+_cushion_+_material_+_colon_+__+_silicone_+_rubber
*CAT: n
*SEM: orRel[rel=temperature_+_areas_+__+_opensb_+_e.g._+_fan_+_area_+_closesb_+_._+_cushion_+_material_+_colon_+__+_silicone_+_rubber]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_areas_+_opensb_+_e.g._+_fan_+_area_+_closesb_+_cushion_+_material_+_colon_+_silicone_+_rubber
*CAT: n
*SEM: unaryRel[rel=temperature_+_areas_+_opensb_+_e.g._+_fan_+_area_+_closesb_+_cushion_+_material_+_colon_+_silicone_+_rubber]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_areas_+_opensb_+_e.g._+_fan_+_area_+_closesb_+_cushion_+_material_+_colon_+_silicone_+_rubber
*CAT: n
*SEM: twoRel[rel=temperature_+_areas_+_opensb_+_e.g._+_fan_+_area_+_closesb_+_cushion_+_material_+_colon_+_silicone_+_rubber]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_areas_+_opensb_+_e.g._+_fan_+_area_+_closesb_+_cushion_+_material_+_colon_+_silicone_+_rubber
*CAT: n
*SEM: twoRel[rel=temperature_+_areas_+_opensb_+_e.g._+_fan_+_area_+_closesb_+_cushion_+_material_+_colon_+_silicone_+_rubber]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_areas_+_opensb_+_e.g._+_fan_+_area_+_closesb_+_cushion_+_material_+_colon_+_silicone_+_rubber
*CAT: n
*SEM: orRel[rel=temperature_+_areas_+_opensb_+_e.g._+_fan_+_area_+_closesb_+_cushion_+_material_+_colon_+_silicone_+_rubber]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_sensor
*CAT: n
*SEM: unaryRel[rel=temperature_+_sensor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_sensor
*CAT: n
*SEM: twoRel[rel=temperature_+_sensor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_sensor
*CAT: n
*SEM: twoRel[rel=temperature_+_sensor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: temperature_+_sensor
*CAT: n
*SEM: orRel[rel=temperature_+_sensor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tension_+_forces
*CAT: n
*SEM: unaryRel[rel=tension_+_forces]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tension_+_forces
*CAT: n
*SEM: twoRel[rel=tension_+_forces]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tension_+_forces
*CAT: n
*SEM: twoRel[rel=tension_+_forces]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tension_+_forces
*CAT: n
*SEM: orRel[rel=tension_+_forces]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal
*CAT: n
*SEM: unaryRel[rel=terminal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal
*CAT: n
*SEM: twoRel[rel=terminal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal
*CAT: n
*SEM: twoRel[rel=terminal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal
*CAT: n
*SEM: orRel[rel=terminal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_lug
*CAT: n
*SEM: unaryRel[rel=terminal_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_lug
*CAT: n
*SEM: twoRel[rel=terminal_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_lug
*CAT: n
*SEM: twoRel[rel=terminal_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: terminal_+_lug
*CAT: n
*SEM: orRel[rel=terminal_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: the
*CAT: n
*SEM: unaryRel[rel=the]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: the
*CAT: n
*SEM: twoRel[rel=the]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: the
*CAT: n
*SEM: twoRel[rel=the]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: the
*CAT: n
*SEM: orRel[rel=the]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: access
*CAT: n
*SEM: unaryRel[rel=access]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: access
*CAT: n
*SEM: twoRel[rel=access]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: access
*CAT: n
*SEM: twoRel[rel=access]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: access
*CAT: n
*SEM: orRel[rel=access]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: apu_+_zone
*CAT: n
*SEM: unaryRel[rel=apu_+_zone]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: apu_+_zone
*CAT: n
*SEM: twoRel[rel=apu_+_zone]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: apu_+_zone
*CAT: n
*SEM: twoRel[rel=apu_+_zone]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: apu_+_zone
*CAT: n
*SEM: orRel[rel=apu_+_zone]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: area_+_of_+_sharp_+_edge_+_of_+_bracket
*CAT: n
*SEM: unaryRel[rel=area_+_of_+_sharp_+_edge_+_of_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: area_+_of_+_sharp_+_edge_+_of_+_bracket
*CAT: n
*SEM: twoRel[rel=area_+_of_+_sharp_+_edge_+_of_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: area_+_of_+_sharp_+_edge_+_of_+_bracket
*CAT: n
*SEM: twoRel[rel=area_+_of_+_sharp_+_edge_+_of_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: area_+_of_+_sharp_+_edge_+_of_+_bracket
*CAT: n
*SEM: orRel[rel=area_+_of_+_sharp_+_edge_+_of_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure
*CAT: n
*SEM: unaryRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure
*CAT: n
*SEM: twoRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure
*CAT: n
*SEM: twoRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figure
*CAT: n
*SEM: orRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figures
*CAT: n
*SEM: unaryRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figures
*CAT: n
*SEM: twoRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figures
*CAT: n
*SEM: twoRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_figures
*CAT: n
*SEM: orRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_table
*CAT: n
*SEM: unaryRel[rel=attached_+_table]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_table
*CAT: n
*SEM: twoRel[rel=attached_+_table]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_table
*CAT: n
*SEM: twoRel[rel=attached_+_table]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: attached_+_table
*CAT: n
*SEM: orRel[rel=attached_+_table]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: average_+_pitch_+_between_+_two_+_attachment_+_device
*CAT: n
*SEM: unaryRel[rel=average_+_pitch_+_between_+_two_+_attachment_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: average_+_pitch_+_between_+_two_+_attachment_+_device
*CAT: n
*SEM: twoRel[rel=average_+_pitch_+_between_+_two_+_attachment_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: average_+_pitch_+_between_+_two_+_attachment_+_device
*CAT: n
*SEM: twoRel[rel=average_+_pitch_+_between_+_two_+_attachment_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: average_+_pitch_+_between_+_two_+_attachment_+_device
*CAT: n
*SEM: orRel[rel=average_+_pitch_+_between_+_two_+_attachment_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: unaryRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: twoRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: twoRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bend_+_radius
*CAT: n
*SEM: orRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system
*CAT: n
*SEM: unaryRel[rel=bleed_+_air_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system
*CAT: n
*SEM: twoRel[rel=bleed_+_air_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system
*CAT: n
*SEM: twoRel[rel=bleed_+_air_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bleed_+_air_+_system
*CAT: n
*SEM: orRel[rel=bleed_+_air_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolts_+_for_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=bolts_+_for_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolts_+_for_+_clamp-block
*CAT: n
*SEM: twoRel[rel=bolts_+_for_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolts_+_for_+_clamp-block
*CAT: n
*SEM: twoRel[rel=bolts_+_for_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bolts_+_for_+_clamp-block
*CAT: n
*SEM: orRel[rel=bolts_+_for_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: unaryRel[rel=bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: twoRel[rel=bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: twoRel[rel=bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bracket
*CAT: n
*SEM: orRel[rel=bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: unaryRel[rel=bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: twoRel[rel=bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: twoRel[rel=bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle
*CAT: n
*SEM: orRel[rel=bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_in_+_case_+_of_+_thick_+_bundle
*CAT: n
*SEM: unaryRel[rel=bundle_+_in_+_case_+_of_+_thick_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_in_+_case_+_of_+_thick_+_bundle
*CAT: n
*SEM: twoRel[rel=bundle_+_in_+_case_+_of_+_thick_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_in_+_case_+_of_+_thick_+_bundle
*CAT: n
*SEM: twoRel[rel=bundle_+_in_+_case_+_of_+_thick_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_in_+_case_+_of_+_thick_+_bundle
*CAT: n
*SEM: orRel[rel=bundle_+_in_+_case_+_of_+_thick_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_is_+_d_+_smallerthan_+__+_equalto_+_10mm
*CAT: n
*SEM: unaryRel[rel=bundle_+_is_+_d_+_smallerthan_+__+_equalto_+_10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_is_+_d_+_smallerthan_+__+_equalto_+_10mm
*CAT: n
*SEM: twoRel[rel=bundle_+_is_+_d_+_smallerthan_+__+_equalto_+_10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_is_+_d_+_smallerthan_+__+_equalto_+_10mm
*CAT: n
*SEM: twoRel[rel=bundle_+_is_+_d_+_smallerthan_+__+_equalto_+_10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_is_+_d_+_smallerthan_+__+_equalto_+_10mm
*CAT: n
*SEM: orRel[rel=bundle_+_is_+_d_+_smallerthan_+__+_equalto_+_10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_is_+_d_+_smallerthan_+_equalto_+_10mm
*CAT: n
*SEM: unaryRel[rel=bundle_+_is_+_d_+_smallerthan_+_equalto_+_10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_is_+_d_+_smallerthan_+_equalto_+_10mm
*CAT: n
*SEM: twoRel[rel=bundle_+_is_+_d_+_smallerthan_+_equalto_+_10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_is_+_d_+_smallerthan_+_equalto_+_10mm
*CAT: n
*SEM: twoRel[rel=bundle_+_is_+_d_+_smallerthan_+_equalto_+_10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_is_+_d_+_smallerthan_+_equalto_+_10mm
*CAT: n
*SEM: orRel[rel=bundle_+_is_+_d_+_smallerthan_+_equalto_+_10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_section_+__+_opensb_+_max._+_diameter_+__+_equalto_+__+_50mm_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=bundle_+_section_+__+_opensb_+_max._+_diameter_+__+_equalto_+__+_50mm_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_section_+__+_opensb_+_max._+_diameter_+__+_equalto_+__+_50mm_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=bundle_+_section_+__+_opensb_+_max._+_diameter_+__+_equalto_+__+_50mm_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_section_+__+_opensb_+_max._+_diameter_+__+_equalto_+__+_50mm_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=bundle_+_section_+__+_opensb_+_max._+_diameter_+__+_equalto_+__+_50mm_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_section_+__+_opensb_+_max._+_diameter_+__+_equalto_+__+_50mm_+_closesb_+_
*CAT: n
*SEM: orRel[rel=bundle_+_section_+__+_opensb_+_max._+_diameter_+__+_equalto_+__+_50mm_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_section_+_opensb_+_max_+_diameter_+_equalto_+_50mm_+_closesb
*CAT: n
*SEM: unaryRel[rel=bundle_+_section_+_opensb_+_max_+_diameter_+_equalto_+_50mm_+_closesb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_section_+_opensb_+_max_+_diameter_+_equalto_+_50mm_+_closesb
*CAT: n
*SEM: twoRel[rel=bundle_+_section_+_opensb_+_max_+_diameter_+_equalto_+_50mm_+_closesb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_section_+_opensb_+_max_+_diameter_+_equalto_+_50mm_+_closesb
*CAT: n
*SEM: twoRel[rel=bundle_+_section_+_opensb_+_max_+_diameter_+_equalto_+_50mm_+_closesb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: bundle_+_section_+_opensb_+_max_+_diameter_+_equalto_+_50mm_+_closesb
*CAT: n
*SEM: orRel[rel=bundle_+_section_+_opensb_+_max_+_diameter_+_equalto_+_50mm_+_closesb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable
*CAT: n
*SEM: unaryRel[rel=cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable
*CAT: n
*SEM: twoRel[rel=cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable
*CAT: n
*SEM: twoRel[rel=cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: cable
*CAT: n
*SEM: orRel[rel=cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ceiling_+_area
*CAT: n
*SEM: unaryRel[rel=ceiling_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ceiling_+_area
*CAT: n
*SEM: twoRel[rel=ceiling_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ceiling_+_area
*CAT: n
*SEM: twoRel[rel=ceiling_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ceiling_+_area
*CAT: n
*SEM: orRel[rel=ceiling_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+_entrance
*CAT: n
*SEM: unaryRel[rel=conduit_+_entrance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+_entrance
*CAT: n
*SEM: twoRel[rel=conduit_+_entrance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+_entrance
*CAT: n
*SEM: twoRel[rel=conduit_+_entrance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: conduit_+_entrance
*CAT: n
*SEM: orRel[rel=conduit_+_entrance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_cable
*CAT: n
*SEM: unaryRel[rel=connector_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_cable
*CAT: n
*SEM: twoRel[rel=connector_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_cable
*CAT: n
*SEM: twoRel[rel=connector_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: connector_+_cable
*CAT: n
*SEM: orRel[rel=connector_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier_+_describing_+_stection_+_of_+_harness
*CAT: n
*SEM: unaryRel[rel=definition_+_dossier_+_describing_+_stection_+_of_+_harness]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier_+_describing_+_stection_+_of_+_harness
*CAT: n
*SEM: twoRel[rel=definition_+_dossier_+_describing_+_stection_+_of_+_harness]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier_+_describing_+_stection_+_of_+_harness
*CAT: n
*SEM: twoRel[rel=definition_+_dossier_+_describing_+_stection_+_of_+_harness]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_dossier_+_describing_+_stection_+_of_+_harness
*CAT: n
*SEM: orRel[rel=definition_+_dossier_+_describing_+_stection_+_of_+_harness]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_of_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=definition_+_of_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_of_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=definition_+_of_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_of_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=definition_+_of_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: definition_+_of_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=definition_+_of_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detector_+_housing
*CAT: n
*SEM: unaryRel[rel=detector_+_housing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detector_+_housing
*CAT: n
*SEM: twoRel[rel=detector_+_housing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detector_+_housing
*CAT: n
*SEM: twoRel[rel=detector_+_housing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: detector_+_housing
*CAT: n
*SEM: orRel[rel=detector_+_housing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_of_+_sum_+_of_+_mechanical_+_distance_+_plus_+_sagging_+_backslash_+_swelling
*CAT: n
*SEM: unaryRel[rel=distance_+_of_+_sum_+_of_+_mechanical_+_distance_+_plus_+_sagging_+_backslash_+_swelling]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_of_+_sum_+_of_+_mechanical_+_distance_+_plus_+_sagging_+_backslash_+_swelling
*CAT: n
*SEM: twoRel[rel=distance_+_of_+_sum_+_of_+_mechanical_+_distance_+_plus_+_sagging_+_backslash_+_swelling]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_of_+_sum_+_of_+_mechanical_+_distance_+_plus_+_sagging_+_backslash_+_swelling
*CAT: n
*SEM: twoRel[rel=distance_+_of_+_sum_+_of_+_mechanical_+_distance_+_plus_+_sagging_+_backslash_+_swelling]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: distance_+_of_+_sum_+_of_+_mechanical_+_distance_+_plus_+_sagging_+_backslash_+_swelling
*CAT: n
*SEM: orRel[rel=distance_+_of_+_sum_+_of_+_mechanical_+_distance_+_plus_+_sagging_+_backslash_+_swelling]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_bottle
*CAT: n
*SEM: unaryRel[rel=drain_+_bottle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_bottle
*CAT: n
*SEM: twoRel[rel=drain_+_bottle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_bottle
*CAT: n
*SEM: twoRel[rel=drain_+_bottle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drain_+_bottle
*CAT: n
*SEM: orRel[rel=drain_+_bottle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drained_+_hole
*CAT: n
*SEM: unaryRel[rel=drained_+_hole]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drained_+_hole
*CAT: n
*SEM: twoRel[rel=drained_+_hole]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drained_+_hole
*CAT: n
*SEM: twoRel[rel=drained_+_hole]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drained_+_hole
*CAT: n
*SEM: orRel[rel=drained_+_hole]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawing_+_set_+___+_x000d_+__
*CAT: n
*SEM: unaryRel[rel=drawing_+_set_+___+_x000d_+__]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawing_+_set_+___+_x000d_+__
*CAT: n
*SEM: twoRel[rel=drawing_+_set_+___+_x000d_+__]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawing_+_set_+___+_x000d_+__
*CAT: n
*SEM: twoRel[rel=drawing_+_set_+___+_x000d_+__]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawing_+_set_+___+_x000d_+__
*CAT: n
*SEM: orRel[rel=drawing_+_set_+___+_x000d_+__]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawing_+_set._x000d_
*CAT: n
*SEM: unaryRel[rel=drawing_+_set._x000d_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawing_+_set._x000d_
*CAT: n
*SEM: twoRel[rel=drawing_+_set._x000d_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawing_+_set._x000d_
*CAT: n
*SEM: twoRel[rel=drawing_+_set._x000d_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: drawing_+_set._x000d_
*CAT: n
*SEM: orRel[rel=drawing_+_set._x000d_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: element
*CAT: n
*SEM: unaryRel[rel=element]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: element
*CAT: n
*SEM: twoRel[rel=element]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: element
*CAT: n
*SEM: twoRel[rel=element]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: element
*CAT: n
*SEM: orRel[rel=element]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongation_+_of_+_pipes
*CAT: n
*SEM: unaryRel[rel=elongation_+_of_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongation_+_of_+_pipes
*CAT: n
*SEM: twoRel[rel=elongation_+_of_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongation_+_of_+_pipes
*CAT: n
*SEM: twoRel[rel=elongation_+_of_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: elongation_+_of_+_pipes
*CAT: n
*SEM: orRel[rel=elongation_+_of_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_connector_+_of_+_element
*CAT: n
*SEM: unaryRel[rel=end_+_connector_+_of_+_element]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_connector_+_of_+_element
*CAT: n
*SEM: twoRel[rel=end_+_connector_+_of_+_element]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_connector_+_of_+_element
*CAT: n
*SEM: twoRel[rel=end_+_connector_+_of_+_element]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_connector_+_of_+_element
*CAT: n
*SEM: orRel[rel=end_+_connector_+_of_+_element]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_of_+_abs_+_0887_+_conduit
*CAT: n
*SEM: unaryRel[rel=end_+_of_+_abs_+_0887_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_of_+_abs_+_0887_+_conduit
*CAT: n
*SEM: twoRel[rel=end_+_of_+_abs_+_0887_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_of_+_abs_+_0887_+_conduit
*CAT: n
*SEM: twoRel[rel=end_+_of_+_abs_+_0887_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: end_+_of_+_abs_+_0887_+_conduit
*CAT: n
*SEM: orRel[rel=end_+_of_+_abs_+_0887_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ends_+_of_+_tubing
*CAT: n
*SEM: unaryRel[rel=ends_+_of_+_tubing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ends_+_of_+_tubing
*CAT: n
*SEM: twoRel[rel=ends_+_of_+_tubing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ends_+_of_+_tubing
*CAT: n
*SEM: twoRel[rel=ends_+_of_+_tubing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ends_+_of_+_tubing
*CAT: n
*SEM: orRel[rel=ends_+_of_+_tubing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment
*CAT: n
*SEM: unaryRel[rel=equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment
*CAT: n
*SEM: twoRel[rel=equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment
*CAT: n
*SEM: twoRel[rel=equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: equipment
*CAT: n
*SEM: orRel[rel=equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: failure_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: unaryRel[rel=failure_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: failure_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: twoRel[rel=failure_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: failure_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: twoRel[rel=failure_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: failure_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: orRel[rel=failure_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below
*CAT: n
*SEM: unaryRel[rel=figure_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below
*CAT: n
*SEM: twoRel[rel=figure_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below
*CAT: n
*SEM: twoRel[rel=figure_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below
*CAT: n
*SEM: orRel[rel=figure_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below_+_with
*CAT: n
*SEM: unaryRel[rel=figure_+_below_+_with]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below_+_with
*CAT: n
*SEM: twoRel[rel=figure_+_below_+_with]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below_+_with
*CAT: n
*SEM: twoRel[rel=figure_+_below_+_with]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: figure_+_below_+_with
*CAT: n
*SEM: orRel[rel=figure_+_below_+_with]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_extinguishing_+_circuit
*CAT: n
*SEM: unaryRel[rel=fire_+_extinguishing_+_circuit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_extinguishing_+_circuit
*CAT: n
*SEM: twoRel[rel=fire_+_extinguishing_+_circuit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_extinguishing_+_circuit
*CAT: n
*SEM: twoRel[rel=fire_+_extinguishing_+_circuit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_extinguishing_+_circuit
*CAT: n
*SEM: orRel[rel=fire_+_extinguishing_+_circuit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_extinguishing_+_system
*CAT: n
*SEM: unaryRel[rel=fire_+_extinguishing_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_extinguishing_+_system
*CAT: n
*SEM: twoRel[rel=fire_+_extinguishing_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_extinguishing_+_system
*CAT: n
*SEM: twoRel[rel=fire_+_extinguishing_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire_+_extinguishing_+_system
*CAT: n
*SEM: orRel[rel=fire_+_extinguishing_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire-sensing_+_element
*CAT: n
*SEM: unaryRel[rel=fire-sensing_+_element]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire-sensing_+_element
*CAT: n
*SEM: twoRel[rel=fire-sensing_+_element]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire-sensing_+_element
*CAT: n
*SEM: twoRel[rel=fire-sensing_+_element]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fire-sensing_+_element
*CAT: n
*SEM: orRel[rel=fire-sensing_+_element]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_clamp
*CAT: n
*SEM: unaryRel[rel=first_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_clamp
*CAT: n
*SEM: twoRel[rel=first_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_clamp
*CAT: n
*SEM: twoRel[rel=first_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: first_+_clamp
*CAT: n
*SEM: orRel[rel=first_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses_+_routings
*CAT: n
*SEM: unaryRel[rel=flexible_+_hoses_+_routings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses_+_routings
*CAT: n
*SEM: twoRel[rel=flexible_+_hoses_+_routings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses_+_routings
*CAT: n
*SEM: twoRel[rel=flexible_+_hoses_+_routings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: flexible_+_hoses_+_routings
*CAT: n
*SEM: orRel[rel=flexible_+_hoses_+_routings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_means_+_colon
*CAT: n
*SEM: unaryRel[rel=following_+_means_+_colon]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_means_+_colon
*CAT: n
*SEM: twoRel[rel=following_+_means_+_colon]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_means_+_colon
*CAT: n
*SEM: twoRel[rel=following_+_means_+_colon]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following_+_means_+_colon
*CAT: n
*SEM: orRel[rel=following_+_means_+_colon]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fqi_+_bundle
*CAT: n
*SEM: unaryRel[rel=fqi_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fqi_+_bundle
*CAT: n
*SEM: twoRel[rel=fqi_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fqi_+_bundle
*CAT: n
*SEM: twoRel[rel=fqi_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fqi_+_bundle
*CAT: n
*SEM: orRel[rel=fqi_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fqi-bundle
*CAT: n
*SEM: unaryRel[rel=fqi-bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fqi-bundle
*CAT: n
*SEM: twoRel[rel=fqi-bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fqi-bundle
*CAT: n
*SEM: twoRel[rel=fqi-bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fqi-bundle
*CAT: n
*SEM: orRel[rel=fqi-bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame_+_between_+_stringer_+_p5
*CAT: n
*SEM: unaryRel[rel=frame_+_between_+_stringer_+_p5]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame_+_between_+_stringer_+_p5
*CAT: n
*SEM: twoRel[rel=frame_+_between_+_stringer_+_p5]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame_+_between_+_stringer_+_p5
*CAT: n
*SEM: twoRel[rel=frame_+_between_+_stringer_+_p5]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: frame_+_between_+_stringer_+_p5
*CAT: n
*SEM: orRel[rel=frame_+_between_+_stringer_+_p5]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank
*CAT: n
*SEM: unaryRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank
*CAT: n
*SEM: twoRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank
*CAT: n
*SEM: twoRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tank
*CAT: n
*SEM: orRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tanks
*CAT: n
*SEM: unaryRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tanks
*CAT: n
*SEM: twoRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tanks
*CAT: n
*SEM: twoRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel_+_tanks
*CAT: n
*SEM: orRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel-tank
*CAT: n
*SEM: unaryRel[rel=fuel-tank]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel-tank
*CAT: n
*SEM: twoRel[rel=fuel-tank]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel-tank
*CAT: n
*SEM: twoRel[rel=fuel-tank]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: fuel-tank
*CAT: n
*SEM: orRel[rel=fuel-tank]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gap
*CAT: n
*SEM: unaryRel[rel=gap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gap
*CAT: n
*SEM: twoRel[rel=gap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gap
*CAT: n
*SEM: twoRel[rel=gap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: gap
*CAT: n
*SEM: orRel[rel=gap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_bend_+_radius
*CAT: n
*SEM: unaryRel[rel=harness_+_bend_+_radius]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_bend_+_radius
*CAT: n
*SEM: twoRel[rel=harness_+_bend_+_radius]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_bend_+_radius
*CAT: n
*SEM: twoRel[rel=harness_+_bend_+_radius]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_bend_+_radius
*CAT: n
*SEM: orRel[rel=harness_+_bend_+_radius]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_is_+_exceeding_+_80kg
*CAT: n
*SEM: unaryRel[rel=harness_+_is_+_exceeding_+_80kg]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_is_+_exceeding_+_80kg
*CAT: n
*SEM: twoRel[rel=harness_+_is_+_exceeding_+_80kg]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_is_+_exceeding_+_80kg
*CAT: n
*SEM: twoRel[rel=harness_+_is_+_exceeding_+_80kg]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: harness_+_is_+_exceeding_+_80kg
*CAT: n
*SEM: orRel[rel=harness_+_is_+_exceeding_+_80kg]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification
*CAT: n
*SEM: unaryRel[rel=identification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification
*CAT: n
*SEM: twoRel[rel=identification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification
*CAT: n
*SEM: twoRel[rel=identification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: identification
*CAT: n
*SEM: orRel[rel=identification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation
*CAT: n
*SEM: unaryRel[rel=installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation
*CAT: n
*SEM: twoRel[rel=installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation
*CAT: n
*SEM: twoRel[rel=installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation
*CAT: n
*SEM: orRel[rel=installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_of_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=installation_+_of_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_of_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=installation_+_of_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_of_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=installation_+_of_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_of_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=installation_+_of_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_or
*CAT: n
*SEM: unaryRel[rel=installation_+_or]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_or
*CAT: n
*SEM: twoRel[rel=installation_+_or]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_or
*CAT: n
*SEM: twoRel[rel=installation_+_or]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: installation_+_or
*CAT: n
*SEM: orRel[rel=installation_+_or]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation
*CAT: n
*SEM: unaryRel[rel=insulation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation
*CAT: n
*SEM: twoRel[rel=insulation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation
*CAT: n
*SEM: twoRel[rel=insulation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: insulation
*CAT: n
*SEM: orRel[rel=insulation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_of_+_drained_+_hole
*CAT: n
*SEM: unaryRel[rel=interface_+_of_+_drained_+_hole]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_of_+_drained_+_hole
*CAT: n
*SEM: twoRel[rel=interface_+_of_+_drained_+_hole]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_of_+_drained_+_hole
*CAT: n
*SEM: twoRel[rel=interface_+_of_+_drained_+_hole]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: interface_+_of_+_drained_+_hole
*CAT: n
*SEM: orRel[rel=interface_+_of_+_drained_+_hole]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label
*CAT: n
*SEM: unaryRel[rel=label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label
*CAT: n
*SEM: twoRel[rel=label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label
*CAT: n
*SEM: twoRel[rel=label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: label
*CAT: n
*SEM: orRel[rel=label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_connector
*CAT: n
*SEM: unaryRel[rel=level_+_of_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_connector
*CAT: n
*SEM: twoRel[rel=level_+_of_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_connector
*CAT: n
*SEM: twoRel[rel=level_+_of_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_connector
*CAT: n
*SEM: orRel[rel=level_+_of_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_diode_+__+_opensb_+_vd_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=level_+_of_+_virtual_+_diode_+__+_opensb_+_vd_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_diode_+__+_opensb_+_vd_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=level_+_of_+_virtual_+_diode_+__+_opensb_+_vd_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_diode_+__+_opensb_+_vd_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=level_+_of_+_virtual_+_diode_+__+_opensb_+_vd_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_diode_+__+_opensb_+_vd_+_closesb_+_
*CAT: n
*SEM: orRel[rel=level_+_of_+_virtual_+_diode_+__+_opensb_+_vd_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_diode_+_opensb_+_vd_+_closesb
*CAT: n
*SEM: unaryRel[rel=level_+_of_+_virtual_+_diode_+_opensb_+_vd_+_closesb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_diode_+_opensb_+_vd_+_closesb
*CAT: n
*SEM: twoRel[rel=level_+_of_+_virtual_+_diode_+_opensb_+_vd_+_closesb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_diode_+_opensb_+_vd_+_closesb
*CAT: n
*SEM: twoRel[rel=level_+_of_+_virtual_+_diode_+_opensb_+_vd_+_closesb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_diode_+_opensb_+_vd_+_closesb
*CAT: n
*SEM: orRel[rel=level_+_of_+_virtual_+_diode_+_opensb_+_vd_+_closesb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=level_+_of_+_virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=level_+_of_+_virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=level_+_of_+_virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_
*CAT: n
*SEM: orRel[rel=level_+_of_+_virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb
*CAT: n
*SEM: unaryRel[rel=level_+_of_+_virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb
*CAT: n
*SEM: twoRel[rel=level_+_of_+_virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb
*CAT: n
*SEM: twoRel[rel=level_+_of_+_virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb
*CAT: n
*SEM: orRel[rel=level_+_of_+_virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=level_+_of_+_virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=level_+_of_+_virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=level_+_of_+_virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: orRel[rel=level_+_of_+_virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb
*CAT: n
*SEM: unaryRel[rel=level_+_of_+_virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb
*CAT: n
*SEM: twoRel[rel=level_+_of_+_virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb
*CAT: n
*SEM: twoRel[rel=level_+_of_+_virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: level_+_of_+_virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb
*CAT: n
*SEM: orRel[rel=level_+_of_+_virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: live_+_side_+_of_+_power_+_supply
*CAT: n
*SEM: unaryRel[rel=live_+_side_+_of_+_power_+_supply]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: live_+_side_+_of_+_power_+_supply
*CAT: n
*SEM: twoRel[rel=live_+_side_+_of_+_power_+_supply]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: live_+_side_+_of_+_power_+_supply
*CAT: n
*SEM: twoRel[rel=live_+_side_+_of_+_power_+_supply]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: live_+_side_+_of_+_power_+_supply
*CAT: n
*SEM: orRel[rel=live_+_side_+_of_+_power_+_supply]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loose_+_connector_+__+_opensb_+_plug_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=loose_+_connector_+__+_opensb_+_plug_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loose_+_connector_+__+_opensb_+_plug_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=loose_+_connector_+__+_opensb_+_plug_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loose_+_connector_+__+_opensb_+_plug_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=loose_+_connector_+__+_opensb_+_plug_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loose_+_connector_+__+_opensb_+_plug_+_closesb_+_
*CAT: n
*SEM: orRel[rel=loose_+_connector_+__+_opensb_+_plug_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loose_+_connector_+_opensb_+_plug_+_closesb
*CAT: n
*SEM: unaryRel[rel=loose_+_connector_+_opensb_+_plug_+_closesb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loose_+_connector_+_opensb_+_plug_+_closesb
*CAT: n
*SEM: twoRel[rel=loose_+_connector_+_opensb_+_plug_+_closesb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loose_+_connector_+_opensb_+_plug_+_closesb
*CAT: n
*SEM: twoRel[rel=loose_+_connector_+_opensb_+_plug_+_closesb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: loose_+_connector_+_opensb_+_plug_+_closesb
*CAT: n
*SEM: orRel[rel=loose_+_connector_+_opensb_+_plug_+_closesb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: main_+_routings
*CAT: n
*SEM: unaryRel[rel=main_+_routings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: main_+_routings
*CAT: n
*SEM: twoRel[rel=main_+_routings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: main_+_routings
*CAT: n
*SEM: twoRel[rel=main_+_routings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: main_+_routings
*CAT: n
*SEM: orRel[rel=main_+_routings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_key_+_way_+_in_+_top_+_orientation
*CAT: n
*SEM: unaryRel[rel=master_+_key_+_way_+_in_+_top_+_orientation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_key_+_way_+_in_+_top_+_orientation
*CAT: n
*SEM: twoRel[rel=master_+_key_+_way_+_in_+_top_+_orientation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_key_+_way_+_in_+_top_+_orientation
*CAT: n
*SEM: twoRel[rel=master_+_key_+_way_+_in_+_top_+_orientation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: master_+_key_+_way_+_in_+_top_+_orientation
*CAT: n
*SEM: orRel[rel=master_+_key_+_way_+_in_+_top_+_orientation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius
*CAT: n
*SEM: unaryRel[rel=minimum_+_bend_+_radius]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius
*CAT: n
*SEM: twoRel[rel=minimum_+_bend_+_radius]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius
*CAT: n
*SEM: twoRel[rel=minimum_+_bend_+_radius]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_bend_+_radius
*CAT: n
*SEM: orRel[rel=minimum_+_bend_+_radius]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_of_+_bundle
*CAT: n
*SEM: unaryRel[rel=minimum_+_of_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_of_+_bundle
*CAT: n
*SEM: twoRel[rel=minimum_+_of_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_of_+_bundle
*CAT: n
*SEM: twoRel[rel=minimum_+_of_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_of_+_bundle
*CAT: n
*SEM: orRel[rel=minimum_+_of_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_backslash_+_maximum_+_bend_+_angle_+_opensb_+_s_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=minimum_+_backslash_+_maximum_+_bend_+_angle_+_opensb_+_s_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_backslash_+_maximum_+_bend_+_angle_+_opensb_+_s_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=minimum_+_backslash_+_maximum_+_bend_+_angle_+_opensb_+_s_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_backslash_+_maximum_+_bend_+_angle_+_opensb_+_s_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=minimum_+_backslash_+_maximum_+_bend_+_angle_+_opensb_+_s_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: minimum_+_backslash_+_maximum_+_bend_+_angle_+_opensb_+_s_+_closesb_+_
*CAT: n
*SEM: orRel[rel=minimum_+_backslash_+_maximum_+_bend_+_angle_+_opensb_+_s_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nozzle_+_level
*CAT: n
*SEM: unaryRel[rel=nozzle_+_level]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nozzle_+_level
*CAT: n
*SEM: twoRel[rel=nozzle_+_level]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nozzle_+_level
*CAT: n
*SEM: twoRel[rel=nozzle_+_level]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nozzle_+_level
*CAT: n
*SEM: orRel[rel=nozzle_+_level]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve
*CAT: n
*SEM: unaryRel[rel=nsa_+_937201_+_identification_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve
*CAT: n
*SEM: twoRel[rel=nsa_+_937201_+_identification_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: nsa_+_937201_+_identification_+_sleeve
*CAT: n
*SEM: orRel[rel=nsa_+_937201_+_identification_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: operator
*CAT: n
*SEM: unaryRel[rel=operator]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: operator
*CAT: n
*SEM: twoRel[rel=operator]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: operator
*CAT: n
*SEM: twoRel[rel=operator]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: operator
*CAT: n
*SEM: orRel[rel=operator]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: outer_+_surface_+_of_+_duct
*CAT: n
*SEM: unaryRel[rel=outer_+_surface_+_of_+_duct]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: outer_+_surface_+_of_+_duct
*CAT: n
*SEM: twoRel[rel=outer_+_surface_+_of_+_duct]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: outer_+_surface_+_of_+_duct
*CAT: n
*SEM: twoRel[rel=outer_+_surface_+_of_+_duct]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: outer_+_surface_+_of_+_duct
*CAT: n
*SEM: orRel[rel=outer_+_surface_+_of_+_duct]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_above
*CAT: n
*SEM: unaryRel[rel=picture_+_above]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_above
*CAT: n
*SEM: twoRel[rel=picture_+_above]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_above
*CAT: n
*SEM: twoRel[rel=picture_+_above]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_above
*CAT: n
*SEM: orRel[rel=picture_+_above]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_below
*CAT: n
*SEM: unaryRel[rel=picture_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_below
*CAT: n
*SEM: twoRel[rel=picture_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_below
*CAT: n
*SEM: twoRel[rel=picture_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: picture_+_below
*CAT: n
*SEM: orRel[rel=picture_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes
*CAT: n
*SEM: unaryRel[rel=pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes
*CAT: n
*SEM: twoRel[rel=pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes
*CAT: n
*SEM: twoRel[rel=pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pipes
*CAT: n
*SEM: orRel[rel=pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plug
*CAT: n
*SEM: unaryRel[rel=plug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plug
*CAT: n
*SEM: twoRel[rel=plug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plug
*CAT: n
*SEM: twoRel[rel=plug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: plug
*CAT: n
*SEM: orRel[rel=plug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_seal
*CAT: n
*SEM: unaryRel[rel=pressure_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_seal
*CAT: n
*SEM: twoRel[rel=pressure_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_seal
*CAT: n
*SEM: twoRel[rel=pressure_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pressure_+_seal
*CAT: n
*SEM: orRel[rel=pressure_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_zone
*CAT: n
*SEM: unaryRel[rel=pylon_+_zone]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_zone
*CAT: n
*SEM: twoRel[rel=pylon_+_zone]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_zone
*CAT: n
*SEM: twoRel[rel=pylon_+_zone]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: pylon_+_zone
*CAT: n
*SEM: orRel[rel=pylon_+_zone]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway
*CAT: n
*SEM: unaryRel[rel=raceway]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway
*CAT: n
*SEM: twoRel[rel=raceway]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway
*CAT: n
*SEM: twoRel[rel=raceway]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: raceway
*CAT: n
*SEM: orRel[rel=raceway]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routes
*CAT: n
*SEM: unaryRel[rel=routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routes
*CAT: n
*SEM: twoRel[rel=routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routes
*CAT: n
*SEM: twoRel[rel=routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routes
*CAT: n
*SEM: orRel[rel=routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings
*CAT: n
*SEM: unaryRel[rel=routings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings
*CAT: n
*SEM: twoRel[rel=routings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings
*CAT: n
*SEM: twoRel[rel=routings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings
*CAT: n
*SEM: orRel[rel=routings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_of_+_single_+_pipes
*CAT: n
*SEM: unaryRel[rel=routings_+_of_+_single_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_of_+_single_+_pipes
*CAT: n
*SEM: twoRel[rel=routings_+_of_+_single_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_of_+_single_+_pipes
*CAT: n
*SEM: twoRel[rel=routings_+_of_+_single_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: routings_+_of_+_single_+_pipes
*CAT: n
*SEM: orRel[rel=routings_+_of_+_single_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamp
*CAT: n
*SEM: unaryRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: saddle_+_clamp
*CAT: n
*SEM: orRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_installation_+_philosophy_+_than_+_normal_+_installation
*CAT: n
*SEM: unaryRel[rel=same_+_installation_+_philosophy_+_than_+_normal_+_installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_installation_+_philosophy_+_than_+_normal_+_installation
*CAT: n
*SEM: twoRel[rel=same_+_installation_+_philosophy_+_than_+_normal_+_installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_installation_+_philosophy_+_than_+_normal_+_installation
*CAT: n
*SEM: twoRel[rel=same_+_installation_+_philosophy_+_than_+_normal_+_installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_installation_+_philosophy_+_than_+_normal_+_installation
*CAT: n
*SEM: orRel[rel=same_+_installation_+_philosophy_+_than_+_normal_+_installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_profile
*CAT: n
*SEM: unaryRel[rel=same_+_profile]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_profile
*CAT: n
*SEM: twoRel[rel=same_+_profile]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_profile
*CAT: n
*SEM: twoRel[rel=same_+_profile]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_profile
*CAT: n
*SEM: orRel[rel=same_+_profile]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_standard_+_equipment
*CAT: n
*SEM: unaryRel[rel=same_+_standard_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_standard_+_equipment
*CAT: n
*SEM: twoRel[rel=same_+_standard_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_standard_+_equipment
*CAT: n
*SEM: twoRel[rel=same_+_standard_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_standard_+_equipment
*CAT: n
*SEM: orRel[rel=same_+_standard_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_way
*CAT: n
*SEM: unaryRel[rel=same_+_way]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_way
*CAT: n
*SEM: twoRel[rel=same_+_way]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_way
*CAT: n
*SEM: twoRel[rel=same_+_way]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: same_+_way
*CAT: n
*SEM: orRel[rel=same_+_way]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense-line
*CAT: n
*SEM: unaryRel[rel=sense-line]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense-line
*CAT: n
*SEM: twoRel[rel=sense-line]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense-line
*CAT: n
*SEM: twoRel[rel=sense-line]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sense-line
*CAT: n
*SEM: orRel[rel=sense-line]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sio2_+_cable
*CAT: n
*SEM: unaryRel[rel=sio2_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sio2_+_cable
*CAT: n
*SEM: twoRel[rel=sio2_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sio2_+_cable
*CAT: n
*SEM: twoRel[rel=sio2_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sio2_+_cable
*CAT: n
*SEM: orRel[rel=sio2_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size_+_of_+_bracket
*CAT: n
*SEM: unaryRel[rel=size_+_of_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size_+_of_+_bracket
*CAT: n
*SEM: twoRel[rel=size_+_of_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size_+_of_+_bracket
*CAT: n
*SEM: twoRel[rel=size_+_of_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: size_+_of_+_bracket
*CAT: n
*SEM: orRel[rel=size_+_of_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sizes
*CAT: n
*SEM: unaryRel[rel=sizes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sizes
*CAT: n
*SEM: twoRel[rel=sizes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sizes
*CAT: n
*SEM: twoRel[rel=sizes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sizes
*CAT: n
*SEM: orRel[rel=sizes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch_+_below
*CAT: n
*SEM: unaryRel[rel=sketch_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch_+_below
*CAT: n
*SEM: twoRel[rel=sketch_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch_+_below
*CAT: n
*SEM: twoRel[rel=sketch_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch_+_below
*CAT: n
*SEM: orRel[rel=sketch_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch_+_below_+__+_opensb_+_e.g._+_nsa5516_+_or
*CAT: n
*SEM: unaryRel[rel=sketch_+_below_+__+_opensb_+_e.g._+_nsa5516_+_or]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch_+_below_+__+_opensb_+_e.g._+_nsa5516_+_or
*CAT: n
*SEM: twoRel[rel=sketch_+_below_+__+_opensb_+_e.g._+_nsa5516_+_or]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch_+_below_+__+_opensb_+_e.g._+_nsa5516_+_or
*CAT: n
*SEM: twoRel[rel=sketch_+_below_+__+_opensb_+_e.g._+_nsa5516_+_or]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch_+_below_+__+_opensb_+_e.g._+_nsa5516_+_or
*CAT: n
*SEM: orRel[rel=sketch_+_below_+__+_opensb_+_e.g._+_nsa5516_+_or]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch_+_below_+_opensb_+_e.g._+_nsa5516_+_or
*CAT: n
*SEM: unaryRel[rel=sketch_+_below_+_opensb_+_e.g._+_nsa5516_+_or]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch_+_below_+_opensb_+_e.g._+_nsa5516_+_or
*CAT: n
*SEM: twoRel[rel=sketch_+_below_+_opensb_+_e.g._+_nsa5516_+_or]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch_+_below_+_opensb_+_e.g._+_nsa5516_+_or
*CAT: n
*SEM: twoRel[rel=sketch_+_below_+_opensb_+_e.g._+_nsa5516_+_or]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sketch_+_below_+_opensb_+_e.g._+_nsa5516_+_or
*CAT: n
*SEM: orRel[rel=sketch_+_below_+_opensb_+_e.g._+_nsa5516_+_or]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve
*CAT: n
*SEM: unaryRel[rel=sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve
*CAT: n
*SEM: twoRel[rel=sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve
*CAT: n
*SEM: twoRel[rel=sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: sleeve
*CAT: n
*SEM: orRel[rel=sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contact_+_in_+_connector
*CAT: n
*SEM: unaryRel[rel=socket_+_contact_+_in_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contact_+_in_+_connector
*CAT: n
*SEM: twoRel[rel=socket_+_contact_+_in_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contact_+_in_+_connector
*CAT: n
*SEM: twoRel[rel=socket_+_contact_+_in_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: socket_+_contact_+_in_+_connector
*CAT: n
*SEM: orRel[rel=socket_+_contact_+_in_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure
*CAT: n
*SEM: unaryRel[rel=structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure
*CAT: n
*SEM: twoRel[rel=structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure
*CAT: n
*SEM: twoRel[rel=structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: structure
*CAT: n
*SEM: orRel[rel=structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stud_+_of_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=stud_+_of_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stud_+_of_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=stud_+_of_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stud_+_of_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=stud_+_of_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: stud_+_of_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: orRel[rel=stud_+_of_+_virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_of_+_long_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=support_+_of_+_long_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_of_+_long_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=support_+_of_+_long_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_of_+_long_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=support_+_of_+_long_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_of_+_long_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=support_+_of_+_long_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_tubes_+_straight_+_parts
*CAT: n
*SEM: unaryRel[rel=support_+_tubes_+_straight_+_parts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_tubes_+_straight_+_parts
*CAT: n
*SEM: twoRel[rel=support_+_tubes_+_straight_+_parts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_tubes_+_straight_+_parts
*CAT: n
*SEM: twoRel[rel=support_+_tubes_+_straight_+_parts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: support_+_tubes_+_straight_+_parts
*CAT: n
*SEM: orRel[rel=support_+_tubes_+_straight_+_parts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: table_+_below
*CAT: n
*SEM: unaryRel[rel=table_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: table_+_below
*CAT: n
*SEM: twoRel[rel=table_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: table_+_below
*CAT: n
*SEM: twoRel[rel=table_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: table_+_below
*CAT: n
*SEM: orRel[rel=table_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tank_+_area
*CAT: n
*SEM: unaryRel[rel=tank_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tank_+_area
*CAT: n
*SEM: twoRel[rel=tank_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tank_+_area
*CAT: n
*SEM: twoRel[rel=tank_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tank_+_area
*CAT: n
*SEM: orRel[rel=tank_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tube_+_without_+_having
*CAT: n
*SEM: unaryRel[rel=tube_+_without_+_having]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tube_+_without_+_having
*CAT: n
*SEM: twoRel[rel=tube_+_without_+_having]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tube_+_without_+_having
*CAT: n
*SEM: twoRel[rel=tube_+_without_+_having]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tube_+_without_+_having
*CAT: n
*SEM: orRel[rel=tube_+_without_+_having]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_number
*CAT: n
*SEM: unaryRel[rel=vu_+_number]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_number
*CAT: n
*SEM: twoRel[rel=vu_+_number]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_number
*CAT: n
*SEM: twoRel[rel=vu_+_number]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_number
*CAT: n
*SEM: orRel[rel=vu_+_number]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire_+_along_+_entire_+_length
*CAT: n
*SEM: unaryRel[rel=wire_+_along_+_entire_+_length]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire_+_along_+_entire_+_length
*CAT: n
*SEM: twoRel[rel=wire_+_along_+_entire_+_length]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire_+_along_+_entire_+_length
*CAT: n
*SEM: twoRel[rel=wire_+_along_+_entire_+_length]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire_+_along_+_entire_+_length
*CAT: n
*SEM: orRel[rel=wire_+_along_+_entire_+_length]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: their_+_own_+_clip
*CAT: n
*SEM: unaryRel[rel=their_+_own_+_clip]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: their_+_own_+_clip
*CAT: n
*SEM: twoRel[rel=their_+_own_+_clip]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: their_+_own_+_clip
*CAT: n
*SEM: twoRel[rel=their_+_own_+_clip]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: their_+_own_+_clip
*CAT: n
*SEM: orRel[rel=their_+_own_+_clip]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermal_+_variation
*CAT: n
*SEM: unaryRel[rel=thermal_+_variation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermal_+_variation
*CAT: n
*SEM: twoRel[rel=thermal_+_variation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermal_+_variation
*CAT: n
*SEM: twoRel[rel=thermal_+_variation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermal_+_variation
*CAT: n
*SEM: orRel[rel=thermal_+_variation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermally_+_isolated_+_flanged_+_bulkhead_+_unions
*CAT: n
*SEM: unaryRel[rel=thermally_+_isolated_+_flanged_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermally_+_isolated_+_flanged_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=thermally_+_isolated_+_flanged_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermally_+_isolated_+_flanged_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=thermally_+_isolated_+_flanged_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermally_+_isolated_+_flanged_+_bulkhead_+_unions
*CAT: n
*SEM: orRel[rel=thermally_+_isolated_+_flanged_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermally_+_regulated_+_areas_+_of_+_the_+_fuselage
*CAT: n
*SEM: unaryRel[rel=thermally_+_regulated_+_areas_+_of_+_the_+_fuselage]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermally_+_regulated_+_areas_+_of_+_the_+_fuselage
*CAT: n
*SEM: twoRel[rel=thermally_+_regulated_+_areas_+_of_+_the_+_fuselage]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermally_+_regulated_+_areas_+_of_+_the_+_fuselage
*CAT: n
*SEM: twoRel[rel=thermally_+_regulated_+_areas_+_of_+_the_+_fuselage]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: thermally_+_regulated_+_areas_+_of_+_the_+_fuselage
*CAT: n
*SEM: orRel[rel=thermally_+_regulated_+_areas_+_of_+_the_+_fuselage]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: they
*CAT: n
*SEM: unaryRel[rel=they]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: they
*CAT: n
*SEM: twoRel[rel=they]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: they
*CAT: n
*SEM: twoRel[rel=they]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: they
*CAT: n
*SEM: orRel[rel=they]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_table
*CAT: n
*SEM: unaryRel[rel=this_+_table]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_table
*CAT: n
*SEM: twoRel[rel=this_+_table]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_table
*CAT: n
*SEM: twoRel[rel=this_+_table]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: this_+_table
*CAT: n
*SEM: orRel[rel=this_+_table]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: three_+_-_+_pipes_+_tee-unions
*CAT: n
*SEM: unaryRel[rel=three_+_-_+_pipes_+_tee-unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: three_+_-_+_pipes_+_tee-unions
*CAT: n
*SEM: twoRel[rel=three_+_-_+_pipes_+_tee-unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: three_+_-_+_pipes_+_tee-unions
*CAT: n
*SEM: twoRel[rel=three_+_-_+_pipes_+_tee-unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: three_+_-_+_pipes_+_tee-unions
*CAT: n
*SEM: orRel[rel=three_+_-_+_pipes_+_tee-unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tightening
*CAT: n
*SEM: unaryRel[rel=tightening]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tightening
*CAT: n
*SEM: twoRel[rel=tightening]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tightening
*CAT: n
*SEM: twoRel[rel=tightening]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tightening
*CAT: n
*SEM: orRel[rel=tightening]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: titanium_+_alloy_+_fittings
*CAT: n
*SEM: unaryRel[rel=titanium_+_alloy_+_fittings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: titanium_+_alloy_+_fittings
*CAT: n
*SEM: twoRel[rel=titanium_+_alloy_+_fittings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: titanium_+_alloy_+_fittings
*CAT: n
*SEM: twoRel[rel=titanium_+_alloy_+_fittings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: titanium_+_alloy_+_fittings
*CAT: n
*SEM: orRel[rel=titanium_+_alloy_+_fittings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: unaryRel[rel=top_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: twoRel[rel=top_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: twoRel[rel=top_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: top_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: orRel[rel=top_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion
*CAT: n
*SEM: unaryRel[rel=torsion]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion
*CAT: n
*SEM: twoRel[rel=torsion]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion
*CAT: n
*SEM: twoRel[rel=torsion]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion
*CAT: n
*SEM: orRel[rel=torsion]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion_+_the_+_bearings_+_of_+_the_+_ramps_+_system
*CAT: n
*SEM: unaryRel[rel=torsion_+_the_+_bearings_+_of_+_the_+_ramps_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion_+_the_+_bearings_+_of_+_the_+_ramps_+_system
*CAT: n
*SEM: twoRel[rel=torsion_+_the_+_bearings_+_of_+_the_+_ramps_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion_+_the_+_bearings_+_of_+_the_+_ramps_+_system
*CAT: n
*SEM: twoRel[rel=torsion_+_the_+_bearings_+_of_+_the_+_ramps_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: torsion_+_the_+_bearings_+_of_+_the_+_ramps_+_system
*CAT: n
*SEM: orRel[rel=torsion_+_the_+_bearings_+_of_+_the_+_ramps_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: traverse
*CAT: n
*SEM: unaryRel[rel=traverse]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: traverse
*CAT: n
*SEM: twoRel[rel=traverse]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: traverse
*CAT: n
*SEM: twoRel[rel=traverse]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: traverse
*CAT: n
*SEM: orRel[rel=traverse]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tubing
*CAT: n
*SEM: unaryRel[rel=tubing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tubing
*CAT: n
*SEM: twoRel[rel=tubing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tubing
*CAT: n
*SEM: twoRel[rel=tubing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tubing
*CAT: n
*SEM: orRel[rel=tubing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_3_+_core_+_wire
*CAT: n
*SEM: unaryRel[rel=twisted_+_3_+_core_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_3_+_core_+_wire
*CAT: n
*SEM: twoRel[rel=twisted_+_3_+_core_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_3_+_core_+_wire
*CAT: n
*SEM: twoRel[rel=twisted_+_3_+_core_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_3_+_core_+_wire
*CAT: n
*SEM: orRel[rel=twisted_+_3_+_core_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_cable
*CAT: n
*SEM: unaryRel[rel=twisted_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_cable
*CAT: n
*SEM: twoRel[rel=twisted_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_cable
*CAT: n
*SEM: twoRel[rel=twisted_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_cable
*CAT: n
*SEM: orRel[rel=twisted_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_cable_+_at_+_maximum_+_d_+_smallerthan_+__+_equalto_+_150mm_+_from_+_cable_+_end
*CAT: n
*SEM: unaryRel[rel=twisted_+_cable_+_at_+_maximum_+_d_+_smallerthan_+__+_equalto_+_150mm_+_from_+_cable_+_end]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_cable_+_at_+_maximum_+_d_+_smallerthan_+__+_equalto_+_150mm_+_from_+_cable_+_end
*CAT: n
*SEM: twoRel[rel=twisted_+_cable_+_at_+_maximum_+_d_+_smallerthan_+__+_equalto_+_150mm_+_from_+_cable_+_end]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_cable_+_at_+_maximum_+_d_+_smallerthan_+__+_equalto_+_150mm_+_from_+_cable_+_end
*CAT: n
*SEM: twoRel[rel=twisted_+_cable_+_at_+_maximum_+_d_+_smallerthan_+__+_equalto_+_150mm_+_from_+_cable_+_end]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_cable_+_at_+_maximum_+_d_+_smallerthan_+__+_equalto_+_150mm_+_from_+_cable_+_end
*CAT: n
*SEM: orRel[rel=twisted_+_cable_+_at_+_maximum_+_d_+_smallerthan_+__+_equalto_+_150mm_+_from_+_cable_+_end]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_cable_+_at_+_maximum_+_d_+_smallerthan_+_equalto_+_150mm_+_from_+_cable_+_end
*CAT: n
*SEM: unaryRel[rel=twisted_+_cable_+_at_+_maximum_+_d_+_smallerthan_+_equalto_+_150mm_+_from_+_cable_+_end]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_cable_+_at_+_maximum_+_d_+_smallerthan_+_equalto_+_150mm_+_from_+_cable_+_end
*CAT: n
*SEM: twoRel[rel=twisted_+_cable_+_at_+_maximum_+_d_+_smallerthan_+_equalto_+_150mm_+_from_+_cable_+_end]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_cable_+_at_+_maximum_+_d_+_smallerthan_+_equalto_+_150mm_+_from_+_cable_+_end
*CAT: n
*SEM: twoRel[rel=twisted_+_cable_+_at_+_maximum_+_d_+_smallerthan_+_equalto_+_150mm_+_from_+_cable_+_end]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: twisted_+_cable_+_at_+_maximum_+_d_+_smallerthan_+_equalto_+_150mm_+_from_+_cable_+_end
*CAT: n
*SEM: orRel[rel=twisted_+_cable_+_at_+_maximum_+_d_+_smallerthan_+_equalto_+_150mm_+_from_+_cable_+_end]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_abs0916_+_shrink_+_sleeve
*CAT: n
*SEM: unaryRel[rel=two_+_abs0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_abs0916_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=two_+_abs0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_abs0916_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=two_+_abs0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_abs0916_+_shrink_+_sleeve
*CAT: n
*SEM: orRel[rel=two_+_abs0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_adjajent_+_clamp
*CAT: n
*SEM: unaryRel[rel=two_+_adjajent_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_adjajent_+_clamp
*CAT: n
*SEM: twoRel[rel=two_+_adjajent_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_adjajent_+_clamp
*CAT: n
*SEM: twoRel[rel=two_+_adjajent_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_adjajent_+_clamp
*CAT: n
*SEM: orRel[rel=two_+_adjajent_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_aluminium_+_pipes_+_unions_+_by_+_straight_+_unions
*CAT: n
*SEM: unaryRel[rel=two_+_aluminium_+_pipes_+_unions_+_by_+_straight_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_aluminium_+_pipes_+_unions_+_by_+_straight_+_unions
*CAT: n
*SEM: twoRel[rel=two_+_aluminium_+_pipes_+_unions_+_by_+_straight_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_aluminium_+_pipes_+_unions_+_by_+_straight_+_unions
*CAT: n
*SEM: twoRel[rel=two_+_aluminium_+_pipes_+_unions_+_by_+_straight_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_aluminium_+_pipes_+_unions_+_by_+_straight_+_unions
*CAT: n
*SEM: orRel[rel=two_+_aluminium_+_pipes_+_unions_+_by_+_straight_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_attachment_+_device
*CAT: n
*SEM: unaryRel[rel=two_+_attachment_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_attachment_+_device
*CAT: n
*SEM: twoRel[rel=two_+_attachment_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_attachment_+_device
*CAT: n
*SEM: twoRel[rel=two_+_attachment_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_attachment_+_device
*CAT: n
*SEM: orRel[rel=two_+_attachment_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_bundle
*CAT: n
*SEM: unaryRel[rel=two_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_bundle
*CAT: n
*SEM: twoRel[rel=two_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_bundle
*CAT: n
*SEM: twoRel[rel=two_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_bundle
*CAT: n
*SEM: orRel[rel=two_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_clamp_+_per_+_side_+_at_+_section_+_interfaces
*CAT: n
*SEM: unaryRel[rel=two_+_clamp_+_per_+_side_+_at_+_section_+_interfaces]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_clamp_+_per_+_side_+_at_+_section_+_interfaces
*CAT: n
*SEM: twoRel[rel=two_+_clamp_+_per_+_side_+_at_+_section_+_interfaces]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_clamp_+_per_+_side_+_at_+_section_+_interfaces
*CAT: n
*SEM: twoRel[rel=two_+_clamp_+_per_+_side_+_at_+_section_+_interfaces]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_clamp_+_per_+_side_+_at_+_section_+_interfaces
*CAT: n
*SEM: orRel[rel=two_+_clamp_+_per_+_side_+_at_+_section_+_interfaces]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_connections_+_of_+_a_+_tee_+_-_+_unions
*CAT: n
*SEM: unaryRel[rel=two_+_connections_+_of_+_a_+_tee_+_-_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_connections_+_of_+_a_+_tee_+_-_+_unions
*CAT: n
*SEM: twoRel[rel=two_+_connections_+_of_+_a_+_tee_+_-_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_connections_+_of_+_a_+_tee_+_-_+_unions
*CAT: n
*SEM: twoRel[rel=two_+_connections_+_of_+_a_+_tee_+_-_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_connections_+_of_+_a_+_tee_+_-_+_unions
*CAT: n
*SEM: orRel[rel=two_+_connections_+_of_+_a_+_tee_+_-_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_derivation
*CAT: n
*SEM: unaryRel[rel=two_+_derivation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_derivation
*CAT: n
*SEM: twoRel[rel=two_+_derivation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_derivation
*CAT: n
*SEM: twoRel[rel=two_+_derivation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_derivation
*CAT: n
*SEM: orRel[rel=two_+_derivation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_diametrical_+_opposed_+_screw_+_in_+_pressurized_+_area
*CAT: n
*SEM: unaryRel[rel=two_+_diametrical_+_opposed_+_screw_+_in_+_pressurized_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_diametrical_+_opposed_+_screw_+_in_+_pressurized_+_area
*CAT: n
*SEM: twoRel[rel=two_+_diametrical_+_opposed_+_screw_+_in_+_pressurized_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_diametrical_+_opposed_+_screw_+_in_+_pressurized_+_area
*CAT: n
*SEM: twoRel[rel=two_+_diametrical_+_opposed_+_screw_+_in_+_pressurized_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_diametrical_+_opposed_+_screw_+_in_+_pressurized_+_area
*CAT: n
*SEM: orRel[rel=two_+_diametrical_+_opposed_+_screw_+_in_+_pressurized_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_elbow_+_unions
*CAT: n
*SEM: unaryRel[rel=two_+_elbow_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_elbow_+_unions
*CAT: n
*SEM: twoRel[rel=two_+_elbow_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_elbow_+_unions
*CAT: n
*SEM: twoRel[rel=two_+_elbow_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_elbow_+_unions
*CAT: n
*SEM: orRel[rel=two_+_elbow_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_layer
*CAT: n
*SEM: unaryRel[rel=two_+_layer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_layer
*CAT: n
*SEM: twoRel[rel=two_+_layer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_layer
*CAT: n
*SEM: twoRel[rel=two_+_layer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_layer
*CAT: n
*SEM: orRel[rel=two_+_layer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_level_+_of_+_insulation
*CAT: n
*SEM: unaryRel[rel=two_+_level_+_of_+_insulation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_level_+_of_+_insulation
*CAT: n
*SEM: twoRel[rel=two_+_level_+_of_+_insulation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_level_+_of_+_insulation
*CAT: n
*SEM: twoRel[rel=two_+_level_+_of_+_insulation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_level_+_of_+_insulation
*CAT: n
*SEM: orRel[rel=two_+_level_+_of_+_insulation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_nsa937493_+_insulating_+_sleeve
*CAT: n
*SEM: unaryRel[rel=two_+_nsa937493_+_insulating_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_nsa937493_+_insulating_+_sleeve
*CAT: n
*SEM: twoRel[rel=two_+_nsa937493_+_insulating_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_nsa937493_+_insulating_+_sleeve
*CAT: n
*SEM: twoRel[rel=two_+_nsa937493_+_insulating_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_nsa937493_+_insulating_+_sleeve
*CAT: n
*SEM: orRel[rel=two_+_nsa937493_+_insulating_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_p-clamp_+_in_+_vibration_+_area
*CAT: n
*SEM: unaryRel[rel=two_+_p-clamp_+_in_+_vibration_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_p-clamp_+_in_+_vibration_+_area
*CAT: n
*SEM: twoRel[rel=two_+_p-clamp_+_in_+_vibration_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_p-clamp_+_in_+_vibration_+_area
*CAT: n
*SEM: twoRel[rel=two_+_p-clamp_+_in_+_vibration_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_p-clamp_+_in_+_vibration_+_area
*CAT: n
*SEM: orRel[rel=two_+_p-clamp_+_in_+_vibration_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_titanium_+_pipes_+_unions_+_by_+_straight_+_unions
*CAT: n
*SEM: unaryRel[rel=two_+_titanium_+_pipes_+_unions_+_by_+_straight_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_titanium_+_pipes_+_unions_+_by_+_straight_+_unions
*CAT: n
*SEM: twoRel[rel=two_+_titanium_+_pipes_+_unions_+_by_+_straight_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_titanium_+_pipes_+_unions_+_by_+_straight_+_unions
*CAT: n
*SEM: twoRel[rel=two_+_titanium_+_pipes_+_unions_+_by_+_straight_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_titanium_+_pipes_+_unions_+_by_+_straight_+_unions
*CAT: n
*SEM: orRel[rel=two_+_titanium_+_pipes_+_unions_+_by_+_straight_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_wire
*CAT: n
*SEM: unaryRel[rel=two_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_wire
*CAT: n
*SEM: twoRel[rel=two_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_wire
*CAT: n
*SEM: twoRel[rel=two_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two_+_wire
*CAT: n
*SEM: orRel[rel=two_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two-elbow_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=two-elbow_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two-elbow_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=two-elbow_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two-elbow_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=two-elbow_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: two-elbow_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=two-elbow_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tying_+_bundles
*CAT: n
*SEM: unaryRel[rel=tying_+_bundles]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tying_+_bundles
*CAT: n
*SEM: twoRel[rel=tying_+_bundles]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tying_+_bundles
*CAT: n
*SEM: twoRel[rel=tying_+_bundles]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: tying_+_bundles
*CAT: n
*SEM: orRel[rel=tying_+_bundles]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: u
*CAT: n
*SEM: unaryRel[rel=u]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: u
*CAT: n
*SEM: twoRel[rel=u]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: u
*CAT: n
*SEM: twoRel[rel=u]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: u
*CAT: n
*SEM: orRel[rel=u]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: umbrella
*CAT: n
*SEM: unaryRel[rel=umbrella]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: umbrella
*CAT: n
*SEM: twoRel[rel=umbrella]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: umbrella
*CAT: n
*SEM: twoRel[rel=umbrella]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: umbrella
*CAT: n
*SEM: orRel[rel=umbrella]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: un_+_series_+_thread
*CAT: n
*SEM: unaryRel[rel=un_+_series_+_thread]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: un_+_series_+_thread
*CAT: n
*SEM: twoRel[rel=un_+_series_+_thread]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: un_+_series_+_thread
*CAT: n
*SEM: twoRel[rel=un_+_series_+_thread]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: un_+_series_+_thread
*CAT: n
*SEM: orRel[rel=un_+_series_+_thread]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: un_+_series_+_thread_+_type
*CAT: n
*SEM: unaryRel[rel=un_+_series_+_thread_+_type]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: un_+_series_+_thread_+_type
*CAT: n
*SEM: twoRel[rel=un_+_series_+_thread_+_type]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: un_+_series_+_thread_+_type
*CAT: n
*SEM: twoRel[rel=un_+_series_+_thread_+_type]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: un_+_series_+_thread_+_type
*CAT: n
*SEM: orRel[rel=un_+_series_+_thread_+_type]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unblanked_+_ventilation_+_holes
*CAT: n
*SEM: unaryRel[rel=unblanked_+_ventilation_+_holes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unblanked_+_ventilation_+_holes
*CAT: n
*SEM: twoRel[rel=unblanked_+_ventilation_+_holes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unblanked_+_ventilation_+_holes
*CAT: n
*SEM: twoRel[rel=unblanked_+_ventilation_+_holes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unblanked_+_ventilation_+_holes
*CAT: n
*SEM: orRel[rel=unblanked_+_ventilation_+_holes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: undle
*CAT: n
*SEM: unaryRel[rel=undle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: undle
*CAT: n
*SEM: twoRel[rel=undle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: undle
*CAT: n
*SEM: twoRel[rel=undle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: undle
*CAT: n
*SEM: orRel[rel=undle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unions
*CAT: n
*SEM: unaryRel[rel=unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unions
*CAT: n
*SEM: twoRel[rel=unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unions
*CAT: n
*SEM: twoRel[rel=unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unions
*CAT: n
*SEM: orRel[rel=unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurezied_+_areas
*CAT: n
*SEM: unaryRel[rel=unpressurezied_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurezied_+_areas
*CAT: n
*SEM: twoRel[rel=unpressurezied_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurezied_+_areas
*CAT: n
*SEM: twoRel[rel=unpressurezied_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurezied_+_areas
*CAT: n
*SEM: orRel[rel=unpressurezied_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurized_+_area
*CAT: n
*SEM: unaryRel[rel=unpressurized_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurized_+_area
*CAT: n
*SEM: twoRel[rel=unpressurized_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurized_+_area
*CAT: n
*SEM: twoRel[rel=unpressurized_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unpressurized_+_area
*CAT: n
*SEM: orRel[rel=unpressurized_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_bundle
*CAT: n
*SEM: unaryRel[rel=unprotected_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_bundle
*CAT: n
*SEM: twoRel[rel=unprotected_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_bundle
*CAT: n
*SEM: twoRel[rel=unprotected_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_bundle
*CAT: n
*SEM: orRel[rel=unprotected_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_modification_+_kid
*CAT: n
*SEM: unaryRel[rel=unprotected_+_modification_+_kid]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_modification_+_kid
*CAT: n
*SEM: twoRel[rel=unprotected_+_modification_+_kid]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_modification_+_kid
*CAT: n
*SEM: twoRel[rel=unprotected_+_modification_+_kid]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_modification_+_kid
*CAT: n
*SEM: orRel[rel=unprotected_+_modification_+_kid]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_single_+_optical_+_cable
*CAT: n
*SEM: unaryRel[rel=unprotected_+_single_+_optical_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_single_+_optical_+_cable
*CAT: n
*SEM: twoRel[rel=unprotected_+_single_+_optical_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_single_+_optical_+_cable
*CAT: n
*SEM: twoRel[rel=unprotected_+_single_+_optical_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unprotected_+_single_+_optical_+_cable
*CAT: n
*SEM: orRel[rel=unprotected_+_single_+_optical_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unsued_+_bases_+_of_+_relay
*CAT: n
*SEM: unaryRel[rel=unsued_+_bases_+_of_+_relay]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unsued_+_bases_+_of_+_relay
*CAT: n
*SEM: twoRel[rel=unsued_+_bases_+_of_+_relay]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unsued_+_bases_+_of_+_relay
*CAT: n
*SEM: twoRel[rel=unsued_+_bases_+_of_+_relay]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unsued_+_bases_+_of_+_relay
*CAT: n
*SEM: orRel[rel=unsued_+_bases_+_of_+_relay]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_arinc_+_receptable
*CAT: n
*SEM: unaryRel[rel=unused_+_arinc_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_arinc_+_receptable
*CAT: n
*SEM: twoRel[rel=unused_+_arinc_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_arinc_+_receptable
*CAT: n
*SEM: twoRel[rel=unused_+_arinc_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_arinc_+_receptable
*CAT: n
*SEM: orRel[rel=unused_+_arinc_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_cavities
*CAT: n
*SEM: unaryRel[rel=unused_+_cavities]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_cavities
*CAT: n
*SEM: twoRel[rel=unused_+_cavities]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_cavities
*CAT: n
*SEM: twoRel[rel=unused_+_cavities]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_cavities
*CAT: n
*SEM: orRel[rel=unused_+_cavities]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_cavity
*CAT: n
*SEM: unaryRel[rel=unused_+_cavity]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_cavity
*CAT: n
*SEM: twoRel[rel=unused_+_cavity]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_cavity
*CAT: n
*SEM: twoRel[rel=unused_+_cavity]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_cavity
*CAT: n
*SEM: orRel[rel=unused_+_cavity]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_circular_+_connector
*CAT: n
*SEM: unaryRel[rel=unused_+_circular_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_circular_+_connector
*CAT: n
*SEM: twoRel[rel=unused_+_circular_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_circular_+_connector
*CAT: n
*SEM: twoRel[rel=unused_+_circular_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_circular_+_connector
*CAT: n
*SEM: orRel[rel=unused_+_circular_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_circular_+_receptable
*CAT: n
*SEM: unaryRel[rel=unused_+_circular_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_circular_+_receptable
*CAT: n
*SEM: twoRel[rel=unused_+_circular_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_circular_+_receptable
*CAT: n
*SEM: twoRel[rel=unused_+_circular_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_circular_+_receptable
*CAT: n
*SEM: orRel[rel=unused_+_circular_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_coaxial_+_connector
*CAT: n
*SEM: unaryRel[rel=unused_+_coaxial_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_coaxial_+_connector
*CAT: n
*SEM: twoRel[rel=unused_+_coaxial_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_coaxial_+_connector
*CAT: n
*SEM: twoRel[rel=unused_+_coaxial_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_coaxial_+_connector
*CAT: n
*SEM: orRel[rel=unused_+_coaxial_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_coaxial_+_receptable
*CAT: n
*SEM: unaryRel[rel=unused_+_coaxial_+_receptable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_coaxial_+_receptable
*CAT: n
*SEM: twoRel[rel=unused_+_coaxial_+_receptable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_coaxial_+_receptable
*CAT: n
*SEM: twoRel[rel=unused_+_coaxial_+_receptable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_coaxial_+_receptable
*CAT: n
*SEM: orRel[rel=unused_+_coaxial_+_receptable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_connector
*CAT: n
*SEM: unaryRel[rel=unused_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_connector
*CAT: n
*SEM: twoRel[rel=unused_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_connector
*CAT: n
*SEM: twoRel[rel=unused_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_connector
*CAT: n
*SEM: orRel[rel=unused_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_rectangular_+_connector
*CAT: n
*SEM: unaryRel[rel=unused_+_rectangular_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_rectangular_+_connector
*CAT: n
*SEM: twoRel[rel=unused_+_rectangular_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_rectangular_+_connector
*CAT: n
*SEM: twoRel[rel=unused_+_rectangular_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: unused_+_rectangular_+_connector
*CAT: n
*SEM: orRel[rel=unused_+_rectangular_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_side_+_down_+_orientation
*CAT: n
*SEM: unaryRel[rel=up_+_side_+_down_+_orientation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_side_+_down_+_orientation
*CAT: n
*SEM: twoRel[rel=up_+_side_+_down_+_orientation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_side_+_down_+_orientation
*CAT: n
*SEM: twoRel[rel=up_+_side_+_down_+_orientation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: up_+_side_+_down_+_orientation
*CAT: n
*SEM: orRel[rel=up_+_side_+_down_+_orientation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: use_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: unaryRel[rel=use_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: use_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: twoRel[rel=use_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: use_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: twoRel[rel=use_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: use_+_of_+_adhesive_+_bonded_+_bracket
*CAT: n
*SEM: orRel[rel=use_+_of_+_adhesive_+_bonded_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_abs_+_1353_+_emi_+_conduit
*CAT: n
*SEM: unaryRel[rel=using_+_abs_+_1353_+_emi_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_abs_+_1353_+_emi_+_conduit
*CAT: n
*SEM: twoRel[rel=using_+_abs_+_1353_+_emi_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_abs_+_1353_+_emi_+_conduit
*CAT: n
*SEM: twoRel[rel=using_+_abs_+_1353_+_emi_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using_+_abs_+_1353_+_emi_+_conduit
*CAT: n
*SEM: orRel[rel=using_+_abs_+_1353_+_emi_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: uv_+_laser
*CAT: n
*SEM: unaryRel[rel=uv_+_laser]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: uv_+_laser
*CAT: n
*SEM: twoRel[rel=uv_+_laser]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: uv_+_laser
*CAT: n
*SEM: twoRel[rel=uv_+_laser]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: uv_+_laser
*CAT: n
*SEM: orRel[rel=uv_+_laser]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: uv_+_laser_+_on_+_the_+_insulation
*CAT: n
*SEM: unaryRel[rel=uv_+_laser_+_on_+_the_+_insulation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: uv_+_laser_+_on_+_the_+_insulation
*CAT: n
*SEM: twoRel[rel=uv_+_laser_+_on_+_the_+_insulation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: uv_+_laser_+_on_+_the_+_insulation
*CAT: n
*SEM: twoRel[rel=uv_+_laser_+_on_+_the_+_insulation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: uv_+_laser_+_on_+_the_+_insulation
*CAT: n
*SEM: orRel[rel=uv_+_laser_+_on_+_the_+_insulation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v_+_routes
*CAT: n
*SEM: unaryRel[rel=v_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v_+_routes
*CAT: n
*SEM: twoRel[rel=v_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v_+_routes
*CAT: n
*SEM: twoRel[rel=v_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v_+_routes
*CAT: n
*SEM: orRel[rel=v_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-route
*CAT: n
*SEM: unaryRel[rel=v-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-route
*CAT: n
*SEM: twoRel[rel=v-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-route
*CAT: n
*SEM: twoRel[rel=v-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-route
*CAT: n
*SEM: orRel[rel=v-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support
*CAT: n
*SEM: unaryRel[rel=v-support]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support
*CAT: n
*SEM: twoRel[rel=v-support]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support
*CAT: n
*SEM: twoRel[rel=v-support]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support
*CAT: n
*SEM: orRel[rel=v-support]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_
*CAT: n
*SEM: unaryRel[rel=v-support_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_
*CAT: n
*SEM: twoRel[rel=v-support_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_
*CAT: n
*SEM: twoRel[rel=v-support_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_
*CAT: n
*SEM: orRel[rel=v-support_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_with_+_two_+_layer_+_of_+_nsa_+_5107-b_+_black_+_tape
*CAT: n
*SEM: unaryRel[rel=v-support_+_with_+_two_+_layer_+_of_+_nsa_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_with_+_two_+_layer_+_of_+_nsa_+_5107-b_+_black_+_tape
*CAT: n
*SEM: twoRel[rel=v-support_+_with_+_two_+_layer_+_of_+_nsa_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_with_+_two_+_layer_+_of_+_nsa_+_5107-b_+_black_+_tape
*CAT: n
*SEM: twoRel[rel=v-support_+_with_+_two_+_layer_+_of_+_nsa_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: v-support_+_with_+_two_+_layer_+_of_+_nsa_+_5107-b_+_black_+_tape
*CAT: n
*SEM: orRel[rel=v-support_+_with_+_two_+_layer_+_of_+_nsa_+_5107-b_+_black_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: varnish
*CAT: n
*SEM: unaryRel[rel=varnish]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: varnish
*CAT: n
*SEM: twoRel[rel=varnish]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: varnish
*CAT: n
*SEM: twoRel[rel=varnish]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: varnish
*CAT: n
*SEM: orRel[rel=varnish]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: varnish_+_after_+_printing
*CAT: n
*SEM: unaryRel[rel=varnish_+_after_+_printing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: varnish_+_after_+_printing
*CAT: n
*SEM: twoRel[rel=varnish_+_after_+_printing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: varnish_+_after_+_printing
*CAT: n
*SEM: twoRel[rel=varnish_+_after_+_printing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: varnish_+_after_+_printing
*CAT: n
*SEM: orRel[rel=varnish_+_after_+_printing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ventilation_+_holes
*CAT: n
*SEM: unaryRel[rel=ventilation_+_holes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ventilation_+_holes
*CAT: n
*SEM: twoRel[rel=ventilation_+_holes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ventilation_+_holes
*CAT: n
*SEM: twoRel[rel=ventilation_+_holes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: ventilation_+_holes
*CAT: n
*SEM: orRel[rel=ventilation_+_holes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_bundle_+_following_+_this_+_picture
*CAT: n
*SEM: unaryRel[rel=vertical_+_bundle_+_following_+_this_+_picture]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_bundle_+_following_+_this_+_picture
*CAT: n
*SEM: twoRel[rel=vertical_+_bundle_+_following_+_this_+_picture]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_bundle_+_following_+_this_+_picture
*CAT: n
*SEM: twoRel[rel=vertical_+_bundle_+_following_+_this_+_picture]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_bundle_+_following_+_this_+_picture
*CAT: n
*SEM: orRel[rel=vertical_+_bundle_+_following_+_this_+_picture]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_routing
*CAT: n
*SEM: unaryRel[rel=vertical_+_routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_routing
*CAT: n
*SEM: twoRel[rel=vertical_+_routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_routing
*CAT: n
*SEM: twoRel[rel=vertical_+_routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vertical_+_routing
*CAT: n
*SEM: orRel[rel=vertical_+_routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vg_+_virtual_+_ground
*CAT: n
*SEM: unaryRel[rel=vg_+_virtual_+_ground]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vg_+_virtual_+_ground
*CAT: n
*SEM: twoRel[rel=vg_+_virtual_+_ground]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vg_+_virtual_+_ground
*CAT: n
*SEM: twoRel[rel=vg_+_virtual_+_ground]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vg_+_virtual_+_ground
*CAT: n
*SEM: orRel[rel=vg_+_virtual_+_ground]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration_+_zones
*CAT: n
*SEM: unaryRel[rel=vibration_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration_+_zones
*CAT: n
*SEM: twoRel[rel=vibration_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration_+_zones
*CAT: n
*SEM: twoRel[rel=vibration_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vibration_+_zones
*CAT: n
*SEM: orRel[rel=vibration_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_diode_+__+_opensb_+_vd_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=virtual_+_diode_+__+_opensb_+_vd_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_diode_+__+_opensb_+_vd_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=virtual_+_diode_+__+_opensb_+_vd_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_diode_+__+_opensb_+_vd_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=virtual_+_diode_+__+_opensb_+_vd_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_diode_+__+_opensb_+_vd_+_closesb_+_
*CAT: n
*SEM: orRel[rel=virtual_+_diode_+__+_opensb_+_vd_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_
*CAT: n
*SEM: orRel[rel=virtual_+_pressure_+_seal_+__+_opensb_+_vp_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_
*CAT: n
*SEM: orRel[rel=virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_with_+_maximum_+_pitch_+_d_+_smallerthan_+_equalto_+_50mm_+_away_+_from_+_pressure_+_seal
*CAT: n
*SEM: unaryRel[rel=virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_with_+_maximum_+_pitch_+_d_+_smallerthan_+_equalto_+_50mm_+_away_+_from_+_pressure_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_with_+_maximum_+_pitch_+_d_+_smallerthan_+_equalto_+_50mm_+_away_+_from_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_with_+_maximum_+_pitch_+_d_+_smallerthan_+_equalto_+_50mm_+_away_+_from_+_pressure_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_with_+_maximum_+_pitch_+_d_+_smallerthan_+_equalto_+_50mm_+_away_+_from_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_with_+_maximum_+_pitch_+_d_+_smallerthan_+_equalto_+_50mm_+_away_+_from_+_pressure_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_with_+_maximum_+_pitch_+_d_+_smallerthan_+_equalto_+_50mm_+_away_+_from_+_pressure_+_seal
*CAT: n
*SEM: orRel[rel=virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_with_+_maximum_+_pitch_+_d_+_smallerthan_+_equalto_+_50mm_+_away_+_from_+_pressure_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_300_+_mm_+_away_+_from_+_pressure_+_seal
*CAT: n
*SEM: unaryRel[rel=virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_300_+_mm_+_away_+_from_+_pressure_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_300_+_mm_+_away_+_from_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_300_+_mm_+_away_+_from_+_pressure_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_300_+_mm_+_away_+_from_+_pressure_+_seal
*CAT: n
*SEM: twoRel[rel=virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_300_+_mm_+_away_+_from_+_pressure_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_300_+_mm_+_away_+_from_+_pressure_+_seal
*CAT: n
*SEM: orRel[rel=virtual_+_pressure_+_seal_+_opensb_+_vp_+_closesb_+_with_+_maximum_+_pitch_+_of_+_d_+_smallerthan_+_equalto_+_300_+_mm_+_away_+_from_+_pressure_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+__+_opensb_+_vs_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=virtual_+_splice_+__+_opensb_+_vs_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+__+_opensb_+_vs_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=virtual_+_splice_+__+_opensb_+_vs_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+__+_opensb_+_vs_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=virtual_+_splice_+__+_opensb_+_vs_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+__+_opensb_+_vs_+_closesb_+_
*CAT: n
*SEM: orRel[rel=virtual_+_splice_+__+_opensb_+_vs_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+__+_opensb_+_vs_+_closesb_+__+_following_+_the_+_picture_+_below
*CAT: n
*SEM: unaryRel[rel=virtual_+_splice_+__+_opensb_+_vs_+_closesb_+__+_following_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+__+_opensb_+_vs_+_closesb_+__+_following_+_the_+_picture_+_below
*CAT: n
*SEM: twoRel[rel=virtual_+_splice_+__+_opensb_+_vs_+_closesb_+__+_following_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+__+_opensb_+_vs_+_closesb_+__+_following_+_the_+_picture_+_below
*CAT: n
*SEM: twoRel[rel=virtual_+_splice_+__+_opensb_+_vs_+_closesb_+__+_following_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+__+_opensb_+_vs_+_closesb_+__+_following_+_the_+_picture_+_below
*CAT: n
*SEM: orRel[rel=virtual_+_splice_+__+_opensb_+_vs_+_closesb_+__+_following_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+_opensb_+_vs_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=virtual_+_splice_+_opensb_+_vs_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+_opensb_+_vs_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=virtual_+_splice_+_opensb_+_vs_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+_opensb_+_vs_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=virtual_+_splice_+_opensb_+_vs_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+_opensb_+_vs_+_closesb_+_
*CAT: n
*SEM: orRel[rel=virtual_+_splice_+_opensb_+_vs_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+_opensb_+_vs_+_closesb_+_following_+_the_+_picture_+_below
*CAT: n
*SEM: unaryRel[rel=virtual_+_splice_+_opensb_+_vs_+_closesb_+_following_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+_opensb_+_vs_+_closesb_+_following_+_the_+_picture_+_below
*CAT: n
*SEM: twoRel[rel=virtual_+_splice_+_opensb_+_vs_+_closesb_+_following_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+_opensb_+_vs_+_closesb_+_following_+_the_+_picture_+_below
*CAT: n
*SEM: twoRel[rel=virtual_+_splice_+_opensb_+_vs_+_closesb_+_following_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_splice_+_opensb_+_vs_+_closesb_+_following_+_the_+_picture_+_below
*CAT: n
*SEM: orRel[rel=virtual_+_splice_+_opensb_+_vs_+_closesb_+_following_+_the_+_picture_+_below]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: orRel[rel=virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+__+_located_+_above_+_cargo_+_floor
*CAT: n
*SEM: unaryRel[rel=virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+__+_located_+_above_+_cargo_+_floor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+__+_located_+_above_+_cargo_+_floor
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+__+_located_+_above_+_cargo_+_floor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+__+_located_+_above_+_cargo_+_floor
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+__+_located_+_above_+_cargo_+_floor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+__+_located_+_above_+_cargo_+_floor
*CAT: n
*SEM: orRel[rel=virtual_+_terminal_+_block_+__+_opensb_+_vt_+_closesb_+__+_located_+_above_+_cargo_+_floor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: orRel[rel=virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_located_+_above_+_cargo_+_floor
*CAT: n
*SEM: unaryRel[rel=virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_located_+_above_+_cargo_+_floor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_located_+_above_+_cargo_+_floor
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_located_+_above_+_cargo_+_floor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_located_+_above_+_cargo_+_floor
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_located_+_above_+_cargo_+_floor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_located_+_above_+_cargo_+_floor
*CAT: n
*SEM: orRel[rel=virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_located_+_above_+_cargo_+_floor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_see_+_in_+_the_+_table_+_below_+_colon
*CAT: n
*SEM: unaryRel[rel=virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_see_+_in_+_the_+_table_+_below_+_colon]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_see_+_in_+_the_+_table_+_below_+_colon
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_see_+_in_+_the_+_table_+_below_+_colon]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_see_+_in_+_the_+_table_+_below_+_colon
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_see_+_in_+_the_+_table_+_below_+_colon]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_see_+_in_+_the_+_table_+_below_+_colon
*CAT: n
*SEM: orRel[rel=virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_see_+_in_+_the_+_table_+_below_+_colon]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_shall_+_be_+_defined_+_allowing_+_the_+_electrical_+_installation_+_of_+_one_+_additional_+_terminal_+_lug
*CAT: n
*SEM: unaryRel[rel=virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_shall_+_be_+_defined_+_allowing_+_the_+_electrical_+_installation_+_of_+_one_+_additional_+_terminal_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_shall_+_be_+_defined_+_allowing_+_the_+_electrical_+_installation_+_of_+_one_+_additional_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_shall_+_be_+_defined_+_allowing_+_the_+_electrical_+_installation_+_of_+_one_+_additional_+_terminal_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_shall_+_be_+_defined_+_allowing_+_the_+_electrical_+_installation_+_of_+_one_+_additional_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_shall_+_be_+_defined_+_allowing_+_the_+_electrical_+_installation_+_of_+_one_+_additional_+_terminal_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_shall_+_be_+_defined_+_allowing_+_the_+_electrical_+_installation_+_of_+_one_+_additional_+_terminal_+_lug
*CAT: n
*SEM: orRel[rel=virtual_+_terminal_+_block_+_opensb_+_vt_+_closesb_+_shall_+_be_+_defined_+_allowing_+_the_+_electrical_+_installation_+_of_+_one_+_additional_+_terminal_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: orRel[rel=virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+__+_in_+_horitontal_+_position
*CAT: n
*SEM: unaryRel[rel=virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+__+_in_+_horitontal_+_position]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+__+_in_+_horitontal_+_position
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+__+_in_+_horitontal_+_position]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+__+_in_+_horitontal_+_position
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+__+_in_+_horitontal_+_position]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+__+_in_+_horitontal_+_position
*CAT: n
*SEM: orRel[rel=virtual_+_terminal_+_module_+__+_opensb_+_vt_+_closesb_+__+_in_+_horitontal_+_position]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_
*CAT: n
*SEM: orRel[rel=virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_in_+_horitontal_+_position
*CAT: n
*SEM: unaryRel[rel=virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_in_+_horitontal_+_position]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_in_+_horitontal_+_position
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_in_+_horitontal_+_position]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_in_+_horitontal_+_position
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_in_+_horitontal_+_position]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_in_+_horitontal_+_position
*CAT: n
*SEM: orRel[rel=virtual_+_terminal_+_module_+_opensb_+_vt_+_closesb_+_in_+_horitontal_+_position]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vn
*CAT: n
*SEM: unaryRel[rel=vn]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vn
*CAT: n
*SEM: twoRel[rel=vn]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vn
*CAT: n
*SEM: twoRel[rel=vn]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vn
*CAT: n
*SEM: orRel[rel=vn]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu
*CAT: n
*SEM: unaryRel[rel=vu]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu
*CAT: n
*SEM: twoRel[rel=vu]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu
*CAT: n
*SEM: twoRel[rel=vu]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu
*CAT: n
*SEM: orRel[rel=vu]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_at_+_electrical_+_interface_+_showing_+_functional_+_item
*CAT: n
*SEM: unaryRel[rel=vu_+_at_+_electrical_+_interface_+_showing_+_functional_+_item]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_at_+_electrical_+_interface_+_showing_+_functional_+_item
*CAT: n
*SEM: twoRel[rel=vu_+_at_+_electrical_+_interface_+_showing_+_functional_+_item]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_at_+_electrical_+_interface_+_showing_+_functional_+_item
*CAT: n
*SEM: twoRel[rel=vu_+_at_+_electrical_+_interface_+_showing_+_functional_+_item]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_at_+_electrical_+_interface_+_showing_+_functional_+_item
*CAT: n
*SEM: orRel[rel=vu_+_at_+_electrical_+_interface_+_showing_+_functional_+_item]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_with_+_alu_+_cable
*CAT: n
*SEM: unaryRel[rel=vu_+_with_+_alu_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_with_+_alu_+_cable
*CAT: n
*SEM: twoRel[rel=vu_+_with_+_alu_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_with_+_alu_+_cable
*CAT: n
*SEM: twoRel[rel=vu_+_with_+_alu_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_with_+_alu_+_cable
*CAT: n
*SEM: orRel[rel=vu_+_with_+_alu_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_with_+_cu_+_cable
*CAT: n
*SEM: unaryRel[rel=vu_+_with_+_cu_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_with_+_cu_+_cable
*CAT: n
*SEM: twoRel[rel=vu_+_with_+_cu_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_with_+_cu_+_cable
*CAT: n
*SEM: twoRel[rel=vu_+_with_+_cu_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: vu_+_with_+_cu_+_cable
*CAT: n
*SEM: orRel[rel=vu_+_with_+_cu_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: washer
*CAT: n
*SEM: unaryRel[rel=washer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: washer
*CAT: n
*SEM: twoRel[rel=washer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: washer
*CAT: n
*SEM: twoRel[rel=washer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: washer
*CAT: n
*SEM: orRel[rel=washer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wedge_+_type_+_support
*CAT: n
*SEM: unaryRel[rel=wedge_+_type_+_support]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wedge_+_type_+_support
*CAT: n
*SEM: twoRel[rel=wedge_+_type_+_support]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wedge_+_type_+_support
*CAT: n
*SEM: twoRel[rel=wedge_+_type_+_support]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wedge_+_type_+_support
*CAT: n
*SEM: orRel[rel=wedge_+_type_+_support]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wedge_+_type_+_support_+_
*CAT: n
*SEM: unaryRel[rel=wedge_+_type_+_support_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wedge_+_type_+_support_+_
*CAT: n
*SEM: twoRel[rel=wedge_+_type_+_support_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wedge_+_type_+_support_+_
*CAT: n
*SEM: twoRel[rel=wedge_+_type_+_support_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wedge_+_type_+_support_+_
*CAT: n
*SEM: orRel[rel=wedge_+_type_+_support_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wedge_+_type_+_support_+_nsa_+_935513-01
*CAT: n
*SEM: unaryRel[rel=wedge_+_type_+_support_+_nsa_+_935513-01]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wedge_+_type_+_support_+_nsa_+_935513-01
*CAT: n
*SEM: twoRel[rel=wedge_+_type_+_support_+_nsa_+_935513-01]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wedge_+_type_+_support_+_nsa_+_935513-01
*CAT: n
*SEM: twoRel[rel=wedge_+_type_+_support_+_nsa_+_935513-01]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wedge_+_type_+_support_+_nsa_+_935513-01
*CAT: n
*SEM: orRel[rel=wedge_+_type_+_support_+_nsa_+_935513-01]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight_+_saving_+_closesb_+_
*CAT: n
*SEM: unaryRel[rel=weight_+_saving_+_closesb_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight_+_saving_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=weight_+_saving_+_closesb_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight_+_saving_+_closesb_+_
*CAT: n
*SEM: twoRel[rel=weight_+_saving_+_closesb_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight_+_saving_+_closesb_+_
*CAT: n
*SEM: orRel[rel=weight_+_saving_+_closesb_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight_+_saving_+_closesb_+_or_+_nsa5516j_+_p-clamp
*CAT: n
*SEM: unaryRel[rel=weight_+_saving_+_closesb_+_or_+_nsa5516j_+_p-clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight_+_saving_+_closesb_+_or_+_nsa5516j_+_p-clamp
*CAT: n
*SEM: twoRel[rel=weight_+_saving_+_closesb_+_or_+_nsa5516j_+_p-clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight_+_saving_+_closesb_+_or_+_nsa5516j_+_p-clamp
*CAT: n
*SEM: twoRel[rel=weight_+_saving_+_closesb_+_or_+_nsa5516j_+_p-clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: weight_+_saving_+_closesb_+_or_+_nsa5516j_+_p-clamp
*CAT: n
*SEM: orRel[rel=weight_+_saving_+_closesb_+_or_+_nsa5516j_+_p-clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire
*CAT: n
*SEM: unaryRel[rel=wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire
*CAT: n
*SEM: twoRel[rel=wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire
*CAT: n
*SEM: twoRel[rel=wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: wire
*CAT: n
*SEM: orRel[rel=wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: with_+_a_+_diameter_+_d_+_smallerthan_+_equalto_+_5mm_+_protected_+_by
*CAT: n
*SEM: unaryRel[rel=with_+_a_+_diameter_+_d_+_smallerthan_+_equalto_+_5mm_+_protected_+_by]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: with_+_a_+_diameter_+_d_+_smallerthan_+_equalto_+_5mm_+_protected_+_by
*CAT: n
*SEM: twoRel[rel=with_+_a_+_diameter_+_d_+_smallerthan_+_equalto_+_5mm_+_protected_+_by]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: with_+_a_+_diameter_+_d_+_smallerthan_+_equalto_+_5mm_+_protected_+_by
*CAT: n
*SEM: twoRel[rel=with_+_a_+_diameter_+_d_+_smallerthan_+_equalto_+_5mm_+_protected_+_by]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: with_+_a_+_diameter_+_d_+_smallerthan_+_equalto_+_5mm_+_protected_+_by
*CAT: n
*SEM: orRel[rel=with_+_a_+_diameter_+_d_+_smallerthan_+_equalto_+_5mm_+_protected_+_by]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: with_+_a_+_maximum_+_cone_+_angle_+_of_+_10_+_measured_+_from_+_the_+_pipe_+_centre_+_line
*CAT: n
*SEM: unaryRel[rel=with_+_a_+_maximum_+_cone_+_angle_+_of_+_10_+_measured_+_from_+_the_+_pipe_+_centre_+_line]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: with_+_a_+_maximum_+_cone_+_angle_+_of_+_10_+_measured_+_from_+_the_+_pipe_+_centre_+_line
*CAT: n
*SEM: twoRel[rel=with_+_a_+_maximum_+_cone_+_angle_+_of_+_10_+_measured_+_from_+_the_+_pipe_+_centre_+_line]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: with_+_a_+_maximum_+_cone_+_angle_+_of_+_10_+_measured_+_from_+_the_+_pipe_+_centre_+_line
*CAT: n
*SEM: twoRel[rel=with_+_a_+_maximum_+_cone_+_angle_+_of_+_10_+_measured_+_from_+_the_+_pipe_+_centre_+_line]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: with_+_a_+_maximum_+_cone_+_angle_+_of_+_10_+_measured_+_from_+_the_+_pipe_+_centre_+_line
*CAT: n
*SEM: orRel[rel=with_+_a_+_maximum_+_cone_+_angle_+_of_+_10_+_measured_+_from_+_the_+_pipe_+_centre_+_line]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: with_+_a_+_pink_+_background_+_printed_+_in_+_black_+_on_+_safety_+_wires
*CAT: n
*SEM: unaryRel[rel=with_+_a_+_pink_+_background_+_printed_+_in_+_black_+_on_+_safety_+_wires]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: with_+_a_+_pink_+_background_+_printed_+_in_+_black_+_on_+_safety_+_wires
*CAT: n
*SEM: twoRel[rel=with_+_a_+_pink_+_background_+_printed_+_in_+_black_+_on_+_safety_+_wires]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: with_+_a_+_pink_+_background_+_printed_+_in_+_black_+_on_+_safety_+_wires
*CAT: n
*SEM: twoRel[rel=with_+_a_+_pink_+_background_+_printed_+_in_+_black_+_on_+_safety_+_wires]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: with_+_a_+_pink_+_background_+_printed_+_in_+_black_+_on_+_safety_+_wires
*CAT: n
*SEM: orRel[rel=with_+_a_+_pink_+_background_+_printed_+_in_+_black_+_on_+_safety_+_wires]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: with_+_stainless_+_steel
*CAT: n
*SEM: unaryRel[rel=with_+_stainless_+_steel]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: with_+_stainless_+_steel
*CAT: n
*SEM: twoRel[rel=with_+_stainless_+_steel]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: with_+_stainless_+_steel
*CAT: n
*SEM: twoRel[rel=with_+_stainless_+_steel]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: with_+_stainless_+_steel
*CAT: n
*SEM: orRel[rel=with_+_stainless_+_steel]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: within_+_the_+_fuel_+_tank
*CAT: n
*SEM: unaryRel[rel=within_+_the_+_fuel_+_tank]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: within_+_the_+_fuel_+_tank
*CAT: n
*SEM: twoRel[rel=within_+_the_+_fuel_+_tank]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: within_+_the_+_fuel_+_tank
*CAT: n
*SEM: twoRel[rel=within_+_the_+_fuel_+_tank]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: within_+_the_+_fuel_+_tank
*CAT: n
*SEM: orRel[rel=within_+_the_+_fuel_+_tank]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: withstand_+_environmental_+_constrain_+_e.g._+_temperature_+_of_+_zones_+_the_+_bundle_+_is_+_installed_+_in
*CAT: n
*SEM: unaryRel[rel=withstand_+_environmental_+_constrain_+_e.g._+_temperature_+_of_+_zones_+_the_+_bundle_+_is_+_installed_+_in]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: withstand_+_environmental_+_constrain_+_e.g._+_temperature_+_of_+_zones_+_the_+_bundle_+_is_+_installed_+_in
*CAT: n
*SEM: twoRel[rel=withstand_+_environmental_+_constrain_+_e.g._+_temperature_+_of_+_zones_+_the_+_bundle_+_is_+_installed_+_in]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: withstand_+_environmental_+_constrain_+_e.g._+_temperature_+_of_+_zones_+_the_+_bundle_+_is_+_installed_+_in
*CAT: n
*SEM: twoRel[rel=withstand_+_environmental_+_constrain_+_e.g._+_temperature_+_of_+_zones_+_the_+_bundle_+_is_+_installed_+_in]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: withstand_+_environmental_+_constrain_+_e.g._+_temperature_+_of_+_zones_+_the_+_bundle_+_is_+_installed_+_in
*CAT: n
*SEM: orRel[rel=withstand_+_environmental_+_constrain_+_e.g._+_temperature_+_of_+_zones_+_the_+_bundle_+_is_+_installed_+_in]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: withstand_+_temperature_+_reached_+_by_+_the_+_routes_+_they_+_are_+_in_+_contact_+_with
*CAT: n
*SEM: unaryRel[rel=withstand_+_temperature_+_reached_+_by_+_the_+_routes_+_they_+_are_+_in_+_contact_+_with]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: withstand_+_temperature_+_reached_+_by_+_the_+_routes_+_they_+_are_+_in_+_contact_+_with
*CAT: n
*SEM: twoRel[rel=withstand_+_temperature_+_reached_+_by_+_the_+_routes_+_they_+_are_+_in_+_contact_+_with]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: withstand_+_temperature_+_reached_+_by_+_the_+_routes_+_they_+_are_+_in_+_contact_+_with
*CAT: n
*SEM: twoRel[rel=withstand_+_temperature_+_reached_+_by_+_the_+_routes_+_they_+_are_+_in_+_contact_+_with]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: withstand_+_temperature_+_reached_+_by_+_the_+_routes_+_they_+_are_+_in_+_contact_+_with
*CAT: n
*SEM: orRel[rel=withstand_+_temperature_+_reached_+_by_+_the_+_routes_+_they_+_are_+_in_+_contact_+_with]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: y-tee_+_junction
*CAT: n
*SEM: unaryRel[rel=y-tee_+_junction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: y-tee_+_junction
*CAT: n
*SEM: twoRel[rel=y-tee_+_junction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: y-tee_+_junction
*CAT: n
*SEM: twoRel[rel=y-tee_+_junction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: y-tee_+_junction
*CAT: n
*SEM: orRel[rel=y-tee_+_junction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: yellow_+_asne0646_+_identification_+_sleeve_+_inside_+_in_+_small_+_vu_+_for
*CAT: n
*SEM: unaryRel[rel=yellow_+_asne0646_+_identification_+_sleeve_+_inside_+_in_+_small_+_vu_+_for]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: yellow_+_asne0646_+_identification_+_sleeve_+_inside_+_in_+_small_+_vu_+_for
*CAT: n
*SEM: twoRel[rel=yellow_+_asne0646_+_identification_+_sleeve_+_inside_+_in_+_small_+_vu_+_for]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: yellow_+_asne0646_+_identification_+_sleeve_+_inside_+_in_+_small_+_vu_+_for
*CAT: n
*SEM: twoRel[rel=yellow_+_asne0646_+_identification_+_sleeve_+_inside_+_in_+_small_+_vu_+_for]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: yellow_+_asne0646_+_identification_+_sleeve_+_inside_+_in_+_small_+_vu_+_for
*CAT: n
*SEM: orRel[rel=yellow_+_asne0646_+_identification_+_sleeve_+_inside_+_in_+_small_+_vu_+_for]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_characteristics_+_concerning_+_the_+_used_+_material_+_with_+_priority_+_colon
*CAT: n
*SEM: unaryRel[rel=zone_+_characteristics_+_concerning_+_the_+_used_+_material_+_with_+_priority_+_colon]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_characteristics_+_concerning_+_the_+_used_+_material_+_with_+_priority_+_colon
*CAT: n
*SEM: twoRel[rel=zone_+_characteristics_+_concerning_+_the_+_used_+_material_+_with_+_priority_+_colon]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_characteristics_+_concerning_+_the_+_used_+_material_+_with_+_priority_+_colon
*CAT: n
*SEM: twoRel[rel=zone_+_characteristics_+_concerning_+_the_+_used_+_material_+_with_+_priority_+_colon]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: zone_+_characteristics_+_concerning_+_the_+_used_+_material_+_with_+_priority_+_colon
*CAT: n
*SEM: orRel[rel=zone_+_characteristics_+_concerning_+_the_+_used_+_material_+_with_+_priority_+_colon]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: â€œu_+_shapeâ€
*CAT: n
*SEM: unaryRel[rel=â€œu_+_shapeâ€]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: â€œu_+_shapeâ€
*CAT: n
*SEM: twoRel[rel=â€œu_+_shapeâ€]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: â€œu_+_shapeâ€
*CAT: n
*SEM: twoRel[rel=â€œu_+_shapeâ€]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: â€œu_+_shapeâ€
*CAT: n
*SEM: orRel[rel=â€œu_+_shapeâ€]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:


*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: n0VmainSem[rel=sized,relArg2=sizedArg2,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: onlySubj[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: n0VmainSem[rel=sized,relArg2=sizedArg2,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: onlySubj[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: n0VmainSem[rel=sized,relArg2=sizedArg2,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: onlySubj[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: n0VmainSem[rel=sized,relArg2=sizedArg2,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: onlySubj[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> at/prep



*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> of/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> supporting/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> supporting/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> supporting/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> supporting/prep



*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArgMainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: onlyPObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: allObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: CVpn1[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArgMainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: onlyPObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: allObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: CVpn1[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArgMainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: onlyPObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: allObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: CVpn1[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArgMainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: onlyPObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: allObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: CVpn1[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> using/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> using/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> using/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: CVpn1[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: CVpn1[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: CVpn1[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: CVpn1[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArgMainSem[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: onlyPObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: allObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: CVpn1[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArgMainSem[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: onlyPObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: allObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: CVpn1[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArgMainSem[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: onlyPObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: allObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: CVpn1[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArgMainSem[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: onlyPObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: allObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: CVpn1[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> on/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> on/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> on/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> except_+_for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_between/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> of/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> of/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> of/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> of/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArgMainSem[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: onlyPObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: allObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: CVpn1[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArgMainSem[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: onlyPObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: allObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: CVpn1[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArgMainSem[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: onlyPObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: allObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: CVpn1[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArgMainSem[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: onlyPObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: allObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: CVpn1[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: qualified
*CAT: v
*SEM: twoPrepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3,relArg4=qualifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: qualified
*CAT: v
*SEM: twoPrepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3,relArg4=qualifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: qualified
*CAT: v
*SEM: twoPrepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3,relArg4=qualifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: qualified
*CAT: v
*SEM: twoPrepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3,relArg4=qualifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> direct_+_on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> by/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> by/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> by/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: CVpn1[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: CVpn1[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: CVpn1[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: CVpn1[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> below/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> below/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> below/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> below/prep
P2 -> with/prep



*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: CVpn1[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: CVpn1[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: CVpn1[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: CVpn1[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> by/prep



*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with_+_or_+_without/prep



*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> allowing/prep
P2 -> of/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> allowing/prep
P2 -> of/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> allowing/prep
P2 -> of/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> allowing/prep
P2 -> of/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> outside/prep
P2 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> outside/prep
P2 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> outside/prep
P2 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> outside/prep
P2 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> near/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> near/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> near/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> near/prep
P2 -> on/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> with/prep



*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: n0VmainSem[rel=shrunk,relArg2=shrunkArg2,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: onlySubj[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: n0VmainSem[rel=shrunk,relArg2=shrunkArg2,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: onlySubj[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: n0VmainSem[rel=shrunk,relArg2=shrunkArg2,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: onlySubj[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: n0VmainSem[rel=shrunk,relArg2=shrunkArg2,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: onlySubj[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> beside/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> beside/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> beside/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> beside/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> compatible_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> for/prep



*ENTRY: locked
*CAT: v
*SEM: twoPrepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3,relArg4=lockedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> for/prep



*ENTRY: locked
*CAT: v
*SEM: twoPrepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3,relArg4=lockedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> for/prep



*ENTRY: locked
*CAT: v
*SEM: twoPrepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3,relArg4=lockedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> for/prep



*ENTRY: locked
*CAT: v
*SEM: twoPrepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3,relArg4=lockedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> for/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> or/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> or/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> or/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> or/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> only/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArgMainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: onlyPObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: allObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: CVpn1[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArgMainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: onlyPObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: allObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: CVpn1[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArgMainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: onlyPObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: allObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: CVpn1[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArgMainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: onlyPObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: allObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: CVpn1[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> above/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArgMainSem[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: onlyPObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: allObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: CVpn1[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArgMainSem[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: onlyPObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: allObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: CVpn1[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArgMainSem[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: onlyPObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: allObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: CVpn1[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArgMainSem[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: onlyPObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: allObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: CVpn1[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> considering/prep



*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> on/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> on/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> on/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArgMainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: onlyPObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: allObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: CVpn1[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArgMainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: onlyPObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: allObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: CVpn1[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArgMainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: onlyPObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: allObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: CVpn1[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArgMainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: onlyPObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: allObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: CVpn1[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: twoPrepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3,relArg4=providedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> 0/prep



*ENTRY: provided
*CAT: v
*SEM: twoPrepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3,relArg4=providedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> 0/prep



*ENTRY: provided
*CAT: v
*SEM: twoPrepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3,relArg4=providedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> 0/prep



*ENTRY: provided
*CAT: v
*SEM: twoPrepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3,relArg4=providedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> 0/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep
P2 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> for/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> for/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> for/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep
P2 -> for/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep
P2 -> for/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep
P2 -> for/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep
P2 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: n0VmainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlySubj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: n0VmainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlySubj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: n0VmainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlySubj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: n0VmainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlySubj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+__+_combination_+_with/prep
P2 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+__+_combination_+_with/prep
P2 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+__+_combination_+_with/prep
P2 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+__+_combination_+_with/prep
P2 -> directly_+_on/prep



*ENTRY: positioned
*CAT: v
*SEM: twoPrepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3,relArg4=positionedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: positioned
*CAT: v
*SEM: twoPrepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3,relArg4=positionedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: positioned
*CAT: v
*SEM: twoPrepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3,relArg4=positionedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: positioned
*CAT: v
*SEM: twoPrepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3,relArg4=positionedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on_+_fixed_+_part_+_of/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on_+_fixed_+_part_+_of/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on_+_fixed_+_part_+_of/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on_+_fixed_+_part_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_by/prep



*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> following/prep



*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: n0VmainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: onlySubj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: n0VmainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: onlySubj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: n0VmainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: onlySubj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: n0VmainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: onlySubj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: n0VmainSem[rel=selected,relArg2=selectedArg2,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: onlySubj[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: n0VmainSem[rel=selected,relArg2=selectedArg2,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: onlySubj[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: n0VmainSem[rel=selected,relArg2=selectedArg2,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: onlySubj[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: n0VmainSem[rel=selected,relArg2=selectedArg2,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: onlySubj[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> at/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> at/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> at/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> at/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: n0VmainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: onlySubj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: n0VmainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: onlySubj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: n0VmainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: onlySubj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: n0VmainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: onlySubj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: n0VmainSem[rel=manufactured,relArg2=manufacturedArg2,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: onlySubj[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: n0VmainSem[rel=manufactured,relArg2=manufacturedArg2,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: onlySubj[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: n0VmainSem[rel=manufactured,relArg2=manufacturedArg2,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: onlySubj[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: n0VmainSem[rel=manufactured,relArg2=manufacturedArg2,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: onlySubj[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: n0VmainSem[rel=submitted,relArg2=submittedArg2,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: onlySubj[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: n0VmainSem[rel=submitted,relArg2=submittedArg2,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: onlySubj[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: n0VmainSem[rel=submitted,relArg2=submittedArg2,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: onlySubj[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: n0VmainSem[rel=submitted,relArg2=submittedArg2,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: onlySubj[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> within/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: CVpn1[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: CVpn1[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: CVpn1[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: CVpn1[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on_+_top_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: n0VmainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: onlySubj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: n0VmainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: onlySubj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: n0VmainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: onlySubj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: n0VmainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: onlySubj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> outside/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> against/prep



*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: n0VmainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: onlySubj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: n0VmainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: onlySubj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: n0VmainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: onlySubj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: n0VmainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: onlySubj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> or/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> or/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> or/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> or/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: n0VmainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: onlySubj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: n0VmainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: onlySubj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: n0VmainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: onlySubj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: n0VmainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: onlySubj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together_+_with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArgMainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: onlyPObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: allObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: CVpn1[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArgMainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: onlyPObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: allObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: CVpn1[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArgMainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: onlyPObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: allObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: CVpn1[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArgMainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: onlyPObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: allObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: CVpn1[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> per/prep



*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArgMainSem[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: onlyPObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: allObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: CVpn1[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArgMainSem[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: onlyPObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: allObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: CVpn1[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArgMainSem[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: onlyPObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: allObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: CVpn1[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArgMainSem[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: onlyPObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: allObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: CVpn1[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> fir/prep



*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: n0VmainSem[rel=identical,relArg2=identicalArg2,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: onlySubj[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: n0VmainSem[rel=identical,relArg2=identicalArg2,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: onlySubj[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: n0VmainSem[rel=identical,relArg2=identicalArg2,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: onlySubj[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: n0VmainSem[rel=identical,relArg2=identicalArg2,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: onlySubj[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in_+_relation_+_to/prep



*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in_+_relation_+_to/prep



*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in_+_relation_+_to/prep



*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in_+_relation_+_to/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: n0VmainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: onlySubj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: n0VmainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: onlySubj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: n0VmainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: onlySubj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: n0VmainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: onlySubj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_the_+_area_+_of/prep
P2 -> of/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_the_+_area_+_of/prep
P2 -> of/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_the_+_area_+_of/prep
P2 -> of/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_the_+_area_+_of/prep
P2 -> of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> inside/prep



*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep
P2 -> for/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep
P2 -> for/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep
P2 -> for/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep
P2 -> for/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> of/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: avoided
*CAT: v
*SEM: twoPrepArg[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3,relArg4=avoidedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> for/prep



*ENTRY: avoided
*CAT: v
*SEM: twoPrepArg[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3,relArg4=avoidedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> for/prep



*ENTRY: avoided
*CAT: v
*SEM: twoPrepArg[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3,relArg4=avoidedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> for/prep



*ENTRY: avoided
*CAT: v
*SEM: twoPrepArg[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3,relArg4=avoidedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> for/prep



*ENTRY: insulated
*CAT: v
*SEM: twoPrepArg[rel=insulated,relArg2=insulatedArg2inv,relArg3=insulatedArg3,relArg4=insulatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> by/prep



*ENTRY: insulated
*CAT: v
*SEM: twoPrepArg[rel=insulated,relArg2=insulatedArg2inv,relArg3=insulatedArg3,relArg4=insulatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> by/prep



*ENTRY: insulated
*CAT: v
*SEM: twoPrepArg[rel=insulated,relArg2=insulatedArg2inv,relArg3=insulatedArg3,relArg4=insulatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> by/prep



*ENTRY: insulated
*CAT: v
*SEM: twoPrepArg[rel=insulated,relArg2=insulatedArg2inv,relArg3=insulatedArg3,relArg4=insulatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: n0VmainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: onlySubj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: n0VmainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: onlySubj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: n0VmainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: onlySubj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: n0VmainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: onlySubj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep
P2 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by_+_use_+_of/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArgMainSem[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: onlyPObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: allObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: CVpn1[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArgMainSem[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: onlyPObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: allObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: CVpn1[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArgMainSem[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: onlyPObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: allObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: CVpn1[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArgMainSem[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: onlyPObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: allObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: CVpn1[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> when/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep


*ENTRY: on
*CAT: prep
*SEM: prepSem[rel=on]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passing_+_through
*CAT: prep
*SEM: prepSem[rel=passing_+_through]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: directly_+_on
*CAT: prep
*SEM: prepSem[rel=directly_+_on]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: for
*CAT: prep
*SEM: prepSem[rel=for]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: supporting
*CAT: prep
*SEM: prepSem[rel=supporting]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: of
*CAT: prep
*SEM: prepSem[rel=of]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside
*CAT: prep
*SEM: prepSem[rel=inside]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_relation_+_to
*CAT: prep
*SEM: prepSem[rel=in_+_relation_+_to]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or
*CAT: prep
*SEM: prepSem[rel=or]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: beside
*CAT: prep
*SEM: prepSem[rel=beside]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to
*CAT: prep
*SEM: prepSem[rel=to]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: onto
*CAT: prep
*SEM: prepSem[rel=onto]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at
*CAT: prep
*SEM: prepSem[rel=at]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in
*CAT: prep
*SEM: prepSem[rel=in]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following
*CAT: prep
*SEM: prepSem[rel=following]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using
*CAT: prep
*SEM: prepSem[rel=using]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_fixed_+_part_+_of
*CAT: prep
*SEM: prepSem[rel=on_+_fixed_+_part_+_of]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: with
*CAT: prep
*SEM: prepSem[rel=with]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: by
*CAT: prep
*SEM: prepSem[rel=by]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
