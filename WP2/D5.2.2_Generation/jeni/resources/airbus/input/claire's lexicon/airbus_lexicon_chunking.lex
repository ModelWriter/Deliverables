include macros.mac

*ENTRY: not
*CAT: adv
*SEM: negSem[]
*ACC: 1.0
*FAM: Negation
*FILTERS: []
*EX: {}
*EQUATIONS:
*COANCHORS: 

   *ENTRY: cross_+_connection
*CAT: n
*SEM: unaryRel[rel=cross_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cross_+_connection
*CAT: n
*SEM: twoRel[rel=cross_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cross_+_connection
*CAT: n
*SEM: twoRel[rel=cross_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cross_+_connection
*CAT: n
*SEM: orRel[rel=cross_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all
*CAT: n
*SEM: unaryRel[rel=all]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all
*CAT: n
*SEM: twoRel[rel=all]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all
*CAT: n
*SEM: twoRel[rel=all]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all
*CAT: n
*SEM: orRel[rel=all]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_radius
*CAT: n
*SEM: unaryRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_radius
*CAT: n
*SEM: twoRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_radius
*CAT: n
*SEM: twoRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_radius
*CAT: n
*SEM: orRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: arinc
*CAT: n
*SEM: unaryRel[rel=arinc]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: arinc
*CAT: n
*SEM: twoRel[rel=arinc]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: arinc
*CAT: n
*SEM: twoRel[rel=arinc]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: arinc
*CAT: n
*SEM: orRel[rel=arinc]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distance_+_to_+_the_+_next_+_pipe_+_bend
*CAT: n
*SEM: unaryRel[rel=distance_+_to_+_the_+_next_+_pipe_+_bend]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distance_+_to_+_the_+_next_+_pipe_+_bend
*CAT: n
*SEM: twoRel[rel=distance_+_to_+_the_+_next_+_pipe_+_bend]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distance_+_to_+_the_+_next_+_pipe_+_bend
*CAT: n
*SEM: twoRel[rel=distance_+_to_+_the_+_next_+_pipe_+_bend]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distance_+_to_+_the_+_next_+_pipe_+_bend
*CAT: n
*SEM: orRel[rel=distance_+_to_+_the_+_next_+_pipe_+_bend]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: ``_+_single-hole_+_''_+_type_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=``_+_single-hole_+_''_+_type_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: ``_+_single-hole_+_''_+_type_+_clamp-block
*CAT: n
*SEM: twoRel[rel=``_+_single-hole_+_''_+_type_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: ``_+_single-hole_+_''_+_type_+_clamp-block
*CAT: n
*SEM: twoRel[rel=``_+_single-hole_+_''_+_type_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: ``_+_single-hole_+_''_+_type_+_clamp-block
*CAT: n
*SEM: orRel[rel=``_+_single-hole_+_''_+_type_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: single_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: single_+_clamp-block
*CAT: n
*SEM: twoRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: single_+_clamp-block
*CAT: n
*SEM: twoRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: single_+_clamp-block
*CAT: n
*SEM: orRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tank
*CAT: n
*SEM: unaryRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tank
*CAT: n
*SEM: twoRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tank
*CAT: n
*SEM: twoRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tank
*CAT: n
*SEM: orRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: adhesive_+_labels
*CAT: n
*SEM: unaryRel[rel=adhesive_+_labels]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: adhesive_+_labels
*CAT: n
*SEM: twoRel[rel=adhesive_+_labels]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: adhesive_+_labels
*CAT: n
*SEM: twoRel[rel=adhesive_+_labels]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: adhesive_+_labels
*CAT: n
*SEM: orRel[rel=adhesive_+_labels]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 25mm_+__+_greaterThan_+__+__+_equalto_+_d_+__+_greaterThan_+_
*CAT: n
*SEM: unaryRel[rel=25mm_+__+_greaterThan_+__+__+_equalto_+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 25mm_+__+_greaterThan_+__+__+_equalto_+_d_+__+_greaterThan_+_
*CAT: n
*SEM: twoRel[rel=25mm_+__+_greaterThan_+__+__+_equalto_+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 25mm_+__+_greaterThan_+__+__+_equalto_+_d_+__+_greaterThan_+_
*CAT: n
*SEM: twoRel[rel=25mm_+__+_greaterThan_+__+__+_equalto_+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 25mm_+__+_greaterThan_+__+__+_equalto_+_d_+__+_greaterThan_+_
*CAT: n
*SEM: orRel[rel=25mm_+__+_greaterThan_+__+__+_equalto_+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_end_+_nsa936603_+_-lrb-
*CAT: n
*SEM: unaryRel[rel=each_+_end_+_nsa936603_+_-lrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_end_+_nsa936603_+_-lrb-
*CAT: n
*SEM: twoRel[rel=each_+_end_+_nsa936603_+_-lrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_end_+_nsa936603_+_-lrb-
*CAT: n
*SEM: twoRel[rel=each_+_end_+_nsa936603_+_-lrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_end_+_nsa936603_+_-lrb-
*CAT: n
*SEM: orRel[rel=each_+_end_+_nsa936603_+_-lrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: least_+_one_+_pipe
*CAT: n
*SEM: unaryRel[rel=least_+_one_+_pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: least_+_one_+_pipe
*CAT: n
*SEM: twoRel[rel=least_+_one_+_pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: least_+_one_+_pipe
*CAT: n
*SEM: twoRel[rel=least_+_one_+_pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: least_+_one_+_pipe
*CAT: n
*SEM: orRel[rel=least_+_one_+_pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: table
*CAT: n
*SEM: unaryRel[rel=table]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: table
*CAT: n
*SEM: twoRel[rel=table]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: table
*CAT: n
*SEM: twoRel[rel=table]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: table
*CAT: n
*SEM: orRel[rel=table]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 90_+_angle_+_to
*CAT: n
*SEM: unaryRel[rel=90_+_angle_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 90_+_angle_+_to
*CAT: n
*SEM: twoRel[rel=90_+_angle_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 90_+_angle_+_to
*CAT: n
*SEM: twoRel[rel=90_+_angle_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 90_+_angle_+_to
*CAT: n
*SEM: orRel[rel=90_+_angle_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: visual_+_inspection
*CAT: n
*SEM: unaryRel[rel=visual_+_inspection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: visual_+_inspection
*CAT: n
*SEM: twoRel[rel=visual_+_inspection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: visual_+_inspection
*CAT: n
*SEM: twoRel[rel=visual_+_inspection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: visual_+_inspection
*CAT: n
*SEM: orRel[rel=visual_+_inspection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp
*CAT: n
*SEM: unaryRel[rel=p-clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp
*CAT: n
*SEM: twoRel[rel=p-clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp
*CAT: n
*SEM: twoRel[rel=p-clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp
*CAT: n
*SEM: orRel[rel=p-clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: drawn_+_bracket
*CAT: n
*SEM: unaryRel[rel=drawn_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: drawn_+_bracket
*CAT: n
*SEM: twoRel[rel=drawn_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: drawn_+_bracket
*CAT: n
*SEM: twoRel[rel=drawn_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: drawn_+_bracket
*CAT: n
*SEM: orRel[rel=drawn_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stand-off_+_
*CAT: n
*SEM: unaryRel[rel=stand-off_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stand-off_+_
*CAT: n
*SEM: twoRel[rel=stand-off_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stand-off_+_
*CAT: n
*SEM: twoRel[rel=stand-off_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stand-off_+_
*CAT: n
*SEM: orRel[rel=stand-off_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: gear_+_bay
*CAT: n
*SEM: unaryRel[rel=gear_+_bay]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: gear_+_bay
*CAT: n
*SEM: twoRel[rel=gear_+_bay]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: gear_+_bay
*CAT: n
*SEM: twoRel[rel=gear_+_bay]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: gear_+_bay
*CAT: n
*SEM: orRel[rel=gear_+_bay]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: continuous_+_fuel_+_immersion
*CAT: n
*SEM: unaryRel[rel=continuous_+_fuel_+_immersion]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: continuous_+_fuel_+_immersion
*CAT: n
*SEM: twoRel[rel=continuous_+_fuel_+_immersion]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: continuous_+_fuel_+_immersion
*CAT: n
*SEM: twoRel[rel=continuous_+_fuel_+_immersion]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: continuous_+_fuel_+_immersion
*CAT: n
*SEM: orRel[rel=continuous_+_fuel_+_immersion]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: virtual_+_terminal_+_module_+_-lrb-_+_vt_+_-rrb-
*CAT: n
*SEM: unaryRel[rel=virtual_+_terminal_+_module_+_-lrb-_+_vt_+_-rrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: virtual_+_terminal_+_module_+_-lrb-_+_vt_+_-rrb-
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_module_+_-lrb-_+_vt_+_-rrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: virtual_+_terminal_+_module_+_-lrb-_+_vt_+_-rrb-
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_module_+_-lrb-_+_vt_+_-rrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: virtual_+_terminal_+_module_+_-lrb-_+_vt_+_-rrb-
*CAT: n
*SEM: orRel[rel=virtual_+_terminal_+_module_+_-lrb-_+_vt_+_-rrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clamp-block
*CAT: n
*SEM: unaryRel[rel=clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clamp-block
*CAT: n
*SEM: twoRel[rel=clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clamp-block
*CAT: n
*SEM: twoRel[rel=clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clamp-block
*CAT: n
*SEM: orRel[rel=clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: special_+_unions
*CAT: n
*SEM: unaryRel[rel=special_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: special_+_unions
*CAT: n
*SEM: twoRel[rel=special_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: special_+_unions
*CAT: n
*SEM: twoRel[rel=special_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: special_+_unions
*CAT: n
*SEM: orRel[rel=special_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_equipment
*CAT: n
*SEM: unaryRel[rel=all_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_equipment
*CAT: n
*SEM: twoRel[rel=all_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_equipment
*CAT: n
*SEM: twoRel[rel=all_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_equipment
*CAT: n
*SEM: orRel[rel=all_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_metallic_+_part
*CAT: n
*SEM: unaryRel[rel=each_+_metallic_+_part]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_metallic_+_part
*CAT: n
*SEM: twoRel[rel=each_+_metallic_+_part]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_metallic_+_part
*CAT: n
*SEM: twoRel[rel=each_+_metallic_+_part]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_metallic_+_part
*CAT: n
*SEM: orRel[rel=each_+_metallic_+_part]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_picture_+_-rrb-
*CAT: n
*SEM: unaryRel[rel=attached_+_picture_+_-rrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_picture_+_-rrb-
*CAT: n
*SEM: twoRel[rel=attached_+_picture_+_-rrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_picture_+_-rrb-
*CAT: n
*SEM: twoRel[rel=attached_+_picture_+_-rrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_picture_+_-rrb-
*CAT: n
*SEM: orRel[rel=attached_+_picture_+_-rrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-route
*CAT: n
*SEM: unaryRel[rel=p-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-route
*CAT: n
*SEM: twoRel[rel=p-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-route
*CAT: n
*SEM: twoRel[rel=p-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-route
*CAT: n
*SEM: orRel[rel=p-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 50mm
*CAT: n
*SEM: unaryRel[rel=50mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 50mm
*CAT: n
*SEM: twoRel[rel=50mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 50mm
*CAT: n
*SEM: twoRel[rel=50mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 50mm
*CAT: n
*SEM: orRel[rel=50mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa_+_8420-9_+_lacing_+_tape
*CAT: n
*SEM: unaryRel[rel=nsa_+_8420-9_+_lacing_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa_+_8420-9_+_lacing_+_tape
*CAT: n
*SEM: twoRel[rel=nsa_+_8420-9_+_lacing_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa_+_8420-9_+_lacing_+_tape
*CAT: n
*SEM: twoRel[rel=nsa_+_8420-9_+_lacing_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa_+_8420-9_+_lacing_+_tape
*CAT: n
*SEM: orRel[rel=nsa_+_8420-9_+_lacing_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_table
*CAT: n
*SEM: unaryRel[rel=attached_+_table]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_table
*CAT: n
*SEM: twoRel[rel=attached_+_table]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_table
*CAT: n
*SEM: twoRel[rel=attached_+_table]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_table
*CAT: n
*SEM: orRel[rel=attached_+_table]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum
*CAT: n
*SEM: unaryRel[rel=maximum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum
*CAT: n
*SEM: twoRel[rel=maximum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum
*CAT: n
*SEM: twoRel[rel=maximum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum
*CAT: n
*SEM: orRel[rel=maximum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_pipes
*CAT: n
*SEM: unaryRel[rel=fuel_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_pipes
*CAT: n
*SEM: twoRel[rel=fuel_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_pipes
*CAT: n
*SEM: twoRel[rel=fuel_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_pipes
*CAT: n
*SEM: orRel[rel=fuel_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: permanent_+_unions
*CAT: n
*SEM: unaryRel[rel=permanent_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: permanent_+_unions
*CAT: n
*SEM: twoRel[rel=permanent_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: permanent_+_unions
*CAT: n
*SEM: twoRel[rel=permanent_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: permanent_+_unions
*CAT: n
*SEM: orRel[rel=permanent_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: separable_+_unions
*CAT: n
*SEM: unaryRel[rel=separable_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: separable_+_unions
*CAT: n
*SEM: twoRel[rel=separable_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: separable_+_unions
*CAT: n
*SEM: twoRel[rel=separable_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: separable_+_unions
*CAT: n
*SEM: orRel[rel=separable_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: large_+_gauge_+_contact_+_when_+_smal_+_gauge_+_wire
*CAT: n
*SEM: unaryRel[rel=large_+_gauge_+_contact_+_when_+_smal_+_gauge_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: large_+_gauge_+_contact_+_when_+_smal_+_gauge_+_wire
*CAT: n
*SEM: twoRel[rel=large_+_gauge_+_contact_+_when_+_smal_+_gauge_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: large_+_gauge_+_contact_+_when_+_smal_+_gauge_+_wire
*CAT: n
*SEM: twoRel[rel=large_+_gauge_+_contact_+_when_+_smal_+_gauge_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: large_+_gauge_+_contact_+_when_+_smal_+_gauge_+_wire
*CAT: n
*SEM: orRel[rel=large_+_gauge_+_contact_+_when_+_smal_+_gauge_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spare_+_wire
*CAT: n
*SEM: unaryRel[rel=spare_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spare_+_wire
*CAT: n
*SEM: twoRel[rel=spare_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spare_+_wire
*CAT: n
*SEM: twoRel[rel=spare_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spare_+_wire
*CAT: n
*SEM: orRel[rel=spare_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: g-route
*CAT: n
*SEM: unaryRel[rel=g-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: g-route
*CAT: n
*SEM: twoRel[rel=g-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: g-route
*CAT: n
*SEM: twoRel[rel=g-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: g-route
*CAT: n
*SEM: orRel[rel=g-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_abs0916_+_shrink
*CAT: n
*SEM: unaryRel[rel=two_+_abs0916_+_shrink]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_abs0916_+_shrink
*CAT: n
*SEM: twoRel[rel=two_+_abs0916_+_shrink]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_abs0916_+_shrink
*CAT: n
*SEM: twoRel[rel=two_+_abs0916_+_shrink]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_abs0916_+_shrink
*CAT: n
*SEM: orRel[rel=two_+_abs0916_+_shrink]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 62200_+_when
*CAT: n
*SEM: unaryRel[rel=62200_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 62200_+_when
*CAT: n
*SEM: twoRel[rel=62200_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 62200_+_when
*CAT: n
*SEM: twoRel[rel=62200_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 62200_+_when
*CAT: n
*SEM: orRel[rel=62200_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachable_+_labels
*CAT: n
*SEM: unaryRel[rel=attachable_+_labels]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachable_+_labels
*CAT: n
*SEM: twoRel[rel=attachable_+_labels]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachable_+_labels
*CAT: n
*SEM: twoRel[rel=attachable_+_labels]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachable_+_labels
*CAT: n
*SEM: orRel[rel=attachable_+_labels]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cable
*CAT: n
*SEM: unaryRel[rel=cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cable
*CAT: n
*SEM: twoRel[rel=cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cable
*CAT: n
*SEM: twoRel[rel=cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cable
*CAT: n
*SEM: orRel[rel=cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: positions
*CAT: n
*SEM: unaryRel[rel=positions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: positions
*CAT: n
*SEM: twoRel[rel=positions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: positions
*CAT: n
*SEM: twoRel[rel=positions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: positions
*CAT: n
*SEM: orRel[rel=positions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sufficient_+_distance
*CAT: n
*SEM: unaryRel[rel=sufficient_+_distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sufficient_+_distance
*CAT: n
*SEM: twoRel[rel=sufficient_+_distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sufficient_+_distance
*CAT: n
*SEM: twoRel[rel=sufficient_+_distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sufficient_+_distance
*CAT: n
*SEM: orRel[rel=sufficient_+_distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: standards
*CAT: n
*SEM: unaryRel[rel=standards]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: standards
*CAT: n
*SEM: twoRel[rel=standards]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: standards
*CAT: n
*SEM: twoRel[rel=standards]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: standards
*CAT: n
*SEM: orRel[rel=standards]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_pipe_+_routings
*CAT: n
*SEM: unaryRel[rel=all_+_pipe_+_routings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_pipe_+_routings
*CAT: n
*SEM: twoRel[rel=all_+_pipe_+_routings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_pipe_+_routings
*CAT: n
*SEM: twoRel[rel=all_+_pipe_+_routings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_pipe_+_routings
*CAT: n
*SEM: orRel[rel=all_+_pipe_+_routings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: loose_+_connector_+_-lrb-_+_plug_+_-rrb-
*CAT: n
*SEM: unaryRel[rel=loose_+_connector_+_-lrb-_+_plug_+_-rrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: loose_+_connector_+_-lrb-_+_plug_+_-rrb-
*CAT: n
*SEM: twoRel[rel=loose_+_connector_+_-lrb-_+_plug_+_-rrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: loose_+_connector_+_-lrb-_+_plug_+_-rrb-
*CAT: n
*SEM: twoRel[rel=loose_+_connector_+_-lrb-_+_plug_+_-rrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: loose_+_connector_+_-lrb-_+_plug_+_-rrb-
*CAT: n
*SEM: orRel[rel=loose_+_connector_+_-lrb-_+_plug_+_-rrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: intermediate_+_p-clamp
*CAT: n
*SEM: unaryRel[rel=intermediate_+_p-clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: intermediate_+_p-clamp
*CAT: n
*SEM: twoRel[rel=intermediate_+_p-clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: intermediate_+_p-clamp
*CAT: n
*SEM: twoRel[rel=intermediate_+_p-clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: intermediate_+_p-clamp
*CAT: n
*SEM: orRel[rel=intermediate_+_p-clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 50mm_+__+_greaterThan_+__+__+_equalto_+_d_+__+_greaterThan_+_
*CAT: n
*SEM: unaryRel[rel=50mm_+__+_greaterThan_+__+__+_equalto_+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 50mm_+__+_greaterThan_+__+__+_equalto_+_d_+__+_greaterThan_+_
*CAT: n
*SEM: twoRel[rel=50mm_+__+_greaterThan_+__+__+_equalto_+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 50mm_+__+_greaterThan_+__+__+_equalto_+_d_+__+_greaterThan_+_
*CAT: n
*SEM: twoRel[rel=50mm_+__+_greaterThan_+__+__+_equalto_+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 50mm_+__+_greaterThan_+__+__+_equalto_+_d_+__+_greaterThan_+_
*CAT: n
*SEM: orRel[rel=50mm_+__+_greaterThan_+__+__+_equalto_+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: rack
*CAT: n
*SEM: unaryRel[rel=rack]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: rack
*CAT: n
*SEM: twoRel[rel=rack]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: rack
*CAT: n
*SEM: twoRel[rel=rack]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: rack
*CAT: n
*SEM: orRel[rel=rack]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: back_+_shells
*CAT: n
*SEM: unaryRel[rel=back_+_shells]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: back_+_shells
*CAT: n
*SEM: twoRel[rel=back_+_shells]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: back_+_shells
*CAT: n
*SEM: twoRel[rel=back_+_shells]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: back_+_shells
*CAT: n
*SEM: orRel[rel=back_+_shells]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: q_+_routes
*CAT: n
*SEM: unaryRel[rel=q_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: q_+_routes
*CAT: n
*SEM: twoRel[rel=q_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: q_+_routes
*CAT: n
*SEM: twoRel[rel=q_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: q_+_routes
*CAT: n
*SEM: orRel[rel=q_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fire_+_zones
*CAT: n
*SEM: unaryRel[rel=fire_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fire_+_zones
*CAT: n
*SEM: twoRel[rel=fire_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fire_+_zones
*CAT: n
*SEM: twoRel[rel=fire_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fire_+_zones
*CAT: n
*SEM: orRel[rel=fire_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flange_+_standard_+_as-1895
*CAT: n
*SEM: unaryRel[rel=flange_+_standard_+_as-1895]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flange_+_standard_+_as-1895
*CAT: n
*SEM: twoRel[rel=flange_+_standard_+_as-1895]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flange_+_standard_+_as-1895
*CAT: n
*SEM: twoRel[rel=flange_+_standard_+_as-1895]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flange_+_standard_+_as-1895
*CAT: n
*SEM: orRel[rel=flange_+_standard_+_as-1895]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe_+_fixation
*CAT: n
*SEM: unaryRel[rel=pipe_+_fixation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe_+_fixation
*CAT: n
*SEM: twoRel[rel=pipe_+_fixation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe_+_fixation
*CAT: n
*SEM: twoRel[rel=pipe_+_fixation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe_+_fixation
*CAT: n
*SEM: orRel[rel=pipe_+_fixation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: kl_+_cable
*CAT: n
*SEM: unaryRel[rel=kl_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: kl_+_cable
*CAT: n
*SEM: twoRel[rel=kl_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: kl_+_cable
*CAT: n
*SEM: twoRel[rel=kl_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: kl_+_cable
*CAT: n
*SEM: orRel[rel=kl_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: equivalent_+_alternative_+_standard
*CAT: n
*SEM: unaryRel[rel=equivalent_+_alternative_+_standard]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: equivalent_+_alternative_+_standard
*CAT: n
*SEM: twoRel[rel=equivalent_+_alternative_+_standard]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: equivalent_+_alternative_+_standard
*CAT: n
*SEM: twoRel[rel=equivalent_+_alternative_+_standard]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: equivalent_+_alternative_+_standard
*CAT: n
*SEM: orRel[rel=equivalent_+_alternative_+_standard]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: growth
*CAT: n
*SEM: unaryRel[rel=growth]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: growth
*CAT: n
*SEM: twoRel[rel=growth]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: growth
*CAT: n
*SEM: twoRel[rel=growth]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: growth
*CAT: n
*SEM: orRel[rel=growth]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: tee
*CAT: n
*SEM: unaryRel[rel=tee]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: tee
*CAT: n
*SEM: twoRel[rel=tee]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: tee
*CAT: n
*SEM: twoRel[rel=tee]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: tee
*CAT: n
*SEM: orRel[rel=tee]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cargo_+_floor
*CAT: n
*SEM: unaryRel[rel=cargo_+_floor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cargo_+_floor
*CAT: n
*SEM: twoRel[rel=cargo_+_floor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cargo_+_floor
*CAT: n
*SEM: twoRel[rel=cargo_+_floor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cargo_+_floor
*CAT: n
*SEM: orRel[rel=cargo_+_floor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optical_+_multiway_+_connector
*CAT: n
*SEM: unaryRel[rel=optical_+_multiway_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optical_+_multiway_+_connector
*CAT: n
*SEM: twoRel[rel=optical_+_multiway_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optical_+_multiway_+_connector
*CAT: n
*SEM: twoRel[rel=optical_+_multiway_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optical_+_multiway_+_connector
*CAT: n
*SEM: orRel[rel=optical_+_multiway_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: size_+_-04_+_to
*CAT: n
*SEM: unaryRel[rel=size_+_-04_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: size_+_-04_+_to
*CAT: n
*SEM: twoRel[rel=size_+_-04_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: size_+_-04_+_to
*CAT: n
*SEM: twoRel[rel=size_+_-04_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: size_+_-04_+_to
*CAT: n
*SEM: orRel[rel=size_+_-04_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: four_+_possible
*CAT: n
*SEM: unaryRel[rel=four_+_possible]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: four_+_possible
*CAT: n
*SEM: twoRel[rel=four_+_possible]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: four_+_possible
*CAT: n
*SEM: twoRel[rel=four_+_possible]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: four_+_possible
*CAT: n
*SEM: orRel[rel=four_+_possible]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_radius
*CAT: n
*SEM: unaryRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_radius
*CAT: n
*SEM: twoRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_radius
*CAT: n
*SEM: twoRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_radius
*CAT: n
*SEM: orRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: conductive_+_component
*CAT: n
*SEM: unaryRel[rel=conductive_+_component]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: conductive_+_component
*CAT: n
*SEM: twoRel[rel=conductive_+_component]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: conductive_+_component
*CAT: n
*SEM: twoRel[rel=conductive_+_component]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: conductive_+_component
*CAT: n
*SEM: orRel[rel=conductive_+_component]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_g-route
*CAT: n
*SEM: unaryRel[rel=each_+_g-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_g-route
*CAT: n
*SEM: twoRel[rel=each_+_g-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_g-route
*CAT: n
*SEM: twoRel[rel=each_+_g-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_g-route
*CAT: n
*SEM: orRel[rel=each_+_g-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 25mm
*CAT: n
*SEM: unaryRel[rel=25mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 25mm
*CAT: n
*SEM: twoRel[rel=25mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 25mm
*CAT: n
*SEM: twoRel[rel=25mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 25mm
*CAT: n
*SEM: orRel[rel=25mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: above_+_cwb
*CAT: n
*SEM: unaryRel[rel=above_+_cwb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: above_+_cwb
*CAT: n
*SEM: twoRel[rel=above_+_cwb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: above_+_cwb
*CAT: n
*SEM: twoRel[rel=above_+_cwb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: above_+_cwb
*CAT: n
*SEM: orRel[rel=above_+_cwb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: brackets
*CAT: n
*SEM: unaryRel[rel=brackets]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: brackets
*CAT: n
*SEM: twoRel[rel=brackets]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: brackets
*CAT: n
*SEM: twoRel[rel=brackets]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: brackets
*CAT: n
*SEM: orRel[rel=brackets]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: -24
*CAT: n
*SEM: unaryRel[rel=-24]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: -24
*CAT: n
*SEM: twoRel[rel=-24]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: -24
*CAT: n
*SEM: twoRel[rel=-24]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: -24
*CAT: n
*SEM: orRel[rel=-24]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipes
*CAT: n
*SEM: unaryRel[rel=pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipes
*CAT: n
*SEM: twoRel[rel=pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipes
*CAT: n
*SEM: twoRel[rel=pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipes
*CAT: n
*SEM: orRel[rel=pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs0916_+_shrink
*CAT: n
*SEM: unaryRel[rel=abs0916_+_shrink]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs0916_+_shrink
*CAT: n
*SEM: twoRel[rel=abs0916_+_shrink]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs0916_+_shrink
*CAT: n
*SEM: twoRel[rel=abs0916_+_shrink]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs0916_+_shrink
*CAT: n
*SEM: orRel[rel=abs0916_+_shrink]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: current
*CAT: n
*SEM: unaryRel[rel=current]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: current
*CAT: n
*SEM: twoRel[rel=current]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: current
*CAT: n
*SEM: twoRel[rel=current]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: current
*CAT: n
*SEM: orRel[rel=current]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: zones_+_the_+_bundle
*CAT: n
*SEM: unaryRel[rel=zones_+_the_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: zones_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=zones_+_the_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: zones_+_the_+_bundle
*CAT: n
*SEM: twoRel[rel=zones_+_the_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: zones_+_the_+_bundle
*CAT: n
*SEM: orRel[rel=zones_+_the_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: feeder_+_lugs
*CAT: n
*SEM: unaryRel[rel=feeder_+_lugs]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: feeder_+_lugs
*CAT: n
*SEM: twoRel[rel=feeder_+_lugs]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: feeder_+_lugs
*CAT: n
*SEM: twoRel[rel=feeder_+_lugs]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: feeder_+_lugs
*CAT: n
*SEM: orRel[rel=feeder_+_lugs]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: method
*CAT: n
*SEM: unaryRel[rel=method]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: method
*CAT: n
*SEM: twoRel[rel=method]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: method
*CAT: n
*SEM: twoRel[rel=method]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: method
*CAT: n
*SEM: orRel[rel=method]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: position
*CAT: n
*SEM: unaryRel[rel=position]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: position
*CAT: n
*SEM: twoRel[rel=position]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: position
*CAT: n
*SEM: twoRel[rel=position]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: position
*CAT: n
*SEM: orRel[rel=position]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: movement
*CAT: n
*SEM: unaryRel[rel=movement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: movement
*CAT: n
*SEM: twoRel[rel=movement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: movement
*CAT: n
*SEM: twoRel[rel=movement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: movement
*CAT: n
*SEM: orRel[rel=movement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: intermediate_+_bracket
*CAT: n
*SEM: unaryRel[rel=intermediate_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=intermediate_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=intermediate_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: intermediate_+_bracket
*CAT: n
*SEM: orRel[rel=intermediate_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: junction
*CAT: n
*SEM: unaryRel[rel=junction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: junction
*CAT: n
*SEM: twoRel[rel=junction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: junction
*CAT: n
*SEM: twoRel[rel=junction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: junction
*CAT: n
*SEM: orRel[rel=junction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: component
*CAT: n
*SEM: unaryRel[rel=component]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: component
*CAT: n
*SEM: twoRel[rel=component]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: component
*CAT: n
*SEM: twoRel[rel=component]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: component
*CAT: n
*SEM: orRel[rel=component]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: to_+_one_+_fixation_+_point
*CAT: n
*SEM: unaryRel[rel=to_+_one_+_fixation_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: to_+_one_+_fixation_+_point
*CAT: n
*SEM: twoRel[rel=to_+_one_+_fixation_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: to_+_one_+_fixation_+_point
*CAT: n
*SEM: twoRel[rel=to_+_one_+_fixation_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: to_+_one_+_fixation_+_point
*CAT: n
*SEM: orRel[rel=to_+_one_+_fixation_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: to_+_180
*CAT: n
*SEM: unaryRel[rel=to_+_180]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: to_+_180
*CAT: n
*SEM: twoRel[rel=to_+_180]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: to_+_180
*CAT: n
*SEM: twoRel[rel=to_+_180]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: to_+_180
*CAT: n
*SEM: orRel[rel=to_+_180]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: figure
*CAT: n
*SEM: unaryRel[rel=figure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: figure
*CAT: n
*SEM: twoRel[rel=figure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: figure
*CAT: n
*SEM: twoRel[rel=figure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: figure
*CAT: n
*SEM: orRel[rel=figure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: splice
*CAT: n
*SEM: unaryRel[rel=splice]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: splice
*CAT: n
*SEM: twoRel[rel=splice]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: splice
*CAT: n
*SEM: twoRel[rel=splice]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: splice
*CAT: n
*SEM: orRel[rel=splice]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sense_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=sense_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sense_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=sense_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sense_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=sense_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sense_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=sense_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bleed_+_air
*CAT: n
*SEM: unaryRel[rel=bleed_+_air]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bleed_+_air
*CAT: n
*SEM: twoRel[rel=bleed_+_air]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bleed_+_air
*CAT: n
*SEM: twoRel[rel=bleed_+_air]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bleed_+_air
*CAT: n
*SEM: orRel[rel=bleed_+_air]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distance_+_to_+_structure
*CAT: n
*SEM: unaryRel[rel=distance_+_to_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distance_+_to_+_structure
*CAT: n
*SEM: twoRel[rel=distance_+_to_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distance_+_to_+_structure
*CAT: n
*SEM: twoRel[rel=distance_+_to_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distance_+_to_+_structure
*CAT: n
*SEM: orRel[rel=distance_+_to_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: panel
*CAT: n
*SEM: unaryRel[rel=panel]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: panel
*CAT: n
*SEM: twoRel[rel=panel]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: panel
*CAT: n
*SEM: twoRel[rel=panel]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: panel
*CAT: n
*SEM: orRel[rel=panel]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_that_+_contact
*CAT: n
*SEM: unaryRel[rel=account_+_that_+_contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_that_+_contact
*CAT: n
*SEM: twoRel[rel=account_+_that_+_contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_that_+_contact
*CAT: n
*SEM: twoRel[rel=account_+_that_+_contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_that_+_contact
*CAT: n
*SEM: orRel[rel=account_+_that_+_contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: protected_+_bundle
*CAT: n
*SEM: unaryRel[rel=protected_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: protected_+_bundle
*CAT: n
*SEM: twoRel[rel=protected_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: protected_+_bundle
*CAT: n
*SEM: twoRel[rel=protected_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: protected_+_bundle
*CAT: n
*SEM: orRel[rel=protected_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_radius
*CAT: n
*SEM: unaryRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_radius
*CAT: n
*SEM: twoRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_radius
*CAT: n
*SEM: twoRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_radius
*CAT: n
*SEM: orRel[rel=bend_+_radius]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: repair_+_pipes
*CAT: n
*SEM: unaryRel[rel=repair_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: repair_+_pipes
*CAT: n
*SEM: twoRel[rel=repair_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: repair_+_pipes
*CAT: n
*SEM: twoRel[rel=repair_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: repair_+_pipes
*CAT: n
*SEM: orRel[rel=repair_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: metallic_+_label
*CAT: n
*SEM: unaryRel[rel=metallic_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: metallic_+_label
*CAT: n
*SEM: twoRel[rel=metallic_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: metallic_+_label
*CAT: n
*SEM: twoRel[rel=metallic_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: metallic_+_label
*CAT: n
*SEM: orRel[rel=metallic_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cockpit_+_vu
*CAT: n
*SEM: unaryRel[rel=cockpit_+_vu]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cockpit_+_vu
*CAT: n
*SEM: twoRel[rel=cockpit_+_vu]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cockpit_+_vu
*CAT: n
*SEM: twoRel[rel=cockpit_+_vu]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cockpit_+_vu
*CAT: n
*SEM: orRel[rel=cockpit_+_vu]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: equipment_+_rack_+_beside_+_connector
*CAT: n
*SEM: unaryRel[rel=equipment_+_rack_+_beside_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: equipment_+_rack_+_beside_+_connector
*CAT: n
*SEM: twoRel[rel=equipment_+_rack_+_beside_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: equipment_+_rack_+_beside_+_connector
*CAT: n
*SEM: twoRel[rel=equipment_+_rack_+_beside_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: equipment_+_rack_+_beside_+_connector
*CAT: n
*SEM: orRel[rel=equipment_+_rack_+_beside_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: single_+_position
*CAT: n
*SEM: unaryRel[rel=single_+_position]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: single_+_position
*CAT: n
*SEM: twoRel[rel=single_+_position]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: single_+_position
*CAT: n
*SEM: twoRel[rel=single_+_position]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: single_+_position
*CAT: n
*SEM: orRel[rel=single_+_position]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: conductive_+_composite_+_structure
*CAT: n
*SEM: unaryRel[rel=conductive_+_composite_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: conductive_+_composite_+_structure
*CAT: n
*SEM: twoRel[rel=conductive_+_composite_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: conductive_+_composite_+_structure
*CAT: n
*SEM: twoRel[rel=conductive_+_composite_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: conductive_+_composite_+_structure
*CAT: n
*SEM: orRel[rel=conductive_+_composite_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bolt
*CAT: n
*SEM: unaryRel[rel=bolt]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bolt
*CAT: n
*SEM: twoRel[rel=bolt]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bolt
*CAT: n
*SEM: twoRel[rel=bolt]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bolt
*CAT: n
*SEM: orRel[rel=bolt]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: diameter
*CAT: n
*SEM: unaryRel[rel=diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: diameter
*CAT: n
*SEM: twoRel[rel=diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: diameter
*CAT: n
*SEM: twoRel[rel=diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: diameter
*CAT: n
*SEM: orRel[rel=diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: duct
*CAT: n
*SEM: unaryRel[rel=duct]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: duct
*CAT: n
*SEM: twoRel[rel=duct]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: duct
*CAT: n
*SEM: twoRel[rel=duct]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: duct
*CAT: n
*SEM: orRel[rel=duct]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs5004-xxxx_+_pipes
*CAT: n
*SEM: unaryRel[rel=abs5004-xxxx_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs5004-xxxx_+_pipes
*CAT: n
*SEM: twoRel[rel=abs5004-xxxx_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs5004-xxxx_+_pipes
*CAT: n
*SEM: twoRel[rel=abs5004-xxxx_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs5004-xxxx_+_pipes
*CAT: n
*SEM: orRel[rel=abs5004-xxxx_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: network_+_2_+_-rrb-
*CAT: n
*SEM: unaryRel[rel=network_+_2_+_-rrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: network_+_2_+_-rrb-
*CAT: n
*SEM: twoRel[rel=network_+_2_+_-rrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: network_+_2_+_-rrb-
*CAT: n
*SEM: twoRel[rel=network_+_2_+_-rrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: network_+_2_+_-rrb-
*CAT: n
*SEM: orRel[rel=network_+_2_+_-rrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: air_+_duct
*CAT: n
*SEM: unaryRel[rel=air_+_duct]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: air_+_duct
*CAT: n
*SEM: twoRel[rel=air_+_duct]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: air_+_duct
*CAT: n
*SEM: twoRel[rel=air_+_duct]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: air_+_duct
*CAT: n
*SEM: orRel[rel=air_+_duct]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_interface
*CAT: n
*SEM: unaryRel[rel=electrical_+_interface]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_interface
*CAT: n
*SEM: twoRel[rel=electrical_+_interface]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_interface
*CAT: n
*SEM: twoRel[rel=electrical_+_interface]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_interface
*CAT: n
*SEM: orRel[rel=electrical_+_interface]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 25mm_+_to_+_other_+_bundles
*CAT: n
*SEM: unaryRel[rel=25mm_+_to_+_other_+_bundles]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 25mm_+_to_+_other_+_bundles
*CAT: n
*SEM: twoRel[rel=25mm_+_to_+_other_+_bundles]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 25mm_+_to_+_other_+_bundles
*CAT: n
*SEM: twoRel[rel=25mm_+_to_+_other_+_bundles]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 25mm_+_to_+_other_+_bundles
*CAT: n
*SEM: orRel[rel=25mm_+_to_+_other_+_bundles]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: both_+_standard
*CAT: n
*SEM: unaryRel[rel=both_+_standard]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: both_+_standard
*CAT: n
*SEM: twoRel[rel=both_+_standard]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: both_+_standard
*CAT: n
*SEM: twoRel[rel=both_+_standard]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: both_+_standard
*CAT: n
*SEM: orRel[rel=both_+_standard]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: use
*CAT: n
*SEM: unaryRel[rel=use]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: use
*CAT: n
*SEM: twoRel[rel=use]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: use
*CAT: n
*SEM: twoRel[rel=use]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: use
*CAT: n
*SEM: orRel[rel=use]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 25mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_
*CAT: n
*SEM: unaryRel[rel=25mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 25mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_
*CAT: n
*SEM: twoRel[rel=25mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 25mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_
*CAT: n
*SEM: twoRel[rel=25mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 25mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_
*CAT: n
*SEM: orRel[rel=25mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0
*CAT: n
*SEM: unaryRel[rel=0]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0
*CAT: n
*SEM: twoRel[rel=0]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0
*CAT: n
*SEM: twoRel[rel=0]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0
*CAT: n
*SEM: orRel[rel=0]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optional_+_technical
*CAT: n
*SEM: unaryRel[rel=optional_+_technical]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optional_+_technical
*CAT: n
*SEM: twoRel[rel=optional_+_technical]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optional_+_technical
*CAT: n
*SEM: twoRel[rel=optional_+_technical]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optional_+_technical
*CAT: n
*SEM: orRel[rel=optional_+_technical]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundles
*CAT: n
*SEM: unaryRel[rel=bundles]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundles
*CAT: n
*SEM: twoRel[rel=bundles]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundles
*CAT: n
*SEM: twoRel[rel=bundles]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundles
*CAT: n
*SEM: orRel[rel=bundles]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two
*CAT: n
*SEM: unaryRel[rel=two]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two
*CAT: n
*SEM: twoRel[rel=two]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two
*CAT: n
*SEM: twoRel[rel=two]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two
*CAT: n
*SEM: orRel[rel=two]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asna2328_+__+_asna_+_2327_+_-rrb-
*CAT: n
*SEM: unaryRel[rel=asna2328_+__+_asna_+_2327_+_-rrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asna2328_+__+_asna_+_2327_+_-rrb-
*CAT: n
*SEM: twoRel[rel=asna2328_+__+_asna_+_2327_+_-rrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asna2328_+__+_asna_+_2327_+_-rrb-
*CAT: n
*SEM: twoRel[rel=asna2328_+__+_asna_+_2327_+_-rrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asna2328_+__+_asna_+_2327_+_-rrb-
*CAT: n
*SEM: orRel[rel=asna2328_+__+_asna_+_2327_+_-rrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: connector
*CAT: n
*SEM: unaryRel[rel=connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: connector
*CAT: n
*SEM: twoRel[rel=connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: connector
*CAT: n
*SEM: twoRel[rel=connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: connector
*CAT: n
*SEM: orRel[rel=connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0_+_to_+_360
*CAT: n
*SEM: unaryRel[rel=0_+_to_+_360]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0_+_to_+_360
*CAT: n
*SEM: twoRel[rel=0_+_to_+_360]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0_+_to_+_360
*CAT: n
*SEM: twoRel[rel=0_+_to_+_360]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0_+_to_+_360
*CAT: n
*SEM: orRel[rel=0_+_to_+_360]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_route_+_category
*CAT: n
*SEM: unaryRel[rel=each_+_route_+_category]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_route_+_category
*CAT: n
*SEM: twoRel[rel=each_+_route_+_category]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_route_+_category
*CAT: n
*SEM: twoRel[rel=each_+_route_+_category]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_route_+_category
*CAT: n
*SEM: orRel[rel=each_+_route_+_category]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vice_+_versa_+_-rrb-
*CAT: n
*SEM: unaryRel[rel=vice_+_versa_+_-rrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vice_+_versa_+_-rrb-
*CAT: n
*SEM: twoRel[rel=vice_+_versa_+_-rrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vice_+_versa_+_-rrb-
*CAT: n
*SEM: twoRel[rel=vice_+_versa_+_-rrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vice_+_versa_+_-rrb-
*CAT: n
*SEM: orRel[rel=vice_+_versa_+_-rrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_sense_+_line
*CAT: n
*SEM: unaryRel[rel=all_+_sense_+_line]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_sense_+_line
*CAT: n
*SEM: twoRel[rel=all_+_sense_+_line]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_sense_+_line
*CAT: n
*SEM: twoRel[rel=all_+_sense_+_line]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_sense_+_line
*CAT: n
*SEM: orRel[rel=all_+_sense_+_line]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: panel
*CAT: n
*SEM: unaryRel[rel=panel]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: panel
*CAT: n
*SEM: twoRel[rel=panel]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: panel
*CAT: n
*SEM: twoRel[rel=panel]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: panel
*CAT: n
*SEM: orRel[rel=panel]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: type
*CAT: n
*SEM: unaryRel[rel=type]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: type
*CAT: n
*SEM: twoRel[rel=type]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: type
*CAT: n
*SEM: twoRel[rel=type]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: type
*CAT: n
*SEM: orRel[rel=type]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: new_+_bracket
*CAT: n
*SEM: unaryRel[rel=new_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: new_+_bracket
*CAT: n
*SEM: twoRel[rel=new_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: new_+_bracket
*CAT: n
*SEM: twoRel[rel=new_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: new_+_bracket
*CAT: n
*SEM: orRel[rel=new_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_pitch
*CAT: n
*SEM: unaryRel[rel=maximum_+_pitch]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_pitch
*CAT: n
*SEM: twoRel[rel=maximum_+_pitch]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_pitch
*CAT: n
*SEM: twoRel[rel=maximum_+_pitch]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_pitch
*CAT: n
*SEM: orRel[rel=maximum_+_pitch]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bolts
*CAT: n
*SEM: unaryRel[rel=bolts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bolts
*CAT: n
*SEM: twoRel[rel=bolts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bolts
*CAT: n
*SEM: twoRel[rel=bolts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bolts
*CAT: n
*SEM: orRel[rel=bolts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: surfaces_+_-lrb-_+_e.g
*CAT: n
*SEM: unaryRel[rel=surfaces_+_-lrb-_+_e.g]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: surfaces_+_-lrb-_+_e.g
*CAT: n
*SEM: twoRel[rel=surfaces_+_-lrb-_+_e.g]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: surfaces_+_-lrb-_+_e.g
*CAT: n
*SEM: twoRel[rel=surfaces_+_-lrb-_+_e.g]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: surfaces_+_-lrb-_+_e.g
*CAT: n
*SEM: orRel[rel=surfaces_+_-lrb-_+_e.g]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: development_+_aircraft
*CAT: n
*SEM: unaryRel[rel=development_+_aircraft]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: development_+_aircraft
*CAT: n
*SEM: twoRel[rel=development_+_aircraft]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: development_+_aircraft
*CAT: n
*SEM: twoRel[rel=development_+_aircraft]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: development_+_aircraft
*CAT: n
*SEM: orRel[rel=development_+_aircraft]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 20mm_+_minimum
*CAT: n
*SEM: unaryRel[rel=20mm_+_minimum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 20mm_+_minimum
*CAT: n
*SEM: twoRel[rel=20mm_+_minimum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 20mm_+_minimum
*CAT: n
*SEM: twoRel[rel=20mm_+_minimum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 20mm_+_minimum
*CAT: n
*SEM: orRel[rel=20mm_+_minimum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: biggest_+_pipe
*CAT: n
*SEM: unaryRel[rel=biggest_+_pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: biggest_+_pipe
*CAT: n
*SEM: twoRel[rel=biggest_+_pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: biggest_+_pipe
*CAT: n
*SEM: twoRel[rel=biggest_+_pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: biggest_+_pipe
*CAT: n
*SEM: orRel[rel=biggest_+_pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs5151d6-035_+_pipes
*CAT: n
*SEM: unaryRel[rel=abs5151d6-035_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs5151d6-035_+_pipes
*CAT: n
*SEM: twoRel[rel=abs5151d6-035_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs5151d6-035_+_pipes
*CAT: n
*SEM: twoRel[rel=abs5151d6-035_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs5151d6-035_+_pipes
*CAT: n
*SEM: orRel[rel=abs5151d6-035_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_nsa5516_+_cbd
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_nsa5516_+_cbd]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_nsa5516_+_cbd
*CAT: n
*SEM: twoRel[rel=p-clamp_+_nsa5516_+_cbd]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_nsa5516_+_cbd
*CAT: n
*SEM: twoRel[rel=p-clamp_+_nsa5516_+_cbd]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_nsa5516_+_cbd
*CAT: n
*SEM: orRel[rel=p-clamp_+_nsa5516_+_cbd]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: an_+_electrical_+_protection
*CAT: n
*SEM: unaryRel[rel=an_+_electrical_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: an_+_electrical_+_protection
*CAT: n
*SEM: twoRel[rel=an_+_electrical_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: an_+_electrical_+_protection
*CAT: n
*SEM: twoRel[rel=an_+_electrical_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: an_+_electrical_+_protection
*CAT: n
*SEM: orRel[rel=an_+_electrical_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: rigid
*CAT: n
*SEM: unaryRel[rel=rigid]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: rigid
*CAT: n
*SEM: twoRel[rel=rigid]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: rigid
*CAT: n
*SEM: twoRel[rel=rigid]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: rigid
*CAT: n
*SEM: orRel[rel=rigid]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd
*CAT: n
*SEM: unaryRel[rel=0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd
*CAT: n
*SEM: twoRel[rel=0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd
*CAT: n
*SEM: twoRel[rel=0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd
*CAT: n
*SEM: orRel[rel=0r_+_p-clamp_+_type_+_b_+_nsa_+_5516_+_cbd]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 90
*CAT: n
*SEM: unaryRel[rel=90]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 90
*CAT: n
*SEM: twoRel[rel=90]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 90
*CAT: n
*SEM: twoRel[rel=90]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 90
*CAT: n
*SEM: orRel[rel=90]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asne0422
*CAT: n
*SEM: unaryRel[rel=asne0422]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asne0422
*CAT: n
*SEM: twoRel[rel=asne0422]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asne0422
*CAT: n
*SEM: twoRel[rel=asne0422]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asne0422
*CAT: n
*SEM: orRel[rel=asne0422]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: afdx_+_bus_+_link
*CAT: n
*SEM: unaryRel[rel=afdx_+_bus_+_link]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: afdx_+_bus_+_link
*CAT: n
*SEM: twoRel[rel=afdx_+_bus_+_link]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: afdx_+_bus_+_link
*CAT: n
*SEM: twoRel[rel=afdx_+_bus_+_link]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: afdx_+_bus_+_link
*CAT: n
*SEM: orRel[rel=afdx_+_bus_+_link]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 10mm
*CAT: n
*SEM: unaryRel[rel=10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 10mm
*CAT: n
*SEM: twoRel[rel=10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 10mm
*CAT: n
*SEM: twoRel[rel=10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 10mm
*CAT: n
*SEM: orRel[rel=10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: ata_+_92_+_fixation_+_point
*CAT: n
*SEM: unaryRel[rel=ata_+_92_+_fixation_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: ata_+_92_+_fixation_+_point
*CAT: n
*SEM: twoRel[rel=ata_+_92_+_fixation_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: ata_+_92_+_fixation_+_point
*CAT: n
*SEM: twoRel[rel=ata_+_92_+_fixation_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: ata_+_92_+_fixation_+_point
*CAT: n
*SEM: orRel[rel=ata_+_92_+_fixation_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account
*CAT: n
*SEM: unaryRel[rel=account]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account
*CAT: n
*SEM: twoRel[rel=account]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account
*CAT: n
*SEM: twoRel[rel=account]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account
*CAT: n
*SEM: orRel[rel=account]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: graphic
*CAT: n
*SEM: unaryRel[rel=graphic]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: graphic
*CAT: n
*SEM: twoRel[rel=graphic]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: graphic
*CAT: n
*SEM: twoRel[rel=graphic]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: graphic
*CAT: n
*SEM: orRel[rel=graphic]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 18_+_cables_+_-rrb-
*CAT: n
*SEM: unaryRel[rel=18_+_cables_+_-rrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 18_+_cables_+_-rrb-
*CAT: n
*SEM: twoRel[rel=18_+_cables_+_-rrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 18_+_cables_+_-rrb-
*CAT: n
*SEM: twoRel[rel=18_+_cables_+_-rrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 18_+_cables_+_-rrb-
*CAT: n
*SEM: orRel[rel=18_+_cables_+_-rrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: g-route_+_installation
*CAT: n
*SEM: unaryRel[rel=g-route_+_installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: g-route_+_installation
*CAT: n
*SEM: twoRel[rel=g-route_+_installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: g-route_+_installation
*CAT: n
*SEM: twoRel[rel=g-route_+_installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: g-route_+_installation
*CAT: n
*SEM: orRel[rel=g-route_+_installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs_+_1339_+_p-clamp
*CAT: n
*SEM: unaryRel[rel=abs_+_1339_+_p-clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs_+_1339_+_p-clamp
*CAT: n
*SEM: twoRel[rel=abs_+_1339_+_p-clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs_+_1339_+_p-clamp
*CAT: n
*SEM: twoRel[rel=abs_+_1339_+_p-clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs_+_1339_+_p-clamp
*CAT: n
*SEM: orRel[rel=abs_+_1339_+_p-clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: graphik
*CAT: n
*SEM: unaryRel[rel=graphik]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: graphik
*CAT: n
*SEM: twoRel[rel=graphik]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: graphik
*CAT: n
*SEM: twoRel[rel=graphik]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: graphik
*CAT: n
*SEM: orRel[rel=graphik]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spare_+_conduit
*CAT: n
*SEM: unaryRel[rel=spare_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spare_+_conduit
*CAT: n
*SEM: twoRel[rel=spare_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spare_+_conduit
*CAT: n
*SEM: twoRel[rel=spare_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spare_+_conduit
*CAT: n
*SEM: orRel[rel=spare_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: r_+_-lrb-_+_optical_+_-rrb-_+_routes
*CAT: n
*SEM: unaryRel[rel=r_+_-lrb-_+_optical_+_-rrb-_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: r_+_-lrb-_+_optical_+_-rrb-_+_routes
*CAT: n
*SEM: twoRel[rel=r_+_-lrb-_+_optical_+_-rrb-_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: r_+_-lrb-_+_optical_+_-rrb-_+_routes
*CAT: n
*SEM: twoRel[rel=r_+_-lrb-_+_optical_+_-rrb-_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: r_+_-lrb-_+_optical_+_-rrb-_+_routes
*CAT: n
*SEM: orRel[rel=r_+_-lrb-_+_optical_+_-rrb-_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hole_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=hole_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hole_+_clamp-block
*CAT: n
*SEM: twoRel[rel=hole_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hole_+_clamp-block
*CAT: n
*SEM: twoRel[rel=hole_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hole_+_clamp-block
*CAT: n
*SEM: orRel[rel=hole_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: type_+_aluminium_+_wire
*CAT: n
*SEM: unaryRel[rel=type_+_aluminium_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: type_+_aluminium_+_wire
*CAT: n
*SEM: twoRel[rel=type_+_aluminium_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: type_+_aluminium_+_wire
*CAT: n
*SEM: twoRel[rel=type_+_aluminium_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: type_+_aluminium_+_wire
*CAT: n
*SEM: orRel[rel=type_+_aluminium_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: elbow
*CAT: n
*SEM: unaryRel[rel=elbow]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: elbow
*CAT: n
*SEM: twoRel[rel=elbow]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: elbow
*CAT: n
*SEM: twoRel[rel=elbow]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: elbow
*CAT: n
*SEM: orRel[rel=elbow]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: suitable_+_to
*CAT: n
*SEM: unaryRel[rel=suitable_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: suitable_+_to
*CAT: n
*SEM: twoRel[rel=suitable_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: suitable_+_to
*CAT: n
*SEM: twoRel[rel=suitable_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: suitable_+_to
*CAT: n
*SEM: orRel[rel=suitable_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fromfire_+_seal
*CAT: n
*SEM: unaryRel[rel=fromfire_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fromfire_+_seal
*CAT: n
*SEM: twoRel[rel=fromfire_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fromfire_+_seal
*CAT: n
*SEM: twoRel[rel=fromfire_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fromfire_+_seal
*CAT: n
*SEM: orRel[rel=fromfire_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_figure
*CAT: n
*SEM: unaryRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_figure
*CAT: n
*SEM: twoRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_figure
*CAT: n
*SEM: twoRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_figure
*CAT: n
*SEM: orRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: copper_+_terminal_+_lug
*CAT: n
*SEM: unaryRel[rel=copper_+_terminal_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: copper_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=copper_+_terminal_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: copper_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=copper_+_terminal_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: copper_+_terminal_+_lug
*CAT: n
*SEM: orRel[rel=copper_+_terminal_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend
*CAT: n
*SEM: unaryRel[rel=bend]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend
*CAT: n
*SEM: twoRel[rel=bend]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend
*CAT: n
*SEM: twoRel[rel=bend]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend
*CAT: n
*SEM: orRel[rel=bend]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_bundle
*CAT: n
*SEM: unaryRel[rel=two_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_bundle
*CAT: n
*SEM: twoRel[rel=two_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_bundle
*CAT: n
*SEM: twoRel[rel=two_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_bundle
*CAT: n
*SEM: orRel[rel=two_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs1423_+_stand-off_+__+_colonette
*CAT: n
*SEM: unaryRel[rel=abs1423_+_stand-off_+__+_colonette]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs1423_+_stand-off_+__+_colonette
*CAT: n
*SEM: twoRel[rel=abs1423_+_stand-off_+__+_colonette]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs1423_+_stand-off_+__+_colonette
*CAT: n
*SEM: twoRel[rel=abs1423_+_stand-off_+__+_colonette]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs1423_+_stand-off_+__+_colonette
*CAT: n
*SEM: orRel[rel=abs1423_+_stand-off_+__+_colonette]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: long_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=long_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: long_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=long_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: long_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=long_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: long_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=long_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: swamp_+_areas
*CAT: n
*SEM: unaryRel[rel=swamp_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: swamp_+_areas
*CAT: n
*SEM: twoRel[rel=swamp_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: swamp_+_areas
*CAT: n
*SEM: twoRel[rel=swamp_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: swamp_+_areas
*CAT: n
*SEM: orRel[rel=swamp_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tank_+_wall
*CAT: n
*SEM: unaryRel[rel=fuel_+_tank_+_wall]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tank_+_wall
*CAT: n
*SEM: twoRel[rel=fuel_+_tank_+_wall]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tank_+_wall
*CAT: n
*SEM: twoRel[rel=fuel_+_tank_+_wall]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tank_+_wall
*CAT: n
*SEM: orRel[rel=fuel_+_tank_+_wall]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_nsa937493
*CAT: n
*SEM: unaryRel[rel=two_+_nsa937493]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_nsa937493
*CAT: n
*SEM: twoRel[rel=two_+_nsa937493]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_nsa937493
*CAT: n
*SEM: twoRel[rel=two_+_nsa937493]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_nsa937493
*CAT: n
*SEM: orRel[rel=two_+_nsa937493]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: atatched_+_figure
*CAT: n
*SEM: unaryRel[rel=atatched_+_figure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: atatched_+_figure
*CAT: n
*SEM: twoRel[rel=atatched_+_figure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: atatched_+_figure
*CAT: n
*SEM: twoRel[rel=atatched_+_figure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: atatched_+_figure
*CAT: n
*SEM: orRel[rel=atatched_+_figure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_type
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_type]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_type
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_type
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_type
*CAT: n
*SEM: orRel[rel=p-clamp_+_type]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum
*CAT: n
*SEM: unaryRel[rel=minimum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum
*CAT: n
*SEM: twoRel[rel=minimum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum
*CAT: n
*SEM: twoRel[rel=minimum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum
*CAT: n
*SEM: orRel[rel=minimum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tanks
*CAT: n
*SEM: unaryRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tanks
*CAT: n
*SEM: twoRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tanks
*CAT: n
*SEM: twoRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tanks
*CAT: n
*SEM: orRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sense
*CAT: n
*SEM: unaryRel[rel=sense]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sense
*CAT: n
*SEM: twoRel[rel=sense]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sense
*CAT: n
*SEM: twoRel[rel=sense]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sense
*CAT: n
*SEM: orRel[rel=sense]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bleed_+_air_+_system
*CAT: n
*SEM: unaryRel[rel=bleed_+_air_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bleed_+_air_+_system
*CAT: n
*SEM: twoRel[rel=bleed_+_air_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bleed_+_air_+_system
*CAT: n
*SEM: twoRel[rel=bleed_+_air_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bleed_+_air_+_system
*CAT: n
*SEM: orRel[rel=bleed_+_air_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: different_+_sizes
*CAT: n
*SEM: unaryRel[rel=different_+_sizes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: different_+_sizes
*CAT: n
*SEM: twoRel[rel=different_+_sizes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: different_+_sizes
*CAT: n
*SEM: twoRel[rel=different_+_sizes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: different_+_sizes
*CAT: n
*SEM: orRel[rel=different_+_sizes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: divergent_+_tapering
*CAT: n
*SEM: unaryRel[rel=divergent_+_tapering]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: divergent_+_tapering
*CAT: n
*SEM: twoRel[rel=divergent_+_tapering]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: divergent_+_tapering
*CAT: n
*SEM: twoRel[rel=divergent_+_tapering]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: divergent_+_tapering
*CAT: n
*SEM: orRel[rel=divergent_+_tapering]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: route
*CAT: n
*SEM: unaryRel[rel=route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: route
*CAT: n
*SEM: twoRel[rel=route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: route
*CAT: n
*SEM: twoRel[rel=route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: route
*CAT: n
*SEM: orRel[rel=route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: four_+_kits
*CAT: n
*SEM: unaryRel[rel=four_+_kits]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: four_+_kits
*CAT: n
*SEM: twoRel[rel=four_+_kits]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: four_+_kits
*CAT: n
*SEM: twoRel[rel=four_+_kits]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: four_+_kits
*CAT: n
*SEM: orRel[rel=four_+_kits]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bus_+_bar_+_fixation
*CAT: n
*SEM: unaryRel[rel=bus_+_bar_+_fixation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bus_+_bar_+_fixation
*CAT: n
*SEM: twoRel[rel=bus_+_bar_+_fixation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bus_+_bar_+_fixation
*CAT: n
*SEM: twoRel[rel=bus_+_bar_+_fixation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bus_+_bar_+_fixation
*CAT: n
*SEM: orRel[rel=bus_+_bar_+_fixation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: requirements
*CAT: n
*SEM: unaryRel[rel=requirements]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: requirements
*CAT: n
*SEM: twoRel[rel=requirements]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: requirements
*CAT: n
*SEM: twoRel[rel=requirements]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: requirements
*CAT: n
*SEM: orRel[rel=requirements]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: obstructive_+_component
*CAT: n
*SEM: unaryRel[rel=obstructive_+_component]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: obstructive_+_component
*CAT: n
*SEM: twoRel[rel=obstructive_+_component]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: obstructive_+_component
*CAT: n
*SEM: twoRel[rel=obstructive_+_component]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: obstructive_+_component
*CAT: n
*SEM: orRel[rel=obstructive_+_component]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipes
*CAT: n
*SEM: unaryRel[rel=pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipes
*CAT: n
*SEM: twoRel[rel=pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipes
*CAT: n
*SEM: twoRel[rel=pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipes
*CAT: n
*SEM: orRel[rel=pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nuts
*CAT: n
*SEM: unaryRel[rel=nuts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nuts
*CAT: n
*SEM: twoRel[rel=nuts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nuts
*CAT: n
*SEM: twoRel[rel=nuts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nuts
*CAT: n
*SEM: orRel[rel=nuts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: damage
*CAT: n
*SEM: unaryRel[rel=damage]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: damage
*CAT: n
*SEM: twoRel[rel=damage]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: damage
*CAT: n
*SEM: twoRel[rel=damage]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: damage
*CAT: n
*SEM: orRel[rel=damage]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: equipment_+_where
*CAT: n
*SEM: unaryRel[rel=equipment_+_where]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: equipment_+_where
*CAT: n
*SEM: twoRel[rel=equipment_+_where]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: equipment_+_where
*CAT: n
*SEM: twoRel[rel=equipment_+_where]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: equipment_+_where
*CAT: n
*SEM: orRel[rel=equipment_+_where]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hot
*CAT: n
*SEM: unaryRel[rel=hot]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hot
*CAT: n
*SEM: twoRel[rel=hot]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hot
*CAT: n
*SEM: twoRel[rel=hot]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hot
*CAT: n
*SEM: orRel[rel=hot]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuselage-wing
*CAT: n
*SEM: unaryRel[rel=fuselage-wing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuselage-wing
*CAT: n
*SEM: twoRel[rel=fuselage-wing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuselage-wing
*CAT: n
*SEM: twoRel[rel=fuselage-wing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuselage-wing
*CAT: n
*SEM: orRel[rel=fuselage-wing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_figures
*CAT: n
*SEM: unaryRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_figures
*CAT: n
*SEM: twoRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_figures
*CAT: n
*SEM: twoRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_figures
*CAT: n
*SEM: orRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_other_+_mechanical_+_ata
*CAT: n
*SEM: unaryRel[rel=any_+_other_+_mechanical_+_ata]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_other_+_mechanical_+_ata
*CAT: n
*SEM: twoRel[rel=any_+_other_+_mechanical_+_ata]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_other_+_mechanical_+_ata
*CAT: n
*SEM: twoRel[rel=any_+_other_+_mechanical_+_ata]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_other_+_mechanical_+_ata
*CAT: n
*SEM: orRel[rel=any_+_other_+_mechanical_+_ata]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: applied_+_mechanical_+_loads
*CAT: n
*SEM: unaryRel[rel=applied_+_mechanical_+_loads]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: applied_+_mechanical_+_loads
*CAT: n
*SEM: twoRel[rel=applied_+_mechanical_+_loads]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: applied_+_mechanical_+_loads
*CAT: n
*SEM: twoRel[rel=applied_+_mechanical_+_loads]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: applied_+_mechanical_+_loads
*CAT: n
*SEM: orRel[rel=applied_+_mechanical_+_loads]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa0141
*CAT: n
*SEM: unaryRel[rel=nsa0141]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa0141
*CAT: n
*SEM: twoRel[rel=nsa0141]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa0141
*CAT: n
*SEM: twoRel[rel=nsa0141]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa0141
*CAT: n
*SEM: orRel[rel=nsa0141]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 5516bd
*CAT: n
*SEM: unaryRel[rel=5516bd]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 5516bd
*CAT: n
*SEM: twoRel[rel=5516bd]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 5516bd
*CAT: n
*SEM: twoRel[rel=5516bd]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 5516bd
*CAT: n
*SEM: orRel[rel=5516bd]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa5516_+_cbd_+_+_+_mechanical_+_protection
*CAT: n
*SEM: unaryRel[rel=nsa5516_+_cbd_+_+_+_mechanical_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa5516_+_cbd_+_+_+_mechanical_+_protection
*CAT: n
*SEM: twoRel[rel=nsa5516_+_cbd_+_+_+_mechanical_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa5516_+_cbd_+_+_+_mechanical_+_protection
*CAT: n
*SEM: twoRel[rel=nsa5516_+_cbd_+_+_+_mechanical_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa5516_+_cbd_+_+_+_mechanical_+_protection
*CAT: n
*SEM: orRel[rel=nsa5516_+_cbd_+_+_+_mechanical_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asne_+_0248_+_identification_+_label_+_when
*CAT: n
*SEM: unaryRel[rel=asne_+_0248_+_identification_+_label_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asne_+_0248_+_identification_+_label_+_when
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_identification_+_label_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asne_+_0248_+_identification_+_label_+_when
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_identification_+_label_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asne_+_0248_+_identification_+_label_+_when
*CAT: n
*SEM: orRel[rel=asne_+_0248_+_identification_+_label_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distortion_+_areas
*CAT: n
*SEM: unaryRel[rel=distortion_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distortion_+_areas
*CAT: n
*SEM: twoRel[rel=distortion_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distortion_+_areas
*CAT: n
*SEM: twoRel[rel=distortion_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distortion_+_areas
*CAT: n
*SEM: orRel[rel=distortion_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clamp-block
*CAT: n
*SEM: unaryRel[rel=clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clamp-block
*CAT: n
*SEM: twoRel[rel=clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clamp-block
*CAT: n
*SEM: twoRel[rel=clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clamp-block
*CAT: n
*SEM: orRel[rel=clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: elongated_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=elongated_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: elongated_+_clamp-block
*CAT: n
*SEM: twoRel[rel=elongated_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: elongated_+_clamp-block
*CAT: n
*SEM: twoRel[rel=elongated_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: elongated_+_clamp-block
*CAT: n
*SEM: orRel[rel=elongated_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: drip_+_loop
*CAT: n
*SEM: unaryRel[rel=drip_+_loop]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: drip_+_loop
*CAT: n
*SEM: twoRel[rel=drip_+_loop]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: drip_+_loop
*CAT: n
*SEM: twoRel[rel=drip_+_loop]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: drip_+_loop
*CAT: n
*SEM: orRel[rel=drip_+_loop]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum_+_clearance_+_to_+_each_+_other
*CAT: n
*SEM: unaryRel[rel=minimum_+_clearance_+_to_+_each_+_other]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum_+_clearance_+_to_+_each_+_other
*CAT: n
*SEM: twoRel[rel=minimum_+_clearance_+_to_+_each_+_other]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum_+_clearance_+_to_+_each_+_other
*CAT: n
*SEM: twoRel[rel=minimum_+_clearance_+_to_+_each_+_other]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum_+_clearance_+_to_+_each_+_other
*CAT: n
*SEM: orRel[rel=minimum_+_clearance_+_to_+_each_+_other]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: castle_+_nuts
*CAT: n
*SEM: unaryRel[rel=castle_+_nuts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: castle_+_nuts
*CAT: n
*SEM: twoRel[rel=castle_+_nuts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: castle_+_nuts
*CAT: n
*SEM: twoRel[rel=castle_+_nuts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: castle_+_nuts
*CAT: n
*SEM: orRel[rel=castle_+_nuts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: structure
*CAT: n
*SEM: unaryRel[rel=structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: structure
*CAT: n
*SEM: twoRel[rel=structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: structure
*CAT: n
*SEM: twoRel[rel=structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: structure
*CAT: n
*SEM: orRel[rel=structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non_+_loosable
*CAT: n
*SEM: unaryRel[rel=non_+_loosable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non_+_loosable
*CAT: n
*SEM: twoRel[rel=non_+_loosable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non_+_loosable
*CAT: n
*SEM: twoRel[rel=non_+_loosable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non_+_loosable
*CAT: n
*SEM: orRel[rel=non_+_loosable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_diameter
*CAT: n
*SEM: unaryRel[rel=maximum_+_diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_diameter
*CAT: n
*SEM: twoRel[rel=maximum_+_diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_diameter
*CAT: n
*SEM: twoRel[rel=maximum_+_diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_diameter
*CAT: n
*SEM: orRel[rel=maximum_+_diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_cut
*CAT: n
*SEM: unaryRel[rel=account_+_cut]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_cut
*CAT: n
*SEM: twoRel[rel=account_+_cut]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_cut
*CAT: n
*SEM: twoRel[rel=account_+_cut]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_cut
*CAT: n
*SEM: orRel[rel=account_+_cut]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: branches
*CAT: n
*SEM: unaryRel[rel=branches]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: branches
*CAT: n
*SEM: twoRel[rel=branches]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: branches
*CAT: n
*SEM: twoRel[rel=branches]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: branches
*CAT: n
*SEM: orRel[rel=branches]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: in-situ_+_swaging
*CAT: n
*SEM: unaryRel[rel=in-situ_+_swaging]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: in-situ_+_swaging
*CAT: n
*SEM: twoRel[rel=in-situ_+_swaging]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: in-situ_+_swaging
*CAT: n
*SEM: twoRel[rel=in-situ_+_swaging]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: in-situ_+_swaging
*CAT: n
*SEM: orRel[rel=in-situ_+_swaging]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: horizontal_+_direction
*CAT: n
*SEM: unaryRel[rel=horizontal_+_direction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: horizontal_+_direction
*CAT: n
*SEM: twoRel[rel=horizontal_+_direction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: horizontal_+_direction
*CAT: n
*SEM: twoRel[rel=horizontal_+_direction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: horizontal_+_direction
*CAT: n
*SEM: orRel[rel=horizontal_+_direction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two
*CAT: n
*SEM: unaryRel[rel=two]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two
*CAT: n
*SEM: twoRel[rel=two]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two
*CAT: n
*SEM: twoRel[rel=two]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two
*CAT: n
*SEM: orRel[rel=two]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: yellow_+_asne0646_+_identification
*CAT: n
*SEM: unaryRel[rel=yellow_+_asne0646_+_identification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: yellow_+_asne0646_+_identification
*CAT: n
*SEM: twoRel[rel=yellow_+_asne0646_+_identification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: yellow_+_asne0646_+_identification
*CAT: n
*SEM: twoRel[rel=yellow_+_asne0646_+_identification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: yellow_+_asne0646_+_identification
*CAT: n
*SEM: orRel[rel=yellow_+_asne0646_+_identification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: high_+_t_+_bobbin_+_+
*CAT: n
*SEM: unaryRel[rel=high_+_t_+_bobbin_+_+]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: high_+_t_+_bobbin_+_+
*CAT: n
*SEM: twoRel[rel=high_+_t_+_bobbin_+_+]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: high_+_t_+_bobbin_+_+
*CAT: n
*SEM: twoRel[rel=high_+_t_+_bobbin_+_+]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: high_+_t_+_bobbin_+_+
*CAT: n
*SEM: orRel[rel=high_+_t_+_bobbin_+_+]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fqi
*CAT: n
*SEM: unaryRel[rel=fqi]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fqi
*CAT: n
*SEM: twoRel[rel=fqi]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fqi
*CAT: n
*SEM: twoRel[rel=fqi]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fqi
*CAT: n
*SEM: orRel[rel=fqi]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs_+_0724_+_label
*CAT: n
*SEM: unaryRel[rel=abs_+_0724_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs_+_0724_+_label
*CAT: n
*SEM: twoRel[rel=abs_+_0724_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs_+_0724_+_label
*CAT: n
*SEM: twoRel[rel=abs_+_0724_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs_+_0724_+_label
*CAT: n
*SEM: orRel[rel=abs_+_0724_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: r-route
*CAT: n
*SEM: unaryRel[rel=r-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: r-route
*CAT: n
*SEM: twoRel[rel=r-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: r-route
*CAT: n
*SEM: twoRel[rel=r-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: r-route
*CAT: n
*SEM: orRel[rel=r-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: zones_+_to_+_non-pressurised_+_zones_+_-lrb-
*CAT: n
*SEM: unaryRel[rel=zones_+_to_+_non-pressurised_+_zones_+_-lrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: zones_+_to_+_non-pressurised_+_zones_+_-lrb-
*CAT: n
*SEM: twoRel[rel=zones_+_to_+_non-pressurised_+_zones_+_-lrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: zones_+_to_+_non-pressurised_+_zones_+_-lrb-
*CAT: n
*SEM: twoRel[rel=zones_+_to_+_non-pressurised_+_zones_+_-lrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: zones_+_to_+_non-pressurised_+_zones_+_-lrb-
*CAT: n
*SEM: orRel[rel=zones_+_to_+_non-pressurised_+_zones_+_-lrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_component
*CAT: n
*SEM: unaryRel[rel=electrical_+_component]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_component
*CAT: n
*SEM: twoRel[rel=electrical_+_component]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_component
*CAT: n
*SEM: twoRel[rel=electrical_+_component]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_component
*CAT: n
*SEM: orRel[rel=electrical_+_component]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: commercial_+_p-route
*CAT: n
*SEM: unaryRel[rel=commercial_+_p-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: commercial_+_p-route
*CAT: n
*SEM: twoRel[rel=commercial_+_p-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: commercial_+_p-route
*CAT: n
*SEM: twoRel[rel=commercial_+_p-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: commercial_+_p-route
*CAT: n
*SEM: orRel[rel=commercial_+_p-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 4
*CAT: n
*SEM: unaryRel[rel=4]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 4
*CAT: n
*SEM: twoRel[rel=4]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 4
*CAT: n
*SEM: twoRel[rel=4]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 4
*CAT: n
*SEM: orRel[rel=4]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pitch
*CAT: n
*SEM: unaryRel[rel=pitch]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pitch
*CAT: n
*SEM: twoRel[rel=pitch]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pitch
*CAT: n
*SEM: twoRel[rel=pitch]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pitch
*CAT: n
*SEM: orRel[rel=pitch]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: direct_+_contact
*CAT: n
*SEM: unaryRel[rel=direct_+_contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: direct_+_contact
*CAT: n
*SEM: twoRel[rel=direct_+_contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: direct_+_contact
*CAT: n
*SEM: twoRel[rel=direct_+_contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: direct_+_contact
*CAT: n
*SEM: orRel[rel=direct_+_contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: location
*CAT: n
*SEM: unaryRel[rel=location]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: location
*CAT: n
*SEM: twoRel[rel=location]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: location
*CAT: n
*SEM: twoRel[rel=location]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: location
*CAT: n
*SEM: orRel[rel=location]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa8420-7_+_lacing_+_tape
*CAT: n
*SEM: unaryRel[rel=nsa8420-7_+_lacing_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa8420-7_+_lacing_+_tape
*CAT: n
*SEM: twoRel[rel=nsa8420-7_+_lacing_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa8420-7_+_lacing_+_tape
*CAT: n
*SEM: twoRel[rel=nsa8420-7_+_lacing_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa8420-7_+_lacing_+_tape
*CAT: n
*SEM: orRel[rel=nsa8420-7_+_lacing_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 3000psi_+_pipes
*CAT: n
*SEM: unaryRel[rel=3000psi_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 3000psi_+_pipes
*CAT: n
*SEM: twoRel[rel=3000psi_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 3000psi_+_pipes
*CAT: n
*SEM: twoRel[rel=3000psi_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 3000psi_+_pipes
*CAT: n
*SEM: orRel[rel=3000psi_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: mechanical_+_stress
*CAT: n
*SEM: unaryRel[rel=mechanical_+_stress]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: mechanical_+_stress
*CAT: n
*SEM: twoRel[rel=mechanical_+_stress]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: mechanical_+_stress
*CAT: n
*SEM: twoRel[rel=mechanical_+_stress]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: mechanical_+_stress
*CAT: n
*SEM: orRel[rel=mechanical_+_stress]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: suction_+_pipes
*CAT: n
*SEM: unaryRel[rel=suction_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: suction_+_pipes
*CAT: n
*SEM: twoRel[rel=suction_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: suction_+_pipes
*CAT: n
*SEM: twoRel[rel=suction_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: suction_+_pipes
*CAT: n
*SEM: orRel[rel=suction_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: wire_+_a_+_clearance
*CAT: n
*SEM: unaryRel[rel=wire_+_a_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: wire_+_a_+_clearance
*CAT: n
*SEM: twoRel[rel=wire_+_a_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: wire_+_a_+_clearance
*CAT: n
*SEM: twoRel[rel=wire_+_a_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: wire_+_a_+_clearance
*CAT: n
*SEM: orRel[rel=wire_+_a_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fin_+_label_+_which
*CAT: n
*SEM: unaryRel[rel=fin_+_label_+_which]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fin_+_label_+_which
*CAT: n
*SEM: twoRel[rel=fin_+_label_+_which]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fin_+_label_+_which
*CAT: n
*SEM: twoRel[rel=fin_+_label_+_which]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fin_+_label_+_which
*CAT: n
*SEM: orRel[rel=fin_+_label_+_which]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: every_+_pipe
*CAT: n
*SEM: unaryRel[rel=every_+_pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: every_+_pipe
*CAT: n
*SEM: twoRel[rel=every_+_pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: every_+_pipe
*CAT: n
*SEM: twoRel[rel=every_+_pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: every_+_pipe
*CAT: n
*SEM: orRel[rel=every_+_pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: braided_+_open_+_conduit
*CAT: n
*SEM: unaryRel[rel=braided_+_open_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: braided_+_open_+_conduit
*CAT: n
*SEM: twoRel[rel=braided_+_open_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: braided_+_open_+_conduit
*CAT: n
*SEM: twoRel[rel=braided_+_open_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: braided_+_open_+_conduit
*CAT: n
*SEM: orRel[rel=braided_+_open_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vertical_+_direction
*CAT: n
*SEM: unaryRel[rel=vertical_+_direction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vertical_+_direction
*CAT: n
*SEM: twoRel[rel=vertical_+_direction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vertical_+_direction
*CAT: n
*SEM: twoRel[rel=vertical_+_direction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vertical_+_direction
*CAT: n
*SEM: orRel[rel=vertical_+_direction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: standard_+_connector
*CAT: n
*SEM: unaryRel[rel=standard_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: standard_+_connector
*CAT: n
*SEM: twoRel[rel=standard_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: standard_+_connector
*CAT: n
*SEM: twoRel[rel=standard_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: standard_+_connector
*CAT: n
*SEM: orRel[rel=standard_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: adhesive
*CAT: n
*SEM: unaryRel[rel=adhesive]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: adhesive
*CAT: n
*SEM: twoRel[rel=adhesive]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: adhesive
*CAT: n
*SEM: twoRel[rel=adhesive]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: adhesive
*CAT: n
*SEM: orRel[rel=adhesive]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: basic_+_clearance_+_to_+_each_+_other
*CAT: n
*SEM: unaryRel[rel=basic_+_clearance_+_to_+_each_+_other]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: basic_+_clearance_+_to_+_each_+_other
*CAT: n
*SEM: twoRel[rel=basic_+_clearance_+_to_+_each_+_other]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: basic_+_clearance_+_to_+_each_+_other
*CAT: n
*SEM: twoRel[rel=basic_+_clearance_+_to_+_each_+_other]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: basic_+_clearance_+_to_+_each_+_other
*CAT: n
*SEM: orRel[rel=basic_+_clearance_+_to_+_each_+_other]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: receptacles
*CAT: n
*SEM: unaryRel[rel=receptacles]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: receptacles
*CAT: n
*SEM: twoRel[rel=receptacles]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: receptacles
*CAT: n
*SEM: twoRel[rel=receptacles]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: receptacles
*CAT: n
*SEM: orRel[rel=receptacles]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p_+_routes
*CAT: n
*SEM: unaryRel[rel=p_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p_+_routes
*CAT: n
*SEM: twoRel[rel=p_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p_+_routes
*CAT: n
*SEM: twoRel[rel=p_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p_+_routes
*CAT: n
*SEM: orRel[rel=p_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_component_+_areas
*CAT: n
*SEM: unaryRel[rel=fuel_+_component_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_component_+_areas
*CAT: n
*SEM: twoRel[rel=fuel_+_component_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_component_+_areas
*CAT: n
*SEM: twoRel[rel=fuel_+_component_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_component_+_areas
*CAT: n
*SEM: orRel[rel=fuel_+_component_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 5s-route
*CAT: n
*SEM: unaryRel[rel=5s-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 5s-route
*CAT: n
*SEM: twoRel[rel=5s-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 5s-route
*CAT: n
*SEM: twoRel[rel=5s-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 5s-route
*CAT: n
*SEM: orRel[rel=5s-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: crimped_+_cap_+_nsa936601
*CAT: n
*SEM: unaryRel[rel=crimped_+_cap_+_nsa936601]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: crimped_+_cap_+_nsa936601
*CAT: n
*SEM: twoRel[rel=crimped_+_cap_+_nsa936601]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: crimped_+_cap_+_nsa936601
*CAT: n
*SEM: twoRel[rel=crimped_+_cap_+_nsa936601]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: crimped_+_cap_+_nsa936601
*CAT: n
*SEM: orRel[rel=crimped_+_cap_+_nsa936601]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: f_+_when
*CAT: n
*SEM: unaryRel[rel=f_+_when]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: f_+_when
*CAT: n
*SEM: twoRel[rel=f_+_when]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: f_+_when
*CAT: n
*SEM: twoRel[rel=f_+_when]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: f_+_when
*CAT: n
*SEM: orRel[rel=f_+_when]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vn_+_-rrb-
*CAT: n
*SEM: unaryRel[rel=vn_+_-rrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vn_+_-rrb-
*CAT: n
*SEM: twoRel[rel=vn_+_-rrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vn_+_-rrb-
*CAT: n
*SEM: twoRel[rel=vn_+_-rrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vn_+_-rrb-
*CAT: n
*SEM: orRel[rel=vn_+_-rrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: power_+_supply
*CAT: n
*SEM: unaryRel[rel=power_+_supply]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: power_+_supply
*CAT: n
*SEM: twoRel[rel=power_+_supply]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: power_+_supply
*CAT: n
*SEM: twoRel[rel=power_+_supply]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: power_+_supply
*CAT: n
*SEM: orRel[rel=power_+_supply]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: crossing-route
*CAT: n
*SEM: unaryRel[rel=crossing-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: crossing-route
*CAT: n
*SEM: twoRel[rel=crossing-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: crossing-route
*CAT: n
*SEM: twoRel[rel=crossing-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: crossing-route
*CAT: n
*SEM: orRel[rel=crossing-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle_+_crossings
*CAT: n
*SEM: unaryRel[rel=bundle_+_crossings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle_+_crossings
*CAT: n
*SEM: twoRel[rel=bundle_+_crossings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle_+_crossings
*CAT: n
*SEM: twoRel[rel=bundle_+_crossings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle_+_crossings
*CAT: n
*SEM: orRel[rel=bundle_+_crossings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: separators
*CAT: n
*SEM: unaryRel[rel=separators]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: separators
*CAT: n
*SEM: twoRel[rel=separators]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: separators
*CAT: n
*SEM: twoRel[rel=separators]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: separators
*CAT: n
*SEM: orRel[rel=separators]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: drain
*CAT: n
*SEM: unaryRel[rel=drain]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: drain
*CAT: n
*SEM: twoRel[rel=drain]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: drain
*CAT: n
*SEM: twoRel[rel=drain]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: drain
*CAT: n
*SEM: orRel[rel=drain]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: horizontal_+_routing
*CAT: n
*SEM: unaryRel[rel=horizontal_+_routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: horizontal_+_routing
*CAT: n
*SEM: twoRel[rel=horizontal_+_routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: horizontal_+_routing
*CAT: n
*SEM: twoRel[rel=horizontal_+_routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: horizontal_+_routing
*CAT: n
*SEM: orRel[rel=horizontal_+_routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 2_+_pipes
*CAT: n
*SEM: unaryRel[rel=2_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 2_+_pipes
*CAT: n
*SEM: twoRel[rel=2_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 2_+_pipes
*CAT: n
*SEM: twoRel[rel=2_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 2_+_pipes
*CAT: n
*SEM: orRel[rel=2_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: ``_+_single_+_hole_+_''_+_type_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=``_+_single_+_hole_+_''_+_type_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: ``_+_single_+_hole_+_''_+_type_+_clamp-block
*CAT: n
*SEM: twoRel[rel=``_+_single_+_hole_+_''_+_type_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: ``_+_single_+_hole_+_''_+_type_+_clamp-block
*CAT: n
*SEM: twoRel[rel=``_+_single_+_hole_+_''_+_type_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: ``_+_single_+_hole_+_''_+_type_+_clamp-block
*CAT: n
*SEM: orRel[rel=``_+_single_+_hole_+_''_+_type_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_additional_+_terminal_+_lug
*CAT: n
*SEM: unaryRel[rel=one_+_additional_+_terminal_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_additional_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=one_+_additional_+_terminal_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_additional_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=one_+_additional_+_terminal_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_additional_+_terminal_+_lug
*CAT: n
*SEM: orRel[rel=one_+_additional_+_terminal_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: an_+_operator
*CAT: n
*SEM: unaryRel[rel=an_+_operator]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: an_+_operator
*CAT: n
*SEM: twoRel[rel=an_+_operator]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: an_+_operator
*CAT: n
*SEM: twoRel[rel=an_+_operator]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: an_+_operator
*CAT: n
*SEM: orRel[rel=an_+_operator]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one
*CAT: n
*SEM: unaryRel[rel=one]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one
*CAT: n
*SEM: twoRel[rel=one]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one
*CAT: n
*SEM: twoRel[rel=one]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one
*CAT: n
*SEM: orRel[rel=one]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: swaged_+_unions
*CAT: n
*SEM: unaryRel[rel=swaged_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: swaged_+_unions
*CAT: n
*SEM: twoRel[rel=swaged_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: swaged_+_unions
*CAT: n
*SEM: twoRel[rel=swaged_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: swaged_+_unions
*CAT: n
*SEM: orRel[rel=swaged_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: definition_+_dossier
*CAT: n
*SEM: unaryRel[rel=definition_+_dossier]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: definition_+_dossier
*CAT: n
*SEM: twoRel[rel=definition_+_dossier]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: definition_+_dossier
*CAT: n
*SEM: twoRel[rel=definition_+_dossier]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: definition_+_dossier
*CAT: n
*SEM: orRel[rel=definition_+_dossier]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: elbow_+_unions
*CAT: n
*SEM: unaryRel[rel=elbow_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: elbow_+_unions
*CAT: n
*SEM: twoRel[rel=elbow_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: elbow_+_unions
*CAT: n
*SEM: twoRel[rel=elbow_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: elbow_+_unions
*CAT: n
*SEM: orRel[rel=elbow_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sleeve
*CAT: n
*SEM: unaryRel[rel=sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sleeve
*CAT: n
*SEM: twoRel[rel=sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sleeve
*CAT: n
*SEM: twoRel[rel=sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sleeve
*CAT: n
*SEM: orRel[rel=sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: oxygen
*CAT: n
*SEM: unaryRel[rel=oxygen]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: oxygen
*CAT: n
*SEM: twoRel[rel=oxygen]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: oxygen
*CAT: n
*SEM: twoRel[rel=oxygen]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: oxygen
*CAT: n
*SEM: orRel[rel=oxygen]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tank_+_boundaries
*CAT: n
*SEM: unaryRel[rel=fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tank_+_boundaries
*CAT: n
*SEM: twoRel[rel=fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tank_+_boundaries
*CAT: n
*SEM: twoRel[rel=fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tank_+_boundaries
*CAT: n
*SEM: orRel[rel=fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_angles
*CAT: n
*SEM: unaryRel[rel=bend_+_angles]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_angles
*CAT: n
*SEM: twoRel[rel=bend_+_angles]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_angles
*CAT: n
*SEM: twoRel[rel=bend_+_angles]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_angles
*CAT: n
*SEM: orRel[rel=bend_+_angles]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flexible_+_hoses
*CAT: n
*SEM: orRel[rel=flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: relative_+_movement
*CAT: n
*SEM: unaryRel[rel=relative_+_movement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: relative_+_movement
*CAT: n
*SEM: twoRel[rel=relative_+_movement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: relative_+_movement
*CAT: n
*SEM: twoRel[rel=relative_+_movement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: relative_+_movement
*CAT: n
*SEM: orRel[rel=relative_+_movement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: r-route_+_-lrb-_+_optical_+_-rrb-
*CAT: n
*SEM: unaryRel[rel=r-route_+_-lrb-_+_optical_+_-rrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: r-route_+_-lrb-_+_optical_+_-rrb-
*CAT: n
*SEM: twoRel[rel=r-route_+_-lrb-_+_optical_+_-rrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: r-route_+_-lrb-_+_optical_+_-rrb-
*CAT: n
*SEM: twoRel[rel=r-route_+_-lrb-_+_optical_+_-rrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: r-route_+_-lrb-_+_optical_+_-rrb-
*CAT: n
*SEM: orRel[rel=r-route_+_-lrb-_+_optical_+_-rrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 2d
*CAT: n
*SEM: unaryRel[rel=2d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 2d
*CAT: n
*SEM: twoRel[rel=2d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 2d
*CAT: n
*SEM: twoRel[rel=2d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 2d
*CAT: n
*SEM: orRel[rel=2d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_movable_+_panel
*CAT: n
*SEM: unaryRel[rel=all_+_movable_+_panel]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_movable_+_panel
*CAT: n
*SEM: twoRel[rel=all_+_movable_+_panel]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_movable_+_panel
*CAT: n
*SEM: twoRel[rel=all_+_movable_+_panel]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_movable_+_panel
*CAT: n
*SEM: orRel[rel=all_+_movable_+_panel]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: structural_+_deformation
*CAT: n
*SEM: unaryRel[rel=structural_+_deformation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: structural_+_deformation
*CAT: n
*SEM: twoRel[rel=structural_+_deformation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: structural_+_deformation
*CAT: n
*SEM: twoRel[rel=structural_+_deformation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: structural_+_deformation
*CAT: n
*SEM: orRel[rel=structural_+_deformation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 3d
*CAT: n
*SEM: unaryRel[rel=3d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 3d
*CAT: n
*SEM: twoRel[rel=3d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 3d
*CAT: n
*SEM: twoRel[rel=3d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 3d
*CAT: n
*SEM: orRel[rel=3d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressurized_+_zone
*CAT: n
*SEM: unaryRel[rel=pressurized_+_zone]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressurized_+_zone
*CAT: n
*SEM: twoRel[rel=pressurized_+_zone]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressurized_+_zone
*CAT: n
*SEM: twoRel[rel=pressurized_+_zone]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressurized_+_zone
*CAT: n
*SEM: orRel[rel=pressurized_+_zone]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: double_+_derivation
*CAT: n
*SEM: unaryRel[rel=double_+_derivation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: double_+_derivation
*CAT: n
*SEM: twoRel[rel=double_+_derivation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: double_+_derivation
*CAT: n
*SEM: twoRel[rel=double_+_derivation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: double_+_derivation
*CAT: n
*SEM: orRel[rel=double_+_derivation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa935403_+_silicon_+_tape
*CAT: n
*SEM: unaryRel[rel=nsa935403_+_silicon_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa935403_+_silicon_+_tape
*CAT: n
*SEM: twoRel[rel=nsa935403_+_silicon_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa935403_+_silicon_+_tape
*CAT: n
*SEM: twoRel[rel=nsa935403_+_silicon_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa935403_+_silicon_+_tape
*CAT: n
*SEM: orRel[rel=nsa935403_+_silicon_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clamp
*CAT: n
*SEM: unaryRel[rel=clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clamp
*CAT: n
*SEM: twoRel[rel=clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clamp
*CAT: n
*SEM: twoRel[rel=clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clamp
*CAT: n
*SEM: orRel[rel=clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: inside_+_panel
*CAT: n
*SEM: unaryRel[rel=inside_+_panel]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: inside_+_panel
*CAT: n
*SEM: twoRel[rel=inside_+_panel]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: inside_+_panel
*CAT: n
*SEM: twoRel[rel=inside_+_panel]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: inside_+_panel
*CAT: n
*SEM: orRel[rel=inside_+_panel]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: thermal_+_variation
*CAT: n
*SEM: unaryRel[rel=thermal_+_variation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: thermal_+_variation
*CAT: n
*SEM: twoRel[rel=thermal_+_variation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: thermal_+_variation
*CAT: n
*SEM: twoRel[rel=thermal_+_variation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: thermal_+_variation
*CAT: n
*SEM: orRel[rel=thermal_+_variation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs0916_+_shrink_+_sleeve
*CAT: n
*SEM: unaryRel[rel=abs0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs0916_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=abs0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs0916_+_shrink_+_sleeve
*CAT: n
*SEM: twoRel[rel=abs0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs0916_+_shrink_+_sleeve
*CAT: n
*SEM: orRel[rel=abs0916_+_shrink_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bends
*CAT: n
*SEM: unaryRel[rel=bends]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bends
*CAT: n
*SEM: twoRel[rel=bends]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bends
*CAT: n
*SEM: twoRel[rel=bends]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bends
*CAT: n
*SEM: orRel[rel=bends]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_vn
*CAT: n
*SEM: unaryRel[rel=one_+_vn]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_vn
*CAT: n
*SEM: twoRel[rel=one_+_vn]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_vn
*CAT: n
*SEM: twoRel[rel=one_+_vn]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_vn
*CAT: n
*SEM: orRel[rel=one_+_vn]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0.750_+_to_+_5.0_+_inch
*CAT: n
*SEM: unaryRel[rel=0.750_+_to_+_5.0_+_inch]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0.750_+_to_+_5.0_+_inch
*CAT: n
*SEM: twoRel[rel=0.750_+_to_+_5.0_+_inch]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0.750_+_to_+_5.0_+_inch
*CAT: n
*SEM: twoRel[rel=0.750_+_to_+_5.0_+_inch]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0.750_+_to_+_5.0_+_inch
*CAT: n
*SEM: orRel[rel=0.750_+_to_+_5.0_+_inch]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: temperature_+_sensor
*CAT: n
*SEM: unaryRel[rel=temperature_+_sensor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: temperature_+_sensor
*CAT: n
*SEM: twoRel[rel=temperature_+_sensor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: temperature_+_sensor
*CAT: n
*SEM: twoRel[rel=temperature_+_sensor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: temperature_+_sensor
*CAT: n
*SEM: orRel[rel=temperature_+_sensor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_points
*CAT: n
*SEM: unaryRel[rel=attachment_+_points]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_points
*CAT: n
*SEM: twoRel[rel=attachment_+_points]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_points
*CAT: n
*SEM: twoRel[rel=attachment_+_points]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_points
*CAT: n
*SEM: orRel[rel=attachment_+_points]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: or_x000d_+__
*CAT: n
*SEM: unaryRel[rel=or_x000d_+__]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: or_x000d_+__
*CAT: n
*SEM: twoRel[rel=or_x000d_+__]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: or_x000d_+__
*CAT: n
*SEM: twoRel[rel=or_x000d_+__]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: or_x000d_+__
*CAT: n
*SEM: orRel[rel=or_x000d_+__]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sufficient_+_space
*CAT: n
*SEM: unaryRel[rel=sufficient_+_space]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sufficient_+_space
*CAT: n
*SEM: twoRel[rel=sufficient_+_space]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sufficient_+_space
*CAT: n
*SEM: twoRel[rel=sufficient_+_space]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sufficient_+_space
*CAT: n
*SEM: orRel[rel=sufficient_+_space]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cargo_+_floor
*CAT: n
*SEM: unaryRel[rel=cargo_+_floor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cargo_+_floor
*CAT: n
*SEM: twoRel[rel=cargo_+_floor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cargo_+_floor
*CAT: n
*SEM: twoRel[rel=cargo_+_floor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cargo_+_floor
*CAT: n
*SEM: orRel[rel=cargo_+_floor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: siri_+_application
*CAT: n
*SEM: unaryRel[rel=siri_+_application]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: siri_+_application
*CAT: n
*SEM: twoRel[rel=siri_+_application]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: siri_+_application
*CAT: n
*SEM: twoRel[rel=siri_+_application]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: siri_+_application
*CAT: n
*SEM: orRel[rel=siri_+_application]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 62200
*CAT: n
*SEM: unaryRel[rel=62200]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 62200
*CAT: n
*SEM: twoRel[rel=62200]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 62200
*CAT: n
*SEM: twoRel[rel=62200]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 62200
*CAT: n
*SEM: orRel[rel=62200]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: installation
*CAT: n
*SEM: unaryRel[rel=installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: installation
*CAT: n
*SEM: twoRel[rel=installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: installation
*CAT: n
*SEM: twoRel[rel=installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: installation
*CAT: n
*SEM: orRel[rel=installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: out
*CAT: n
*SEM: unaryRel[rel=out]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: out
*CAT: n
*SEM: twoRel[rel=out]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: out
*CAT: n
*SEM: twoRel[rel=out]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: out
*CAT: n
*SEM: orRel[rel=out]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_end
*CAT: n
*SEM: unaryRel[rel=each_+_end]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_end
*CAT: n
*SEM: twoRel[rel=each_+_end]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_end
*CAT: n
*SEM: twoRel[rel=each_+_end]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_end
*CAT: n
*SEM: orRel[rel=each_+_end]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asne5107-b
*CAT: n
*SEM: unaryRel[rel=asne5107-b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asne5107-b
*CAT: n
*SEM: twoRel[rel=asne5107-b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asne5107-b
*CAT: n
*SEM: twoRel[rel=asne5107-b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asne5107-b
*CAT: n
*SEM: orRel[rel=asne5107-b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spray_+_cover
*CAT: n
*SEM: unaryRel[rel=spray_+_cover]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spray_+_cover
*CAT: n
*SEM: twoRel[rel=spray_+_cover]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spray_+_cover
*CAT: n
*SEM: twoRel[rel=spray_+_cover]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spray_+_cover
*CAT: n
*SEM: orRel[rel=spray_+_cover]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: feeder_+_wire
*CAT: n
*SEM: unaryRel[rel=feeder_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: feeder_+_wire
*CAT: n
*SEM: twoRel[rel=feeder_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: feeder_+_wire
*CAT: n
*SEM: twoRel[rel=feeder_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: feeder_+_wire
*CAT: n
*SEM: orRel[rel=feeder_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_6_+_times
*CAT: n
*SEM: unaryRel[rel=bend_+_6_+_times]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_6_+_times
*CAT: n
*SEM: twoRel[rel=bend_+_6_+_times]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_6_+_times
*CAT: n
*SEM: twoRel[rel=bend_+_6_+_times]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_6_+_times
*CAT: n
*SEM: orRel[rel=bend_+_6_+_times]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: -lrb-_+_asb1423_+_abs1424_+_-rrb-_+_exept
*CAT: n
*SEM: unaryRel[rel=-lrb-_+_asb1423_+_abs1424_+_-rrb-_+_exept]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: -lrb-_+_asb1423_+_abs1424_+_-rrb-_+_exept
*CAT: n
*SEM: twoRel[rel=-lrb-_+_asb1423_+_abs1424_+_-rrb-_+_exept]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: -lrb-_+_asb1423_+_abs1424_+_-rrb-_+_exept
*CAT: n
*SEM: twoRel[rel=-lrb-_+_asb1423_+_abs1424_+_-rrb-_+_exept]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: -lrb-_+_asb1423_+_abs1424_+_-rrb-_+_exept
*CAT: n
*SEM: orRel[rel=-lrb-_+_asb1423_+_abs1424_+_-rrb-_+_exept]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non_+_remobale
*CAT: n
*SEM: unaryRel[rel=non_+_remobale]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non_+_remobale
*CAT: n
*SEM: twoRel[rel=non_+_remobale]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non_+_remobale
*CAT: n
*SEM: twoRel[rel=non_+_remobale]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non_+_remobale
*CAT: n
*SEM: orRel[rel=non_+_remobale]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_derivation
*CAT: n
*SEM: unaryRel[rel=two_+_derivation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_derivation
*CAT: n
*SEM: twoRel[rel=two_+_derivation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_derivation
*CAT: n
*SEM: twoRel[rel=two_+_derivation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_derivation
*CAT: n
*SEM: orRel[rel=two_+_derivation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum_+_conduit_+_size
*CAT: n
*SEM: unaryRel[rel=minimum_+_conduit_+_size]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum_+_conduit_+_size
*CAT: n
*SEM: twoRel[rel=minimum_+_conduit_+_size]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum_+_conduit_+_size
*CAT: n
*SEM: twoRel[rel=minimum_+_conduit_+_size]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum_+_conduit_+_size
*CAT: n
*SEM: orRel[rel=minimum_+_conduit_+_size]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clamp-block_+_to
*CAT: n
*SEM: unaryRel[rel=clamp-block_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clamp-block_+_to
*CAT: n
*SEM: twoRel[rel=clamp-block_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clamp-block_+_to
*CAT: n
*SEM: twoRel[rel=clamp-block_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clamp-block_+_to
*CAT: n
*SEM: orRel[rel=clamp-block_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: special_+_grommet
*CAT: n
*SEM: unaryRel[rel=special_+_grommet]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: special_+_grommet
*CAT: n
*SEM: twoRel[rel=special_+_grommet]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: special_+_grommet
*CAT: n
*SEM: twoRel[rel=special_+_grommet]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: special_+_grommet
*CAT: n
*SEM: orRel[rel=special_+_grommet]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: .2.3_+___+_2356-2362
*CAT: n
*SEM: unaryRel[rel=.2.3_+___+_2356-2362]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: .2.3_+___+_2356-2362
*CAT: n
*SEM: twoRel[rel=.2.3_+___+_2356-2362]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: .2.3_+___+_2356-2362
*CAT: n
*SEM: twoRel[rel=.2.3_+___+_2356-2362]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: .2.3_+___+_2356-2362
*CAT: n
*SEM: orRel[rel=.2.3_+___+_2356-2362]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa_+_935401_+_cable_+_tie_+_size_+_4
*CAT: n
*SEM: unaryRel[rel=nsa_+_935401_+_cable_+_tie_+_size_+_4]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa_+_935401_+_cable_+_tie_+_size_+_4
*CAT: n
*SEM: twoRel[rel=nsa_+_935401_+_cable_+_tie_+_size_+_4]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa_+_935401_+_cable_+_tie_+_size_+_4
*CAT: n
*SEM: twoRel[rel=nsa_+_935401_+_cable_+_tie_+_size_+_4]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa_+_935401_+_cable_+_tie_+_size_+_4
*CAT: n
*SEM: orRel[rel=nsa_+_935401_+_cable_+_tie_+_size_+_4]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: umbrella
*CAT: n
*SEM: unaryRel[rel=umbrella]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: umbrella
*CAT: n
*SEM: twoRel[rel=umbrella]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: umbrella
*CAT: n
*SEM: twoRel[rel=umbrella]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: umbrella
*CAT: n
*SEM: orRel[rel=umbrella]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: lavatories
*CAT: n
*SEM: unaryRel[rel=lavatories]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: lavatories
*CAT: n
*SEM: twoRel[rel=lavatories]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: lavatories
*CAT: n
*SEM: twoRel[rel=lavatories]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: lavatories
*CAT: n
*SEM: orRel[rel=lavatories]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cable_+_tie_+_nsa935401
*CAT: n
*SEM: unaryRel[rel=cable_+_tie_+_nsa935401]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cable_+_tie_+_nsa935401
*CAT: n
*SEM: twoRel[rel=cable_+_tie_+_nsa935401]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cable_+_tie_+_nsa935401
*CAT: n
*SEM: twoRel[rel=cable_+_tie_+_nsa935401]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cable_+_tie_+_nsa935401
*CAT: n
*SEM: orRel[rel=cable_+_tie_+_nsa935401]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: virtual_+_terminal_+_block_+_-lrb-_+_vt_+_-rrb-
*CAT: n
*SEM: unaryRel[rel=virtual_+_terminal_+_block_+_-lrb-_+_vt_+_-rrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: virtual_+_terminal_+_block_+_-lrb-_+_vt_+_-rrb-
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_block_+_-lrb-_+_vt_+_-rrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: virtual_+_terminal_+_block_+_-lrb-_+_vt_+_-rrb-
*CAT: n
*SEM: twoRel[rel=virtual_+_terminal_+_block_+_-lrb-_+_vt_+_-rrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: virtual_+_terminal_+_block_+_-lrb-_+_vt_+_-rrb-
*CAT: n
*SEM: orRel[rel=virtual_+_terminal_+_block_+_-lrb-_+_vt_+_-rrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_three_+_terminal_+_lug
*CAT: n
*SEM: unaryRel[rel=maximum_+_three_+_terminal_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_three_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=maximum_+_three_+_terminal_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_three_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=maximum_+_three_+_terminal_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_three_+_terminal_+_lug
*CAT: n
*SEM: orRel[rel=maximum_+_three_+_terminal_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_active_+_item_+_which
*CAT: n
*SEM: unaryRel[rel=electrical_+_active_+_item_+_which]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_active_+_item_+_which
*CAT: n
*SEM: twoRel[rel=electrical_+_active_+_item_+_which]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_active_+_item_+_which
*CAT: n
*SEM: twoRel[rel=electrical_+_active_+_item_+_which]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_active_+_item_+_which
*CAT: n
*SEM: orRel[rel=electrical_+_active_+_item_+_which]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_box
*CAT: n
*SEM: unaryRel[rel=all_+_box]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_box
*CAT: n
*SEM: twoRel[rel=all_+_box]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_box
*CAT: n
*SEM: twoRel[rel=all_+_box]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_box
*CAT: n
*SEM: orRel[rel=all_+_box]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa_+_5515
*CAT: n
*SEM: unaryRel[rel=nsa_+_5515]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa_+_5515
*CAT: n
*SEM: twoRel[rel=nsa_+_5515]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa_+_5515
*CAT: n
*SEM: twoRel[rel=nsa_+_5515]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa_+_5515
*CAT: n
*SEM: orRel[rel=nsa_+_5515]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: plug
*CAT: n
*SEM: unaryRel[rel=plug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: plug
*CAT: n
*SEM: twoRel[rel=plug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: plug
*CAT: n
*SEM: twoRel[rel=plug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: plug
*CAT: n
*SEM: orRel[rel=plug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: larger_+_bend_+_radius
*CAT: n
*SEM: unaryRel[rel=larger_+_bend_+_radius]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: larger_+_bend_+_radius
*CAT: n
*SEM: twoRel[rel=larger_+_bend_+_radius]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: larger_+_bend_+_radius
*CAT: n
*SEM: twoRel[rel=larger_+_bend_+_radius]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: larger_+_bend_+_radius
*CAT: n
*SEM: orRel[rel=larger_+_bend_+_radius]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bobbin_+_configuration
*CAT: n
*SEM: unaryRel[rel=bobbin_+_configuration]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bobbin_+_configuration
*CAT: n
*SEM: twoRel[rel=bobbin_+_configuration]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bobbin_+_configuration
*CAT: n
*SEM: twoRel[rel=bobbin_+_configuration]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bobbin_+_configuration
*CAT: n
*SEM: orRel[rel=bobbin_+_configuration]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_bracket
*CAT: n
*SEM: unaryRel[rel=each_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_bracket
*CAT: n
*SEM: twoRel[rel=each_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_bracket
*CAT: n
*SEM: twoRel[rel=each_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_bracket
*CAT: n
*SEM: orRel[rel=each_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flexible_+_hose_+_end_+_unions
*CAT: n
*SEM: unaryRel[rel=flexible_+_hose_+_end_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flexible_+_hose_+_end_+_unions
*CAT: n
*SEM: twoRel[rel=flexible_+_hose_+_end_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flexible_+_hose_+_end_+_unions
*CAT: n
*SEM: twoRel[rel=flexible_+_hose_+_end_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flexible_+_hose_+_end_+_unions
*CAT: n
*SEM: orRel[rel=flexible_+_hose_+_end_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: temperature
*CAT: n
*SEM: unaryRel[rel=temperature]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: temperature
*CAT: n
*SEM: twoRel[rel=temperature]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: temperature
*CAT: n
*SEM: twoRel[rel=temperature]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: temperature
*CAT: n
*SEM: orRel[rel=temperature]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: terminal_+_block_+_covers
*CAT: n
*SEM: unaryRel[rel=terminal_+_block_+_covers]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: terminal_+_block_+_covers
*CAT: n
*SEM: twoRel[rel=terminal_+_block_+_covers]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: terminal_+_block_+_covers
*CAT: n
*SEM: twoRel[rel=terminal_+_block_+_covers]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: terminal_+_block_+_covers
*CAT: n
*SEM: orRel[rel=terminal_+_block_+_covers]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: derivation
*CAT: n
*SEM: unaryRel[rel=derivation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: derivation
*CAT: n
*SEM: twoRel[rel=derivation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: derivation
*CAT: n
*SEM: twoRel[rel=derivation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: derivation
*CAT: n
*SEM: orRel[rel=derivation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: g
*CAT: n
*SEM: unaryRel[rel=g]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: g
*CAT: n
*SEM: twoRel[rel=g]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: g
*CAT: n
*SEM: twoRel[rel=g]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: g
*CAT: n
*SEM: orRel[rel=g]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: shell_+_orientation
*CAT: n
*SEM: unaryRel[rel=shell_+_orientation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: shell_+_orientation
*CAT: n
*SEM: twoRel[rel=shell_+_orientation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: shell_+_orientation
*CAT: n
*SEM: twoRel[rel=shell_+_orientation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: shell_+_orientation
*CAT: n
*SEM: orRel[rel=shell_+_orientation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: route
*CAT: n
*SEM: unaryRel[rel=route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: route
*CAT: n
*SEM: twoRel[rel=route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: route
*CAT: n
*SEM: twoRel[rel=route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: route
*CAT: n
*SEM: orRel[rel=route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: silicon
*CAT: n
*SEM: unaryRel[rel=silicon]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: silicon
*CAT: n
*SEM: twoRel[rel=silicon]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: silicon
*CAT: n
*SEM: twoRel[rel=silicon]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: silicon
*CAT: n
*SEM: orRel[rel=silicon]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: length
*CAT: n
*SEM: unaryRel[rel=length]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: length
*CAT: n
*SEM: twoRel[rel=length]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: length
*CAT: n
*SEM: twoRel[rel=length]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: length
*CAT: n
*SEM: orRel[rel=length]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: circuit
*CAT: n
*SEM: unaryRel[rel=circuit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: circuit
*CAT: n
*SEM: twoRel[rel=circuit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: circuit
*CAT: n
*SEM: twoRel[rel=circuit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: circuit
*CAT: n
*SEM: orRel[rel=circuit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa935805
*CAT: n
*SEM: unaryRel[rel=nsa935805]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa935805
*CAT: n
*SEM: twoRel[rel=nsa935805]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa935805
*CAT: n
*SEM: twoRel[rel=nsa935805]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa935805
*CAT: n
*SEM: orRel[rel=nsa935805]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: m-route
*CAT: n
*SEM: unaryRel[rel=m-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: m-route
*CAT: n
*SEM: twoRel[rel=m-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: m-route
*CAT: n
*SEM: twoRel[rel=m-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: m-route
*CAT: n
*SEM: orRel[rel=m-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: harness_+_bend_+_radius
*CAT: n
*SEM: unaryRel[rel=harness_+_bend_+_radius]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: harness_+_bend_+_radius
*CAT: n
*SEM: twoRel[rel=harness_+_bend_+_radius]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: harness_+_bend_+_radius
*CAT: n
*SEM: twoRel[rel=harness_+_bend_+_radius]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: harness_+_bend_+_radius
*CAT: n
*SEM: orRel[rel=harness_+_bend_+_radius]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: dash_+_-20
*CAT: n
*SEM: unaryRel[rel=dash_+_-20]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: dash_+_-20
*CAT: n
*SEM: twoRel[rel=dash_+_-20]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: dash_+_-20
*CAT: n
*SEM: twoRel[rel=dash_+_-20]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: dash_+_-20
*CAT: n
*SEM: orRel[rel=dash_+_-20]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: separable
*CAT: n
*SEM: unaryRel[rel=separable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: separable
*CAT: n
*SEM: twoRel[rel=separable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: separable
*CAT: n
*SEM: twoRel[rel=separable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: separable
*CAT: n
*SEM: orRel[rel=separable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: connector
*CAT: n
*SEM: unaryRel[rel=connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: connector
*CAT: n
*SEM: twoRel[rel=connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: connector
*CAT: n
*SEM: twoRel[rel=connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: connector
*CAT: n
*SEM: orRel[rel=connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: xm
*CAT: n
*SEM: unaryRel[rel=xm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: xm
*CAT: n
*SEM: twoRel[rel=xm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: xm
*CAT: n
*SEM: twoRel[rel=xm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: xm
*CAT: n
*SEM: orRel[rel=xm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sizes
*CAT: n
*SEM: unaryRel[rel=sizes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sizes
*CAT: n
*SEM: twoRel[rel=sizes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sizes
*CAT: n
*SEM: twoRel[rel=sizes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sizes
*CAT: n
*SEM: orRel[rel=sizes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: live_+_side
*CAT: n
*SEM: unaryRel[rel=live_+_side]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: live_+_side
*CAT: n
*SEM: twoRel[rel=live_+_side]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: live_+_side
*CAT: n
*SEM: twoRel[rel=live_+_side]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: live_+_side
*CAT: n
*SEM: orRel[rel=live_+_side]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pax_+_floor
*CAT: n
*SEM: unaryRel[rel=pax_+_floor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pax_+_floor
*CAT: n
*SEM: twoRel[rel=pax_+_floor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pax_+_floor
*CAT: n
*SEM: twoRel[rel=pax_+_floor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pax_+_floor
*CAT: n
*SEM: orRel[rel=pax_+_floor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: straight_+_unions
*CAT: n
*SEM: unaryRel[rel=straight_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: straight_+_unions
*CAT: n
*SEM: twoRel[rel=straight_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: straight_+_unions
*CAT: n
*SEM: twoRel[rel=straight_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: straight_+_unions
*CAT: n
*SEM: orRel[rel=straight_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: feeder
*CAT: n
*SEM: unaryRel[rel=feeder]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: feeder
*CAT: n
*SEM: twoRel[rel=feeder]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: feeder
*CAT: n
*SEM: twoRel[rel=feeder]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: feeder
*CAT: n
*SEM: orRel[rel=feeder]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_terminal_+_lug
*CAT: n
*SEM: unaryRel[rel=one_+_terminal_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=one_+_terminal_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=one_+_terminal_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_terminal_+_lug
*CAT: n
*SEM: orRel[rel=one_+_terminal_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_successive_+_bends
*CAT: n
*SEM: unaryRel[rel=two_+_successive_+_bends]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_successive_+_bends
*CAT: n
*SEM: twoRel[rel=two_+_successive_+_bends]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_successive_+_bends
*CAT: n
*SEM: twoRel[rel=two_+_successive_+_bends]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_successive_+_bends
*CAT: n
*SEM: orRel[rel=two_+_successive_+_bends]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: metallic_+_spacer
*CAT: n
*SEM: unaryRel[rel=metallic_+_spacer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: metallic_+_spacer
*CAT: n
*SEM: twoRel[rel=metallic_+_spacer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: metallic_+_spacer
*CAT: n
*SEM: twoRel[rel=metallic_+_spacer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: metallic_+_spacer
*CAT: n
*SEM: orRel[rel=metallic_+_spacer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: shell_+_size
*CAT: n
*SEM: unaryRel[rel=shell_+_size]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: shell_+_size
*CAT: n
*SEM: twoRel[rel=shell_+_size]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: shell_+_size
*CAT: n
*SEM: twoRel[rel=shell_+_size]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: shell_+_size
*CAT: n
*SEM: orRel[rel=shell_+_size]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_electro-chemical_+_compatibility
*CAT: n
*SEM: unaryRel[rel=account_+_electro-chemical_+_compatibility]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_electro-chemical_+_compatibility
*CAT: n
*SEM: twoRel[rel=account_+_electro-chemical_+_compatibility]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_electro-chemical_+_compatibility
*CAT: n
*SEM: twoRel[rel=account_+_electro-chemical_+_compatibility]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_electro-chemical_+_compatibility
*CAT: n
*SEM: orRel[rel=account_+_electro-chemical_+_compatibility]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: impossible
*CAT: n
*SEM: unaryRel[rel=impossible]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: impossible
*CAT: n
*SEM: twoRel[rel=impossible]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: impossible
*CAT: n
*SEM: twoRel[rel=impossible]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: impossible
*CAT: n
*SEM: orRel[rel=impossible]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: this_+_table
*CAT: n
*SEM: unaryRel[rel=this_+_table]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: this_+_table
*CAT: n
*SEM: twoRel[rel=this_+_table]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: this_+_table
*CAT: n
*SEM: twoRel[rel=this_+_table]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: this_+_table
*CAT: n
*SEM: orRel[rel=this_+_table]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: independent_+_parallel_+_detection_+_loops
*CAT: n
*SEM: unaryRel[rel=independent_+_parallel_+_detection_+_loops]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: independent_+_parallel_+_detection_+_loops
*CAT: n
*SEM: twoRel[rel=independent_+_parallel_+_detection_+_loops]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: independent_+_parallel_+_detection_+_loops
*CAT: n
*SEM: twoRel[rel=independent_+_parallel_+_detection_+_loops]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: independent_+_parallel_+_detection_+_loops
*CAT: n
*SEM: orRel[rel=independent_+_parallel_+_detection_+_loops]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flammable_+_fluids
*CAT: n
*SEM: unaryRel[rel=flammable_+_fluids]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flammable_+_fluids
*CAT: n
*SEM: twoRel[rel=flammable_+_fluids]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flammable_+_fluids
*CAT: n
*SEM: twoRel[rel=flammable_+_fluids]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flammable_+_fluids
*CAT: n
*SEM: orRel[rel=flammable_+_fluids]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: chafing_+_sheath
*CAT: n
*SEM: unaryRel[rel=chafing_+_sheath]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: chafing_+_sheath
*CAT: n
*SEM: twoRel[rel=chafing_+_sheath]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: chafing_+_sheath
*CAT: n
*SEM: twoRel[rel=chafing_+_sheath]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: chafing_+_sheath
*CAT: n
*SEM: orRel[rel=chafing_+_sheath]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vertical_+_bundle
*CAT: n
*SEM: unaryRel[rel=vertical_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vertical_+_bundle
*CAT: n
*SEM: twoRel[rel=vertical_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vertical_+_bundle
*CAT: n
*SEM: twoRel[rel=vertical_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vertical_+_bundle
*CAT: n
*SEM: orRel[rel=vertical_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: ata26_+_pipes
*CAT: n
*SEM: unaryRel[rel=ata26_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: ata26_+_pipes
*CAT: n
*SEM: twoRel[rel=ata26_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: ata26_+_pipes
*CAT: n
*SEM: twoRel[rel=ata26_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: ata26_+_pipes
*CAT: n
*SEM: orRel[rel=ata26_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=two_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_clamp-block
*CAT: n
*SEM: twoRel[rel=two_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_clamp-block
*CAT: n
*SEM: twoRel[rel=two_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_clamp-block
*CAT: n
*SEM: orRel[rel=two_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: top
*CAT: n
*SEM: unaryRel[rel=top]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: top
*CAT: n
*SEM: twoRel[rel=top]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: top
*CAT: n
*SEM: twoRel[rel=top]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: top
*CAT: n
*SEM: orRel[rel=top]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: un_+_series_+_thread
*CAT: n
*SEM: unaryRel[rel=un_+_series_+_thread]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: un_+_series_+_thread
*CAT: n
*SEM: twoRel[rel=un_+_series_+_thread]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: un_+_series_+_thread
*CAT: n
*SEM: twoRel[rel=un_+_series_+_thread]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: un_+_series_+_thread
*CAT: n
*SEM: orRel[rel=un_+_series_+_thread]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_abs1339
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_abs1339]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_abs1339
*CAT: n
*SEM: twoRel[rel=p-clamp_+_abs1339]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_abs1339
*CAT: n
*SEM: twoRel[rel=p-clamp_+_abs1339]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_abs1339
*CAT: n
*SEM: orRel[rel=p-clamp_+_abs1339]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: plastic
*CAT: n
*SEM: unaryRel[rel=plastic]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: plastic
*CAT: n
*SEM: twoRel[rel=plastic]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: plastic
*CAT: n
*SEM: twoRel[rel=plastic]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: plastic
*CAT: n
*SEM: orRel[rel=plastic]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: priority
*CAT: n
*SEM: unaryRel[rel=priority]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: priority
*CAT: n
*SEM: twoRel[rel=priority]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: priority
*CAT: n
*SEM: twoRel[rel=priority]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: priority
*CAT: n
*SEM: orRel[rel=priority]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 2
*CAT: n
*SEM: unaryRel[rel=2]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 2
*CAT: n
*SEM: twoRel[rel=2]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 2
*CAT: n
*SEM: twoRel[rel=2]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 2
*CAT: n
*SEM: orRel[rel=2]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: other_+_systems
*CAT: n
*SEM: unaryRel[rel=other_+_systems]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: other_+_systems
*CAT: n
*SEM: twoRel[rel=other_+_systems]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: other_+_systems
*CAT: n
*SEM: twoRel[rel=other_+_systems]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: other_+_systems
*CAT: n
*SEM: orRel[rel=other_+_systems]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 1..5
*CAT: n
*SEM: unaryRel[rel=1..5]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 1..5
*CAT: n
*SEM: twoRel[rel=1..5]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 1..5
*CAT: n
*SEM: twoRel[rel=1..5]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 1..5
*CAT: n
*SEM: orRel[rel=1..5]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fire_+_seals
*CAT: n
*SEM: unaryRel[rel=fire_+_seals]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fire_+_seals
*CAT: n
*SEM: twoRel[rel=fire_+_seals]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fire_+_seals
*CAT: n
*SEM: twoRel[rel=fire_+_seals]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fire_+_seals
*CAT: n
*SEM: orRel[rel=fire_+_seals]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipes_+_tee-unions
*CAT: n
*SEM: unaryRel[rel=pipes_+_tee-unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipes_+_tee-unions
*CAT: n
*SEM: twoRel[rel=pipes_+_tee-unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipes_+_tee-unions
*CAT: n
*SEM: twoRel[rel=pipes_+_tee-unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipes_+_tee-unions
*CAT: n
*SEM: orRel[rel=pipes_+_tee-unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cabin
*CAT: n
*SEM: unaryRel[rel=cabin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cabin
*CAT: n
*SEM: twoRel[rel=cabin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cabin
*CAT: n
*SEM: twoRel[rel=cabin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cabin
*CAT: n
*SEM: orRel[rel=cabin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hidden_+_zones
*CAT: n
*SEM: unaryRel[rel=hidden_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hidden_+_zones
*CAT: n
*SEM: twoRel[rel=hidden_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hidden_+_zones
*CAT: n
*SEM: twoRel[rel=hidden_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hidden_+_zones
*CAT: n
*SEM: orRel[rel=hidden_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hydraulic_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hydraulic_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=hydraulic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hydraulic_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=hydraulic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hydraulic_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=hydraulic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: conduit
*CAT: n
*SEM: unaryRel[rel=conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: conduit
*CAT: n
*SEM: twoRel[rel=conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: conduit
*CAT: n
*SEM: twoRel[rel=conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: conduit
*CAT: n
*SEM: orRel[rel=conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tanks
*CAT: n
*SEM: unaryRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tanks
*CAT: n
*SEM: twoRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tanks
*CAT: n
*SEM: twoRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tanks
*CAT: n
*SEM: orRel[rel=fuel_+_tanks]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: shell
*CAT: n
*SEM: unaryRel[rel=shell]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: shell
*CAT: n
*SEM: twoRel[rel=shell]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: shell
*CAT: n
*SEM: twoRel[rel=shell]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: shell
*CAT: n
*SEM: orRel[rel=shell]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: junction_+_zones
*CAT: n
*SEM: unaryRel[rel=junction_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: junction_+_zones
*CAT: n
*SEM: twoRel[rel=junction_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: junction_+_zones
*CAT: n
*SEM: twoRel[rel=junction_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: junction_+_zones
*CAT: n
*SEM: orRel[rel=junction_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cabin_+_monuments_+_such
*CAT: n
*SEM: unaryRel[rel=cabin_+_monuments_+_such]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cabin_+_monuments_+_such
*CAT: n
*SEM: twoRel[rel=cabin_+_monuments_+_such]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cabin_+_monuments_+_such
*CAT: n
*SEM: twoRel[rel=cabin_+_monuments_+_such]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: cabin_+_monuments_+_such
*CAT: n
*SEM: orRel[rel=cabin_+_monuments_+_such]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_point_+_to
*CAT: n
*SEM: unaryRel[rel=attachment_+_point_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_point_+_to
*CAT: n
*SEM: twoRel[rel=attachment_+_point_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_point_+_to
*CAT: n
*SEM: twoRel[rel=attachment_+_point_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_point_+_to
*CAT: n
*SEM: orRel[rel=attachment_+_point_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bracket
*CAT: n
*SEM: unaryRel[rel=bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bracket
*CAT: n
*SEM: twoRel[rel=bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bracket
*CAT: n
*SEM: twoRel[rel=bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bracket
*CAT: n
*SEM: orRel[rel=bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: movable_+_component
*CAT: n
*SEM: unaryRel[rel=movable_+_component]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: movable_+_component
*CAT: n
*SEM: twoRel[rel=movable_+_component]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: movable_+_component
*CAT: n
*SEM: twoRel[rel=movable_+_component]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: movable_+_component
*CAT: n
*SEM: orRel[rel=movable_+_component]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: harness
*CAT: n
*SEM: unaryRel[rel=harness]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: harness
*CAT: n
*SEM: twoRel[rel=harness]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: harness
*CAT: n
*SEM: twoRel[rel=harness]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: harness
*CAT: n
*SEM: orRel[rel=harness]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: same_+_installation_+_philosophy
*CAT: n
*SEM: unaryRel[rel=same_+_installation_+_philosophy]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: same_+_installation_+_philosophy
*CAT: n
*SEM: twoRel[rel=same_+_installation_+_philosophy]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: same_+_installation_+_philosophy
*CAT: n
*SEM: twoRel[rel=same_+_installation_+_philosophy]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: same_+_installation_+_philosophy
*CAT: n
*SEM: orRel[rel=same_+_installation_+_philosophy]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressurized
*CAT: n
*SEM: unaryRel[rel=pressurized]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressurized
*CAT: n
*SEM: twoRel[rel=pressurized]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressurized
*CAT: n
*SEM: twoRel[rel=pressurized]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressurized
*CAT: n
*SEM: orRel[rel=pressurized]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_e.g
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_e.g]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_e.g
*CAT: n
*SEM: twoRel[rel=p-clamp_+_e.g]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_e.g
*CAT: n
*SEM: twoRel[rel=p-clamp_+_e.g]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_e.g
*CAT: n
*SEM: orRel[rel=p-clamp_+_e.g]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: specific_+_cases
*CAT: n
*SEM: unaryRel[rel=specific_+_cases]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: specific_+_cases
*CAT: n
*SEM: twoRel[rel=specific_+_cases]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: specific_+_cases
*CAT: n
*SEM: twoRel[rel=specific_+_cases]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: specific_+_cases
*CAT: n
*SEM: orRel[rel=specific_+_cases]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 150mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_
*CAT: n
*SEM: unaryRel[rel=150mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 150mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_
*CAT: n
*SEM: twoRel[rel=150mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 150mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_
*CAT: n
*SEM: twoRel[rel=150mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 150mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_
*CAT: n
*SEM: orRel[rel=150mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: databus_+_wire
*CAT: n
*SEM: unaryRel[rel=databus_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: databus_+_wire
*CAT: n
*SEM: twoRel[rel=databus_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: databus_+_wire
*CAT: n
*SEM: twoRel[rel=databus_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: databus_+_wire
*CAT: n
*SEM: orRel[rel=databus_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: possible_+_to
*CAT: n
*SEM: unaryRel[rel=possible_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: possible_+_to
*CAT: n
*SEM: twoRel[rel=possible_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: possible_+_to
*CAT: n
*SEM: twoRel[rel=possible_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: possible_+_to
*CAT: n
*SEM: orRel[rel=possible_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_single_+_contact
*CAT: n
*SEM: unaryRel[rel=one_+_single_+_contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_single_+_contact
*CAT: n
*SEM: twoRel[rel=one_+_single_+_contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_single_+_contact
*CAT: n
*SEM: twoRel[rel=one_+_single_+_contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_single_+_contact
*CAT: n
*SEM: orRel[rel=one_+_single_+_contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: different_+_bulkhead_+_unions
*CAT: n
*SEM: unaryRel[rel=different_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: different_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=different_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: different_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=different_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: different_+_bulkhead_+_unions
*CAT: n
*SEM: orRel[rel=different_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 10
*CAT: n
*SEM: unaryRel[rel=10]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 10
*CAT: n
*SEM: twoRel[rel=10]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 10
*CAT: n
*SEM: twoRel[rel=10]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 10
*CAT: n
*SEM: orRel[rel=10]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: b
*CAT: n
*SEM: unaryRel[rel=b]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: b
*CAT: n
*SEM: twoRel[rel=b]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: b
*CAT: n
*SEM: twoRel[rel=b]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: b
*CAT: n
*SEM: orRel[rel=b]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: additional_+_clearance
*CAT: n
*SEM: unaryRel[rel=additional_+_clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: additional_+_clearance
*CAT: n
*SEM: twoRel[rel=additional_+_clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: additional_+_clearance
*CAT: n
*SEM: twoRel[rel=additional_+_clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: additional_+_clearance
*CAT: n
*SEM: orRel[rel=additional_+_clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: accordance
*CAT: n
*SEM: unaryRel[rel=accordance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: accordance
*CAT: n
*SEM: twoRel[rel=accordance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: accordance
*CAT: n
*SEM: twoRel[rel=accordance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: accordance
*CAT: n
*SEM: orRel[rel=accordance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 150mm
*CAT: n
*SEM: unaryRel[rel=150mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 150mm
*CAT: n
*SEM: twoRel[rel=150mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 150mm
*CAT: n
*SEM: twoRel[rel=150mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 150mm
*CAT: n
*SEM: orRel[rel=150mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 50mm_+_-lrb-
*CAT: n
*SEM: unaryRel[rel=50mm_+_-lrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 50mm_+_-lrb-
*CAT: n
*SEM: twoRel[rel=50mm_+_-lrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 50mm_+_-lrb-
*CAT: n
*SEM: twoRel[rel=50mm_+_-lrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 50mm_+_-lrb-
*CAT: n
*SEM: orRel[rel=50mm_+_-lrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_component
*CAT: n
*SEM: unaryRel[rel=any_+_component]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_component
*CAT: n
*SEM: twoRel[rel=any_+_component]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_component
*CAT: n
*SEM: twoRel[rel=any_+_component]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_component
*CAT: n
*SEM: orRel[rel=any_+_component]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa5516j_+_p-clamp
*CAT: n
*SEM: unaryRel[rel=nsa5516j_+_p-clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa5516j_+_p-clamp
*CAT: n
*SEM: twoRel[rel=nsa5516j_+_p-clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa5516j_+_p-clamp
*CAT: n
*SEM: twoRel[rel=nsa5516j_+_p-clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa5516j_+_p-clamp
*CAT: n
*SEM: orRel[rel=nsa5516j_+_p-clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: red_+_colour
*CAT: n
*SEM: unaryRel[rel=red_+_colour]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: red_+_colour
*CAT: n
*SEM: twoRel[rel=red_+_colour]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: red_+_colour
*CAT: n
*SEM: twoRel[rel=red_+_colour]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: red_+_colour
*CAT: n
*SEM: orRel[rel=red_+_colour]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_connections
*CAT: n
*SEM: unaryRel[rel=two_+_connections]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_connections
*CAT: n
*SEM: twoRel[rel=two_+_connections]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_connections
*CAT: n
*SEM: twoRel[rel=two_+_connections]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_connections
*CAT: n
*SEM: orRel[rel=two_+_connections]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: ``_+_u_+_shape_+_''
*CAT: n
*SEM: unaryRel[rel=``_+_u_+_shape_+_'']
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: ``_+_u_+_shape_+_''
*CAT: n
*SEM: twoRel[rel=``_+_u_+_shape_+_'']
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: ``_+_u_+_shape_+_''
*CAT: n
*SEM: twoRel[rel=``_+_u_+_shape_+_'']
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: ``_+_u_+_shape_+_''
*CAT: n
*SEM: orRel[rel=``_+_u_+_shape_+_'']
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pre
*CAT: n
*SEM: unaryRel[rel=pre]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pre
*CAT: n
*SEM: twoRel[rel=pre]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pre
*CAT: n
*SEM: twoRel[rel=pre]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pre
*CAT: n
*SEM: orRel[rel=pre]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: outer_+_surface
*CAT: n
*SEM: unaryRel[rel=outer_+_surface]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: outer_+_surface
*CAT: n
*SEM: twoRel[rel=outer_+_surface]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: outer_+_surface
*CAT: n
*SEM: twoRel[rel=outer_+_surface]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: outer_+_surface
*CAT: n
*SEM: orRel[rel=outer_+_surface]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_type_+_c
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_type_+_c]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_type_+_c
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_c]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_type_+_c
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_c]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_type_+_c
*CAT: n
*SEM: orRel[rel=p-clamp_+_type_+_c]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 2-hole_+_bulkhead_+_unions
*CAT: n
*SEM: unaryRel[rel=2-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 2-hole_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=2-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 2-hole_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=2-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 2-hole_+_bulkhead_+_unions
*CAT: n
*SEM: orRel[rel=2-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sagging
*CAT: n
*SEM: unaryRel[rel=sagging]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sagging
*CAT: n
*SEM: twoRel[rel=sagging]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sagging
*CAT: n
*SEM: twoRel[rel=sagging]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sagging
*CAT: n
*SEM: orRel[rel=sagging]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe_+_extremity
*CAT: n
*SEM: unaryRel[rel=pipe_+_extremity]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe_+_extremity
*CAT: n
*SEM: twoRel[rel=pipe_+_extremity]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe_+_extremity
*CAT: n
*SEM: twoRel[rel=pipe_+_extremity]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe_+_extremity
*CAT: n
*SEM: orRel[rel=pipe_+_extremity]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: harness_+_to
*CAT: n
*SEM: unaryRel[rel=harness_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: harness_+_to
*CAT: n
*SEM: twoRel[rel=harness_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: harness_+_to
*CAT: n
*SEM: twoRel[rel=harness_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: harness_+_to
*CAT: n
*SEM: orRel[rel=harness_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: tank_+_area
*CAT: n
*SEM: unaryRel[rel=tank_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: tank_+_area
*CAT: n
*SEM: twoRel[rel=tank_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: tank_+_area
*CAT: n
*SEM: twoRel[rel=tank_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: tank_+_area
*CAT: n
*SEM: orRel[rel=tank_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: picture
*CAT: n
*SEM: unaryRel[rel=picture]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: picture
*CAT: n
*SEM: twoRel[rel=picture]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: picture
*CAT: n
*SEM: twoRel[rel=picture]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: picture
*CAT: n
*SEM: orRel[rel=picture]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p5_+_'
*CAT: n
*SEM: unaryRel[rel=p5_+_']
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p5_+_'
*CAT: n
*SEM: twoRel[rel=p5_+_']
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p5_+_'
*CAT: n
*SEM: twoRel[rel=p5_+_']
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p5_+_'
*CAT: n
*SEM: orRel[rel=p5_+_']
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asne_+_0248_+_identification
*CAT: n
*SEM: unaryRel[rel=asne_+_0248_+_identification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asne_+_0248_+_identification
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_identification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asne_+_0248_+_identification
*CAT: n
*SEM: twoRel[rel=asne_+_0248_+_identification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asne_+_0248_+_identification
*CAT: n
*SEM: orRel[rel=asne_+_0248_+_identification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: aluminium_+_bundle
*CAT: n
*SEM: unaryRel[rel=aluminium_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: aluminium_+_bundle
*CAT: n
*SEM: twoRel[rel=aluminium_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: aluminium_+_bundle
*CAT: n
*SEM: twoRel[rel=aluminium_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: aluminium_+_bundle
*CAT: n
*SEM: orRel[rel=aluminium_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle
*CAT: n
*SEM: unaryRel[rel=bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle
*CAT: n
*SEM: twoRel[rel=bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle
*CAT: n
*SEM: twoRel[rel=bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle
*CAT: n
*SEM: orRel[rel=bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flexible_+_hoses_+_routings
*CAT: n
*SEM: unaryRel[rel=flexible_+_hoses_+_routings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flexible_+_hoses_+_routings
*CAT: n
*SEM: twoRel[rel=flexible_+_hoses_+_routings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flexible_+_hoses_+_routings
*CAT: n
*SEM: twoRel[rel=flexible_+_hoses_+_routings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flexible_+_hoses_+_routings
*CAT: n
*SEM: orRel[rel=flexible_+_hoses_+_routings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum
*CAT: n
*SEM: unaryRel[rel=minimum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum
*CAT: n
*SEM: twoRel[rel=minimum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum
*CAT: n
*SEM: twoRel[rel=minimum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum
*CAT: n
*SEM: orRel[rel=minimum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 935805tshielded
*CAT: n
*SEM: unaryRel[rel=935805tshielded]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 935805tshielded
*CAT: n
*SEM: twoRel[rel=935805tshielded]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 935805tshielded
*CAT: n
*SEM: twoRel[rel=935805tshielded]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 935805tshielded
*CAT: n
*SEM: orRel[rel=935805tshielded]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_minimum_+_80_+_mm
*CAT: n
*SEM: unaryRel[rel=bend_+_minimum_+_80_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_minimum_+_80_+_mm
*CAT: n
*SEM: twoRel[rel=bend_+_minimum_+_80_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_minimum_+_80_+_mm
*CAT: n
*SEM: twoRel[rel=bend_+_minimum_+_80_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_minimum_+_80_+_mm
*CAT: n
*SEM: orRel[rel=bend_+_minimum_+_80_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe_+_diameter
*CAT: n
*SEM: unaryRel[rel=pipe_+_diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe_+_diameter
*CAT: n
*SEM: twoRel[rel=pipe_+_diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe_+_diameter
*CAT: n
*SEM: twoRel[rel=pipe_+_diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe_+_diameter
*CAT: n
*SEM: orRel[rel=pipe_+_diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: equipment
*CAT: n
*SEM: unaryRel[rel=equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: equipment
*CAT: n
*SEM: twoRel[rel=equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: equipment
*CAT: n
*SEM: twoRel[rel=equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: equipment
*CAT: n
*SEM: orRel[rel=equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=one_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=one_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=one_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=one_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: which
*CAT: n
*SEM: unaryRel[rel=which]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: which
*CAT: n
*SEM: twoRel[rel=which]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: which
*CAT: n
*SEM: twoRel[rel=which]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: which
*CAT: n
*SEM: orRel[rel=which]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_figures
*CAT: n
*SEM: unaryRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_figures
*CAT: n
*SEM: twoRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_figures
*CAT: n
*SEM: twoRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_figures
*CAT: n
*SEM: orRel[rel=attached_+_figures]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_10_+_times
*CAT: n
*SEM: unaryRel[rel=bend_+_10_+_times]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_10_+_times
*CAT: n
*SEM: twoRel[rel=bend_+_10_+_times]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_10_+_times
*CAT: n
*SEM: twoRel[rel=bend_+_10_+_times]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_10_+_times
*CAT: n
*SEM: orRel[rel=bend_+_10_+_times]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 25_+_mm
*CAT: n
*SEM: unaryRel[rel=25_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 25_+_mm
*CAT: n
*SEM: twoRel[rel=25_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 25_+_mm
*CAT: n
*SEM: twoRel[rel=25_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 25_+_mm
*CAT: n
*SEM: orRel[rel=25_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: d_+__+_greaterThan_+__+__+_equalto_+__+_10mm
*CAT: n
*SEM: unaryRel[rel=d_+__+_greaterThan_+__+__+_equalto_+__+_10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: d_+__+_greaterThan_+__+__+_equalto_+__+_10mm
*CAT: n
*SEM: twoRel[rel=d_+__+_greaterThan_+__+__+_equalto_+__+_10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: d_+__+_greaterThan_+__+__+_equalto_+__+_10mm
*CAT: n
*SEM: twoRel[rel=d_+__+_greaterThan_+__+__+_equalto_+__+_10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: d_+__+_greaterThan_+__+__+_equalto_+__+_10mm
*CAT: n
*SEM: orRel[rel=d_+__+_greaterThan_+__+__+_equalto_+__+_10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optical_+_wire
*CAT: n
*SEM: unaryRel[rel=optical_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optical_+_wire
*CAT: n
*SEM: twoRel[rel=optical_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optical_+_wire
*CAT: n
*SEM: twoRel[rel=optical_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optical_+_wire
*CAT: n
*SEM: orRel[rel=optical_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: equipment_+_bundle
*CAT: n
*SEM: unaryRel[rel=equipment_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: equipment_+_bundle
*CAT: n
*SEM: twoRel[rel=equipment_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: equipment_+_bundle
*CAT: n
*SEM: twoRel[rel=equipment_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: equipment_+_bundle
*CAT: n
*SEM: orRel[rel=equipment_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_wire
*CAT: n
*SEM: unaryRel[rel=two_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_wire
*CAT: n
*SEM: twoRel[rel=two_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_wire
*CAT: n
*SEM: twoRel[rel=two_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_wire
*CAT: n
*SEM: orRel[rel=two_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: same_+_standard_+_equipment
*CAT: n
*SEM: unaryRel[rel=same_+_standard_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: same_+_standard_+_equipment
*CAT: n
*SEM: twoRel[rel=same_+_standard_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: same_+_standard_+_equipment
*CAT: n
*SEM: twoRel[rel=same_+_standard_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: same_+_standard_+_equipment
*CAT: n
*SEM: orRel[rel=same_+_standard_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: coaxial_+_cable
*CAT: n
*SEM: unaryRel[rel=coaxial_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: coaxial_+_cable
*CAT: n
*SEM: twoRel[rel=coaxial_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: coaxial_+_cable
*CAT: n
*SEM: twoRel[rel=coaxial_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: coaxial_+_cable
*CAT: n
*SEM: orRel[rel=coaxial_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: g_+_routes
*CAT: n
*SEM: unaryRel[rel=g_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: g_+_routes
*CAT: n
*SEM: twoRel[rel=g_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: g_+_routes
*CAT: n
*SEM: twoRel[rel=g_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: g_+_routes
*CAT: n
*SEM: orRel[rel=g_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: normal_+_installation
*CAT: n
*SEM: unaryRel[rel=normal_+_installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: normal_+_installation
*CAT: n
*SEM: twoRel[rel=normal_+_installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: normal_+_installation
*CAT: n
*SEM: twoRel[rel=normal_+_installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: normal_+_installation
*CAT: n
*SEM: orRel[rel=normal_+_installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non_+_flammable_+_fluids
*CAT: n
*SEM: unaryRel[rel=non_+_flammable_+_fluids]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non_+_flammable_+_fluids
*CAT: n
*SEM: twoRel[rel=non_+_flammable_+_fluids]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non_+_flammable_+_fluids
*CAT: n
*SEM: twoRel[rel=non_+_flammable_+_fluids]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non_+_flammable_+_fluids
*CAT: n
*SEM: orRel[rel=non_+_flammable_+_fluids]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: normal_+_ac_+_wiring
*CAT: n
*SEM: unaryRel[rel=normal_+_ac_+_wiring]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: normal_+_ac_+_wiring
*CAT: n
*SEM: twoRel[rel=normal_+_ac_+_wiring]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: normal_+_ac_+_wiring
*CAT: n
*SEM: twoRel[rel=normal_+_ac_+_wiring]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: normal_+_ac_+_wiring
*CAT: n
*SEM: orRel[rel=normal_+_ac_+_wiring]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 20_+__+_percent_+_
*CAT: n
*SEM: unaryRel[rel=20_+__+_percent_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 20_+__+_percent_+_
*CAT: n
*SEM: twoRel[rel=20_+__+_percent_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 20_+__+_percent_+_
*CAT: n
*SEM: twoRel[rel=20_+__+_percent_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 20_+__+_percent_+_
*CAT: n
*SEM: orRel[rel=20_+__+_percent_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: device
*CAT: n
*SEM: unaryRel[rel=device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: device
*CAT: n
*SEM: twoRel[rel=device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: device
*CAT: n
*SEM: twoRel[rel=device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: device
*CAT: n
*SEM: orRel[rel=device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_installation
*CAT: n
*SEM: unaryRel[rel=electrical_+_installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_installation
*CAT: n
*SEM: twoRel[rel=electrical_+_installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_installation
*CAT: n
*SEM: twoRel[rel=electrical_+_installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_installation
*CAT: n
*SEM: orRel[rel=electrical_+_installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_fuel_+_tank_+_boundaries
*CAT: n
*SEM: unaryRel[rel=any_+_fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_fuel_+_tank_+_boundaries
*CAT: n
*SEM: twoRel[rel=any_+_fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_fuel_+_tank_+_boundaries
*CAT: n
*SEM: twoRel[rel=any_+_fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_fuel_+_tank_+_boundaries
*CAT: n
*SEM: orRel[rel=any_+_fuel_+_tank_+_boundaries]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: in-situ
*CAT: n
*SEM: unaryRel[rel=in-situ]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: in-situ
*CAT: n
*SEM: twoRel[rel=in-situ]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: in-situ
*CAT: n
*SEM: twoRel[rel=in-situ]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: in-situ
*CAT: n
*SEM: orRel[rel=in-situ]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sum
*CAT: n
*SEM: unaryRel[rel=sum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sum
*CAT: n
*SEM: twoRel[rel=sum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sum
*CAT: n
*SEM: twoRel[rel=sum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sum
*CAT: n
*SEM: orRel[rel=sum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: up_+_to_+_a_+_harness_+_each_+_single_+_bundle
*CAT: n
*SEM: unaryRel[rel=up_+_to_+_a_+_harness_+_each_+_single_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: up_+_to_+_a_+_harness_+_each_+_single_+_bundle
*CAT: n
*SEM: twoRel[rel=up_+_to_+_a_+_harness_+_each_+_single_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: up_+_to_+_a_+_harness_+_each_+_single_+_bundle
*CAT: n
*SEM: twoRel[rel=up_+_to_+_a_+_harness_+_each_+_single_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: up_+_to_+_a_+_harness_+_each_+_single_+_bundle
*CAT: n
*SEM: orRel[rel=up_+_to_+_a_+_harness_+_each_+_single_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_coupling
*CAT: n
*SEM: unaryRel[rel=all_+_coupling]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_coupling
*CAT: n
*SEM: twoRel[rel=all_+_coupling]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_coupling
*CAT: n
*SEM: twoRel[rel=all_+_coupling]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_coupling
*CAT: n
*SEM: orRel[rel=all_+_coupling]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: kevlar_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=kevlar_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: kevlar_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=kevlar_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: kevlar_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=kevlar_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: kevlar_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=kevlar_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: m
*CAT: n
*SEM: unaryRel[rel=m]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: m
*CAT: n
*SEM: twoRel[rel=m]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: m
*CAT: n
*SEM: twoRel[rel=m]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: m
*CAT: n
*SEM: orRel[rel=m]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0_+_to_+_180_+_downwards
*CAT: n
*SEM: unaryRel[rel=0_+_to_+_180_+_downwards]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0_+_to_+_180_+_downwards
*CAT: n
*SEM: twoRel[rel=0_+_to_+_180_+_downwards]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0_+_to_+_180_+_downwards
*CAT: n
*SEM: twoRel[rel=0_+_to_+_180_+_downwards]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0_+_to_+_180_+_downwards
*CAT: n
*SEM: orRel[rel=0_+_to_+_180_+_downwards]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non-pre-stressed_+_bundle
*CAT: n
*SEM: unaryRel[rel=non-pre-stressed_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non-pre-stressed_+_bundle
*CAT: n
*SEM: twoRel[rel=non-pre-stressed_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non-pre-stressed_+_bundle
*CAT: n
*SEM: twoRel[rel=non-pre-stressed_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non-pre-stressed_+_bundle
*CAT: n
*SEM: orRel[rel=non-pre-stressed_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bracket
*CAT: n
*SEM: unaryRel[rel=bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bracket
*CAT: n
*SEM: twoRel[rel=bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bracket
*CAT: n
*SEM: twoRel[rel=bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bracket
*CAT: n
*SEM: orRel[rel=bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: v-route
*CAT: n
*SEM: unaryRel[rel=v-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: v-route
*CAT: n
*SEM: twoRel[rel=v-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: v-route
*CAT: n
*SEM: twoRel[rel=v-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: v-route
*CAT: n
*SEM: orRel[rel=v-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle_+_attachment
*CAT: n
*SEM: unaryRel[rel=bundle_+_attachment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle_+_attachment
*CAT: n
*SEM: twoRel[rel=bundle_+_attachment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle_+_attachment
*CAT: n
*SEM: twoRel[rel=bundle_+_attachment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle_+_attachment
*CAT: n
*SEM: orRel[rel=bundle_+_attachment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_5_+_pipes
*CAT: n
*SEM: unaryRel[rel=maximum_+_5_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_5_+_pipes
*CAT: n
*SEM: twoRel[rel=maximum_+_5_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_5_+_pipes
*CAT: n
*SEM: twoRel[rel=maximum_+_5_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_5_+_pipes
*CAT: n
*SEM: orRel[rel=maximum_+_5_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_low_+_point
*CAT: n
*SEM: unaryRel[rel=any_+_low_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_low_+_point
*CAT: n
*SEM: twoRel[rel=any_+_low_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_low_+_point
*CAT: n
*SEM: twoRel[rel=any_+_low_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_low_+_point
*CAT: n
*SEM: orRel[rel=any_+_low_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: mechanical_+_cable
*CAT: n
*SEM: unaryRel[rel=mechanical_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: mechanical_+_cable
*CAT: n
*SEM: twoRel[rel=mechanical_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: mechanical_+_cable
*CAT: n
*SEM: twoRel[rel=mechanical_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: mechanical_+_cable
*CAT: n
*SEM: orRel[rel=mechanical_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bracket
*CAT: n
*SEM: unaryRel[rel=bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bracket
*CAT: n
*SEM: twoRel[rel=bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bracket
*CAT: n
*SEM: twoRel[rel=bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bracket
*CAT: n
*SEM: orRel[rel=bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: probe
*CAT: n
*SEM: unaryRel[rel=probe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: probe
*CAT: n
*SEM: twoRel[rel=probe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: probe
*CAT: n
*SEM: twoRel[rel=probe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: probe
*CAT: n
*SEM: orRel[rel=probe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: zone_+_specific_+_parameters
*CAT: n
*SEM: unaryRel[rel=zone_+_specific_+_parameters]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: zone_+_specific_+_parameters
*CAT: n
*SEM: twoRel[rel=zone_+_specific_+_parameters]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: zone_+_specific_+_parameters
*CAT: n
*SEM: twoRel[rel=zone_+_specific_+_parameters]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: zone_+_specific_+_parameters
*CAT: n
*SEM: orRel[rel=zone_+_specific_+_parameters]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: rqt_+_3288_+_-rrb-
*CAT: n
*SEM: unaryRel[rel=rqt_+_3288_+_-rrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: rqt_+_3288_+_-rrb-
*CAT: n
*SEM: twoRel[rel=rqt_+_3288_+_-rrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: rqt_+_3288_+_-rrb-
*CAT: n
*SEM: twoRel[rel=rqt_+_3288_+_-rrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: rqt_+_3288_+_-rrb-
*CAT: n
*SEM: orRel[rel=rqt_+_3288_+_-rrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: closed_+_conduit
*CAT: n
*SEM: unaryRel[rel=closed_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: closed_+_conduit
*CAT: n
*SEM: twoRel[rel=closed_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: closed_+_conduit
*CAT: n
*SEM: twoRel[rel=closed_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: closed_+_conduit
*CAT: n
*SEM: orRel[rel=closed_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spacer
*CAT: n
*SEM: unaryRel[rel=spacer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spacer
*CAT: n
*SEM: twoRel[rel=spacer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spacer
*CAT: n
*SEM: twoRel[rel=spacer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spacer
*CAT: n
*SEM: orRel[rel=spacer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nonprintf_+_'helloworld\n_+__+_percent_+__+_.0s_+_'
*CAT: n
*SEM: unaryRel[rel=nonprintf_+_'helloworld\n_+__+_percent_+__+_.0s_+_']
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nonprintf_+_'helloworld\n_+__+_percent_+__+_.0s_+_'
*CAT: n
*SEM: twoRel[rel=nonprintf_+_'helloworld\n_+__+_percent_+__+_.0s_+_']
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nonprintf_+_'helloworld\n_+__+_percent_+__+_.0s_+_'
*CAT: n
*SEM: twoRel[rel=nonprintf_+_'helloworld\n_+__+_percent_+__+_.0s_+_']
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nonprintf_+_'helloworld\n_+__+_percent_+__+_.0s_+_'
*CAT: n
*SEM: orRel[rel=nonprintf_+_'helloworld\n_+__+_percent_+__+_.0s_+_']
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: unaryRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: twoRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: twoRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: orRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: saddle_+_clamp
*CAT: n
*SEM: unaryRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: saddle_+_clamp
*CAT: n
*SEM: orRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: least_+_10mm
*CAT: n
*SEM: unaryRel[rel=least_+_10mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: least_+_10mm
*CAT: n
*SEM: twoRel[rel=least_+_10mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: least_+_10mm
*CAT: n
*SEM: twoRel[rel=least_+_10mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: least_+_10mm
*CAT: n
*SEM: orRel[rel=least_+_10mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs2195_+_-lrb-
*CAT: n
*SEM: unaryRel[rel=abs2195_+_-lrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs2195_+_-lrb-
*CAT: n
*SEM: twoRel[rel=abs2195_+_-lrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs2195_+_-lrb-
*CAT: n
*SEM: twoRel[rel=abs2195_+_-lrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs2195_+_-lrb-
*CAT: n
*SEM: orRel[rel=abs2195_+_-lrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuselage
*CAT: n
*SEM: unaryRel[rel=fuselage]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuselage
*CAT: n
*SEM: twoRel[rel=fuselage]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuselage
*CAT: n
*SEM: twoRel[rel=fuselage]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuselage
*CAT: n
*SEM: orRel[rel=fuselage]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non-ata36_+_hot_+_pipes
*CAT: n
*SEM: unaryRel[rel=non-ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non-ata36_+_hot_+_pipes
*CAT: n
*SEM: twoRel[rel=non-ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non-ata36_+_hot_+_pipes
*CAT: n
*SEM: twoRel[rel=non-ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non-ata36_+_hot_+_pipes
*CAT: n
*SEM: orRel[rel=non-ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: metallic_+_stand-off_+__+_colonettes
*CAT: n
*SEM: unaryRel[rel=metallic_+_stand-off_+__+_colonettes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: metallic_+_stand-off_+__+_colonettes
*CAT: n
*SEM: twoRel[rel=metallic_+_stand-off_+__+_colonettes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: metallic_+_stand-off_+__+_colonettes
*CAT: n
*SEM: twoRel[rel=metallic_+_stand-off_+__+_colonettes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: metallic_+_stand-off_+__+_colonettes
*CAT: n
*SEM: orRel[rel=metallic_+_stand-off_+__+_colonettes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: definition_+_dossier
*CAT: n
*SEM: unaryRel[rel=definition_+_dossier]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: definition_+_dossier
*CAT: n
*SEM: twoRel[rel=definition_+_dossier]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: definition_+_dossier
*CAT: n
*SEM: twoRel[rel=definition_+_dossier]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: definition_+_dossier
*CAT: n
*SEM: orRel[rel=definition_+_dossier]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: guide_+_identification
*CAT: n
*SEM: unaryRel[rel=guide_+_identification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: guide_+_identification
*CAT: n
*SEM: twoRel[rel=guide_+_identification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: guide_+_identification
*CAT: n
*SEM: twoRel[rel=guide_+_identification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: guide_+_identification
*CAT: n
*SEM: orRel[rel=guide_+_identification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: support
*CAT: n
*SEM: unaryRel[rel=support]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: support
*CAT: n
*SEM: twoRel[rel=support]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: support
*CAT: n
*SEM: twoRel[rel=support]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: support
*CAT: n
*SEM: orRel[rel=support]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: unions
*CAT: n
*SEM: unaryRel[rel=unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: unions
*CAT: n
*SEM: twoRel[rel=unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: unions
*CAT: n
*SEM: twoRel[rel=unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: unions
*CAT: n
*SEM: orRel[rel=unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: tape
*CAT: n
*SEM: unaryRel[rel=tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: tape
*CAT: n
*SEM: twoRel[rel=tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: tape
*CAT: n
*SEM: twoRel[rel=tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: tape
*CAT: n
*SEM: orRel[rel=tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_cone_+_angle
*CAT: n
*SEM: unaryRel[rel=maximum_+_cone_+_angle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_cone_+_angle
*CAT: n
*SEM: twoRel[rel=maximum_+_cone_+_angle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_cone_+_angle
*CAT: n
*SEM: twoRel[rel=maximum_+_cone_+_angle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_cone_+_angle
*CAT: n
*SEM: orRel[rel=maximum_+_cone_+_angle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: metallic_+_structure
*CAT: n
*SEM: unaryRel[rel=metallic_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: metallic_+_structure
*CAT: n
*SEM: twoRel[rel=metallic_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: metallic_+_structure
*CAT: n
*SEM: twoRel[rel=metallic_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: metallic_+_structure
*CAT: n
*SEM: orRel[rel=metallic_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flag_+_note
*CAT: n
*SEM: unaryRel[rel=flag_+_note]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flag_+_note
*CAT: n
*SEM: twoRel[rel=flag_+_note]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flag_+_note
*CAT: n
*SEM: twoRel[rel=flag_+_note]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flag_+_note
*CAT: n
*SEM: orRel[rel=flag_+_note]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: primary_+_structure
*CAT: n
*SEM: unaryRel[rel=primary_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: primary_+_structure
*CAT: n
*SEM: twoRel[rel=primary_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: primary_+_structure
*CAT: n
*SEM: twoRel[rel=primary_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: primary_+_structure
*CAT: n
*SEM: orRel[rel=primary_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: plastic_+_spacer
*CAT: n
*SEM: unaryRel[rel=plastic_+_spacer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: plastic_+_spacer
*CAT: n
*SEM: twoRel[rel=plastic_+_spacer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: plastic_+_spacer
*CAT: n
*SEM: twoRel[rel=plastic_+_spacer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: plastic_+_spacer
*CAT: n
*SEM: orRel[rel=plastic_+_spacer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: mechanical_+_protection
*CAT: n
*SEM: unaryRel[rel=mechanical_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: mechanical_+_protection
*CAT: n
*SEM: twoRel[rel=mechanical_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: mechanical_+_protection
*CAT: n
*SEM: twoRel[rel=mechanical_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: mechanical_+_protection
*CAT: n
*SEM: orRel[rel=mechanical_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: margin_+_-rrb-
*CAT: n
*SEM: unaryRel[rel=margin_+_-rrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: margin_+_-rrb-
*CAT: n
*SEM: twoRel[rel=margin_+_-rrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: margin_+_-rrb-
*CAT: n
*SEM: twoRel[rel=margin_+_-rrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: margin_+_-rrb-
*CAT: n
*SEM: orRel[rel=margin_+_-rrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: derivation
*CAT: n
*SEM: unaryRel[rel=derivation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: derivation
*CAT: n
*SEM: twoRel[rel=derivation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: derivation
*CAT: n
*SEM: twoRel[rel=derivation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: derivation
*CAT: n
*SEM: orRel[rel=derivation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 300_+_mm
*CAT: n
*SEM: unaryRel[rel=300_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 300_+_mm
*CAT: n
*SEM: twoRel[rel=300_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 300_+_mm
*CAT: n
*SEM: twoRel[rel=300_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 300_+_mm
*CAT: n
*SEM: orRel[rel=300_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 13mm
*CAT: n
*SEM: unaryRel[rel=13mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 13mm
*CAT: n
*SEM: twoRel[rel=13mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 13mm
*CAT: n
*SEM: twoRel[rel=13mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 13mm
*CAT: n
*SEM: orRel[rel=13mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: use
*CAT: n
*SEM: unaryRel[rel=use]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: use
*CAT: n
*SEM: twoRel[rel=use]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: use
*CAT: n
*SEM: twoRel[rel=use]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: use
*CAT: n
*SEM: orRel[rel=use]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: terminal_+_lug
*CAT: n
*SEM: unaryRel[rel=terminal_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: terminal_+_lug
*CAT: n
*SEM: twoRel[rel=terminal_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: terminal_+_lug
*CAT: n
*SEM: twoRel[rel=terminal_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: terminal_+_lug
*CAT: n
*SEM: orRel[rel=terminal_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: normal_+_swaged_+_unions
*CAT: n
*SEM: unaryRel[rel=normal_+_swaged_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: normal_+_swaged_+_unions
*CAT: n
*SEM: twoRel[rel=normal_+_swaged_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: normal_+_swaged_+_unions
*CAT: n
*SEM: twoRel[rel=normal_+_swaged_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: normal_+_swaged_+_unions
*CAT: n
*SEM: orRel[rel=normal_+_swaged_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asna2553_+_spring_+_washer
*CAT: n
*SEM: unaryRel[rel=asna2553_+_spring_+_washer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asna2553_+_spring_+_washer
*CAT: n
*SEM: twoRel[rel=asna2553_+_spring_+_washer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asna2553_+_spring_+_washer
*CAT: n
*SEM: twoRel[rel=asna2553_+_spring_+_washer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asna2553_+_spring_+_washer
*CAT: n
*SEM: orRel[rel=asna2553_+_spring_+_washer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: standard_+_bracket
*CAT: n
*SEM: unaryRel[rel=standard_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: standard_+_bracket
*CAT: n
*SEM: twoRel[rel=standard_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: standard_+_bracket
*CAT: n
*SEM: twoRel[rel=standard_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: standard_+_bracket
*CAT: n
*SEM: orRel[rel=standard_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: para-aramid
*CAT: n
*SEM: unaryRel[rel=para-aramid]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: para-aramid
*CAT: n
*SEM: twoRel[rel=para-aramid]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: para-aramid
*CAT: n
*SEM: twoRel[rel=para-aramid]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: para-aramid
*CAT: n
*SEM: orRel[rel=para-aramid]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: areas
*CAT: n
*SEM: unaryRel[rel=areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: areas
*CAT: n
*SEM: twoRel[rel=areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: areas
*CAT: n
*SEM: twoRel[rel=areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: areas
*CAT: n
*SEM: orRel[rel=areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vu_+_to
*CAT: n
*SEM: unaryRel[rel=vu_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vu_+_to
*CAT: n
*SEM: twoRel[rel=vu_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vu_+_to
*CAT: n
*SEM: twoRel[rel=vu_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vu_+_to
*CAT: n
*SEM: orRel[rel=vu_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: v_+_routes
*CAT: n
*SEM: unaryRel[rel=v_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: v_+_routes
*CAT: n
*SEM: twoRel[rel=v_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: v_+_routes
*CAT: n
*SEM: twoRel[rel=v_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: v_+_routes
*CAT: n
*SEM: orRel[rel=v_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: first_+_priority
*CAT: n
*SEM: unaryRel[rel=first_+_priority]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: first_+_priority
*CAT: n
*SEM: twoRel[rel=first_+_priority]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: first_+_priority
*CAT: n
*SEM: twoRel[rel=first_+_priority]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: first_+_priority
*CAT: n
*SEM: orRel[rel=first_+_priority]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: heat_+_shrinkable_+_cap
*CAT: n
*SEM: unaryRel[rel=heat_+_shrinkable_+_cap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: heat_+_shrinkable_+_cap
*CAT: n
*SEM: twoRel[rel=heat_+_shrinkable_+_cap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: heat_+_shrinkable_+_cap
*CAT: n
*SEM: twoRel[rel=heat_+_shrinkable_+_cap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: heat_+_shrinkable_+_cap
*CAT: n
*SEM: orRel[rel=heat_+_shrinkable_+_cap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_time
*CAT: n
*SEM: unaryRel[rel=one_+_time]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_time
*CAT: n
*SEM: twoRel[rel=one_+_time]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_time
*CAT: n
*SEM: twoRel[rel=one_+_time]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: one_+_time
*CAT: n
*SEM: orRel[rel=one_+_time]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: expansions
*CAT: n
*SEM: unaryRel[rel=expansions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: expansions
*CAT: n
*SEM: twoRel[rel=expansions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: expansions
*CAT: n
*SEM: twoRel[rel=expansions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: expansions
*CAT: n
*SEM: orRel[rel=expansions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: entire_+_pneumatic_+_system
*CAT: n
*SEM: unaryRel[rel=entire_+_pneumatic_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: entire_+_pneumatic_+_system
*CAT: n
*SEM: twoRel[rel=entire_+_pneumatic_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: entire_+_pneumatic_+_system
*CAT: n
*SEM: twoRel[rel=entire_+_pneumatic_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: entire_+_pneumatic_+_system
*CAT: n
*SEM: orRel[rel=entire_+_pneumatic_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: this_+_picture
*CAT: n
*SEM: unaryRel[rel=this_+_picture]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: this_+_picture
*CAT: n
*SEM: twoRel[rel=this_+_picture]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: this_+_picture
*CAT: n
*SEM: twoRel[rel=this_+_picture]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: this_+_picture
*CAT: n
*SEM: orRel[rel=this_+_picture]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: double
*CAT: n
*SEM: unaryRel[rel=double]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: double
*CAT: n
*SEM: twoRel[rel=double]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: double
*CAT: n
*SEM: twoRel[rel=double]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: double
*CAT: n
*SEM: orRel[rel=double]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_switch_+_guard
*CAT: n
*SEM: unaryRel[rel=all_+_switch_+_guard]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_switch_+_guard
*CAT: n
*SEM: twoRel[rel=all_+_switch_+_guard]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_switch_+_guard
*CAT: n
*SEM: twoRel[rel=all_+_switch_+_guard]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_switch_+_guard
*CAT: n
*SEM: orRel[rel=all_+_switch_+_guard]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa_+_5516_+_cbf
*CAT: n
*SEM: unaryRel[rel=nsa_+_5516_+_cbf]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa_+_5516_+_cbf
*CAT: n
*SEM: twoRel[rel=nsa_+_5516_+_cbf]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa_+_5516_+_cbf
*CAT: n
*SEM: twoRel[rel=nsa_+_5516_+_cbf]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa_+_5516_+_cbf
*CAT: n
*SEM: orRel[rel=nsa_+_5516_+_cbf]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: raceway
*CAT: n
*SEM: unaryRel[rel=raceway]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: raceway
*CAT: n
*SEM: twoRel[rel=raceway]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: raceway
*CAT: n
*SEM: twoRel[rel=raceway]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: raceway
*CAT: n
*SEM: orRel[rel=raceway]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vertical_+_position
*CAT: n
*SEM: unaryRel[rel=vertical_+_position]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vertical_+_position
*CAT: n
*SEM: twoRel[rel=vertical_+_position]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vertical_+_position
*CAT: n
*SEM: twoRel[rel=vertical_+_position]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vertical_+_position
*CAT: n
*SEM: orRel[rel=vertical_+_position]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nut
*CAT: n
*SEM: unaryRel[rel=nut]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nut
*CAT: n
*SEM: twoRel[rel=nut]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nut
*CAT: n
*SEM: twoRel[rel=nut]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nut
*CAT: n
*SEM: orRel[rel=nut]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: operator
*CAT: n
*SEM: unaryRel[rel=operator]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: operator
*CAT: n
*SEM: twoRel[rel=operator]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: operator
*CAT: n
*SEM: twoRel[rel=operator]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: operator
*CAT: n
*SEM: orRel[rel=operator]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: connections
*CAT: n
*SEM: unaryRel[rel=connections]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: connections
*CAT: n
*SEM: twoRel[rel=connections]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: connections
*CAT: n
*SEM: twoRel[rel=connections]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: connections
*CAT: n
*SEM: orRel[rel=connections]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_other
*CAT: n
*SEM: unaryRel[rel=each_+_other]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_other
*CAT: n
*SEM: twoRel[rel=each_+_other]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_other
*CAT: n
*SEM: twoRel[rel=each_+_other]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_other
*CAT: n
*SEM: orRel[rel=each_+_other]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asna0327
*CAT: n
*SEM: unaryRel[rel=asna0327]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asna0327
*CAT: n
*SEM: twoRel[rel=asna0327]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asna0327
*CAT: n
*SEM: twoRel[rel=asna0327]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asna0327
*CAT: n
*SEM: orRel[rel=asna0327]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: barrels
*CAT: n
*SEM: unaryRel[rel=barrels]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: barrels
*CAT: n
*SEM: twoRel[rel=barrels]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: barrels
*CAT: n
*SEM: twoRel[rel=barrels]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: barrels
*CAT: n
*SEM: orRel[rel=barrels]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: wire
*CAT: n
*SEM: unaryRel[rel=wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: wire
*CAT: n
*SEM: twoRel[rel=wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: wire
*CAT: n
*SEM: twoRel[rel=wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: wire
*CAT: n
*SEM: orRel[rel=wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 10mm_+_minimum
*CAT: n
*SEM: unaryRel[rel=10mm_+_minimum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 10mm_+_minimum
*CAT: n
*SEM: twoRel[rel=10mm_+_minimum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 10mm_+_minimum
*CAT: n
*SEM: twoRel[rel=10mm_+_minimum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 10mm_+_minimum
*CAT: n
*SEM: orRel[rel=10mm_+_minimum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_connectors
*CAT: n
*SEM: unaryRel[rel=electrical_+_connectors]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_connectors
*CAT: n
*SEM: twoRel[rel=electrical_+_connectors]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_connectors
*CAT: n
*SEM: twoRel[rel=electrical_+_connectors]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_connectors
*CAT: n
*SEM: orRel[rel=electrical_+_connectors]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: metallic_+_clamp_+_asne_+_0033_+___+_x000d_+__
*CAT: n
*SEM: unaryRel[rel=metallic_+_clamp_+_asne_+_0033_+___+_x000d_+__]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: metallic_+_clamp_+_asne_+_0033_+___+_x000d_+__
*CAT: n
*SEM: twoRel[rel=metallic_+_clamp_+_asne_+_0033_+___+_x000d_+__]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: metallic_+_clamp_+_asne_+_0033_+___+_x000d_+__
*CAT: n
*SEM: twoRel[rel=metallic_+_clamp_+_asne_+_0033_+___+_x000d_+__]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: metallic_+_clamp_+_asne_+_0033_+___+_x000d_+__
*CAT: n
*SEM: orRel[rel=metallic_+_clamp_+_asne_+_0033_+___+_x000d_+__]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hydraulic_+_system_+_routings
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_system_+_routings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hydraulic_+_system_+_routings
*CAT: n
*SEM: twoRel[rel=hydraulic_+_system_+_routings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hydraulic_+_system_+_routings
*CAT: n
*SEM: twoRel[rel=hydraulic_+_system_+_routings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hydraulic_+_system_+_routings
*CAT: n
*SEM: orRel[rel=hydraulic_+_system_+_routings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: label
*CAT: n
*SEM: unaryRel[rel=label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: label
*CAT: n
*SEM: twoRel[rel=label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: label
*CAT: n
*SEM: twoRel[rel=label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: label
*CAT: n
*SEM: orRel[rel=label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 3
*CAT: n
*SEM: unaryRel[rel=3]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 3
*CAT: n
*SEM: twoRel[rel=3]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 3
*CAT: n
*SEM: twoRel[rel=3]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 3
*CAT: n
*SEM: orRel[rel=3]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: connections_+_-lrb-_+_e.g
*CAT: n
*SEM: unaryRel[rel=connections_+_-lrb-_+_e.g]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: connections_+_-lrb-_+_e.g
*CAT: n
*SEM: twoRel[rel=connections_+_-lrb-_+_e.g]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: connections_+_-lrb-_+_e.g
*CAT: n
*SEM: twoRel[rel=connections_+_-lrb-_+_e.g]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: connections_+_-lrb-_+_e.g
*CAT: n
*SEM: orRel[rel=connections_+_-lrb-_+_e.g]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: box
*CAT: n
*SEM: unaryRel[rel=box]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: box
*CAT: n
*SEM: twoRel[rel=box]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: box
*CAT: n
*SEM: twoRel[rel=box]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: box
*CAT: n
*SEM: orRel[rel=box]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: -lrb-_+_horizontal_+_-rrb-
*CAT: n
*SEM: unaryRel[rel=-lrb-_+_horizontal_+_-rrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: -lrb-_+_horizontal_+_-rrb-
*CAT: n
*SEM: twoRel[rel=-lrb-_+_horizontal_+_-rrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: -lrb-_+_horizontal_+_-rrb-
*CAT: n
*SEM: twoRel[rel=-lrb-_+_horizontal_+_-rrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: -lrb-_+_horizontal_+_-rrb-
*CAT: n
*SEM: orRel[rel=-lrb-_+_horizontal_+_-rrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: thick_+_bundle
*CAT: n
*SEM: unaryRel[rel=thick_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: thick_+_bundle
*CAT: n
*SEM: twoRel[rel=thick_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: thick_+_bundle
*CAT: n
*SEM: twoRel[rel=thick_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: thick_+_bundle
*CAT: n
*SEM: orRel[rel=thick_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: level
*CAT: n
*SEM: unaryRel[rel=level]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: level
*CAT: n
*SEM: twoRel[rel=level]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: level
*CAT: n
*SEM: twoRel[rel=level]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: level
*CAT: n
*SEM: orRel[rel=level]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: unaryRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: twoRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: twoRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non-conductive_+_bracket
*CAT: n
*SEM: orRel[rel=non-conductive_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 5516cbd
*CAT: n
*SEM: unaryRel[rel=5516cbd]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 5516cbd
*CAT: n
*SEM: twoRel[rel=5516cbd]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 5516cbd
*CAT: n
*SEM: twoRel[rel=5516cbd]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 5516cbd
*CAT: n
*SEM: orRel[rel=5516cbd]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: arinc_+_600_+_connector
*CAT: n
*SEM: unaryRel[rel=arinc_+_600_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: arinc_+_600_+_connector
*CAT: n
*SEM: twoRel[rel=arinc_+_600_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: arinc_+_600_+_connector
*CAT: n
*SEM: twoRel[rel=arinc_+_600_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: arinc_+_600_+_connector
*CAT: n
*SEM: orRel[rel=arinc_+_600_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: aluminium_+_terminal_+_lug
*CAT: n
*SEM: unaryRel[rel=aluminium_+_terminal_+_lug]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: aluminium_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=aluminium_+_terminal_+_lug]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: aluminium_+_terminal_+_lug
*CAT: n
*SEM: twoRel[rel=aluminium_+_terminal_+_lug]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: aluminium_+_terminal_+_lug
*CAT: n
*SEM: orRel[rel=aluminium_+_terminal_+_lug]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: unprotected_+_bundle
*CAT: n
*SEM: unaryRel[rel=unprotected_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: unprotected_+_bundle
*CAT: n
*SEM: twoRel[rel=unprotected_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: unprotected_+_bundle
*CAT: n
*SEM: twoRel[rel=unprotected_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: unprotected_+_bundle
*CAT: n
*SEM: orRel[rel=unprotected_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_type_+_b_+_e.g
*CAT: n
*SEM: unaryRel[rel=p-clamp_+_type_+_b_+_e.g]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_type_+_b_+_e.g
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_b_+_e.g]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_type_+_b_+_e.g
*CAT: n
*SEM: twoRel[rel=p-clamp_+_type_+_b_+_e.g]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp_+_type_+_b_+_e.g
*CAT: n
*SEM: orRel[rel=p-clamp_+_type_+_b_+_e.g]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: special_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=special_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: special_+_clamp-block
*CAT: n
*SEM: twoRel[rel=special_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: special_+_clamp-block
*CAT: n
*SEM: twoRel[rel=special_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: special_+_clamp-block
*CAT: n
*SEM: orRel[rel=special_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: low_+_t_+_bobbin
*CAT: n
*SEM: unaryRel[rel=low_+_t_+_bobbin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: low_+_t_+_bobbin
*CAT: n
*SEM: twoRel[rel=low_+_t_+_bobbin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: low_+_t_+_bobbin
*CAT: n
*SEM: twoRel[rel=low_+_t_+_bobbin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: low_+_t_+_bobbin
*CAT: n
*SEM: orRel[rel=low_+_t_+_bobbin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clearance
*CAT: n
*SEM: unaryRel[rel=clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clearance
*CAT: n
*SEM: twoRel[rel=clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clearance
*CAT: n
*SEM: twoRel[rel=clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clearance
*CAT: n
*SEM: orRel[rel=clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non_+_ata36_+_hot_+_pipes
*CAT: n
*SEM: unaryRel[rel=non_+_ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non_+_ata36_+_hot_+_pipes
*CAT: n
*SEM: twoRel[rel=non_+_ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non_+_ata36_+_hot_+_pipes
*CAT: n
*SEM: twoRel[rel=non_+_ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non_+_ata36_+_hot_+_pipes
*CAT: n
*SEM: orRel[rel=non_+_ata36_+_hot_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fire_+_areas
*CAT: n
*SEM: unaryRel[rel=fire_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fire_+_areas
*CAT: n
*SEM: twoRel[rel=fire_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fire_+_areas
*CAT: n
*SEM: twoRel[rel=fire_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fire_+_areas
*CAT: n
*SEM: orRel[rel=fire_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: separable_+_hydraulic_+_unions
*CAT: n
*SEM: unaryRel[rel=separable_+_hydraulic_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: separable_+_hydraulic_+_unions
*CAT: n
*SEM: twoRel[rel=separable_+_hydraulic_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: separable_+_hydraulic_+_unions
*CAT: n
*SEM: twoRel[rel=separable_+_hydraulic_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: separable_+_hydraulic_+_unions
*CAT: n
*SEM: orRel[rel=separable_+_hydraulic_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: male_+_end_+_unions
*CAT: n
*SEM: unaryRel[rel=male_+_end_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: male_+_end_+_unions
*CAT: n
*SEM: twoRel[rel=male_+_end_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: male_+_end_+_unions
*CAT: n
*SEM: twoRel[rel=male_+_end_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: male_+_end_+_unions
*CAT: n
*SEM: orRel[rel=male_+_end_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: coaxial_+_wire
*CAT: n
*SEM: unaryRel[rel=coaxial_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: coaxial_+_wire
*CAT: n
*SEM: twoRel[rel=coaxial_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: coaxial_+_wire
*CAT: n
*SEM: twoRel[rel=coaxial_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: coaxial_+_wire
*CAT: n
*SEM: orRel[rel=coaxial_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuselage-htp_+_-rrb-
*CAT: n
*SEM: unaryRel[rel=fuselage-htp_+_-rrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuselage-htp_+_-rrb-
*CAT: n
*SEM: twoRel[rel=fuselage-htp_+_-rrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuselage-htp_+_-rrb-
*CAT: n
*SEM: twoRel[rel=fuselage-htp_+_-rrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuselage-htp_+_-rrb-
*CAT: n
*SEM: orRel[rel=fuselage-htp_+_-rrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs1339-d
*CAT: n
*SEM: unaryRel[rel=abs1339-d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs1339-d
*CAT: n
*SEM: twoRel[rel=abs1339-d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs1339-d
*CAT: n
*SEM: twoRel[rel=abs1339-d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs1339-d
*CAT: n
*SEM: orRel[rel=abs1339-d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_elbow_+_unions
*CAT: n
*SEM: unaryRel[rel=two_+_elbow_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_elbow_+_unions
*CAT: n
*SEM: twoRel[rel=two_+_elbow_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_elbow_+_unions
*CAT: n
*SEM: twoRel[rel=two_+_elbow_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_elbow_+_unions
*CAT: n
*SEM: orRel[rel=two_+_elbow_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: removable_+_equipment
*CAT: n
*SEM: unaryRel[rel=removable_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: removable_+_equipment
*CAT: n
*SEM: twoRel[rel=removable_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: removable_+_equipment
*CAT: n
*SEM: twoRel[rel=removable_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: removable_+_equipment
*CAT: n
*SEM: orRel[rel=removable_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: or_x000d
*CAT: n
*SEM: unaryRel[rel=or_x000d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: or_x000d
*CAT: n
*SEM: twoRel[rel=or_x000d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: or_x000d
*CAT: n
*SEM: twoRel[rel=or_x000d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: or_x000d
*CAT: n
*SEM: orRel[rel=or_x000d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: environmental_+_constrain_+_e.g
*CAT: n
*SEM: unaryRel[rel=environmental_+_constrain_+_e.g]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: environmental_+_constrain_+_e.g
*CAT: n
*SEM: twoRel[rel=environmental_+_constrain_+_e.g]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: environmental_+_constrain_+_e.g
*CAT: n
*SEM: twoRel[rel=environmental_+_constrain_+_e.g]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: environmental_+_constrain_+_e.g
*CAT: n
*SEM: orRel[rel=environmental_+_constrain_+_e.g]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: afdx_+_data_+_bus_+_cable
*CAT: n
*SEM: unaryRel[rel=afdx_+_data_+_bus_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: afdx_+_data_+_bus_+_cable
*CAT: n
*SEM: twoRel[rel=afdx_+_data_+_bus_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: afdx_+_data_+_bus_+_cable
*CAT: n
*SEM: twoRel[rel=afdx_+_data_+_bus_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: afdx_+_data_+_bus_+_cable
*CAT: n
*SEM: orRel[rel=afdx_+_data_+_bus_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_vapor_+_area
*CAT: n
*SEM: unaryRel[rel=fuel_+_vapor_+_area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_vapor_+_area
*CAT: n
*SEM: twoRel[rel=fuel_+_vapor_+_area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_vapor_+_area
*CAT: n
*SEM: twoRel[rel=fuel_+_vapor_+_area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_vapor_+_area
*CAT: n
*SEM: orRel[rel=fuel_+_vapor_+_area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs5151d5-035
*CAT: n
*SEM: unaryRel[rel=abs5151d5-035]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs5151d5-035
*CAT: n
*SEM: twoRel[rel=abs5151d5-035]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs5151d5-035
*CAT: n
*SEM: twoRel[rel=abs5151d5-035]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs5151d5-035
*CAT: n
*SEM: orRel[rel=abs5151d5-035]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: etc
*CAT: n
*SEM: unaryRel[rel=etc]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: etc
*CAT: n
*SEM: twoRel[rel=etc]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: etc
*CAT: n
*SEM: twoRel[rel=etc]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: etc
*CAT: n
*SEM: orRel[rel=etc]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_point_+_to_+_any_+_part
*CAT: n
*SEM: unaryRel[rel=attachment_+_point_+_to_+_any_+_part]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_point_+_to_+_any_+_part
*CAT: n
*SEM: twoRel[rel=attachment_+_point_+_to_+_any_+_part]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_point_+_to_+_any_+_part
*CAT: n
*SEM: twoRel[rel=attachment_+_point_+_to_+_any_+_part]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_point_+_to_+_any_+_part
*CAT: n
*SEM: orRel[rel=attachment_+_point_+_to_+_any_+_part]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: lacing_+_tape
*CAT: n
*SEM: unaryRel[rel=lacing_+_tape]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: lacing_+_tape
*CAT: n
*SEM: twoRel[rel=lacing_+_tape]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: lacing_+_tape
*CAT: n
*SEM: twoRel[rel=lacing_+_tape]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: lacing_+_tape
*CAT: n
*SEM: orRel[rel=lacing_+_tape]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asn53203
*CAT: n
*SEM: unaryRel[rel=asn53203]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asn53203
*CAT: n
*SEM: twoRel[rel=asn53203]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asn53203
*CAT: n
*SEM: twoRel[rel=asn53203]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: asn53203
*CAT: n
*SEM: orRel[rel=asn53203]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: main_+_routing
*CAT: n
*SEM: unaryRel[rel=main_+_routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: main_+_routing
*CAT: n
*SEM: twoRel[rel=main_+_routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: main_+_routing
*CAT: n
*SEM: twoRel[rel=main_+_routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: main_+_routing
*CAT: n
*SEM: orRel[rel=main_+_routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: gaseous_+_oxygen
*CAT: n
*SEM: unaryRel[rel=gaseous_+_oxygen]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: gaseous_+_oxygen
*CAT: n
*SEM: twoRel[rel=gaseous_+_oxygen]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: gaseous_+_oxygen
*CAT: n
*SEM: twoRel[rel=gaseous_+_oxygen]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: gaseous_+_oxygen
*CAT: n
*SEM: orRel[rel=gaseous_+_oxygen]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: s-route
*CAT: n
*SEM: unaryRel[rel=s-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: s-route
*CAT: n
*SEM: twoRel[rel=s-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: s-route
*CAT: n
*SEM: twoRel[rel=s-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: s-route
*CAT: n
*SEM: orRel[rel=s-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: both_+_sides
*CAT: n
*SEM: unaryRel[rel=both_+_sides]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: both_+_sides
*CAT: n
*SEM: twoRel[rel=both_+_sides]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: both_+_sides
*CAT: n
*SEM: twoRel[rel=both_+_sides]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: both_+_sides
*CAT: n
*SEM: orRel[rel=both_+_sides]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: loap
*CAT: n
*SEM: unaryRel[rel=loap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: loap
*CAT: n
*SEM: twoRel[rel=loap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: loap
*CAT: n
*SEM: twoRel[rel=loap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: loap
*CAT: n
*SEM: orRel[rel=loap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: i.e
*CAT: n
*SEM: unaryRel[rel=i.e]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: i.e
*CAT: n
*SEM: twoRel[rel=i.e]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: i.e
*CAT: n
*SEM: twoRel[rel=i.e]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: i.e
*CAT: n
*SEM: orRel[rel=i.e]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: table
*CAT: n
*SEM: unaryRel[rel=table]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: table
*CAT: n
*SEM: twoRel[rel=table]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: table
*CAT: n
*SEM: twoRel[rel=table]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: table
*CAT: n
*SEM: orRel[rel=table]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clearances
*CAT: n
*SEM: unaryRel[rel=clearances]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clearances
*CAT: n
*SEM: twoRel[rel=clearances]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clearances
*CAT: n
*SEM: twoRel[rel=clearances]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clearances
*CAT: n
*SEM: orRel[rel=clearances]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hydraulic_+_areas
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hydraulic_+_areas
*CAT: n
*SEM: twoRel[rel=hydraulic_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hydraulic_+_areas
*CAT: n
*SEM: twoRel[rel=hydraulic_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hydraulic_+_areas
*CAT: n
*SEM: orRel[rel=hydraulic_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: low_+_point
*CAT: n
*SEM: unaryRel[rel=low_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: low_+_point
*CAT: n
*SEM: twoRel[rel=low_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: low_+_point
*CAT: n
*SEM: twoRel[rel=low_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: low_+_point
*CAT: n
*SEM: orRel[rel=low_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: v-support
*CAT: n
*SEM: unaryRel[rel=v-support]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: v-support
*CAT: n
*SEM: twoRel[rel=v-support]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: v-support
*CAT: n
*SEM: twoRel[rel=v-support]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: v-support
*CAT: n
*SEM: orRel[rel=v-support]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle_+_configuration
*CAT: n
*SEM: unaryRel[rel=bundle_+_configuration]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle_+_configuration
*CAT: n
*SEM: twoRel[rel=bundle_+_configuration]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle_+_configuration
*CAT: n
*SEM: twoRel[rel=bundle_+_configuration]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle_+_configuration
*CAT: n
*SEM: orRel[rel=bundle_+_configuration]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs_+_0916_+_shrink
*CAT: n
*SEM: unaryRel[rel=abs_+_0916_+_shrink]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs_+_0916_+_shrink
*CAT: n
*SEM: twoRel[rel=abs_+_0916_+_shrink]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs_+_0916_+_shrink
*CAT: n
*SEM: twoRel[rel=abs_+_0916_+_shrink]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs_+_0916_+_shrink
*CAT: n
*SEM: orRel[rel=abs_+_0916_+_shrink]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: three
*CAT: n
*SEM: unaryRel[rel=three]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: three
*CAT: n
*SEM: twoRel[rel=three]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: three
*CAT: n
*SEM: twoRel[rel=three]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: three
*CAT: n
*SEM: orRel[rel=three]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: q-route
*CAT: n
*SEM: unaryRel[rel=q-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: q-route
*CAT: n
*SEM: twoRel[rel=q-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: q-route
*CAT: n
*SEM: twoRel[rel=q-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: q-route
*CAT: n
*SEM: orRel[rel=q-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_other_+_tank_+_ribs_+_-lrb-
*CAT: n
*SEM: unaryRel[rel=all_+_other_+_tank_+_ribs_+_-lrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_other_+_tank_+_ribs_+_-lrb-
*CAT: n
*SEM: twoRel[rel=all_+_other_+_tank_+_ribs_+_-lrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_other_+_tank_+_ribs_+_-lrb-
*CAT: n
*SEM: twoRel[rel=all_+_other_+_tank_+_ribs_+_-lrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_other_+_tank_+_ribs_+_-lrb-
*CAT: n
*SEM: orRel[rel=all_+_other_+_tank_+_ribs_+_-lrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: independant_+_bracket
*CAT: n
*SEM: unaryRel[rel=independant_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: independant_+_bracket
*CAT: n
*SEM: twoRel[rel=independant_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: independant_+_bracket
*CAT: n
*SEM: twoRel[rel=independant_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: independant_+_bracket
*CAT: n
*SEM: orRel[rel=independant_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: l_+_+10_+_mm
*CAT: n
*SEM: unaryRel[rel=l_+_+10_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: l_+_+10_+_mm
*CAT: n
*SEM: twoRel[rel=l_+_+10_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: l_+_+10_+_mm
*CAT: n
*SEM: twoRel[rel=l_+_+10_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: l_+_+10_+_mm
*CAT: n
*SEM: orRel[rel=l_+_+10_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flexible
*CAT: n
*SEM: unaryRel[rel=flexible]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flexible
*CAT: n
*SEM: twoRel[rel=flexible]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flexible
*CAT: n
*SEM: twoRel[rel=flexible]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flexible
*CAT: n
*SEM: orRel[rel=flexible]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=all_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=all_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=all_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=all_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: route_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=route_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: route_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=route_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: route_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=route_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: route_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=route_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stud
*CAT: n
*SEM: unaryRel[rel=stud]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stud
*CAT: n
*SEM: twoRel[rel=stud]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stud
*CAT: n
*SEM: twoRel[rel=stud]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stud
*CAT: n
*SEM: orRel[rel=stud]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: copper_+_bundle
*CAT: n
*SEM: unaryRel[rel=copper_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: copper_+_bundle
*CAT: n
*SEM: twoRel[rel=copper_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: copper_+_bundle
*CAT: n
*SEM: twoRel[rel=copper_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: copper_+_bundle
*CAT: n
*SEM: orRel[rel=copper_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_fixation_+_points
*CAT: n
*SEM: unaryRel[rel=two_+_fixation_+_points]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_fixation_+_points
*CAT: n
*SEM: twoRel[rel=two_+_fixation_+_points]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_fixation_+_points
*CAT: n
*SEM: twoRel[rel=two_+_fixation_+_points]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_fixation_+_points
*CAT: n
*SEM: orRel[rel=two_+_fixation_+_points]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flexible_+_bf_+_type_+_cable
*CAT: n
*SEM: unaryRel[rel=flexible_+_bf_+_type_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flexible_+_bf_+_type_+_cable
*CAT: n
*SEM: twoRel[rel=flexible_+_bf_+_type_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flexible_+_bf_+_type_+_cable
*CAT: n
*SEM: twoRel[rel=flexible_+_bf_+_type_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flexible_+_bf_+_type_+_cable
*CAT: n
*SEM: orRel[rel=flexible_+_bf_+_type_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hexagonal_+_bolt
*CAT: n
*SEM: unaryRel[rel=hexagonal_+_bolt]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hexagonal_+_bolt
*CAT: n
*SEM: twoRel[rel=hexagonal_+_bolt]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hexagonal_+_bolt
*CAT: n
*SEM: twoRel[rel=hexagonal_+_bolt]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hexagonal_+_bolt
*CAT: n
*SEM: orRel[rel=hexagonal_+_bolt]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_the_+_pipes
*CAT: n
*SEM: unaryRel[rel=all_+_the_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_the_+_pipes
*CAT: n
*SEM: twoRel[rel=all_+_the_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_the_+_pipes
*CAT: n
*SEM: twoRel[rel=all_+_the_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_the_+_pipes
*CAT: n
*SEM: orRel[rel=all_+_the_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: restrictor
*CAT: n
*SEM: unaryRel[rel=restrictor]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: restrictor
*CAT: n
*SEM: twoRel[rel=restrictor]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: restrictor
*CAT: n
*SEM: twoRel[rel=restrictor]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: restrictor
*CAT: n
*SEM: orRel[rel=restrictor]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 5080_+_psi_+_pipes
*CAT: n
*SEM: unaryRel[rel=5080_+_psi_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 5080_+_psi_+_pipes
*CAT: n
*SEM: twoRel[rel=5080_+_psi_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 5080_+_psi_+_pipes
*CAT: n
*SEM: twoRel[rel=5080_+_psi_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 5080_+_psi_+_pipes
*CAT: n
*SEM: orRel[rel=5080_+_psi_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_loap
*CAT: n
*SEM: unaryRel[rel=account_+_loap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_loap
*CAT: n
*SEM: twoRel[rel=account_+_loap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_loap
*CAT: n
*SEM: twoRel[rel=account_+_loap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_loap
*CAT: n
*SEM: orRel[rel=account_+_loap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: inside_+_power_+_center
*CAT: n
*SEM: unaryRel[rel=inside_+_power_+_center]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: inside_+_power_+_center
*CAT: n
*SEM: twoRel[rel=inside_+_power_+_center]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: inside_+_power_+_center
*CAT: n
*SEM: twoRel[rel=inside_+_power_+_center]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: inside_+_power_+_center
*CAT: n
*SEM: orRel[rel=inside_+_power_+_center]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: double_+_clamp
*CAT: n
*SEM: unaryRel[rel=double_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: double_+_clamp
*CAT: n
*SEM: twoRel[rel=double_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: double_+_clamp
*CAT: n
*SEM: twoRel[rel=double_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: double_+_clamp
*CAT: n
*SEM: orRel[rel=double_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: functional_+_item
*CAT: n
*SEM: unaryRel[rel=functional_+_item]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: functional_+_item
*CAT: n
*SEM: twoRel[rel=functional_+_item]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: functional_+_item
*CAT: n
*SEM: twoRel[rel=functional_+_item]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: functional_+_item
*CAT: n
*SEM: orRel[rel=functional_+_item]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: general
*CAT: n
*SEM: unaryRel[rel=general]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: general
*CAT: n
*SEM: twoRel[rel=general]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: general
*CAT: n
*SEM: twoRel[rel=general]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: general
*CAT: n
*SEM: orRel[rel=general]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: en3660
*CAT: n
*SEM: unaryRel[rel=en3660]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: en3660
*CAT: n
*SEM: twoRel[rel=en3660]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: en3660
*CAT: n
*SEM: twoRel[rel=en3660]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: en3660
*CAT: n
*SEM: orRel[rel=en3660]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: case
*CAT: n
*SEM: unaryRel[rel=case]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: case
*CAT: n
*SEM: twoRel[rel=case]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: case
*CAT: n
*SEM: twoRel[rel=case]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: case
*CAT: n
*SEM: orRel[rel=case]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p0
*CAT: n
*SEM: unaryRel[rel=p0]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p0
*CAT: n
*SEM: twoRel[rel=p0]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p0
*CAT: n
*SEM: twoRel[rel=p0]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p0
*CAT: n
*SEM: orRel[rel=p0]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: structures
*CAT: n
*SEM: unaryRel[rel=structures]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: structures
*CAT: n
*SEM: twoRel[rel=structures]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: structures
*CAT: n
*SEM: twoRel[rel=structures]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: structures
*CAT: n
*SEM: orRel[rel=structures]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: straight_+_pipes
*CAT: n
*SEM: unaryRel[rel=straight_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: straight_+_pipes
*CAT: n
*SEM: twoRel[rel=straight_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: straight_+_pipes
*CAT: n
*SEM: twoRel[rel=straight_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: straight_+_pipes
*CAT: n
*SEM: orRel[rel=straight_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa5516_+_cbj_+_+_+_mechanical_+_protection
*CAT: n
*SEM: unaryRel[rel=nsa5516_+_cbj_+_+_+_mechanical_+_protection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa5516_+_cbj_+_+_+_mechanical_+_protection
*CAT: n
*SEM: twoRel[rel=nsa5516_+_cbj_+_+_+_mechanical_+_protection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa5516_+_cbj_+_+_+_mechanical_+_protection
*CAT: n
*SEM: twoRel[rel=nsa5516_+_cbj_+_+_+_mechanical_+_protection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa5516_+_cbj_+_+_+_mechanical_+_protection
*CAT: n
*SEM: orRel[rel=nsa5516_+_cbj_+_+_+_mechanical_+_protection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum_+_bend_+_radius
*CAT: n
*SEM: unaryRel[rel=minimum_+_bend_+_radius]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum_+_bend_+_radius
*CAT: n
*SEM: twoRel[rel=minimum_+_bend_+_radius]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum_+_bend_+_radius
*CAT: n
*SEM: twoRel[rel=minimum_+_bend_+_radius]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum_+_bend_+_radius
*CAT: n
*SEM: orRel[rel=minimum_+_bend_+_radius]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: order_+_1
*CAT: n
*SEM: unaryRel[rel=order_+_1]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: order_+_1
*CAT: n
*SEM: twoRel[rel=order_+_1]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: order_+_1
*CAT: n
*SEM: twoRel[rel=order_+_1]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: order_+_1
*CAT: n
*SEM: orRel[rel=order_+_1]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flare_+_less_+_hydraulic_+_junction
*CAT: n
*SEM: unaryRel[rel=flare_+_less_+_hydraulic_+_junction]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flare_+_less_+_hydraulic_+_junction
*CAT: n
*SEM: twoRel[rel=flare_+_less_+_hydraulic_+_junction]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flare_+_less_+_hydraulic_+_junction
*CAT: n
*SEM: twoRel[rel=flare_+_less_+_hydraulic_+_junction]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: flare_+_less_+_hydraulic_+_junction
*CAT: n
*SEM: orRel[rel=flare_+_less_+_hydraulic_+_junction]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sharp_+_edge
*CAT: n
*SEM: unaryRel[rel=sharp_+_edge]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sharp_+_edge
*CAT: n
*SEM: twoRel[rel=sharp_+_edge]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sharp_+_edge
*CAT: n
*SEM: twoRel[rel=sharp_+_edge]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: sharp_+_edge
*CAT: n
*SEM: orRel[rel=sharp_+_edge]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle_+_section_+_-lrb-_+_max
*CAT: n
*SEM: unaryRel[rel=bundle_+_section_+_-lrb-_+_max]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle_+_section_+_-lrb-_+_max
*CAT: n
*SEM: twoRel[rel=bundle_+_section_+_-lrb-_+_max]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle_+_section_+_-lrb-_+_max
*CAT: n
*SEM: twoRel[rel=bundle_+_section_+_-lrb-_+_max]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle_+_section_+_-lrb-_+_max
*CAT: n
*SEM: orRel[rel=bundle_+_section_+_-lrb-_+_max]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 500_+_mm_+_regardless
*CAT: n
*SEM: unaryRel[rel=500_+_mm_+_regardless]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 500_+_mm_+_regardless
*CAT: n
*SEM: twoRel[rel=500_+_mm_+_regardless]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 500_+_mm_+_regardless
*CAT: n
*SEM: twoRel[rel=500_+_mm_+_regardless]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 500_+_mm_+_regardless
*CAT: n
*SEM: orRel[rel=500_+_mm_+_regardless]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: single_+_bend
*CAT: n
*SEM: unaryRel[rel=single_+_bend]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: single_+_bend
*CAT: n
*SEM: twoRel[rel=single_+_bend]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: single_+_bend
*CAT: n
*SEM: twoRel[rel=single_+_bend]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: single_+_bend
*CAT: n
*SEM: orRel[rel=single_+_bend]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: double_+_thread_+_unions
*CAT: n
*SEM: unaryRel[rel=double_+_thread_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: double_+_thread_+_unions
*CAT: n
*SEM: twoRel[rel=double_+_thread_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: double_+_thread_+_unions
*CAT: n
*SEM: twoRel[rel=double_+_thread_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: double_+_thread_+_unions
*CAT: n
*SEM: orRel[rel=double_+_thread_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_device
*CAT: n
*SEM: unaryRel[rel=attachment_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_device
*CAT: n
*SEM: twoRel[rel=attachment_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_device
*CAT: n
*SEM: twoRel[rel=attachment_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_device
*CAT: n
*SEM: orRel[rel=attachment_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_one_+_elbow_+_fitting
*CAT: n
*SEM: unaryRel[rel=maximum_+_one_+_elbow_+_fitting]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_one_+_elbow_+_fitting
*CAT: n
*SEM: twoRel[rel=maximum_+_one_+_elbow_+_fitting]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_one_+_elbow_+_fitting
*CAT: n
*SEM: twoRel[rel=maximum_+_one_+_elbow_+_fitting]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_one_+_elbow_+_fitting
*CAT: n
*SEM: orRel[rel=maximum_+_one_+_elbow_+_fitting]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vc
*CAT: n
*SEM: unaryRel[rel=vc]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vc
*CAT: n
*SEM: twoRel[rel=vc]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vc
*CAT: n
*SEM: twoRel[rel=vc]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vc
*CAT: n
*SEM: orRel[rel=vc]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_titanium_+_pipes_+_unions
*CAT: n
*SEM: unaryRel[rel=two_+_titanium_+_pipes_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_titanium_+_pipes_+_unions
*CAT: n
*SEM: twoRel[rel=two_+_titanium_+_pipes_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_titanium_+_pipes_+_unions
*CAT: n
*SEM: twoRel[rel=two_+_titanium_+_pipes_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_titanium_+_pipes_+_unions
*CAT: n
*SEM: orRel[rel=two_+_titanium_+_pipes_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vg
*CAT: n
*SEM: unaryRel[rel=vg]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vg
*CAT: n
*SEM: twoRel[rel=vg]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vg
*CAT: n
*SEM: twoRel[rel=vg]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vg
*CAT: n
*SEM: orRel[rel=vg]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vn
*CAT: n
*SEM: unaryRel[rel=vn]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vn
*CAT: n
*SEM: twoRel[rel=vn]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vn
*CAT: n
*SEM: twoRel[rel=vn]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vn
*CAT: n
*SEM: orRel[rel=vn]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 3-hole_+_bulkhead_+_unions
*CAT: n
*SEM: unaryRel[rel=3-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 3-hole_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=3-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 3-hole_+_bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=3-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 3-hole_+_bulkhead_+_unions
*CAT: n
*SEM: orRel[rel=3-hole_+_bulkhead_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: unprotected_+_modification
*CAT: n
*SEM: unaryRel[rel=unprotected_+_modification]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: unprotected_+_modification
*CAT: n
*SEM: twoRel[rel=unprotected_+_modification]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: unprotected_+_modification
*CAT: n
*SEM: twoRel[rel=unprotected_+_modification]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: unprotected_+_modification
*CAT: n
*SEM: orRel[rel=unprotected_+_modification]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vt
*CAT: n
*SEM: unaryRel[rel=vt]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vt
*CAT: n
*SEM: twoRel[rel=vt]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vt
*CAT: n
*SEM: twoRel[rel=vt]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vt
*CAT: n
*SEM: orRel[rel=vt]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vu
*CAT: n
*SEM: unaryRel[rel=vu]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vu
*CAT: n
*SEM: twoRel[rel=vu]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vu
*CAT: n
*SEM: twoRel[rel=vu]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vu
*CAT: n
*SEM: orRel[rel=vu]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: quick_+_release_+_fastener
*CAT: n
*SEM: unaryRel[rel=quick_+_release_+_fastener]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: quick_+_release_+_fastener
*CAT: n
*SEM: twoRel[rel=quick_+_release_+_fastener]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: quick_+_release_+_fastener
*CAT: n
*SEM: twoRel[rel=quick_+_release_+_fastener]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: quick_+_release_+_fastener
*CAT: n
*SEM: orRel[rel=quick_+_release_+_fastener]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: identification_+_label
*CAT: n
*SEM: unaryRel[rel=identification_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: identification_+_label
*CAT: n
*SEM: twoRel[rel=identification_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: identification_+_label
*CAT: n
*SEM: twoRel[rel=identification_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: identification_+_label
*CAT: n
*SEM: orRel[rel=identification_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: overbraided_+_bundle
*CAT: n
*SEM: unaryRel[rel=overbraided_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: overbraided_+_bundle
*CAT: n
*SEM: twoRel[rel=overbraided_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: overbraided_+_bundle
*CAT: n
*SEM: twoRel[rel=overbraided_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: overbraided_+_bundle
*CAT: n
*SEM: orRel[rel=overbraided_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: able_+_to
*CAT: n
*SEM: unaryRel[rel=able_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: able_+_to
*CAT: n
*SEM: twoRel[rel=able_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: able_+_to
*CAT: n
*SEM: twoRel[rel=able_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: able_+_to
*CAT: n
*SEM: orRel[rel=able_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_device_+_to
*CAT: n
*SEM: unaryRel[rel=attachment_+_device_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_device_+_to
*CAT: n
*SEM: twoRel[rel=attachment_+_device_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_device_+_to
*CAT: n
*SEM: twoRel[rel=attachment_+_device_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_device_+_to
*CAT: n
*SEM: orRel[rel=attachment_+_device_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: circuit_+_breaker_+_connection
*CAT: n
*SEM: unaryRel[rel=circuit_+_breaker_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: circuit_+_breaker_+_connection
*CAT: n
*SEM: twoRel[rel=circuit_+_breaker_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: circuit_+_breaker_+_connection
*CAT: n
*SEM: twoRel[rel=circuit_+_breaker_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: circuit_+_breaker_+_connection
*CAT: n
*SEM: orRel[rel=circuit_+_breaker_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: identification_+_sleeve
*CAT: n
*SEM: unaryRel[rel=identification_+_sleeve]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: identification_+_sleeve
*CAT: n
*SEM: twoRel[rel=identification_+_sleeve]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: identification_+_sleeve
*CAT: n
*SEM: twoRel[rel=identification_+_sleeve]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: identification_+_sleeve
*CAT: n
*SEM: orRel[rel=identification_+_sleeve]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: locking
*CAT: n
*SEM: unaryRel[rel=locking]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: locking
*CAT: n
*SEM: twoRel[rel=locking]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: locking
*CAT: n
*SEM: twoRel[rel=locking]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: locking
*CAT: n
*SEM: orRel[rel=locking]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tank
*CAT: n
*SEM: unaryRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tank
*CAT: n
*SEM: twoRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tank
*CAT: n
*SEM: twoRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tank
*CAT: n
*SEM: orRel[rel=fuel_+_tank]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: case_+_drain_+_pipes_+_which
*CAT: n
*SEM: unaryRel[rel=case_+_drain_+_pipes_+_which]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: case_+_drain_+_pipes_+_which
*CAT: n
*SEM: twoRel[rel=case_+_drain_+_pipes_+_which]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: case_+_drain_+_pipes_+_which
*CAT: n
*SEM: twoRel[rel=case_+_drain_+_pipes_+_which]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: case_+_drain_+_pipes_+_which
*CAT: n
*SEM: orRel[rel=case_+_drain_+_pipes_+_which]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: repair_+_zones
*CAT: n
*SEM: unaryRel[rel=repair_+_zones]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: repair_+_zones
*CAT: n
*SEM: twoRel[rel=repair_+_zones]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: repair_+_zones
*CAT: n
*SEM: twoRel[rel=repair_+_zones]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: repair_+_zones
*CAT: n
*SEM: orRel[rel=repair_+_zones]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: diameter
*CAT: n
*SEM: unaryRel[rel=diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: diameter
*CAT: n
*SEM: twoRel[rel=diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: diameter
*CAT: n
*SEM: twoRel[rel=diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: diameter
*CAT: n
*SEM: orRel[rel=diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 9
*CAT: n
*SEM: unaryRel[rel=9]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 9
*CAT: n
*SEM: twoRel[rel=9]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 9
*CAT: n
*SEM: twoRel[rel=9]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 9
*CAT: n
*SEM: orRel[rel=9]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: label
*CAT: n
*SEM: unaryRel[rel=label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: label
*CAT: n
*SEM: twoRel[rel=label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: label
*CAT: n
*SEM: twoRel[rel=label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: label
*CAT: n
*SEM: orRel[rel=label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: rigid_+_pipes
*CAT: n
*SEM: unaryRel[rel=rigid_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: rigid_+_pipes
*CAT: n
*SEM: twoRel[rel=rigid_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: rigid_+_pipes
*CAT: n
*SEM: twoRel[rel=rigid_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: rigid_+_pipes
*CAT: n
*SEM: orRel[rel=rigid_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: material
*CAT: n
*SEM: unaryRel[rel=material]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: material
*CAT: n
*SEM: twoRel[rel=material]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: material
*CAT: n
*SEM: twoRel[rel=material]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: material
*CAT: n
*SEM: orRel[rel=material]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: saddle_+_clamp
*CAT: n
*SEM: unaryRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: saddle_+_clamp
*CAT: n
*SEM: twoRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: saddle_+_clamp
*CAT: n
*SEM: orRel[rel=saddle_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 20mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_
*CAT: n
*SEM: unaryRel[rel=20mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 20mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_
*CAT: n
*SEM: twoRel[rel=20mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 20mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_
*CAT: n
*SEM: twoRel[rel=20mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 20mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_
*CAT: n
*SEM: orRel[rel=20mm_+__+_greaterThan_+__+__+_equalto_+__+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: single_+_clamp-block
*CAT: n
*SEM: unaryRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: single_+_clamp-block
*CAT: n
*SEM: twoRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: single_+_clamp-block
*CAT: n
*SEM: twoRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: single_+_clamp-block
*CAT: n
*SEM: orRel[rel=single_+_clamp-block]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: peak_+_condition_+_minimum_+_150_+_c
*CAT: n
*SEM: unaryRel[rel=peak_+_condition_+_minimum_+_150_+_c]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: peak_+_condition_+_minimum_+_150_+_c
*CAT: n
*SEM: twoRel[rel=peak_+_condition_+_minimum_+_150_+_c]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: peak_+_condition_+_minimum_+_150_+_c
*CAT: n
*SEM: twoRel[rel=peak_+_condition_+_minimum_+_150_+_c]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: peak_+_condition_+_minimum_+_150_+_c
*CAT: n
*SEM: orRel[rel=peak_+_condition_+_minimum_+_150_+_c]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_item
*CAT: n
*SEM: unaryRel[rel=electrical_+_item]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_item
*CAT: n
*SEM: twoRel[rel=electrical_+_item]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_item
*CAT: n
*SEM: twoRel[rel=electrical_+_item]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_item
*CAT: n
*SEM: orRel[rel=electrical_+_item]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: plastic_+_version
*CAT: n
*SEM: unaryRel[rel=plastic_+_version]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: plastic_+_version
*CAT: n
*SEM: twoRel[rel=plastic_+_version]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: plastic_+_version
*CAT: n
*SEM: twoRel[rel=plastic_+_version]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: plastic_+_version
*CAT: n
*SEM: orRel[rel=plastic_+_version]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: mlgb
*CAT: n
*SEM: unaryRel[rel=mlgb]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: mlgb
*CAT: n
*SEM: twoRel[rel=mlgb]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: mlgb
*CAT: n
*SEM: twoRel[rel=mlgb]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: mlgb
*CAT: n
*SEM: orRel[rel=mlgb]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: an_+_intermediate_+_bracket
*CAT: n
*SEM: unaryRel[rel=an_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: an_+_intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=an_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: an_+_intermediate_+_bracket
*CAT: n
*SEM: twoRel[rel=an_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: an_+_intermediate_+_bracket
*CAT: n
*SEM: orRel[rel=an_+_intermediate_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: togehter_+_to_+_a_+_single_+_equipment
*CAT: n
*SEM: unaryRel[rel=togehter_+_to_+_a_+_single_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: togehter_+_to_+_a_+_single_+_equipment
*CAT: n
*SEM: twoRel[rel=togehter_+_to_+_a_+_single_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: togehter_+_to_+_a_+_single_+_equipment
*CAT: n
*SEM: twoRel[rel=togehter_+_to_+_a_+_single_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: togehter_+_to_+_a_+_single_+_equipment
*CAT: n
*SEM: orRel[rel=togehter_+_to_+_a_+_single_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stringer_+_p5
*CAT: n
*SEM: unaryRel[rel=stringer_+_p5]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stringer_+_p5
*CAT: n
*SEM: twoRel[rel=stringer_+_p5]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stringer_+_p5
*CAT: n
*SEM: twoRel[rel=stringer_+_p5]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stringer_+_p5
*CAT: n
*SEM: orRel[rel=stringer_+_p5]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: end_+_extremities
*CAT: n
*SEM: unaryRel[rel=end_+_extremities]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: end_+_extremities
*CAT: n
*SEM: twoRel[rel=end_+_extremities]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: end_+_extremities
*CAT: n
*SEM: twoRel[rel=end_+_extremities]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: end_+_extremities
*CAT: n
*SEM: orRel[rel=end_+_extremities]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle_+_growth_+_potential
*CAT: n
*SEM: unaryRel[rel=bundle_+_growth_+_potential]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle_+_growth_+_potential
*CAT: n
*SEM: twoRel[rel=bundle_+_growth_+_potential]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle_+_growth_+_potential
*CAT: n
*SEM: twoRel[rel=bundle_+_growth_+_potential]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle_+_growth_+_potential
*CAT: n
*SEM: orRel[rel=bundle_+_growth_+_potential]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_connection
*CAT: n
*SEM: unaryRel[rel=electrical_+_connection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_connection
*CAT: n
*SEM: twoRel[rel=electrical_+_connection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_connection
*CAT: n
*SEM: twoRel[rel=electrical_+_connection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_connection
*CAT: n
*SEM: orRel[rel=electrical_+_connection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: english_+_language
*CAT: n
*SEM: unaryRel[rel=english_+_language]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: english_+_language
*CAT: n
*SEM: twoRel[rel=english_+_language]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: english_+_language
*CAT: n
*SEM: twoRel[rel=english_+_language]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: english_+_language
*CAT: n
*SEM: orRel[rel=english_+_language]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: last_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=last_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: last_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=last_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: last_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=last_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: last_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=last_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: e-route
*CAT: n
*SEM: unaryRel[rel=e-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: e-route
*CAT: n
*SEM: twoRel[rel=e-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: e-route
*CAT: n
*SEM: twoRel[rel=e-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: e-route
*CAT: n
*SEM: orRel[rel=e-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: contact
*CAT: n
*SEM: unaryRel[rel=contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: contact
*CAT: n
*SEM: twoRel[rel=contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: contact
*CAT: n
*SEM: twoRel[rel=contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: contact
*CAT: n
*SEM: orRel[rel=contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: components
*CAT: n
*SEM: unaryRel[rel=components]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: components
*CAT: n
*SEM: twoRel[rel=components]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: components
*CAT: n
*SEM: twoRel[rel=components]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: components
*CAT: n
*SEM: orRel[rel=components]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: detoriation
*CAT: n
*SEM: unaryRel[rel=detoriation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: detoriation
*CAT: n
*SEM: twoRel[rel=detoriation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: detoriation
*CAT: n
*SEM: twoRel[rel=detoriation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: detoriation
*CAT: n
*SEM: orRel[rel=detoriation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa5527_+_spacer
*CAT: n
*SEM: unaryRel[rel=nsa5527_+_spacer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa5527_+_spacer
*CAT: n
*SEM: twoRel[rel=nsa5527_+_spacer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa5527_+_spacer
*CAT: n
*SEM: twoRel[rel=nsa5527_+_spacer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa5527_+_spacer
*CAT: n
*SEM: orRel[rel=nsa5527_+_spacer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: the
*CAT: n
*SEM: unaryRel[rel=the]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: the
*CAT: n
*SEM: twoRel[rel=the]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: the
*CAT: n
*SEM: twoRel[rel=the]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: the
*CAT: n
*SEM: orRel[rel=the]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clearance
*CAT: n
*SEM: unaryRel[rel=clearance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clearance
*CAT: n
*SEM: twoRel[rel=clearance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clearance
*CAT: n
*SEM: twoRel[rel=clearance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clearance
*CAT: n
*SEM: orRel[rel=clearance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: inside_+_power_+_center_+_which
*CAT: n
*SEM: unaryRel[rel=inside_+_power_+_center_+_which]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: inside_+_power_+_center_+_which
*CAT: n
*SEM: twoRel[rel=inside_+_power_+_center_+_which]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: inside_+_power_+_center_+_which
*CAT: n
*SEM: twoRel[rel=inside_+_power_+_center_+_which]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: inside_+_power_+_center_+_which
*CAT: n
*SEM: orRel[rel=inside_+_power_+_center_+_which]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spacer_+_to
*CAT: n
*SEM: unaryRel[rel=spacer_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spacer_+_to
*CAT: n
*SEM: twoRel[rel=spacer_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spacer_+_to
*CAT: n
*SEM: twoRel[rel=spacer_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spacer_+_to
*CAT: n
*SEM: orRel[rel=spacer_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: less
*CAT: n
*SEM: unaryRel[rel=less]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: less
*CAT: n
*SEM: twoRel[rel=less]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: less
*CAT: n
*SEM: twoRel[rel=less]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: less
*CAT: n
*SEM: orRel[rel=less]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fire_+_seal
*CAT: n
*SEM: unaryRel[rel=fire_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fire_+_seal
*CAT: n
*SEM: twoRel[rel=fire_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fire_+_seal
*CAT: n
*SEM: twoRel[rel=fire_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fire_+_seal
*CAT: n
*SEM: orRel[rel=fire_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 10_+_mm
*CAT: n
*SEM: unaryRel[rel=10_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 10_+_mm
*CAT: n
*SEM: twoRel[rel=10_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 10_+_mm
*CAT: n
*SEM: twoRel[rel=10_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 10_+_mm
*CAT: n
*SEM: orRel[rel=10_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_the_+_following_+_rules
*CAT: n
*SEM: unaryRel[rel=account_+_the_+_following_+_rules]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_the_+_following_+_rules
*CAT: n
*SEM: twoRel[rel=account_+_the_+_following_+_rules]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_the_+_following_+_rules
*CAT: n
*SEM: twoRel[rel=account_+_the_+_following_+_rules]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_the_+_following_+_rules
*CAT: n
*SEM: orRel[rel=account_+_the_+_following_+_rules]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: captive_+_quick_+_release_+_fastener
*CAT: n
*SEM: unaryRel[rel=captive_+_quick_+_release_+_fastener]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: captive_+_quick_+_release_+_fastener
*CAT: n
*SEM: twoRel[rel=captive_+_quick_+_release_+_fastener]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: captive_+_quick_+_release_+_fastener
*CAT: n
*SEM: twoRel[rel=captive_+_quick_+_release_+_fastener]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: captive_+_quick_+_release_+_fastener
*CAT: n
*SEM: orRel[rel=captive_+_quick_+_release_+_fastener]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: rules
*CAT: n
*SEM: unaryRel[rel=rules]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: rules
*CAT: n
*SEM: twoRel[rel=rules]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: rules
*CAT: n
*SEM: twoRel[rel=rules]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: rules
*CAT: n
*SEM: orRel[rel=rules]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum_+_6_+_times_+_outer_+_bundle_+_diameter
*CAT: n
*SEM: unaryRel[rel=minimum_+_6_+_times_+_outer_+_bundle_+_diameter]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum_+_6_+_times_+_outer_+_bundle_+_diameter
*CAT: n
*SEM: twoRel[rel=minimum_+_6_+_times_+_outer_+_bundle_+_diameter]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum_+_6_+_times_+_outer_+_bundle_+_diameter
*CAT: n
*SEM: twoRel[rel=minimum_+_6_+_times_+_outer_+_bundle_+_diameter]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum_+_6_+_times_+_outer_+_bundle_+_diameter
*CAT: n
*SEM: orRel[rel=minimum_+_6_+_times_+_outer_+_bundle_+_diameter]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stection
*CAT: n
*SEM: unaryRel[rel=stection]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stection
*CAT: n
*SEM: twoRel[rel=stection]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stection
*CAT: n
*SEM: twoRel[rel=stection]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stection
*CAT: n
*SEM: orRel[rel=stection]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_single_+_wire
*CAT: n
*SEM: unaryRel[rel=each_+_single_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_single_+_wire
*CAT: n
*SEM: twoRel[rel=each_+_single_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_single_+_wire
*CAT: n
*SEM: twoRel[rel=each_+_single_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_single_+_wire
*CAT: n
*SEM: orRel[rel=each_+_single_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: low_+_t_+_bobbin_+_+
*CAT: n
*SEM: unaryRel[rel=low_+_t_+_bobbin_+_+]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: low_+_t_+_bobbin_+_+
*CAT: n
*SEM: twoRel[rel=low_+_t_+_bobbin_+_+]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: low_+_t_+_bobbin_+_+
*CAT: n
*SEM: twoRel[rel=low_+_t_+_bobbin_+_+]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: low_+_t_+_bobbin_+_+
*CAT: n
*SEM: orRel[rel=low_+_t_+_bobbin_+_+]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spray_+_cover
*CAT: n
*SEM: unaryRel[rel=spray_+_cover]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spray_+_cover
*CAT: n
*SEM: twoRel[rel=spray_+_cover]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spray_+_cover
*CAT: n
*SEM: twoRel[rel=spray_+_cover]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spray_+_cover
*CAT: n
*SEM: orRel[rel=spray_+_cover]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: gauge_+_24_+_to
*CAT: n
*SEM: unaryRel[rel=gauge_+_24_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: gauge_+_24_+_to
*CAT: n
*SEM: twoRel[rel=gauge_+_24_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: gauge_+_24_+_to
*CAT: n
*SEM: twoRel[rel=gauge_+_24_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: gauge_+_24_+_to
*CAT: n
*SEM: orRel[rel=gauge_+_24_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bulkhead_+_unions
*CAT: n
*SEM: unaryRel[rel=bulkhead_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=bulkhead_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bulkhead_+_unions
*CAT: n
*SEM: twoRel[rel=bulkhead_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bulkhead_+_unions
*CAT: n
*SEM: orRel[rel=bulkhead_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 50mm_+_-rrb-
*CAT: n
*SEM: unaryRel[rel=50mm_+_-rrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 50mm_+_-rrb-
*CAT: n
*SEM: twoRel[rel=50mm_+_-rrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 50mm_+_-rrb-
*CAT: n
*SEM: twoRel[rel=50mm_+_-rrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 50mm_+_-rrb-
*CAT: n
*SEM: orRel[rel=50mm_+_-rrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: leaky_+_line
*CAT: n
*SEM: unaryRel[rel=leaky_+_line]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: leaky_+_line
*CAT: n
*SEM: twoRel[rel=leaky_+_line]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: leaky_+_line
*CAT: n
*SEM: twoRel[rel=leaky_+_line]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: leaky_+_line
*CAT: n
*SEM: orRel[rel=leaky_+_line]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non-metallic_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=non-metallic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non-metallic_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=non-metallic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non-metallic_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=non-metallic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non-metallic_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=non-metallic_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: multi-functional_+_label
*CAT: n
*SEM: unaryRel[rel=multi-functional_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: multi-functional_+_label
*CAT: n
*SEM: twoRel[rel=multi-functional_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: multi-functional_+_label
*CAT: n
*SEM: twoRel[rel=multi-functional_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: multi-functional_+_label
*CAT: n
*SEM: orRel[rel=multi-functional_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum_+_5_+_mm_+_additional_+_gap
*CAT: n
*SEM: unaryRel[rel=minimum_+_5_+_mm_+_additional_+_gap]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum_+_5_+_mm_+_additional_+_gap
*CAT: n
*SEM: twoRel[rel=minimum_+_5_+_mm_+_additional_+_gap]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum_+_5_+_mm_+_additional_+_gap
*CAT: n
*SEM: twoRel[rel=minimum_+_5_+_mm_+_additional_+_gap]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum_+_5_+_mm_+_additional_+_gap
*CAT: n
*SEM: orRel[rel=minimum_+_5_+_mm_+_additional_+_gap]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: location
*CAT: n
*SEM: unaryRel[rel=location]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: location
*CAT: n
*SEM: twoRel[rel=location]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: location
*CAT: n
*SEM: twoRel[rel=location]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: location
*CAT: n
*SEM: orRel[rel=location]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 5d
*CAT: n
*SEM: unaryRel[rel=5d]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 5d
*CAT: n
*SEM: twoRel[rel=5d]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 5d
*CAT: n
*SEM: twoRel[rel=5d]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 5d
*CAT: n
*SEM: orRel[rel=5d]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: more_+_bundle
*CAT: n
*SEM: unaryRel[rel=more_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: more_+_bundle
*CAT: n
*SEM: twoRel[rel=more_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: more_+_bundle
*CAT: n
*SEM: twoRel[rel=more_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: more_+_bundle
*CAT: n
*SEM: orRel[rel=more_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: routes
*CAT: n
*SEM: unaryRel[rel=routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: routes
*CAT: n
*SEM: twoRel[rel=routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: routes
*CAT: n
*SEM: twoRel[rel=routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: routes
*CAT: n
*SEM: orRel[rel=routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: identical
*CAT: n
*SEM: unaryRel[rel=identical]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: identical
*CAT: n
*SEM: twoRel[rel=identical]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: identical
*CAT: n
*SEM: twoRel[rel=identical]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: identical
*CAT: n
*SEM: orRel[rel=identical]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: next_+_to_+_the_+_equipment
*CAT: n
*SEM: unaryRel[rel=next_+_to_+_the_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: next_+_to_+_the_+_equipment
*CAT: n
*SEM: twoRel[rel=next_+_to_+_the_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: next_+_to_+_the_+_equipment
*CAT: n
*SEM: twoRel[rel=next_+_to_+_the_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: next_+_to_+_the_+_equipment
*CAT: n
*SEM: orRel[rel=next_+_to_+_the_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spacer
*CAT: n
*SEM: unaryRel[rel=spacer]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spacer
*CAT: n
*SEM: twoRel[rel=spacer]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spacer
*CAT: n
*SEM: twoRel[rel=spacer]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spacer
*CAT: n
*SEM: orRel[rel=spacer]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: to
*CAT: n
*SEM: unaryRel[rel=to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: to
*CAT: n
*SEM: twoRel[rel=to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: to
*CAT: n
*SEM: twoRel[rel=to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: to
*CAT: n
*SEM: orRel[rel=to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_a_+_minimum_+_straight_+_distance
*CAT: n
*SEM: unaryRel[rel=account_+_a_+_minimum_+_straight_+_distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_a_+_minimum_+_straight_+_distance
*CAT: n
*SEM: twoRel[rel=account_+_a_+_minimum_+_straight_+_distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_a_+_minimum_+_straight_+_distance
*CAT: n
*SEM: twoRel[rel=account_+_a_+_minimum_+_straight_+_distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_a_+_minimum_+_straight_+_distance
*CAT: n
*SEM: orRel[rel=account_+_a_+_minimum_+_straight_+_distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: socket_+_contact
*CAT: n
*SEM: unaryRel[rel=socket_+_contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: socket_+_contact
*CAT: n
*SEM: twoRel[rel=socket_+_contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: socket_+_contact
*CAT: n
*SEM: twoRel[rel=socket_+_contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: socket_+_contact
*CAT: n
*SEM: orRel[rel=socket_+_contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: failure
*CAT: n
*SEM: unaryRel[rel=failure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: failure
*CAT: n
*SEM: twoRel[rel=failure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: failure
*CAT: n
*SEM: twoRel[rel=failure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: failure
*CAT: n
*SEM: orRel[rel=failure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: possible
*CAT: n
*SEM: unaryRel[rel=possible]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: possible
*CAT: n
*SEM: twoRel[rel=possible]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: possible
*CAT: n
*SEM: twoRel[rel=possible]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: possible
*CAT: n
*SEM: orRel[rel=possible]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: boxes
*CAT: n
*SEM: unaryRel[rel=boxes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: boxes
*CAT: n
*SEM: twoRel[rel=boxes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: boxes
*CAT: n
*SEM: twoRel[rel=boxes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: boxes
*CAT: n
*SEM: orRel[rel=boxes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hydraulic_+_pipes
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hydraulic_+_pipes
*CAT: n
*SEM: twoRel[rel=hydraulic_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hydraulic_+_pipes
*CAT: n
*SEM: twoRel[rel=hydraulic_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hydraulic_+_pipes
*CAT: n
*SEM: orRel[rel=hydraulic_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: small_+_-lrb-_+_dash_+_number_+_-04_+_to
*CAT: n
*SEM: unaryRel[rel=small_+_-lrb-_+_dash_+_number_+_-04_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: small_+_-lrb-_+_dash_+_number_+_-04_+_to
*CAT: n
*SEM: twoRel[rel=small_+_-lrb-_+_dash_+_number_+_-04_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: small_+_-lrb-_+_dash_+_number_+_-04_+_to
*CAT: n
*SEM: twoRel[rel=small_+_-lrb-_+_dash_+_number_+_-04_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: small_+_-lrb-_+_dash_+_number_+_-04_+_to
*CAT: n
*SEM: orRel[rel=small_+_-lrb-_+_dash_+_number_+_-04_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: loss
*CAT: n
*SEM: unaryRel[rel=loss]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: loss
*CAT: n
*SEM: twoRel[rel=loss]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: loss
*CAT: n
*SEM: twoRel[rel=loss]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: loss
*CAT: n
*SEM: orRel[rel=loss]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_e-route
*CAT: n
*SEM: unaryRel[rel=each_+_e-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_e-route
*CAT: n
*SEM: twoRel[rel=each_+_e-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_e-route
*CAT: n
*SEM: twoRel[rel=each_+_e-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_e-route
*CAT: n
*SEM: orRel[rel=each_+_e-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: crew_+_rest_+_compartment
*CAT: n
*SEM: unaryRel[rel=crew_+_rest_+_compartment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: crew_+_rest_+_compartment
*CAT: n
*SEM: twoRel[rel=crew_+_rest_+_compartment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: crew_+_rest_+_compartment
*CAT: n
*SEM: twoRel[rel=crew_+_rest_+_compartment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: crew_+_rest_+_compartment
*CAT: n
*SEM: orRel[rel=crew_+_rest_+_compartment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: horizontal_+_bundle
*CAT: n
*SEM: unaryRel[rel=horizontal_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: horizontal_+_bundle
*CAT: n
*SEM: twoRel[rel=horizontal_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: horizontal_+_bundle
*CAT: n
*SEM: twoRel[rel=horizontal_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: horizontal_+_bundle
*CAT: n
*SEM: orRel[rel=horizontal_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum
*CAT: n
*SEM: unaryRel[rel=minimum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum
*CAT: n
*SEM: twoRel[rel=minimum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum
*CAT: n
*SEM: twoRel[rel=minimum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: minimum
*CAT: n
*SEM: orRel[rel=minimum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_3x_+_diameter_+_minimum
*CAT: n
*SEM: unaryRel[rel=bend_+_3x_+_diameter_+_minimum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_3x_+_diameter_+_minimum
*CAT: n
*SEM: twoRel[rel=bend_+_3x_+_diameter_+_minimum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_3x_+_diameter_+_minimum
*CAT: n
*SEM: twoRel[rel=bend_+_3x_+_diameter_+_minimum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_3x_+_diameter_+_minimum
*CAT: n
*SEM: orRel[rel=bend_+_3x_+_diameter_+_minimum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe_+_centre_+_line
*CAT: n
*SEM: unaryRel[rel=pipe_+_centre_+_line]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe_+_centre_+_line
*CAT: n
*SEM: twoRel[rel=pipe_+_centre_+_line]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe_+_centre_+_line
*CAT: n
*SEM: twoRel[rel=pipe_+_centre_+_line]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe_+_centre_+_line
*CAT: n
*SEM: orRel[rel=pipe_+_centre_+_line]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: t
*CAT: n
*SEM: unaryRel[rel=t]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: t
*CAT: n
*SEM: twoRel[rel=t]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: t
*CAT: n
*SEM: twoRel[rel=t]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: t
*CAT: n
*SEM: orRel[rel=t]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: high_+_maintenance_+_workload
*CAT: n
*SEM: unaryRel[rel=high_+_maintenance_+_workload]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: high_+_maintenance_+_workload
*CAT: n
*SEM: twoRel[rel=high_+_maintenance_+_workload]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: high_+_maintenance_+_workload
*CAT: n
*SEM: twoRel[rel=high_+_maintenance_+_workload]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: high_+_maintenance_+_workload
*CAT: n
*SEM: orRel[rel=high_+_maintenance_+_workload]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressurization_+_variation
*CAT: n
*SEM: unaryRel[rel=pressurization_+_variation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressurization_+_variation
*CAT: n
*SEM: twoRel[rel=pressurization_+_variation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressurization_+_variation
*CAT: n
*SEM: twoRel[rel=pressurization_+_variation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressurization_+_variation
*CAT: n
*SEM: orRel[rel=pressurization_+_variation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: reduced
*CAT: n
*SEM: unaryRel[rel=reduced]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: reduced
*CAT: n
*SEM: twoRel[rel=reduced]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: reduced
*CAT: n
*SEM: twoRel[rel=reduced]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: reduced
*CAT: n
*SEM: orRel[rel=reduced]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: replacement
*CAT: n
*SEM: unaryRel[rel=replacement]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: replacement
*CAT: n
*SEM: twoRel[rel=replacement]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: replacement
*CAT: n
*SEM: twoRel[rel=replacement]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: replacement
*CAT: n
*SEM: orRel[rel=replacement]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_distance
*CAT: n
*SEM: unaryRel[rel=maximum_+_distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_distance
*CAT: n
*SEM: twoRel[rel=maximum_+_distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_distance
*CAT: n
*SEM: twoRel[rel=maximum_+_distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_distance
*CAT: n
*SEM: orRel[rel=maximum_+_distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: picture
*CAT: n
*SEM: unaryRel[rel=picture]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: picture
*CAT: n
*SEM: twoRel[rel=picture]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: picture
*CAT: n
*SEM: twoRel[rel=picture]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: picture
*CAT: n
*SEM: orRel[rel=picture]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: solution_+_-rrb-
*CAT: n
*SEM: unaryRel[rel=solution_+_-rrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: solution_+_-rrb-
*CAT: n
*SEM: twoRel[rel=solution_+_-rrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: solution_+_-rrb-
*CAT: n
*SEM: twoRel[rel=solution_+_-rrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: solution_+_-rrb-
*CAT: n
*SEM: orRel[rel=solution_+_-rrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: conductive_+_structure
*CAT: n
*SEM: unaryRel[rel=conductive_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: conductive_+_structure
*CAT: n
*SEM: twoRel[rel=conductive_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: conductive_+_structure
*CAT: n
*SEM: twoRel[rel=conductive_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: conductive_+_structure
*CAT: n
*SEM: orRel[rel=conductive_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: tee
*CAT: n
*SEM: unaryRel[rel=tee]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: tee
*CAT: n
*SEM: twoRel[rel=tee]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: tee
*CAT: n
*SEM: twoRel[rel=tee]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: tee
*CAT: n
*SEM: orRel[rel=tee]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_a_+_pull
*CAT: n
*SEM: unaryRel[rel=account_+_a_+_pull]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_a_+_pull
*CAT: n
*SEM: twoRel[rel=account_+_a_+_pull]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_a_+_pull
*CAT: n
*SEM: twoRel[rel=account_+_a_+_pull]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: account_+_a_+_pull
*CAT: n
*SEM: orRel[rel=account_+_a_+_pull]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressurized_+_areas
*CAT: n
*SEM: unaryRel[rel=pressurized_+_areas]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressurized_+_areas
*CAT: n
*SEM: twoRel[rel=pressurized_+_areas]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressurized_+_areas
*CAT: n
*SEM: twoRel[rel=pressurized_+_areas]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressurized_+_areas
*CAT: n
*SEM: orRel[rel=pressurized_+_areas]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: black_+_color
*CAT: n
*SEM: unaryRel[rel=black_+_color]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: black_+_color
*CAT: n
*SEM: twoRel[rel=black_+_color]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: black_+_color
*CAT: n
*SEM: twoRel[rel=black_+_color]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: black_+_color
*CAT: n
*SEM: orRel[rel=black_+_color]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_attachment_+_device
*CAT: n
*SEM: unaryRel[rel=two_+_attachment_+_device]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_attachment_+_device
*CAT: n
*SEM: twoRel[rel=two_+_attachment_+_device]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_attachment_+_device
*CAT: n
*SEM: twoRel[rel=two_+_attachment_+_device]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_attachment_+_device
*CAT: n
*SEM: orRel[rel=two_+_attachment_+_device]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: dedicated_+_attachment_+_point_+_-lrb-_+_network_+_1
*CAT: n
*SEM: unaryRel[rel=dedicated_+_attachment_+_point_+_-lrb-_+_network_+_1]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: dedicated_+_attachment_+_point_+_-lrb-_+_network_+_1
*CAT: n
*SEM: twoRel[rel=dedicated_+_attachment_+_point_+_-lrb-_+_network_+_1]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: dedicated_+_attachment_+_point_+_-lrb-_+_network_+_1
*CAT: n
*SEM: twoRel[rel=dedicated_+_attachment_+_point_+_-lrb-_+_network_+_1]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: dedicated_+_attachment_+_point_+_-lrb-_+_network_+_1
*CAT: n
*SEM: orRel[rel=dedicated_+_attachment_+_point_+_-lrb-_+_network_+_1]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: contacts
*CAT: n
*SEM: unaryRel[rel=contacts]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: contacts
*CAT: n
*SEM: twoRel[rel=contacts]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: contacts
*CAT: n
*SEM: twoRel[rel=contacts]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: contacts
*CAT: n
*SEM: orRel[rel=contacts]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp
*CAT: n
*SEM: unaryRel[rel=p-clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp
*CAT: n
*SEM: twoRel[rel=p-clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp
*CAT: n
*SEM: twoRel[rel=p-clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: p-clamp
*CAT: n
*SEM: orRel[rel=p-clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: routings
*CAT: n
*SEM: unaryRel[rel=routings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: routings
*CAT: n
*SEM: twoRel[rel=routings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: routings
*CAT: n
*SEM: twoRel[rel=routings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: routings
*CAT: n
*SEM: orRel[rel=routings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optional_+_harness_+_m-route
*CAT: n
*SEM: unaryRel[rel=optional_+_harness_+_m-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optional_+_harness_+_m-route
*CAT: n
*SEM: twoRel[rel=optional_+_harness_+_m-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optional_+_harness_+_m-route
*CAT: n
*SEM: twoRel[rel=optional_+_harness_+_m-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optional_+_harness_+_m-route
*CAT: n
*SEM: orRel[rel=optional_+_harness_+_m-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: insulated_+_bracket
*CAT: n
*SEM: unaryRel[rel=insulated_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: insulated_+_bracket
*CAT: n
*SEM: twoRel[rel=insulated_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: insulated_+_bracket
*CAT: n
*SEM: twoRel[rel=insulated_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: insulated_+_bracket
*CAT: n
*SEM: orRel[rel=insulated_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: lock_+_wire
*CAT: n
*SEM: unaryRel[rel=lock_+_wire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: lock_+_wire
*CAT: n
*SEM: twoRel[rel=lock_+_wire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: lock_+_wire
*CAT: n
*SEM: twoRel[rel=lock_+_wire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: lock_+_wire
*CAT: n
*SEM: orRel[rel=lock_+_wire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: s_+_routes
*CAT: n
*SEM: unaryRel[rel=s_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: s_+_routes
*CAT: n
*SEM: twoRel[rel=s_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: s_+_routes
*CAT: n
*SEM: twoRel[rel=s_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: s_+_routes
*CAT: n
*SEM: orRel[rel=s_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: self-locking_+_component
*CAT: n
*SEM: unaryRel[rel=self-locking_+_component]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: self-locking_+_component
*CAT: n
*SEM: twoRel[rel=self-locking_+_component]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: self-locking_+_component
*CAT: n
*SEM: twoRel[rel=self-locking_+_component]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: self-locking_+_component
*CAT: n
*SEM: orRel[rel=self-locking_+_component]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vu_+_number
*CAT: n
*SEM: unaryRel[rel=vu_+_number]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vu_+_number
*CAT: n
*SEM: twoRel[rel=vu_+_number]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vu_+_number
*CAT: n
*SEM: twoRel[rel=vu_+_number]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vu_+_number
*CAT: n
*SEM: orRel[rel=vu_+_number]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tanks_+_-rrb-
*CAT: n
*SEM: unaryRel[rel=fuel_+_tanks_+_-rrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tanks_+_-rrb-
*CAT: n
*SEM: twoRel[rel=fuel_+_tanks_+_-rrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tanks_+_-rrb-
*CAT: n
*SEM: twoRel[rel=fuel_+_tanks_+_-rrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel_+_tanks_+_-rrb-
*CAT: n
*SEM: orRel[rel=fuel_+_tanks_+_-rrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel-tank
*CAT: n
*SEM: unaryRel[rel=fuel-tank]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel-tank
*CAT: n
*SEM: twoRel[rel=fuel-tank]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel-tank
*CAT: n
*SEM: twoRel[rel=fuel-tank]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fuel-tank
*CAT: n
*SEM: orRel[rel=fuel-tank]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 300mm_+_maximum
*CAT: n
*SEM: unaryRel[rel=300mm_+_maximum]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 300mm_+_maximum
*CAT: n
*SEM: twoRel[rel=300mm_+_maximum]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 300mm_+_maximum
*CAT: n
*SEM: twoRel[rel=300mm_+_maximum]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 300mm_+_maximum
*CAT: n
*SEM: orRel[rel=300mm_+_maximum]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: structural_+_part
*CAT: n
*SEM: unaryRel[rel=structural_+_part]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: structural_+_part
*CAT: n
*SEM: twoRel[rel=structural_+_part]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: structural_+_part
*CAT: n
*SEM: twoRel[rel=structural_+_part]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: structural_+_part
*CAT: n
*SEM: orRel[rel=structural_+_part]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: high_+_t_+_bobbin
*CAT: n
*SEM: unaryRel[rel=high_+_t_+_bobbin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: high_+_t_+_bobbin
*CAT: n
*SEM: twoRel[rel=high_+_t_+_bobbin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: high_+_t_+_bobbin
*CAT: n
*SEM: twoRel[rel=high_+_t_+_bobbin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: high_+_t_+_bobbin
*CAT: n
*SEM: orRel[rel=high_+_t_+_bobbin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: commercial_+_m-route
*CAT: n
*SEM: unaryRel[rel=commercial_+_m-route]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: commercial_+_m-route
*CAT: n
*SEM: twoRel[rel=commercial_+_m-route]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: commercial_+_m-route
*CAT: n
*SEM: twoRel[rel=commercial_+_m-route]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: commercial_+_m-route
*CAT: n
*SEM: orRel[rel=commercial_+_m-route]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle
*CAT: n
*SEM: unaryRel[rel=bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle
*CAT: n
*SEM: twoRel[rel=bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle
*CAT: n
*SEM: twoRel[rel=bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle
*CAT: n
*SEM: orRel[rel=bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: -rrb-_+_pipes
*CAT: n
*SEM: unaryRel[rel=-rrb-_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: -rrb-_+_pipes
*CAT: n
*SEM: twoRel[rel=-rrb-_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: -rrb-_+_pipes
*CAT: n
*SEM: twoRel[rel=-rrb-_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: -rrb-_+_pipes
*CAT: n
*SEM: orRel[rel=-rrb-_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: arinc_+_600_+_gauge_+_12_+_contact
*CAT: n
*SEM: unaryRel[rel=arinc_+_600_+_gauge_+_12_+_contact]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: arinc_+_600_+_gauge_+_12_+_contact
*CAT: n
*SEM: twoRel[rel=arinc_+_600_+_gauge_+_12_+_contact]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: arinc_+_600_+_gauge_+_12_+_contact
*CAT: n
*SEM: twoRel[rel=arinc_+_600_+_gauge_+_12_+_contact]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: arinc_+_600_+_gauge_+_12_+_contact
*CAT: n
*SEM: orRel[rel=arinc_+_600_+_gauge_+_12_+_contact]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_figure
*CAT: n
*SEM: unaryRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_figure
*CAT: n
*SEM: twoRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_figure
*CAT: n
*SEM: twoRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attached_+_figure
*CAT: n
*SEM: orRel[rel=attached_+_figure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: outlets
*CAT: n
*SEM: unaryRel[rel=outlets]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: outlets
*CAT: n
*SEM: twoRel[rel=outlets]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: outlets
*CAT: n
*SEM: twoRel[rel=outlets]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: outlets
*CAT: n
*SEM: orRel[rel=outlets]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressure
*CAT: n
*SEM: unaryRel[rel=pressure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressure
*CAT: n
*SEM: twoRel[rel=pressure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressure
*CAT: n
*SEM: twoRel[rel=pressure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressure
*CAT: n
*SEM: orRel[rel=pressure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: adjustable_+_bracket
*CAT: n
*SEM: unaryRel[rel=adjustable_+_bracket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: adjustable_+_bracket
*CAT: n
*SEM: twoRel[rel=adjustable_+_bracket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: adjustable_+_bracket
*CAT: n
*SEM: twoRel[rel=adjustable_+_bracket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: adjustable_+_bracket
*CAT: n
*SEM: orRel[rel=adjustable_+_bracket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: loads
*CAT: n
*SEM: unaryRel[rel=loads]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: loads
*CAT: n
*SEM: twoRel[rel=loads]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: loads
*CAT: n
*SEM: twoRel[rel=loads]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: loads
*CAT: n
*SEM: orRel[rel=loads]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optical_+_cable
*CAT: n
*SEM: unaryRel[rel=optical_+_cable]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optical_+_cable
*CAT: n
*SEM: twoRel[rel=optical_+_cable]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optical_+_cable
*CAT: n
*SEM: twoRel[rel=optical_+_cable]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optical_+_cable
*CAT: n
*SEM: orRel[rel=optical_+_cable]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_8_+_times
*CAT: n
*SEM: unaryRel[rel=bend_+_8_+_times]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_8_+_times
*CAT: n
*SEM: twoRel[rel=bend_+_8_+_times]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_8_+_times
*CAT: n
*SEM: twoRel[rel=bend_+_8_+_times]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_8_+_times
*CAT: n
*SEM: orRel[rel=bend_+_8_+_times]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: carbon_+_tank
*CAT: n
*SEM: unaryRel[rel=carbon_+_tank]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: carbon_+_tank
*CAT: n
*SEM: twoRel[rel=carbon_+_tank]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: carbon_+_tank
*CAT: n
*SEM: twoRel[rel=carbon_+_tank]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: carbon_+_tank
*CAT: n
*SEM: orRel[rel=carbon_+_tank]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: small_+_vu
*CAT: n
*SEM: unaryRel[rel=small_+_vu]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: small_+_vu
*CAT: n
*SEM: twoRel[rel=small_+_vu]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: small_+_vu
*CAT: n
*SEM: twoRel[rel=small_+_vu]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: small_+_vu
*CAT: n
*SEM: orRel[rel=small_+_vu]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: socket
*CAT: n
*SEM: unaryRel[rel=socket]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: socket
*CAT: n
*SEM: twoRel[rel=socket]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: socket
*CAT: n
*SEM: twoRel[rel=socket]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: socket
*CAT: n
*SEM: orRel[rel=socket]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distance
*CAT: n
*SEM: unaryRel[rel=distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distance
*CAT: n
*SEM: twoRel[rel=distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distance
*CAT: n
*SEM: twoRel[rel=distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distance
*CAT: n
*SEM: orRel[rel=distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: saddle
*CAT: n
*SEM: unaryRel[rel=saddle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: saddle
*CAT: n
*SEM: twoRel[rel=saddle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: saddle
*CAT: n
*SEM: twoRel[rel=saddle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: saddle
*CAT: n
*SEM: orRel[rel=saddle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: my_+_opinion_+_i
*CAT: n
*SEM: unaryRel[rel=my_+_opinion_+_i]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: my_+_opinion_+_i
*CAT: n
*SEM: twoRel[rel=my_+_opinion_+_i]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: my_+_opinion_+_i
*CAT: n
*SEM: twoRel[rel=my_+_opinion_+_i]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: my_+_opinion_+_i
*CAT: n
*SEM: orRel[rel=my_+_opinion_+_i]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non_+_conductive_+_structure
*CAT: n
*SEM: unaryRel[rel=non_+_conductive_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non_+_conductive_+_structure
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non_+_conductive_+_structure
*CAT: n
*SEM: twoRel[rel=non_+_conductive_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: non_+_conductive_+_structure
*CAT: n
*SEM: orRel[rel=non_+_conductive_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stand-off_+__+_colonettes
*CAT: n
*SEM: unaryRel[rel=stand-off_+__+_colonettes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stand-off_+__+_colonettes
*CAT: n
*SEM: twoRel[rel=stand-off_+__+_colonettes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stand-off_+__+_colonettes
*CAT: n
*SEM: twoRel[rel=stand-off_+__+_colonettes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stand-off_+__+_colonettes
*CAT: n
*SEM: orRel[rel=stand-off_+__+_colonettes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: routings
*CAT: n
*SEM: unaryRel[rel=routings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: routings
*CAT: n
*SEM: twoRel[rel=routings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: routings
*CAT: n
*SEM: twoRel[rel=routings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: routings
*CAT: n
*SEM: orRel[rel=routings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: side
*CAT: n
*SEM: unaryRel[rel=side]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: side
*CAT: n
*SEM: twoRel[rel=side]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: side
*CAT: n
*SEM: twoRel[rel=side]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: side
*CAT: n
*SEM: orRel[rel=side]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: compatible
*CAT: n
*SEM: unaryRel[rel=compatible]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: compatible
*CAT: n
*SEM: twoRel[rel=compatible]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: compatible
*CAT: n
*SEM: twoRel[rel=compatible]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: compatible
*CAT: n
*SEM: orRel[rel=compatible]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: junction_+_zones_+_to
*CAT: n
*SEM: unaryRel[rel=junction_+_zones_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: junction_+_zones_+_to
*CAT: n
*SEM: twoRel[rel=junction_+_zones_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: junction_+_zones_+_to
*CAT: n
*SEM: twoRel[rel=junction_+_zones_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: junction_+_zones_+_to
*CAT: n
*SEM: orRel[rel=junction_+_zones_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_equipment
*CAT: n
*SEM: unaryRel[rel=any_+_equipment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_equipment
*CAT: n
*SEM: twoRel[rel=any_+_equipment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_equipment
*CAT: n
*SEM: twoRel[rel=any_+_equipment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_equipment
*CAT: n
*SEM: orRel[rel=any_+_equipment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: para-aramid_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=para-aramid_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: para-aramid_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=para-aramid_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: para-aramid_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=para-aramid_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: para-aramid_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=para-aramid_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: en3739
*CAT: n
*SEM: unaryRel[rel=en3739]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: en3739
*CAT: n
*SEM: twoRel[rel=en3739]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: en3739
*CAT: n
*SEM: twoRel[rel=en3739]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: en3739
*CAT: n
*SEM: orRel[rel=en3739]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_three_+_derivation
*CAT: n
*SEM: unaryRel[rel=maximum_+_three_+_derivation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_three_+_derivation
*CAT: n
*SEM: twoRel[rel=maximum_+_three_+_derivation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_three_+_derivation
*CAT: n
*SEM: twoRel[rel=maximum_+_three_+_derivation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_three_+_derivation
*CAT: n
*SEM: orRel[rel=maximum_+_three_+_derivation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: total_+_weight
*CAT: n
*SEM: unaryRel[rel=total_+_weight]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: total_+_weight
*CAT: n
*SEM: twoRel[rel=total_+_weight]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: total_+_weight
*CAT: n
*SEM: twoRel[rel=total_+_weight]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: total_+_weight
*CAT: n
*SEM: orRel[rel=total_+_weight]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: repair
*CAT: n
*SEM: unaryRel[rel=repair]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: repair
*CAT: n
*SEM: twoRel[rel=repair]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: repair
*CAT: n
*SEM: twoRel[rel=repair]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: repair
*CAT: n
*SEM: orRel[rel=repair]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: contractions
*CAT: n
*SEM: unaryRel[rel=contractions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: contractions
*CAT: n
*SEM: twoRel[rel=contractions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: contractions
*CAT: n
*SEM: twoRel[rel=contractions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: contractions
*CAT: n
*SEM: orRel[rel=contractions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: shielded_+_harness
*CAT: n
*SEM: unaryRel[rel=shielded_+_harness]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: shielded_+_harness
*CAT: n
*SEM: twoRel[rel=shielded_+_harness]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: shielded_+_harness
*CAT: n
*SEM: twoRel[rel=shielded_+_harness]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: shielded_+_harness
*CAT: n
*SEM: orRel[rel=shielded_+_harness]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: secured_+_routing_+_case_+_a
*CAT: n
*SEM: unaryRel[rel=secured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: secured_+_routing_+_case_+_a
*CAT: n
*SEM: twoRel[rel=secured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: secured_+_routing_+_case_+_a
*CAT: n
*SEM: twoRel[rel=secured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: secured_+_routing_+_case_+_a
*CAT: n
*SEM: orRel[rel=secured_+_routing_+_case_+_a]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: mechanical_+_distance
*CAT: n
*SEM: unaryRel[rel=mechanical_+_distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: mechanical_+_distance
*CAT: n
*SEM: twoRel[rel=mechanical_+_distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: mechanical_+_distance
*CAT: n
*SEM: twoRel[rel=mechanical_+_distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: mechanical_+_distance
*CAT: n
*SEM: orRel[rel=mechanical_+_distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: virtual_+_pressure_+_seal_+_-lrb-_+_vp_+_-rrb-
*CAT: n
*SEM: unaryRel[rel=virtual_+_pressure_+_seal_+_-lrb-_+_vp_+_-rrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: virtual_+_pressure_+_seal_+_-lrb-_+_vp_+_-rrb-
*CAT: n
*SEM: twoRel[rel=virtual_+_pressure_+_seal_+_-lrb-_+_vp_+_-rrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: virtual_+_pressure_+_seal_+_-lrb-_+_vp_+_-rrb-
*CAT: n
*SEM: twoRel[rel=virtual_+_pressure_+_seal_+_-lrb-_+_vp_+_-rrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: virtual_+_pressure_+_seal_+_-lrb-_+_vp_+_-rrb-
*CAT: n
*SEM: orRel[rel=virtual_+_pressure_+_seal_+_-lrb-_+_vp_+_-rrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: self-locking_+_type
*CAT: n
*SEM: unaryRel[rel=self-locking_+_type]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: self-locking_+_type
*CAT: n
*SEM: twoRel[rel=self-locking_+_type]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: self-locking_+_type
*CAT: n
*SEM: twoRel[rel=self-locking_+_type]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: self-locking_+_type
*CAT: n
*SEM: orRel[rel=self-locking_+_type]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: harness
*CAT: n
*SEM: unaryRel[rel=harness]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: harness
*CAT: n
*SEM: twoRel[rel=harness]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: harness
*CAT: n
*SEM: twoRel[rel=harness]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: harness
*CAT: n
*SEM: orRel[rel=harness]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: frames
*CAT: n
*SEM: unaryRel[rel=frames]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: frames
*CAT: n
*SEM: twoRel[rel=frames]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: frames
*CAT: n
*SEM: twoRel[rel=frames]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: frames
*CAT: n
*SEM: orRel[rel=frames]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: d_+__+_greaterThan_+_
*CAT: n
*SEM: unaryRel[rel=d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: d_+__+_greaterThan_+_
*CAT: n
*SEM: twoRel[rel=d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: d_+__+_greaterThan_+_
*CAT: n
*SEM: twoRel[rel=d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: d_+__+_greaterThan_+_
*CAT: n
*SEM: orRel[rel=d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: d_+__+_smallerThan_+_
*CAT: n
*SEM: unaryRel[rel=d_+__+_smallerThan_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: d_+__+_smallerThan_+_
*CAT: n
*SEM: twoRel[rel=d_+__+_smallerThan_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: d_+__+_smallerThan_+_
*CAT: n
*SEM: twoRel[rel=d_+__+_smallerThan_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: d_+__+_smallerThan_+_
*CAT: n
*SEM: orRel[rel=d_+__+_smallerThan_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: large_+_vu
*CAT: n
*SEM: unaryRel[rel=large_+_vu]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: large_+_vu
*CAT: n
*SEM: twoRel[rel=large_+_vu]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: large_+_vu
*CAT: n
*SEM: twoRel[rel=large_+_vu]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: large_+_vu
*CAT: n
*SEM: orRel[rel=large_+_vu]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_installation
*CAT: n
*SEM: unaryRel[rel=electrical_+_installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_installation
*CAT: n
*SEM: twoRel[rel=electrical_+_installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_installation
*CAT: n
*SEM: twoRel[rel=electrical_+_installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: electrical_+_installation
*CAT: n
*SEM: orRel[rel=electrical_+_installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: regards_+_to_+_structure
*CAT: n
*SEM: unaryRel[rel=regards_+_to_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: regards_+_to_+_structure
*CAT: n
*SEM: twoRel[rel=regards_+_to_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: regards_+_to_+_structure
*CAT: n
*SEM: twoRel[rel=regards_+_to_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: regards_+_to_+_structure
*CAT: n
*SEM: orRel[rel=regards_+_to_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: open_+_conduit
*CAT: n
*SEM: unaryRel[rel=open_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: open_+_conduit
*CAT: n
*SEM: twoRel[rel=open_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: open_+_conduit
*CAT: n
*SEM: twoRel[rel=open_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: open_+_conduit
*CAT: n
*SEM: orRel[rel=open_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: weight
*CAT: n
*SEM: unaryRel[rel=weight]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: weight
*CAT: n
*SEM: twoRel[rel=weight]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: weight
*CAT: n
*SEM: twoRel[rel=weight]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: weight
*CAT: n
*SEM: orRel[rel=weight]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: area
*CAT: n
*SEM: unaryRel[rel=area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: area
*CAT: n
*SEM: twoRel[rel=area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: area
*CAT: n
*SEM: twoRel[rel=area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: area
*CAT: n
*SEM: orRel[rel=area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_aluminium_+_pipes_+_unions
*CAT: n
*SEM: unaryRel[rel=two_+_aluminium_+_pipes_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_aluminium_+_pipes_+_unions
*CAT: n
*SEM: twoRel[rel=two_+_aluminium_+_pipes_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_aluminium_+_pipes_+_unions
*CAT: n
*SEM: twoRel[rel=two_+_aluminium_+_pipes_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_aluminium_+_pipes_+_unions
*CAT: n
*SEM: orRel[rel=two_+_aluminium_+_pipes_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa9117_+_identification_+_label
*CAT: n
*SEM: unaryRel[rel=nsa9117_+_identification_+_label]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa9117_+_identification_+_label
*CAT: n
*SEM: twoRel[rel=nsa9117_+_identification_+_label]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa9117_+_identification_+_label
*CAT: n
*SEM: twoRel[rel=nsa9117_+_identification_+_label]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: nsa9117_+_identification_+_label
*CAT: n
*SEM: orRel[rel=nsa9117_+_identification_+_label]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: gases
*CAT: n
*SEM: unaryRel[rel=gases]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: gases
*CAT: n
*SEM: twoRel[rel=gases]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: gases
*CAT: n
*SEM: twoRel[rel=gases]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: gases
*CAT: n
*SEM: orRel[rel=gases]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: area
*CAT: n
*SEM: unaryRel[rel=area]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: area
*CAT: n
*SEM: twoRel[rel=area]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: area
*CAT: n
*SEM: twoRel[rel=area]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: area
*CAT: n
*SEM: orRel[rel=area]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clearance_+_to_+_structure
*CAT: n
*SEM: unaryRel[rel=clearance_+_to_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clearance_+_to_+_structure
*CAT: n
*SEM: twoRel[rel=clearance_+_to_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clearance_+_to_+_structure
*CAT: n
*SEM: twoRel[rel=clearance_+_to_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: clearance_+_to_+_structure
*CAT: n
*SEM: orRel[rel=clearance_+_to_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: structure
*CAT: n
*SEM: unaryRel[rel=structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: structure
*CAT: n
*SEM: twoRel[rel=structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: structure
*CAT: n
*SEM: twoRel[rel=structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: structure
*CAT: n
*SEM: orRel[rel=structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_possible_+_position
*CAT: n
*SEM: unaryRel[rel=any_+_possible_+_position]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_possible_+_position
*CAT: n
*SEM: twoRel[rel=any_+_possible_+_position]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_possible_+_position
*CAT: n
*SEM: twoRel[rel=any_+_possible_+_position]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_possible_+_position
*CAT: n
*SEM: orRel[rel=any_+_possible_+_position]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 2_+_nsa5527_+_spacer_+_to
*CAT: n
*SEM: unaryRel[rel=2_+_nsa5527_+_spacer_+_to]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 2_+_nsa5527_+_spacer_+_to
*CAT: n
*SEM: twoRel[rel=2_+_nsa5527_+_spacer_+_to]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 2_+_nsa5527_+_spacer_+_to
*CAT: n
*SEM: twoRel[rel=2_+_nsa5527_+_spacer_+_to]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 2_+_nsa5527_+_spacer_+_to
*CAT: n
*SEM: orRel[rel=2_+_nsa5527_+_spacer_+_to]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: aircraft_+_skin
*CAT: n
*SEM: unaryRel[rel=aircraft_+_skin]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: aircraft_+_skin
*CAT: n
*SEM: twoRel[rel=aircraft_+_skin]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: aircraft_+_skin
*CAT: n
*SEM: twoRel[rel=aircraft_+_skin]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: aircraft_+_skin
*CAT: n
*SEM: orRel[rel=aircraft_+_skin]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: plastic_+_stand-off_+_
*CAT: n
*SEM: unaryRel[rel=plastic_+_stand-off_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: plastic_+_stand-off_+_
*CAT: n
*SEM: twoRel[rel=plastic_+_stand-off_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: plastic_+_stand-off_+_
*CAT: n
*SEM: twoRel[rel=plastic_+_stand-off_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: plastic_+_stand-off_+_
*CAT: n
*SEM: orRel[rel=plastic_+_stand-off_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: dynamic_+_bundles
*CAT: n
*SEM: unaryRel[rel=dynamic_+_bundles]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: dynamic_+_bundles
*CAT: n
*SEM: twoRel[rel=dynamic_+_bundles]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: dynamic_+_bundles
*CAT: n
*SEM: twoRel[rel=dynamic_+_bundles]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: dynamic_+_bundles
*CAT: n
*SEM: orRel[rel=dynamic_+_bundles]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vertical_+_routing
*CAT: n
*SEM: unaryRel[rel=vertical_+_routing]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vertical_+_routing
*CAT: n
*SEM: twoRel[rel=vertical_+_routing]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vertical_+_routing
*CAT: n
*SEM: twoRel[rel=vertical_+_routing]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vertical_+_routing
*CAT: n
*SEM: orRel[rel=vertical_+_routing]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: resistive_+_unions
*CAT: n
*SEM: unaryRel[rel=resistive_+_unions]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: resistive_+_unions
*CAT: n
*SEM: twoRel[rel=resistive_+_unions]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: resistive_+_unions
*CAT: n
*SEM: twoRel[rel=resistive_+_unions]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: resistive_+_unions
*CAT: n
*SEM: orRel[rel=resistive_+_unions]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: aircraft_+_section_+_interfaces
*CAT: n
*SEM: unaryRel[rel=aircraft_+_section_+_interfaces]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: aircraft_+_section_+_interfaces
*CAT: n
*SEM: twoRel[rel=aircraft_+_section_+_interfaces]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: aircraft_+_section_+_interfaces
*CAT: n
*SEM: twoRel[rel=aircraft_+_section_+_interfaces]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: aircraft_+_section_+_interfaces
*CAT: n
*SEM: orRel[rel=aircraft_+_section_+_interfaces]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optional_+_part
*CAT: n
*SEM: unaryRel[rel=optional_+_part]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optional_+_part
*CAT: n
*SEM: twoRel[rel=optional_+_part]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optional_+_part
*CAT: n
*SEM: twoRel[rel=optional_+_part]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: optional_+_part
*CAT: n
*SEM: orRel[rel=optional_+_part]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_angle_+_-lrb-
*CAT: n
*SEM: unaryRel[rel=bend_+_angle_+_-lrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_angle_+_-lrb-
*CAT: n
*SEM: twoRel[rel=bend_+_angle_+_-lrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_angle_+_-lrb-
*CAT: n
*SEM: twoRel[rel=bend_+_angle_+_-lrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_angle_+_-lrb-
*CAT: n
*SEM: orRel[rel=bend_+_angle_+_-lrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_pitch_+_d_+__+_smallerThan_+_
*CAT: n
*SEM: unaryRel[rel=maximum_+_pitch_+_d_+__+_smallerThan_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_pitch_+_d_+__+_smallerThan_+_
*CAT: n
*SEM: twoRel[rel=maximum_+_pitch_+_d_+__+_smallerThan_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_pitch_+_d_+__+_smallerThan_+_
*CAT: n
*SEM: twoRel[rel=maximum_+_pitch_+_d_+__+_smallerThan_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_pitch_+_d_+__+_smallerThan_+_
*CAT: n
*SEM: orRel[rel=maximum_+_pitch_+_d_+__+_smallerThan_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: heat
*CAT: n
*SEM: unaryRel[rel=heat]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: heat
*CAT: n
*SEM: twoRel[rel=heat]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: heat
*CAT: n
*SEM: twoRel[rel=heat]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: heat
*CAT: n
*SEM: orRel[rel=heat]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: line
*CAT: n
*SEM: unaryRel[rel=line]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: line
*CAT: n
*SEM: twoRel[rel=line]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: line
*CAT: n
*SEM: twoRel[rel=line]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: line
*CAT: n
*SEM: orRel[rel=line]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 250_+_mm
*CAT: n
*SEM: unaryRel[rel=250_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 250_+_mm
*CAT: n
*SEM: twoRel[rel=250_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 250_+_mm
*CAT: n
*SEM: twoRel[rel=250_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 250_+_mm
*CAT: n
*SEM: orRel[rel=250_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: multi_+_branch_+_single_+_derivation
*CAT: n
*SEM: unaryRel[rel=multi_+_branch_+_single_+_derivation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: multi_+_branch_+_single_+_derivation
*CAT: n
*SEM: twoRel[rel=multi_+_branch_+_single_+_derivation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: multi_+_branch_+_single_+_derivation
*CAT: n
*SEM: twoRel[rel=multi_+_branch_+_single_+_derivation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: multi_+_branch_+_single_+_derivation
*CAT: n
*SEM: orRel[rel=multi_+_branch_+_single_+_derivation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: section_+_interfaces
*CAT: n
*SEM: unaryRel[rel=section_+_interfaces]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: section_+_interfaces
*CAT: n
*SEM: twoRel[rel=section_+_interfaces]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: section_+_interfaces
*CAT: n
*SEM: twoRel[rel=section_+_interfaces]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: section_+_interfaces
*CAT: n
*SEM: orRel[rel=section_+_interfaces]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: split_+_pins
*CAT: n
*SEM: unaryRel[rel=split_+_pins]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: split_+_pins
*CAT: n
*SEM: twoRel[rel=split_+_pins]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: split_+_pins
*CAT: n
*SEM: twoRel[rel=split_+_pins]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: split_+_pins
*CAT: n
*SEM: orRel[rel=split_+_pins]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bumpers
*CAT: n
*SEM: unaryRel[rel=bumpers]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bumpers
*CAT: n
*SEM: twoRel[rel=bumpers]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bumpers
*CAT: n
*SEM: twoRel[rel=bumpers]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bumpers
*CAT: n
*SEM: orRel[rel=bumpers]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: grommet
*CAT: n
*SEM: unaryRel[rel=grommet]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: grommet
*CAT: n
*SEM: twoRel[rel=grommet]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: grommet
*CAT: n
*SEM: twoRel[rel=grommet]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: grommet
*CAT: n
*SEM: orRel[rel=grommet]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_electrical_+_network
*CAT: n
*SEM: unaryRel[rel=each_+_electrical_+_network]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_electrical_+_network
*CAT: n
*SEM: twoRel[rel=each_+_electrical_+_network]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_electrical_+_network
*CAT: n
*SEM: twoRel[rel=each_+_electrical_+_network]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: each_+_electrical_+_network
*CAT: n
*SEM: orRel[rel=each_+_electrical_+_network]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: up
*CAT: n
*SEM: unaryRel[rel=up]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: up
*CAT: n
*SEM: twoRel[rel=up]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: up
*CAT: n
*SEM: twoRel[rel=up]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: up
*CAT: n
*SEM: orRel[rel=up]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: zone_+_characteristics
*CAT: n
*SEM: unaryRel[rel=zone_+_characteristics]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: zone_+_characteristics
*CAT: n
*SEM: twoRel[rel=zone_+_characteristics]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: zone_+_characteristics
*CAT: n
*SEM: twoRel[rel=zone_+_characteristics]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: zone_+_characteristics
*CAT: n
*SEM: orRel[rel=zone_+_characteristics]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_11_+_times
*CAT: n
*SEM: unaryRel[rel=bend_+_11_+_times]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_11_+_times
*CAT: n
*SEM: twoRel[rel=bend_+_11_+_times]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_11_+_times
*CAT: n
*SEM: twoRel[rel=bend_+_11_+_times]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bend_+_11_+_times
*CAT: n
*SEM: orRel[rel=bend_+_11_+_times]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: virtual_+_diode_+_-lrb-_+_vd_+_-rrb-
*CAT: n
*SEM: unaryRel[rel=virtual_+_diode_+_-lrb-_+_vd_+_-rrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: virtual_+_diode_+_-lrb-_+_vd_+_-rrb-
*CAT: n
*SEM: twoRel[rel=virtual_+_diode_+_-lrb-_+_vd_+_-rrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: virtual_+_diode_+_-lrb-_+_vd_+_-rrb-
*CAT: n
*SEM: twoRel[rel=virtual_+_diode_+_-lrb-_+_vd_+_-rrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: virtual_+_diode_+_-lrb-_+_vd_+_-rrb-
*CAT: n
*SEM: orRel[rel=virtual_+_diode_+_-lrb-_+_vd_+_-rrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_connector
*CAT: n
*SEM: unaryRel[rel=all_+_connector]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_connector
*CAT: n
*SEM: twoRel[rel=all_+_connector]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_connector
*CAT: n
*SEM: twoRel[rel=all_+_connector]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: all_+_connector
*CAT: n
*SEM: orRel[rel=all_+_connector]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: more
*CAT: n
*SEM: unaryRel[rel=more]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: more
*CAT: n
*SEM: twoRel[rel=more]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: more
*CAT: n
*SEM: twoRel[rel=more]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: more
*CAT: n
*SEM: orRel[rel=more]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pre-stressed_+_bundle
*CAT: n
*SEM: unaryRel[rel=pre-stressed_+_bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pre-stressed_+_bundle
*CAT: n
*SEM: twoRel[rel=pre-stressed_+_bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pre-stressed_+_bundle
*CAT: n
*SEM: twoRel[rel=pre-stressed_+_bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pre-stressed_+_bundle
*CAT: n
*SEM: orRel[rel=pre-stressed_+_bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distance
*CAT: n
*SEM: unaryRel[rel=distance]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distance
*CAT: n
*SEM: twoRel[rel=distance]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distance
*CAT: n
*SEM: twoRel[rel=distance]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distance
*CAT: n
*SEM: orRel[rel=distance]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: virtual_+_splice_+_-lrb-_+_vs_+_-rrb-
*CAT: n
*SEM: unaryRel[rel=virtual_+_splice_+_-lrb-_+_vs_+_-rrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: virtual_+_splice_+_-lrb-_+_vs_+_-rrb-
*CAT: n
*SEM: twoRel[rel=virtual_+_splice_+_-lrb-_+_vs_+_-rrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: virtual_+_splice_+_-lrb-_+_vs_+_-rrb-
*CAT: n
*SEM: twoRel[rel=virtual_+_splice_+_-lrb-_+_vs_+_-rrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: virtual_+_splice_+_-lrb-_+_vs_+_-rrb-
*CAT: n
*SEM: orRel[rel=virtual_+_splice_+_-lrb-_+_vs_+_-rrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: -rrb-
*CAT: n
*SEM: unaryRel[rel=-rrb-]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: -rrb-
*CAT: n
*SEM: twoRel[rel=-rrb-]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: -rrb-
*CAT: n
*SEM: twoRel[rel=-rrb-]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: -rrb-
*CAT: n
*SEM: orRel[rel=-rrb-]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs2226_+_flexible_+_hoses
*CAT: n
*SEM: unaryRel[rel=abs2226_+_flexible_+_hoses]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs2226_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=abs2226_+_flexible_+_hoses]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs2226_+_flexible_+_hoses
*CAT: n
*SEM: twoRel[rel=abs2226_+_flexible_+_hoses]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs2226_+_flexible_+_hoses
*CAT: n
*SEM: orRel[rel=abs2226_+_flexible_+_hoses]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: galleys
*CAT: n
*SEM: unaryRel[rel=galleys]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: galleys
*CAT: n
*SEM: twoRel[rel=galleys]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: galleys
*CAT: n
*SEM: twoRel[rel=galleys]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: galleys
*CAT: n
*SEM: orRel[rel=galleys]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: convergent
*CAT: n
*SEM: unaryRel[rel=convergent]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: convergent
*CAT: n
*SEM: twoRel[rel=convergent]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: convergent
*CAT: n
*SEM: twoRel[rel=convergent]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: convergent
*CAT: n
*SEM: orRel[rel=convergent]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 50mm_+_to_+_other_+_bundles
*CAT: n
*SEM: unaryRel[rel=50mm_+_to_+_other_+_bundles]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 50mm_+_to_+_other_+_bundles
*CAT: n
*SEM: twoRel[rel=50mm_+_to_+_other_+_bundles]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 50mm_+_to_+_other_+_bundles
*CAT: n
*SEM: twoRel[rel=50mm_+_to_+_other_+_bundles]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 50mm_+_to_+_other_+_bundles
*CAT: n
*SEM: orRel[rel=50mm_+_to_+_other_+_bundles]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: s-routes
*CAT: n
*SEM: unaryRel[rel=s-routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: s-routes
*CAT: n
*SEM: twoRel[rel=s-routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: s-routes
*CAT: n
*SEM: twoRel[rel=s-routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: s-routes
*CAT: n
*SEM: orRel[rel=s-routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: frame
*CAT: n
*SEM: unaryRel[rel=frame]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: frame
*CAT: n
*SEM: twoRel[rel=frame]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: frame
*CAT: n
*SEM: twoRel[rel=frame]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: frame
*CAT: n
*SEM: orRel[rel=frame]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe
*CAT: n
*SEM: unaryRel[rel=pipe]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe
*CAT: n
*SEM: twoRel[rel=pipe]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe
*CAT: n
*SEM: twoRel[rel=pipe]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe
*CAT: n
*SEM: orRel[rel=pipe]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 1_+_comma_+_5_+_thread
*CAT: n
*SEM: unaryRel[rel=1_+_comma_+_5_+_thread]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 1_+_comma_+_5_+_thread
*CAT: n
*SEM: twoRel[rel=1_+_comma_+_5_+_thread]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 1_+_comma_+_5_+_thread
*CAT: n
*SEM: twoRel[rel=1_+_comma_+_5_+_thread]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 1_+_comma_+_5_+_thread
*CAT: n
*SEM: orRel[rel=1_+_comma_+_5_+_thread]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs2195_+_clamp
*CAT: n
*SEM: unaryRel[rel=abs2195_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs2195_+_clamp
*CAT: n
*SEM: twoRel[rel=abs2195_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs2195_+_clamp
*CAT: n
*SEM: twoRel[rel=abs2195_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs2195_+_clamp
*CAT: n
*SEM: orRel[rel=abs2195_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs0455
*CAT: n
*SEM: unaryRel[rel=abs0455]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs0455
*CAT: n
*SEM: twoRel[rel=abs0455]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs0455
*CAT: n
*SEM: twoRel[rel=abs0455]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs0455
*CAT: n
*SEM: orRel[rel=abs0455]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spare_+_provision
*CAT: n
*SEM: unaryRel[rel=spare_+_provision]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spare_+_provision
*CAT: n
*SEM: twoRel[rel=spare_+_provision]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spare_+_provision
*CAT: n
*SEM: twoRel[rel=spare_+_provision]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: spare_+_provision
*CAT: n
*SEM: orRel[rel=spare_+_provision]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pneumatic_+_system
*CAT: n
*SEM: unaryRel[rel=pneumatic_+_system]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pneumatic_+_system
*CAT: n
*SEM: twoRel[rel=pneumatic_+_system]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pneumatic_+_system
*CAT: n
*SEM: twoRel[rel=pneumatic_+_system]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pneumatic_+_system
*CAT: n
*SEM: orRel[rel=pneumatic_+_system]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: other
*CAT: n
*SEM: unaryRel[rel=other]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: other
*CAT: n
*SEM: twoRel[rel=other]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: other
*CAT: n
*SEM: twoRel[rel=other]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: other
*CAT: n
*SEM: orRel[rel=other]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distance_+_d_+__+_greaterThan_+_
*CAT: n
*SEM: unaryRel[rel=distance_+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distance_+_d_+__+_greaterThan_+_
*CAT: n
*SEM: twoRel[rel=distance_+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distance_+_d_+__+_greaterThan_+_
*CAT: n
*SEM: twoRel[rel=distance_+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: distance_+_d_+__+_greaterThan_+_
*CAT: n
*SEM: orRel[rel=distance_+_d_+__+_greaterThan_+_]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: single_+_pipes
*CAT: n
*SEM: unaryRel[rel=single_+_pipes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: single_+_pipes
*CAT: n
*SEM: twoRel[rel=single_+_pipes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: single_+_pipes
*CAT: n
*SEM: twoRel[rel=single_+_pipes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: single_+_pipes
*CAT: n
*SEM: orRel[rel=single_+_pipes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 1000psi
*CAT: n
*SEM: unaryRel[rel=1000psi]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 1000psi
*CAT: n
*SEM: twoRel[rel=1000psi]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 1000psi
*CAT: n
*SEM: twoRel[rel=1000psi]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 1000psi
*CAT: n
*SEM: orRel[rel=1000psi]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fire
*CAT: n
*SEM: unaryRel[rel=fire]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fire
*CAT: n
*SEM: twoRel[rel=fire]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fire
*CAT: n
*SEM: twoRel[rel=fire]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fire
*CAT: n
*SEM: orRel[rel=fire]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: connection_+_point
*CAT: n
*SEM: unaryRel[rel=connection_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: connection_+_point
*CAT: n
*SEM: twoRel[rel=connection_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: connection_+_point
*CAT: n
*SEM: twoRel[rel=connection_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: connection_+_point
*CAT: n
*SEM: orRel[rel=connection_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_structure
*CAT: n
*SEM: unaryRel[rel=any_+_structure]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_structure
*CAT: n
*SEM: twoRel[rel=any_+_structure]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_structure
*CAT: n
*SEM: twoRel[rel=any_+_structure]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: any_+_structure
*CAT: n
*SEM: orRel[rel=any_+_structure]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stirr_+_up
*CAT: n
*SEM: unaryRel[rel=stirr_+_up]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stirr_+_up
*CAT: n
*SEM: twoRel[rel=stirr_+_up]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stirr_+_up
*CAT: n
*SEM: twoRel[rel=stirr_+_up]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: stirr_+_up
*CAT: n
*SEM: orRel[rel=stirr_+_up]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: elongation
*CAT: n
*SEM: unaryRel[rel=elongation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: elongation
*CAT: n
*SEM: twoRel[rel=elongation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: elongation
*CAT: n
*SEM: twoRel[rel=elongation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: elongation
*CAT: n
*SEM: orRel[rel=elongation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressure_+_seal
*CAT: n
*SEM: unaryRel[rel=pressure_+_seal]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressure_+_seal
*CAT: n
*SEM: twoRel[rel=pressure_+_seal]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressure_+_seal
*CAT: n
*SEM: twoRel[rel=pressure_+_seal]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pressure_+_seal
*CAT: n
*SEM: orRel[rel=pressure_+_seal]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 80kg
*CAT: n
*SEM: unaryRel[rel=80kg]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 80kg
*CAT: n
*SEM: twoRel[rel=80kg]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 80kg
*CAT: n
*SEM: twoRel[rel=80kg]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 80kg
*CAT: n
*SEM: orRel[rel=80kg]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vt
*CAT: n
*SEM: unaryRel[rel=vt]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vt
*CAT: n
*SEM: twoRel[rel=vt]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vt
*CAT: n
*SEM: twoRel[rel=vt]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: vt
*CAT: n
*SEM: orRel[rel=vt]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs_+_1353_+_emi_+_conduit
*CAT: n
*SEM: unaryRel[rel=abs_+_1353_+_emi_+_conduit]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs_+_1353_+_emi_+_conduit
*CAT: n
*SEM: twoRel[rel=abs_+_1353_+_emi_+_conduit]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs_+_1353_+_emi_+_conduit
*CAT: n
*SEM: twoRel[rel=abs_+_1353_+_emi_+_conduit]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: abs_+_1353_+_emi_+_conduit
*CAT: n
*SEM: orRel[rel=abs_+_1353_+_emi_+_conduit]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle
*CAT: n
*SEM: unaryRel[rel=bundle]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle
*CAT: n
*SEM: twoRel[rel=bundle]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle
*CAT: n
*SEM: twoRel[rel=bundle]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: bundle
*CAT: n
*SEM: orRel[rel=bundle]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_length
*CAT: n
*SEM: unaryRel[rel=maximum_+_length]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_length
*CAT: n
*SEM: twoRel[rel=maximum_+_length]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_length
*CAT: n
*SEM: twoRel[rel=maximum_+_length]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: maximum_+_length
*CAT: n
*SEM: orRel[rel=maximum_+_length]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0.250_+_to_+_0.625_+_inch
*CAT: n
*SEM: unaryRel[rel=0.250_+_to_+_0.625_+_inch]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0.250_+_to_+_0.625_+_inch
*CAT: n
*SEM: twoRel[rel=0.250_+_to_+_0.625_+_inch]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0.250_+_to_+_0.625_+_inch
*CAT: n
*SEM: twoRel[rel=0.250_+_to_+_0.625_+_inch]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 0.250_+_to_+_0.625_+_inch
*CAT: n
*SEM: orRel[rel=0.250_+_to_+_0.625_+_inch]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_clamp
*CAT: n
*SEM: unaryRel[rel=two_+_clamp]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_clamp
*CAT: n
*SEM: twoRel[rel=two_+_clamp]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_clamp
*CAT: n
*SEM: twoRel[rel=two_+_clamp]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: two_+_clamp
*CAT: n
*SEM: orRel[rel=two_+_clamp]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: size
*CAT: n
*SEM: unaryRel[rel=size]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: size
*CAT: n
*SEM: twoRel[rel=size]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: size
*CAT: n
*SEM: twoRel[rel=size]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: size
*CAT: n
*SEM: orRel[rel=size]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: seletion
*CAT: n
*SEM: unaryRel[rel=seletion]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: seletion
*CAT: n
*SEM: twoRel[rel=seletion]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: seletion
*CAT: n
*SEM: twoRel[rel=seletion]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: seletion
*CAT: n
*SEM: orRel[rel=seletion]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: loos
*CAT: n
*SEM: unaryRel[rel=loos]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: loos
*CAT: n
*SEM: twoRel[rel=loos]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: loos
*CAT: n
*SEM: twoRel[rel=loos]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: loos
*CAT: n
*SEM: orRel[rel=loos]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: normal_+_installation
*CAT: n
*SEM: unaryRel[rel=normal_+_installation]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: normal_+_installation
*CAT: n
*SEM: twoRel[rel=normal_+_installation]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: normal_+_installation
*CAT: n
*SEM: twoRel[rel=normal_+_installation]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: normal_+_installation
*CAT: n
*SEM: orRel[rel=normal_+_installation]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe_+_routings
*CAT: n
*SEM: unaryRel[rel=pipe_+_routings]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe_+_routings
*CAT: n
*SEM: twoRel[rel=pipe_+_routings]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe_+_routings
*CAT: n
*SEM: twoRel[rel=pipe_+_routings]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: pipe_+_routings
*CAT: n
*SEM: orRel[rel=pipe_+_routings]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: m_+_routes
*CAT: n
*SEM: unaryRel[rel=m_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: m_+_routes
*CAT: n
*SEM: twoRel[rel=m_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: m_+_routes
*CAT: n
*SEM: twoRel[rel=m_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: m_+_routes
*CAT: n
*SEM: orRel[rel=m_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hydraulic_+_compartment
*CAT: n
*SEM: unaryRel[rel=hydraulic_+_compartment]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hydraulic_+_compartment
*CAT: n
*SEM: twoRel[rel=hydraulic_+_compartment]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hydraulic_+_compartment
*CAT: n
*SEM: twoRel[rel=hydraulic_+_compartment]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: hydraulic_+_compartment
*CAT: n
*SEM: orRel[rel=hydraulic_+_compartment]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: modules
*CAT: n
*SEM: unaryRel[rel=modules]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: modules
*CAT: n
*SEM: twoRel[rel=modules]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: modules
*CAT: n
*SEM: twoRel[rel=modules]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: modules
*CAT: n
*SEM: orRel[rel=modules]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 4s
*CAT: n
*SEM: unaryRel[rel=4s]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 4s
*CAT: n
*SEM: twoRel[rel=4s]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 4s
*CAT: n
*SEM: twoRel[rel=4s]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 4s
*CAT: n
*SEM: orRel[rel=4s]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: red_+_frangible_+_paint
*CAT: n
*SEM: unaryRel[rel=red_+_frangible_+_paint]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: red_+_frangible_+_paint
*CAT: n
*SEM: twoRel[rel=red_+_frangible_+_paint]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: red_+_frangible_+_paint
*CAT: n
*SEM: twoRel[rel=red_+_frangible_+_paint]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: red_+_frangible_+_paint
*CAT: n
*SEM: orRel[rel=red_+_frangible_+_paint]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fastener
*CAT: n
*SEM: unaryRel[rel=fastener]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fastener
*CAT: n
*SEM: twoRel[rel=fastener]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fastener
*CAT: n
*SEM: twoRel[rel=fastener]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: fastener
*CAT: n
*SEM: orRel[rel=fastener]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: u
*CAT: n
*SEM: unaryRel[rel=u]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: u
*CAT: n
*SEM: twoRel[rel=u]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: u
*CAT: n
*SEM: twoRel[rel=u]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: u
*CAT: n
*SEM: orRel[rel=u]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_point
*CAT: n
*SEM: unaryRel[rel=attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_point
*CAT: n
*SEM: twoRel[rel=attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_point
*CAT: n
*SEM: twoRel[rel=attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: attachment_+_point
*CAT: n
*SEM: orRel[rel=attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: unaryRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: twoRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: dedicated_+_attachment_+_point
*CAT: n
*SEM: orRel[rel=dedicated_+_attachment_+_point]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: r_+_routes
*CAT: n
*SEM: unaryRel[rel=r_+_routes]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: r_+_routes
*CAT: n
*SEM: twoRel[rel=r_+_routes]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: r_+_routes
*CAT: n
*SEM: twoRel[rel=r_+_routes]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: r_+_routes
*CAT: n
*SEM: orRel[rel=r_+_routes]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 20_+_mm
*CAT: n
*SEM: unaryRel[rel=20_+_mm]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 20_+_mm
*CAT: n
*SEM: twoRel[rel=20_+_mm]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 20_+_mm
*CAT: n
*SEM: twoRel[rel=20_+_mm]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 20_+_mm
*CAT: n
*SEM: orRel[rel=20_+_mm]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 935401_+_cable_+_tie
*CAT: n
*SEM: unaryRel[rel=935401_+_cable_+_tie]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 935401_+_cable_+_tie
*CAT: n
*SEM: twoRel[rel=935401_+_cable_+_tie]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 935401_+_cable_+_tie
*CAT: n
*SEM: twoRel[rel=935401_+_cable_+_tie]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: 935401_+_cable_+_tie
*CAT: n
*SEM: orRel[rel=935401_+_cable_+_tie]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: overlength_+_management
*CAT: n
*SEM: unaryRel[rel=overlength_+_management]
*ACC: 1.0
*FAM: alphaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: overlength_+_management
*CAT: n
*SEM: twoRel[rel=overlength_+_management]
*ACC: 1.0
*FAM: commaNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: overlength_+_management
*CAT: n
*SEM: twoRel[rel=overlength_+_management]
*ACC: 1.0
*FAM: andNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

   *ENTRY: overlength_+_management
*CAT: n
*SEM: orRel[rel=overlength_+_management]
*ACC: 1.0
*FAM: orNX
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:


*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: n0VmainSem[rel=sized,relArg2=sizedArg2,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: onlySubj[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: n0VmainSem[rel=sized,relArg2=sizedArg2,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: onlySubj[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: n0VmainSem[rel=sized,relArg2=sizedArg2,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: onlySubj[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: n0VmainSem[rel=sized,relArg2=sizedArg2,relArg3=sizedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: shortPassive[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: sized
*CAT: v
*SEM: onlySubj[rel=sized,relArg2=sizedArg2inv,relArg3=sizedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> at/prep



*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> of/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_case_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> supporting/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> supporting/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> supporting/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> supporting/prep



*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArgMainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: onlyPObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: allObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: CVpn1[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArgMainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: onlyPObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: allObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: CVpn1[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArgMainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: onlyPObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: allObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: CVpn1[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArgMainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: prepArg[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: onlyPObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: allObj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: connected
*CAT: v
*SEM: CVpn1[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> using/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> using/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> using/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: n0VmainSem[rel=avoided,relArg2=avoidedArg2,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: shortPassive[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: avoided
*CAT: v
*SEM: onlySubj[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: CVpn1[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: CVpn1[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: CVpn1[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: CVpn1[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArgMainSem[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: onlyPObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: allObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: CVpn1[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArgMainSem[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: onlyPObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: allObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: CVpn1[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArgMainSem[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: onlyPObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: allObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: CVpn1[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArgMainSem[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: prepArg[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: onlyPObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: allObj[rel=grouped,relArg2=groupedArg2inv,relArg3=groupedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: grouped
*CAT: v
*SEM: CVpn1[rel=grouped,relArg2=groupedArg2,relArg3=groupedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> on/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> on/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> on/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> except_+_for/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> except_+_for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_between/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_between/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> avoiding/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> of/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> of/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> of/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> of/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArgMainSem[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: onlyPObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: allObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: CVpn1[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArgMainSem[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: onlyPObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: allObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: CVpn1[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArgMainSem[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: onlyPObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: allObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: CVpn1[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArgMainSem[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: prepArg[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: onlyPObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: allObj[rel=sealed,relArg2=sealedArg2inv,relArg3=sealedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: sealed
*CAT: v
*SEM: CVpn1[rel=sealed,relArg2=sealedArg2,relArg3=sealedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: qualified
*CAT: v
*SEM: twoPrepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3,relArg4=qualifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: qualified
*CAT: v
*SEM: twoPrepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3,relArg4=qualifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: qualified
*CAT: v
*SEM: twoPrepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3,relArg4=qualifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: qualified
*CAT: v
*SEM: twoPrepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3,relArg4=qualifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: n0VmainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: shortPassive[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: bend
*CAT: v
*SEM: onlySubj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> direct_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> direct_+_on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> by/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> by/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> by/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: CVpn1[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: CVpn1[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: CVpn1[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArgMainSem[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: prepArg[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: onlyPObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: allObj[rel=equipped,relArg2=equippedArg2inv,relArg3=equippedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: equipped
*CAT: v
*SEM: CVpn1[rel=equipped,relArg2=equippedArg2,relArg3=equippedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> below/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> below/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> below/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> below/prep
P2 -> with/prep



*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: CVpn1[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: CVpn1[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: CVpn1[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: added
*CAT: v
*SEM: CVpn1[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> by/prep



*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with_+_or_+_without/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with_+_or_+_without/prep



*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> allowing/prep
P2 -> of/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> allowing/prep
P2 -> of/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> allowing/prep
P2 -> of/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> allowing/prep
P2 -> of/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> outside/prep
P2 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> outside/prep
P2 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> outside/prep
P2 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> outside/prep
P2 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> near/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> near/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> near/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> near/prep
P2 -> on/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> with/prep



*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: n0VmainSem[rel=shrunk,relArg2=shrunkArg2,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: onlySubj[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: n0VmainSem[rel=shrunk,relArg2=shrunkArg2,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: onlySubj[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: n0VmainSem[rel=shrunk,relArg2=shrunkArg2,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: onlySubj[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: n0VmainSem[rel=shrunk,relArg2=shrunkArg2,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: shortPassive[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: shrunk
*CAT: v
*SEM: onlySubj[rel=shrunk,relArg2=shrunkArg2inv,relArg3=shrunkArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: n0VmainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: shortPassive[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: positioned
*CAT: v
*SEM: onlySubj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> beside/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> beside/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> beside/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> beside/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_front_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_front_+_of/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> compatible_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> compatible_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: twoPrepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3,relArg4=taken_+_into_+_accountArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> for/prep



*ENTRY: locked
*CAT: v
*SEM: twoPrepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3,relArg4=lockedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> for/prep



*ENTRY: locked
*CAT: v
*SEM: twoPrepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3,relArg4=lockedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> for/prep



*ENTRY: locked
*CAT: v
*SEM: twoPrepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3,relArg4=lockedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> for/prep



*ENTRY: locked
*CAT: v
*SEM: twoPrepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3,relArg4=lockedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> for/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> or/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> or/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> or/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> or/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> only/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> only/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArgMainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: onlyPObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: allObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: CVpn1[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArgMainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: onlyPObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: allObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: CVpn1[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArgMainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: onlyPObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: allObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: CVpn1[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArgMainSem[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: prepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: onlyPObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: allObj[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: positioned
*CAT: v
*SEM: CVpn1[rel=positioned,relArg2=positionedArg2,relArg3=positionedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> above/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> above/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at_+_the_+_level_+_of/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_level_+_of/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArgMainSem[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: onlyPObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: allObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: CVpn1[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArgMainSem[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: onlyPObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: allObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: CVpn1[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArgMainSem[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: onlyPObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: allObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: CVpn1[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArgMainSem[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: prepArg[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: onlyPObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: allObj[rel=calculated,relArg2=calculatedArg2inv,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> considering/prep



*ENTRY: calculated
*CAT: v
*SEM: CVpn1[rel=calculated,relArg2=calculatedArg2,relArg3=calculatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> considering/prep



*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> on/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> on/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> on/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep
P2 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArgMainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: onlyPObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: allObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: CVpn1[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArgMainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: onlyPObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: allObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: CVpn1[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArgMainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: onlyPObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: allObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: CVpn1[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArgMainSem[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: prepArg[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: onlyPObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: allObj[rel=bend,relArg2=bendArg2inv,relArg3=bendArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: bend
*CAT: v
*SEM: CVpn1[rel=bend,relArg2=bendArg2,relArg3=bendArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: twoPrepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3,relArg4=providedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> 0/prep



*ENTRY: provided
*CAT: v
*SEM: twoPrepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3,relArg4=providedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> 0/prep



*ENTRY: provided
*CAT: v
*SEM: twoPrepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3,relArg4=providedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> 0/prep



*ENTRY: provided
*CAT: v
*SEM: twoPrepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3,relArg4=providedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep
P2 -> 0/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep
P2 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> for/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> for/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> for/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep
P2 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep
P2 -> for/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep
P2 -> for/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep
P2 -> for/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep
P2 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: n0VmainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlySubj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: n0VmainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlySubj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: n0VmainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlySubj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: n0VmainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: shortPassive[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlySubj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+__+_combination_+_with/prep
P2 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+__+_combination_+_with/prep
P2 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+__+_combination_+_with/prep
P2 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+__+_combination_+_with/prep
P2 -> directly_+_on/prep



*ENTRY: positioned
*CAT: v
*SEM: twoPrepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3,relArg4=positionedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: positioned
*CAT: v
*SEM: twoPrepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3,relArg4=positionedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: positioned
*CAT: v
*SEM: twoPrepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3,relArg4=positionedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: positioned
*CAT: v
*SEM: twoPrepArg[rel=positioned,relArg2=positionedArg2inv,relArg3=positionedArg3,relArg4=positionedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: n0VmainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: shortPassive[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: onlySubj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on_+_fixed_+_part_+_of/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on_+_fixed_+_part_+_of/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on_+_fixed_+_part_+_of/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> on_+_fixed_+_part_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at_+_the_+_end_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at_+_the_+_end_+_of/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_by/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_by/prep



*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: routed
*CAT: v
*SEM: twoPrepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3,relArg4=routedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> following/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> following/prep



*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: n0VmainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: onlySubj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: n0VmainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: onlySubj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: n0VmainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: onlySubj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: n0VmainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: shortPassive[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: onlySubj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: n0VmainSem[rel=selected,relArg2=selectedArg2,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: onlySubj[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: n0VmainSem[rel=selected,relArg2=selectedArg2,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: onlySubj[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: n0VmainSem[rel=selected,relArg2=selectedArg2,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: onlySubj[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: n0VmainSem[rel=selected,relArg2=selectedArg2,relArg3=selectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: shortPassive[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: selected
*CAT: v
*SEM: onlySubj[rel=selected,relArg2=selectedArg2inv,relArg3=selectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> at/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> at/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> at/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> at/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> at/prep



*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_line_+_with/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_line_+_with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: n0VmainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: onlySubj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: n0VmainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: onlySubj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: n0VmainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: onlySubj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: n0VmainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: shortPassive[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: labeled
*CAT: v
*SEM: onlySubj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: n0VmainSem[rel=manufactured,relArg2=manufacturedArg2,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: onlySubj[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: n0VmainSem[rel=manufactured,relArg2=manufacturedArg2,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: onlySubj[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: n0VmainSem[rel=manufactured,relArg2=manufacturedArg2,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: onlySubj[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: n0VmainSem[rel=manufactured,relArg2=manufacturedArg2,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: shortPassive[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: manufactured
*CAT: v
*SEM: onlySubj[rel=manufactured,relArg2=manufacturedArg2inv,relArg3=manufacturedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: n0VmainSem[rel=submitted,relArg2=submittedArg2,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: onlySubj[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: n0VmainSem[rel=submitted,relArg2=submittedArg2,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: onlySubj[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: n0VmainSem[rel=submitted,relArg2=submittedArg2,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: onlySubj[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: n0VmainSem[rel=submitted,relArg2=submittedArg2,relArg3=submittedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: shortPassive[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: submitted
*CAT: v
*SEM: onlySubj[rel=submitted,relArg2=submittedArg2inv,relArg3=submittedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in_+_the_+_same_+_way_+_as/prep



*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> instead_+_of/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> passing_+_through/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> passing_+_through/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> within/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> within/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: CVpn1[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: CVpn1[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: CVpn1[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArgMainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: prepArg[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: onlyPObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: allObj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on_+_top_+_of/prep



*ENTRY: added
*CAT: v
*SEM: CVpn1[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on_+_top_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: n0VmainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: onlySubj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: n0VmainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: onlySubj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: n0VmainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: onlySubj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: n0VmainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: shortPassive[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: onlySubj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArgMainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: prepArg[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: onlyPObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: allObj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: locked
*CAT: v
*SEM: CVpn1[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> outside/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> outside/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> using/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> using/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> against/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> against/prep



*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: n0VmainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: onlySubj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: n0VmainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: onlySubj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: n0VmainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: onlySubj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: n0VmainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: shortPassive[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: segregated
*CAT: v
*SEM: onlySubj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> or/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> or/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> or/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> or/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> to/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: n0VmainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: onlySubj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: n0VmainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: onlySubj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: n0VmainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: onlySubj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: n0VmainSem[rel=added,relArg2=addedArg2,relArg3=addedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: shortPassive[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: added
*CAT: v
*SEM: onlySubj[rel=added,relArg2=addedArg2inv,relArg3=addedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArgMainSem[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: prepArg[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: onlyPObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: allObj[rel=tied_+_up,relArg2=tied_+_upArg2inv,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> together_+_with/prep



*ENTRY: tied_+_up
*CAT: v
*SEM: CVpn1[rel=tied_+_up,relArg2=tied_+_upArg2,relArg3=tied_+_upArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> together_+_with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArgMainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: onlyPObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: allObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: CVpn1[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArgMainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: onlyPObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: allObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: CVpn1[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArgMainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: onlyPObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: allObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: CVpn1[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArgMainSem[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: prepArg[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: onlyPObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: allObj[rel=labeled,relArg2=labeledArg2inv,relArg3=labeledArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: labeled
*CAT: v
*SEM: CVpn1[rel=labeled,relArg2=labeledArg2,relArg3=labeledArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: n0VmainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: shortPassive[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: fixed
*CAT: v
*SEM: onlySubj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: n0VmainSem[rel=connected,relArg2=connectedArg2,relArg3=connectedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: shortPassive[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: connected
*CAT: v
*SEM: onlySubj[rel=connected,relArg2=connectedArg2inv,relArg3=connectedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> per/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> per/prep



*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArgMainSem[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: onlyPObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: allObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: CVpn1[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArgMainSem[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: onlyPObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: allObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: CVpn1[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArgMainSem[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: onlyPObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: allObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: CVpn1[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArgMainSem[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: prepArg[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: onlyPObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: allObj[rel=able,relArg2=ableArg2inv,relArg3=ableArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: able
*CAT: v
*SEM: CVpn1[rel=able,relArg2=ableArg2,relArg3=ableArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> fir/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> fir/prep



*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: n0VmainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: shortPassive[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: onlySubj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArgMainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: prepArg[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: onlyPObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: allObj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: routed
*CAT: v
*SEM: CVpn1[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: n0VmainSem[rel=identical,relArg2=identicalArg2,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: onlySubj[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: n0VmainSem[rel=identical,relArg2=identicalArg2,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: onlySubj[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: n0VmainSem[rel=identical,relArg2=identicalArg2,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: onlySubj[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: n0VmainSem[rel=identical,relArg2=identicalArg2,relArg3=identicalArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: shortPassive[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identical
*CAT: v
*SEM: onlySubj[rel=identical,relArg2=identicalArg2inv,relArg3=identicalArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in_+_relation_+_to/prep



*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in_+_relation_+_to/prep



*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in_+_relation_+_to/prep



*ENTRY: integrated
*CAT: v
*SEM: twoPrepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3,relArg4=integratedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in_+_relation_+_to/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep
P2 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: n0VmainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: onlySubj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: n0VmainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: onlySubj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: n0VmainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: onlySubj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: n0VmainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: shortPassive[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: provided
*CAT: v
*SEM: onlySubj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> with/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArgMainSem[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: prepArg[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: onlyPObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: allObj[rel=fixed,relArg2=fixedArg2inv,relArg3=fixedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly_+_onto/prep



*ENTRY: fixed
*CAT: v
*SEM: CVpn1[rel=fixed,relArg2=fixedArg2,relArg3=fixedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly_+_onto/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: twoPrepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3,relArg4=attachedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> by/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArgMainSem[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: prepArg[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: onlyPObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: allObj[rel=provided,relArg2=providedArg2inv,relArg3=providedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: provided
*CAT: v
*SEM: CVpn1[rel=provided,relArg2=providedArg2,relArg3=providedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> directly/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> directly/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArgMainSem[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: prepArg[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: onlyPObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: allObj[rel=integrated,relArg2=integratedArg2inv,relArg3=integratedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: integrated
*CAT: v
*SEM: CVpn1[rel=integrated,relArg2=integratedArg2,relArg3=integratedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> as/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> onto/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> onto/prep



*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: n0VmainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: shortPassive[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: onlySubj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_the_+_area_+_of/prep
P2 -> of/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_the_+_area_+_of/prep
P2 -> of/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_the_+_area_+_of/prep
P2 -> of/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_the_+_area_+_of/prep
P2 -> of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> taking_+_into_+_account/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> taking_+_into_+_account/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArgMainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: prepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: onlyPObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: allObj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> without/prep



*ENTRY: defined
*CAT: v
*SEM: CVpn1[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> without/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> inside/prep



*ENTRY: identified
*CAT: v
*SEM: twoPrepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3,relArg4=identifiedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> inside/prep



*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: n0VmainSem[rel=routed,relArg2=routedArg2,relArg3=routedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: shortPassive[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: routed
*CAT: v
*SEM: onlySubj[rel=routed,relArg2=routedArg2inv,relArg3=routedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> at/prep



*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArgMainSem[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: prepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: onlyPObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: allObj[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep



*ENTRY: segregated
*CAT: v
*SEM: CVpn1[rel=segregated,relArg2=segregatedArg2,relArg3=segregatedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> from/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> inside/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> as/prep
P2 -> for/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> as/prep
P2 -> for/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> as/prep
P2 -> for/prep



*ENTRY: used
*CAT: v
*SEM: twoPrepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3,relArg4=usedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> as/prep
P2 -> for/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> of/prep



*ENTRY: segregated
*CAT: v
*SEM: twoPrepArg[rel=segregated,relArg2=segregatedArg2inv,relArg3=segregatedArg3,relArg4=segregatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep
P2 -> of/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArgMainSem[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: prepArg[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: onlyPObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: allObj[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2inv,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> between/prep



*ENTRY: taken_+_into_+_account
*CAT: v
*SEM: CVpn1[rel=taken_+_into_+_account,relArg2=taken_+_into_+_accountArg2,relArg3=taken_+_into_+_accountArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> between/prep



*ENTRY: avoided
*CAT: v
*SEM: twoPrepArg[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3,relArg4=avoidedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> for/prep



*ENTRY: avoided
*CAT: v
*SEM: twoPrepArg[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3,relArg4=avoidedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> for/prep



*ENTRY: avoided
*CAT: v
*SEM: twoPrepArg[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3,relArg4=avoidedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> for/prep



*ENTRY: avoided
*CAT: v
*SEM: twoPrepArg[rel=avoided,relArg2=avoidedArg2inv,relArg3=avoidedArg3,relArg4=avoidedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> before/prep
P2 -> for/prep



*ENTRY: insulated
*CAT: v
*SEM: twoPrepArg[rel=insulated,relArg2=insulatedArg2inv,relArg3=insulatedArg3,relArg4=insulatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> by/prep



*ENTRY: insulated
*CAT: v
*SEM: twoPrepArg[rel=insulated,relArg2=insulatedArg2inv,relArg3=insulatedArg3,relArg4=insulatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> by/prep



*ENTRY: insulated
*CAT: v
*SEM: twoPrepArg[rel=insulated,relArg2=insulatedArg2inv,relArg3=insulatedArg3,relArg4=insulatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> by/prep



*ENTRY: insulated
*CAT: v
*SEM: twoPrepArg[rel=insulated,relArg2=insulatedArg2inv,relArg3=insulatedArg3,relArg4=insulatedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> from/prep
P2 -> by/prep



*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: n0VmainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: onlySubj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: n0VmainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: onlySubj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: n0VmainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: onlySubj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: n0VmainSem[rel=locked,relArg2=lockedArg2,relArg3=lockedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: shortPassive[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: locked
*CAT: v
*SEM: onlySubj[rel=locked,relArg2=lockedArg2inv,relArg3=lockedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> to/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> to/prep



*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: n0VmainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: shortPassive[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: used
*CAT: v
*SEM: onlySubj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: twoPrepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3,relArg4=protectedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> inside/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArgMainSem[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: prepArg[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: onlyPObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: allObj[rel=identified,relArg2=identifiedArg2inv,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in/prep



*ENTRY: identified
*CAT: v
*SEM: CVpn1[rel=identified,relArg2=identifiedArg2,relArg3=identifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep
P2 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> in_+_case_+_of/prep
P2 -> with/prep



*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> shall/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> can/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> should/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: n0VmainSem[rel=defined,relArg2=definedArg2,relArg3=definedArg3]
*ACC: 1.0
*FAM: n0Vmain
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: shortPassive[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: alln0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: defined
*CAT: v
*SEM: onlySubj[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3]
*ACC: 1.0
*FAM: onlyn0V
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:

Aux1 -> may/aux
Aux2 -> be/aux 

*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArgMainSem[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: prepArg[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: onlyPObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: allObj[rel=protected,relArg2=protectedArg2inv,relArg3=protectedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep



*ENTRY: protected
*CAT: v
*SEM: CVpn1[rel=protected,relArg2=protectedArg2,relArg3=protectedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> with/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: twoPrepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3,relArg4=installedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> in/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> showing/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArgMainSem[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: prepArg[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: onlyPObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: allObj[rel=installed,relArg2=installedArg2inv,relArg3=installedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> by_+_use_+_of/prep



*ENTRY: installed
*CAT: v
*SEM: CVpn1[rel=installed,relArg2=installedArg2,relArg3=installedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> by_+_use_+_of/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArgMainSem[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: onlyPObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: allObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: CVpn1[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArgMainSem[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: onlyPObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: allObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: CVpn1[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArgMainSem[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: onlyPObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: allObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: CVpn1[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArgMainSem[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: prepArg[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: onlyPObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: allObj[rel=qualified,relArg2=qualifiedArg2inv,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> for/prep



*ENTRY: qualified
*CAT: v
*SEM: CVpn1[rel=qualified,relArg2=qualifiedArg2,relArg3=qualifiedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> for/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArgMainSem[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: prepArg[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: onlyPObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: allObj[rel=used,relArg2=usedArg2inv,relArg3=usedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> when/prep



*ENTRY: used
*CAT: v
*SEM: CVpn1[rel=used,relArg2=usedArg2,relArg3=usedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> when/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: defined
*CAT: v
*SEM: twoPrepArg[rel=defined,relArg2=definedArg2inv,relArg3=definedArg3,relArg4=definedArg4]
*ACC: 1.0
*FAM: n0Vpn1pn2
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> with/prep
P2 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> shall/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> can/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> should/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArgMainSem[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vpn1main
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: prepArg[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: alln0Vpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: onlyPObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vonlypn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: allObj[rel=attached,relArg2=attachedArg2inv,relArg3=attachedArg3]
*ACC: 1.0
*FAM: n0Vun1
*FILTERS: []
*EX: {}
*EQUATIONS: 
Aux2 -> mode=inf 
*COANCHORS:
Aux1 -> may/aux
Aux2 -> be/aux

P1 -> on/prep



*ENTRY: attached
*CAT: v
*SEM: CVpn1[rel=attached,relArg2=attachedArg2,relArg3=attachedArg3]
*ACC: 1.0
*FAM: CVpn1
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
when -> when/conj
P1 -> on/prep


*ENTRY: on
*CAT: prep
*SEM: prepSem[rel=on]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: passing_+_through
*CAT: prep
*SEM: prepSem[rel=passing_+_through]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: directly_+_on
*CAT: prep
*SEM: prepSem[rel=directly_+_on]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: for
*CAT: prep
*SEM: prepSem[rel=for]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: supporting
*CAT: prep
*SEM: prepSem[rel=supporting]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: of
*CAT: prep
*SEM: prepSem[rel=of]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: inside
*CAT: prep
*SEM: prepSem[rel=inside]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in_+_relation_+_to
*CAT: prep
*SEM: prepSem[rel=in_+_relation_+_to]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: or
*CAT: prep
*SEM: prepSem[rel=or]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: beside
*CAT: prep
*SEM: prepSem[rel=beside]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: to
*CAT: prep
*SEM: prepSem[rel=to]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: onto
*CAT: prep
*SEM: prepSem[rel=onto]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: at
*CAT: prep
*SEM: prepSem[rel=at]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: in
*CAT: prep
*SEM: prepSem[rel=in]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: following
*CAT: prep
*SEM: prepSem[rel=following]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: using
*CAT: prep
*SEM: prepSem[rel=using]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: on_+_fixed_+_part_+_of
*CAT: prep
*SEM: prepSem[rel=on_+_fixed_+_part_+_of]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: with
*CAT: prep
*SEM: prepSem[rel=with]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:

*ENTRY: by
*CAT: prep
*SEM: prepSem[rel=by]
*ACC: 1.0
*FAM: nxPnx
*FILTERS: []
*EX: {}
*EQUATIONS: 
*COANCHORS:
