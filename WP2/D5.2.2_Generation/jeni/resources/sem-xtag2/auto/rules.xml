
<!--
	These rules are meant both to handle underspecified input, when there are missing literals,
	and to perform some input rewriting to better decorrelate the syntactic representation from the semantic one.
	Warning: the order of the rules is relevant!
	
	Note that: "gerund" mode means "present participle" and "ppart" means "past participle", the information is redundant because
	we both say mode + tense systematically.
-->
<rules>

	<rule match="event(?E)" without="mode(?E ?1)">
		<add sem="mode(?E ind)"/>
	</rule>

	<rule match="event(?E)" without="tense(?E ?1)">
		<add sem="tense(?E pres)"/>
	</rule>
	
	<rule rewrite="present" by="pres" in="tense"/>
	<rule rewrite="gerund" by="ger" in="mode"/>
	<rule rewrite="infinitive" by="inf" in="mode"/>
	<rule rewrite="indicative" by="ind" in="mode"/>
	<rule rewrite="imperative" by="imp" in="mode"/>
	

	<!-- what did bill bake -->
	<!-- note that the initial mode of the verb needs to be "ind" -->
	<!-- the auxiliary is forced -->
	<rule match="event(?E) tense(?E ?Tense) mode(?E ind) participant(?P) relation(patient ?E ?P) reftype(?P interrogative)">
		<replace sem="tense(?E ?Tense) mode(?E ind)" by="mode(?E inf) tense(?E pres)"/>
		<add new="?Aux" sem="modifier(?E ?Aux) event(?Aux) evttype(?Aux do) mode(?Aux ind) tense(?Aux ?Tense)"/>
	</rule>

	<!-- bill has been speaking -->
	<rule match="tense(?E present-perfect-progressive) mode(?E ind)">
		<replace-by sem="tense(?E pres) mode(?E ger)"/>
		<add new="?Aux1, ?Aux2" sem="event(?Aux1) evttype(?Aux1 be) modifier(?E ?Aux1) mode(?Aux1 ppart) tense(?Aux1 pres) event(?Aux2) evttype(?Aux2 have) modifier(?E ?Aux2) mode(?Aux2 ind) tense(?Aux2 pres)"/>
	</rule>

	<!-- bill has spoken -->
	<rule match="tense(?E present-perfect) mode(?E ind)">
		<replace-by sem="tense(?E past) mode(?E ppart)"/>
		<add new="?Aux" sem="event(?Aux) evttype(?Aux have) modifier(?E ?Aux) tense(?Aux pres) mode(?Aux ind)"/>
	</rule>

	<!-- bill was speaking -->
	<rule match="tense(?E past-progressive) mode(?E ind)">
		<replace-by sem="tense(?E pres) mode(?E ger)"/>
		<add new="?Aux" sem="event(?Aux) evttype(?Aux be) modifier(?E ?Aux) tense(?Aux past) mode(?Aux ind)"/>
	</rule>

	<!-- bill is speaking -->
	<rule match="tense(?E present-progressive) mode(?E ind)">
		<replace-by sem="tense(?E pres) mode(?E ger)"/>
		<add new="?Aux" sem="event(?Aux) evttype(?Aux be) modifier(?E ?Aux) tense(?Aux pres) mode(?Aux ind)"/>
	</rule>

	<!-- a cake is baked by bill -->
	<!-- <rule match="event(?E) relation(agent ?E ?1) relation(patient ?E ?2) mode(?E ind) tense(?E ?Tense)">
		<replace sem="mode(?E ind)" by="mode(?E ind|ppart)"/>
		<add new="?Aux" sem="modifier(?E ?Aux) event(?Aux) evttype(?Aux be) tense(?Aux ?Tense) mode(?Aux ind)"/>
	</rule>  -->



</rules>