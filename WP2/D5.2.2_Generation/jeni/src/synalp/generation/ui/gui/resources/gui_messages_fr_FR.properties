#Eclipse messages class
#Tue Jul 23 17:48:22 CEST 2013
GeneratorAboutDialog.close.text=Fermer
GeneratorAboutDialog.desc.text=<html>Version Java de Geni, <br>originellement développé en Haskell.</html>
GeneratorAboutDialog.name.text=Jeni, 1.0
GeneratorAboutDialog.this.title=A propos de Jeni
GeneratorButtonPanel.inspectLexChkBox.toolTipText=N'affecte que le debugger
GeneratorMainFrame.about.text=A Propos
GeneratorMainFrame.aboutAbout.text=A Propos de Jeni
GeneratorMainFrame.aboutHelp.text=Aide
GeneratorMainFrame.quitButton.text=Quitter
GeneratorMainFrame.debugButton.text=Debugger
GeneratorMainFrame.generateButton.text=Générer
GeneratorMainFrame.inspectLexChkBox.text=Inspecter le lexique
GeneratorMainFrame.file.text=Fichier
GeneratorMainFrame.fileExit.text=Quitter
GeneratorMainFrame.fileExit.toolTipText=Quitter l'application
GeneratorMainFrame.fileOpt.text=Pr\u00E9f\u00E9rences...
GeneratorMainFrame.grammar.text=Importer la grammaire...
GeneratorMainFrame.imp.text=Importer
GeneratorMainFrame.lexicon.text=Importer le lexique syntactique...
GeneratorMainFrame.testSuite.text=Import test suite...
GeneratorMainFrame.morphoRealizer.text=Importer le lexique morphologique...
GeneratorMainFrame.quitButton.toolTipText=Quitter l'application
GeneratorMainFrame.debugButton.toolTipText=Générer en déroulant l'algorithme étape par étape
GeneratorMainFrame.generateButton.toolTipText=Générer les dérivations obtenues à partir de la sémantique en entrée
GeneratorMainFrame.testSuite.text=Importer la suite de tests...
GeneratorMainFrame.this.title=Jeni
GeneratorInfoPanel.label1.text=Grammaire
GeneratorInfoPanel.label2.text=\:
GeneratorInfoPanel.label3.text=Lexique
GeneratorInfoPanel.label4.text=Suite de test
GeneratorInfoPanel.label5.text=MorphoRealizer
GeneratorInfoPanel.label6.text=Ranker
GeneratorInfoPanel.label7.text=Default
GeneratorInfoPanel.titleBorder.text=Derniers fichiers chargés
GeneratorSemPanel.titleBorder.text=Semantique
GeneratorParamPanel.titleBorder.text=Options Génerales
GeneratorParamPanel.importResources.title=Ressources
GeneratorParamPanel.importResources.tooltip=Importer les ressources telles que la grammaire ou le lexique depuis des fichiers externes ou depuis des paquets internes.
GeneratorParamPanel.rdbtnNewRadioButton.text=Importer des fichiers externes
GeneratorParamPanel.rdbtnNewRadioButton_1.text=Importer des paquets de ressources pre-existants
GeneratorParamPanel.grammarLoadbutton.toolTipText=Charger un fichier de Grammaire (.xml)
GeneratorParamPanel.lexiconLoadbutton.toolTipText=Charger un fichier de Lexique Syntaxique (.xml)
GeneratorParamPanel.morphoLoadbutton.toolTipText=Charger un fichier de Lexique morphologique pour le MorphoRealizer (.xml or .mph) 
GeneratorParamPanel.rankerLoadbutton.toolTipText=Charger un fichier de modèle de langue pour le Ranker

# Tab
GeneratorInputTab.this.title=Entrées
GeneratorResultTab.this.title=Journal

# propriétés d'un objet Generatoroptions
GeneratorPropertySheetPanel.properties = attributs
GeneratorPropertySheetPanel.id = identifiant
GeneratorPropertySheetPanel.id.desc = identifiant unique
GeneratorPropertySheetPanel.nom = nom
GeneratorPropertySheetPanel.nom.desc = nom complet
GeneratorPropertySheetPanel.type = type
GeneratorPropertySheetPanel.type.desc = type de l'élément
GeneratorPropertySheetPanel.description = description
GeneratorPropertySheetPanel.description.desc = description
GeneratorSettingsDialog.this.title=Options
GeneratorSettingsDialog.headers.name=Nom de l'option
GeneratorSettingsDialog.headers.value=Valeur de l'option

# Categories of Generator Options
categoryOptions.general=Options générales
categoryOptions.optimizations=Optimisations
categoryOptions.format=Prise en charge du format
categoryOptions.internal=Paramètres internes
categoryOptions.general.desc=Il s'agit des options générales.
categoryOptions.optimizations.desc=Ces options sont prévues pour contrôler les optimisations.
categoryOptions.format.desc=Ces paramètres contrôlent la prise en charge du nouveau format et de l'ancien, en particulier pour la représentation des lemmes.
categoryOptions.internal.desc=Certains de ces paramètres peuvent aussi être <em>codés en dur</em>. Ils ont été positionnés ici de façon à ce qu'on puisse les modifier si un problème est observé.

# Generator Options
generatorOptions.debug=Debug
generatorOptions.debug.desc=Active différents niveaux de log selon l'état du développement (<code>integer</code>) : <ul><li><em>0</em> pour désactiver,</li><li> <em>1</em> pour activer,</li><li> <em>2</em> debug détaillé</li></ul>.
generatorOptions.rewrite_lex_nodes.desc=Si <code>true</code>, réécrit les moeuds <code>lex</code> dans la grammaire sous forme de lemme (nouveau format).
generatorOptions.rewrite_lex_nodes=Réécrit les noeuds "lex"
generatorOptions.rewrite_lemanchor.desc=Si <code>true</code>, réécrit les valeurs <code>lemanchor</code> sous forme de lemmes.
generatorOptions.rewrite_lemanchor=Réécrit lemanchor
generatorOptions.assign_node_ids.desc=Si <code>true</code>, s'assure que les noeuds des arbres ont des noms correspondant aux conventions de <em>GenI</em>.
generatorOptions.assign_node_ids=Assigne des IDs aux noeuds
generatorOptions.rewrite_lex_as_lemma.desc=Si <code>true</code>, réécrit les propriétés <code>lex</code> dans le lexique sous forme de lemmes.
generatorOptions.rewrite_lex_as_lemma= Réécrit lex en lemma
generatorOptions.allow_empty_lemmas.desc=Si <code>true</code>, autorise qu'une entrée lexicale ne spécifie par de lemme, qui doit donc être précisé avec la sémantique. Mettre cette option à <code>false</code> rend le lexique plus rigoureux.
generatorOptions.allow_empty_lemmas=Autorise des lemmes vides
generatorOptions.ignore_labels.desc=Si <code>true</code>, les labels sont complètement ignorés lors du test de subsumption.
generatorOptions.ignore_labels=Ignore les labels
generatorOptions.case_dependent.desc=Si <code>true</code>, les propriétés constantes sont considérées comme dépendantes du cas. Si <code>false</code>, le cas n'est pas pris en compte pendant l'unification/subsumption. 
generatorOptions.case_dependent=Dépend du cas
generatorOptions.allow_duplicates.desc=Si <code>true</code>, accepte les entrées dupliquées dans le <code>chart</code>.
generatorOptions.allow_duplicates=Autorise les duplications
generatorOptions.timeout.desc=Le timeout du générateur en millisecondes. Le mettre à <em>0</em> (<code>integer</code>) pour le désactiver.
generatorOptions.timeout=Timeout
generatorOptions.use_filtering.desc=Si <code>true</code>, utilisation du filtrage par polarité (<em>non supporté actuellement</em>).
generatorOptions.use_filtering=Utilise le filtrage
generatorOptions.rename_variables.desc=Si <code>true</code>, renomme les variables depuis la grammaire de telle sorte qu'aucune variable ne puisse être en double. accelère un peu l'execution.
generatorOptions.rename_variables=Renomme les variables
generatorOptions.allow_missing_coanchors.desc=Si <code>false</code>, une équation d'ancrage qui échoue empêche l'arbre d'être sélectionné. Si <code>true</code>, l'arbre sera sélectionné en dépit de l'echec de l'ancrage.
generatorOptions.allow_missing_coanchors= Autorise les coanchors manquants
generatorOptions.early_success.desc=Si <code>true</code>, ne teste une combinaison d'arbre qu'une seule fois.
generatorOptions.early_success=Succès précoce 
generatorOptions.early_semantic_failure.desc=Si <code>true</code>, teste un échec précoce basé sur l'<code>idx</code>.
generatorOptions.early_semantic_failure=Echec précoce de la sémantique
generatorOptions.missing_lexem_policy.desc=Selectionne la marche à suivre lorsqu'un lexem est introuvable : <ul><li> <em>IGNORE:</em> ignore completement le lexem manquant (la réalisation morphologique n'aura donc pas la même taille que la réalisation syntaxique). </li><li> <em>OUTPUT_LEMMA:</em> renvoie un faux lexem dont la forme de surface et le lemme, de cette façon on cache l'erreur potentielle. </li><li> <em>OUTPUT_MISSING:</em> renvoie un faux lexem <code>&lt;missing:lemma&gt;</code> qui avertit explicitement qu'un lexem est manquant.</li></ul>
generatorOptions.missing_lexem_policy=Politique en cas de lexem manquant
generatorOptions.use_bit_semantics.desc=Si <code>true</code>, modèle la semantique sous la forme d'une sémantique <em>coverage-based</em>, qui accelère l'<em>overlap</em> de la sémantique et les tests de comparaison.
generatorOptions.use_bit_semantics=Utilise la 'bit semantics'
